{
	"id": "ab2ade653c7b87a2e7bb44054550d9cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"liquidity-staker/StakingRewardsFactory.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol';\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol';\r\n\r\nimport './StakingRewards.sol';\r\n\r\ncontract StakingRewardsFactory is Ownable {\r\n    // immutables\r\n    address public rewardsToken;\r\n    uint public stakingRewardsGenesis;\r\n\r\n    // the staking tokens for which the rewards contract has been deployed\r\n    address[] public stakingTokens;\r\n\r\n    // info about rewards for a particular staking token\r\n    struct StakingRewardsInfo {\r\n        address stakingRewards;\r\n        uint rewardAmount;\r\n    }\r\n\r\n    // rewards info by staking token\r\n    mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\r\n\r\n    constructor(\r\n        address _rewardsToken,\r\n        uint _stakingRewardsGenesis\r\n    ) Ownable() public {\r\n        require(_stakingRewardsGenesis >= block.timestamp, 'StakingRewardsFactory::constructor: genesis too soon');\r\n\r\n        rewardsToken = _rewardsToken;\r\n        stakingRewardsGenesis = _stakingRewardsGenesis;\r\n    }\r\n\r\n    ///// permissioned functions\r\n\r\n    // deploy a staking reward contract for the staking token, and store the reward amount\r\n    // the reward will be distributed to the staking reward contract no sooner than the genesis\r\n    function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\r\n        require(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\r\n\r\n        info.stakingRewards = address(new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken));\r\n        info.rewardAmount = rewardAmount;\r\n        stakingTokens.push(stakingToken);\r\n    }\r\n\r\n    ///// permissionless functions\r\n\r\n    // call notifyRewardAmount for all staking tokens.\r\n    function notifyRewardAmounts() public {\r\n        require(stakingTokens.length > 0, 'StakingRewardsFactory::notifyRewardAmounts: called before any deploys');\r\n        for (uint i = 0; i < stakingTokens.length; i++) {\r\n            notifyRewardAmount(stakingTokens[i]);\r\n        }\r\n    }\r\n\r\n    // notify reward amount for an individual staking token.\r\n    // this is a fallback in case the notifyRewardAmounts costs too much gas to call for all contracts\r\n    function notifyRewardAmount(address stakingToken) public {\r\n        require(block.timestamp >= stakingRewardsGenesis, 'StakingRewardsFactory::notifyRewardAmount: not ready');\r\n\r\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\r\n        require(info.stakingRewards != address(0), 'StakingRewardsFactory::notifyRewardAmount: not deployed');\r\n\r\n        if (info.rewardAmount > 0) {\r\n            uint rewardAmount = info.rewardAmount;\r\n            info.rewardAmount = 0;\r\n\r\n            require(\r\n                IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount),\r\n                'StakingRewardsFactory::notifyRewardAmount: transfer failed'\r\n            );\r\n            StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount);\r\n        }\r\n    }\r\n}"
			},
			"liquidity-staker/StakingRewards.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\";\r\n\r\n// Inheritance\r\nimport \"./interfaces/IStakingRewards.sol\";\r\nimport \"./RewardsDistributionRecipient.sol\";\r\n\r\ncontract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC20 public stakingToken;\r\n    uint256 public periodFinish = 0;\r\n    uint256 public rewardRate = 0;\r\n    uint256 public rewardsDuration = 30 days;\r\n    // uint256 public rewardsDuration = 300;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor(\r\n        address _rewardsDistribution,\r\n        address _rewardsToken,\r\n        address _stakingToken\r\n    ) public {\r\n        rewardsToken = IERC20(_rewardsToken);\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsDistribution = _rewardsDistribution;\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return Math.min(block.timestamp, periodFinish);\r\n    }\r\n\r\n    function rewardPerToken() public view returns (uint256) {\r\n        if (_totalSupply == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    function getRewardForDuration() external view returns (uint256) {\r\n        return rewardRate.mul(rewardsDuration);\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n\r\n        // permit\r\n        IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s);\r\n\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.safeTransfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function exit() external {\r\n        withdraw(_balances[msg.sender]);\r\n        getReward();\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r\n        if (block.timestamp >= periodFinish) {\r\n            rewardRate = reward.div(rewardsDuration);\r\n        } else {\r\n            uint256 remaining = periodFinish.sub(block.timestamp);\r\n            uint256 leftover = remaining.mul(rewardRate);\r\n            rewardRate = reward.add(leftover).div(rewardsDuration);\r\n        }\r\n\r\n        // Ensure the provided reward amount is not more than the balance in the contract.\r\n        // This keeps the reward rate in the right range, preventing overflows due to\r\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\r\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\r\n        uint balance = rewardsToken.balanceOf(address(this));\r\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\r\n\r\n        lastUpdateTime = block.timestamp;\r\n        periodFinish = block.timestamp.add(rewardsDuration);\r\n        emit RewardAdded(reward);\r\n    }\r\n\r\n    function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier updateReward(address account) {\r\n        rewardPerTokenStored = rewardPerToken();\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event RewardAdded(uint256 reward);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n}\r\n\r\ninterface IUniswapV2ERC20 {\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * > Note: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\n     * zero by default.\n     *\n     * This value changes when `approve` or `transferFrom` are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * > Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an `Approval` event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to `approve`. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"liquidity-staker/RewardsDistributionRecipient.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\ncontract RewardsDistributionRecipient {\r\n    address public rewardsDistribution;\r\n\r\n    function notifyRewardAmount(uint256 reward) external;\r\n\r\n    modifier onlyRewardsDistribution() {\r\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\r\n        _;\r\n    }\r\n}"
			},
			"liquidity-staker/interfaces/IStakingRewards.sol": {
				"content": "pragma solidity >=0.4.24;\r\n\r\n\r\ninterface IStakingRewards {\r\n    // Views\r\n    function lastTimeRewardApplicable() external view returns (uint256);\r\n\r\n    function rewardPerToken() external view returns (uint256);\r\n\r\n    function earned(address account) external view returns (uint256);\r\n\r\n    function getRewardForDuration() external view returns (uint256);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    // Mutative\r\n\r\n    function stake(uint256 amount) external;\r\n\r\n    function withdraw(uint256 amount) external;\r\n\r\n    function getReward() external;\r\n\r\n    function exit() external;\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\n * available, which can be aplied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n */\ncontract ReentrancyGuard {\n    /// @dev counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    constructor () internal {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Collection of functions related to the address type,\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * > It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":99:767  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":99:767  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158207f3b4db2c5f34c67ba62c8ff7f9c4652a4c497005c9ed0e857b1bb863e7f20c564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207f3b4db2c5f34c67ba62c8ff7f9c4652a4c497005c9ed0e857b1bb863e7f20c564736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH32 0x3B4DB2C5F34C67BA62C8FF7F9C4652A4C497005C9ED0E857B1BB863E7F20C564 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "99:668:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158207f3b4db2c5f34c67ba62c8ff7f9c4652a4c497005c9ed0e857b1bb863e7f20c564736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH32 0x3B4DB2C5F34C67BA62C8FF7F9C4652A4C497005C9ED0E857B1BB863E7F20C564 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "99:668:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 767,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 767,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207f3b4db2c5f34c67ba62c8ff7f9c4652a4c497005c9ed0e857b1bb863e7f20c564736f6c63430005110032",
									".code": [
										{
											"begin": 99,
											"end": 767,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "ADDRESS"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":589:3528  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":589:3528  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158201005a400063203584a99a62f6a0ef375a0be7eb5bc5a3028338fefed38ba0d1764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201005a400063203584a99a62f6a0ef375a0be7eb5bc5a3028338fefed38ba0d1764736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT SDIV LOG4 STOP MOD ORIGIN SUB PC 0x4A SWAP10 0xA6 0x2F PUSH11 0xEF375A0BE7EB5BC5A3028 CALLER DUP16 0xEF 0xED CODESIZE 0xBA 0xD OR PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:2939:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201005a400063203584a99a62f6a0ef375a0be7eb5bc5a3028338fefed38ba0d1764736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT SDIV LOG4 STOP MOD ORIGIN SUB PC 0x4A SWAP10 0xA6 0x2F PUSH11 0xEF375A0BE7EB5BC5A3028 CALLER DUP16 0xEF 0xED CODESIZE 0xBA 0xD OR PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "589:2939:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 3528,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 3528,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201005a400063203584a99a62f6a0ef375a0be7eb5bc5a3028338fefed38ba0d1764736f6c63430005110032",
									".code": [
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 321,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":574:3718  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":574:3718  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582060e77b0a1ac5e9ac690b3a763c1ac2a5dc4dce47f8ad30d6534ce38b06f978ab64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582060e77b0a1ac5e9ac690b3a763c1ac2a5dc4dce47f8ad30d6534ce38b06f978ab64736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH1 0xE7 PUSH28 0xA1AC5E9AC690B3A763C1AC2A5DC4DCE47F8AD30D6534CE38B06F978 0xAB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "574:3144:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582060e77b0a1ac5e9ac690b3a763c1ac2a5dc4dce47f8ad30d6534ce38b06f978ab64736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH1 0xE7 PUSH28 0xA1AC5E9AC690B3A763C1AC2A5DC4DCE47F8AD30D6534CE38B06F978 0xAB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "574:3144:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 3718,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 3718,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582060e77b0a1ac5e9ac690b3a763c1ac2a5dc4dce47f8ad30d6534ce38b06f978ab64736f6c63430005110032",
									".code": [
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "ADDRESS"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "EQ"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type,",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":94:957  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":94:957  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820f13797022a0bccf8d22e42ef0e21e1d9a613b9d1eb97ba75dd5d0def94857ba064736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f13797022a0bccf8d22e42ef0e21e1d9a613b9d1eb97ba75dd5d0def94857ba064736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALL CALLDATACOPY SWAP8 MUL 0x2A SIGNEXTEND 0xCC 0xF8 0xD2 0x2E TIMESTAMP 0xEF 0xE 0x21 0xE1 0xD9 0xA6 SGT 0xB9 0xD1 0xEB SWAP8 0xBA PUSH22 0xDD5D0DEF94857BA064736F6C63430005110032000000 ",
							"sourceMap": "94:863:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820f13797022a0bccf8d22e42ef0e21e1d9a613b9d1eb97ba75dd5d0def94857ba064736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CALL CALLDATACOPY SWAP8 MUL 0x2A SIGNEXTEND 0xCC 0xF8 0xD2 0x2E TIMESTAMP 0xEF 0xE 0x21 0xE1 0xD9 0xA6 SGT 0xB9 0xD1 0xEB SWAP8 0xBA PUSH22 0xDD5D0DEF94857BA064736F6C63430005110032000000 ",
							"sourceMap": "94:863:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 94,
									"end": 957,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 94,
									"end": 957,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f13797022a0bccf8d22e42ef0e21e1d9a613b9d1eb97ba75dd5d0def94857ba064736f6c63430005110032",
									".code": [
										{
											"begin": 94,
											"end": 957,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "ADDRESS"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "EQ"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "MSTORE"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type,\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier available, which can be aplied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier available, which can be aplied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"liquidity-staker/RewardsDistributionRecipient.sol": {
				"RewardsDistributionRecipient": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"rewardsDistribution()": "3fc6df6e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/RewardsDistributionRecipient.sol\":\"RewardsDistributionRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "liquidity-staker/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"liquidity-staker/StakingRewards.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/StakingRewards.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]},\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]},\"liquidity-staker/StakingRewards.sol\":{\"keccak256\":\"0xddb23f2f6524b37083b38a40d3f4c0eab25f87d59230578380636c374c6725a4\",\"urls\":[\"bzz-raw://85f2e3a4d0457cb11c0f069172fc4c5d619f0b1cd405eb9866f3a0a12cd733b0\",\"dweb:/ipfs/QmfLoLk2zKaBqjdzQf4zSjEjQRRRNasJA4ZqaJvEoY8rvF\"]},\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdrawToken",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "stakeWithPermit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"liquidity-staker/StakingRewards.sol\":1044:1045  0 */\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n  0x04\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1080:1081  0 */\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n  0x05\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1121:1128  30 days */\n  0x278d00\n    /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n  0x06\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":884:885  1 */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":868:881  _guardCounter */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":868:885  _guardCounter = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"liquidity-staker/StakingRewards.sol\":1674:1687  _rewardsToken */\n  dup2\n    /* \"liquidity-staker/StakingRewards.sol\":1652:1664  rewardsToken */\n  0x02\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1652:1688  rewardsToken = IERC20(_rewardsToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"liquidity-staker/StakingRewards.sol\":1721:1734  _stakingToken */\n  dup1\n    /* \"liquidity-staker/StakingRewards.sol\":1699:1711  stakingToken */\n  0x03\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1699:1735  stakingToken = IERC20(_stakingToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"liquidity-staker/StakingRewards.sol\":1768:1788  _rewardsDistribution */\n  dup3\n    /* \"liquidity-staker/StakingRewards.sol\":1746:1765  rewardsDistribution */\n  0x00\n  dup1\n    /* \"liquidity-staker/StakingRewards.sol\":1746:1788  rewardsDistribution = _rewardsDistribution */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xcd3daf9d\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xecd9ba82\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa4c3b091\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x386a9525\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3fc6df6e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n        /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1325:1367  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_33:\n        /* \"liquidity-staker/StakingRewards.sol\":1325:1367  mapping(address => uint256) public rewards */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1845:1938  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":2749:2870  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_7:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_45\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_45:\n        /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":4240:4547  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_12:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_52:\n        /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":2066:2197  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1261:1318  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_16:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_61:\n        /* \"liquidity-staker/StakingRewards.sol\":1261:1318  mapping(address => uint256) public userRewardPerTokenPaid */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n    tag_17:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_64\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_64:\n        /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_18:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_67:\n        /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":1181:1210  uint256 public lastUpdateTime */\n    tag_19:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":2205:2535  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_20:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n    tag_21:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1217:1252  uint256 public rewardPerTokenStored */\n    tag_22:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":4555:4652  function exit() external {\r... */\n    tag_23:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n    tag_24:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_25:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_82\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_82:\n        /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n    tag_31:\n        /* \"liquidity-staker/StakingRewards.sol\":2597:2604  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2733  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_85\n        /* \"liquidity-staker/StakingRewards.sol\":2716:2723  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":2716:2732  rewards[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2724:2731  account */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":2716:2732  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2711  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_86\n        /* \"liquidity-staker/StakingRewards.sol\":2706:2710  1e18 */\n      0x0de0b6b3a7640000\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2701  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_87\n        /* \"liquidity-staker/StakingRewards.sol\":2647:2700  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_88\n        /* \"liquidity-staker/StakingRewards.sol\":2668:2690  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":2668:2699  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2691:2698  account */\n      dup10\n        /* \"liquidity-staker/StakingRewards.sol\":2668:2699  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":2647:2663  rewardPerToken() */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":2647:2661  rewardPerToken */\n      tag_72\n        /* \"liquidity-staker/StakingRewards.sol\":2647:2663  rewardPerToken() */\n      jump\t// in\n    tag_89:\n        /* \"liquidity-staker/StakingRewards.sol\":2647:2667  rewardPerToken().sub */\n      tag_90\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2647:2700  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2633  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2642  _balances[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2634:2641  account */\n      dup10\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2642  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2646  _balances[account].mul */\n      tag_91\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2701  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2705  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      tag_92\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2711  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2715  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2624:2733  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"liquidity-staker/StakingRewards.sol\":2617:2733  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1325:1367  mapping(address => uint256) public rewards */\n    tag_34:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1845:1938  function totalSupply() external view returns (uint256) {\r... */\n    tag_36:\n        /* \"liquidity-staker/StakingRewards.sol\":1891:1898  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":1918:1930  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":1911:1930  return _totalSupply */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":1845:1938  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2749:2870  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_38:\n        /* \"liquidity-staker/StakingRewards.sol\":2804:2811  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2831:2862  rewardRate.mul(rewardsDuration) */\n      tag_96\n        /* \"liquidity-staker/StakingRewards.sol\":2846:2861  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":2831:2841  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":2831:2845  rewardRate.mul */\n      tag_91\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2831:2862  rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"liquidity-staker/StakingRewards.sol\":2824:2862  return rewardRate.mul(rewardsDuration) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2749:2870  function getRewardForDuration() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3942:3952  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      tag_99\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n      tag_72\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      jump\t// in\n    tag_99:\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      tag_100\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n      tag_59\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_100:\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n      tag_101\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      tag_102\n        /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n      tag_31\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      jump\t// in\n    tag_102:\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n    tag_101:\n        /* \"liquidity-staker/StakingRewards.sol\":3982:3983  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3973:3979  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3973:3983  amount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":3965:4005  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f742077697468647261772030000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"liquidity-staker/StakingRewards.sol\":4031:4055  _totalSupply.sub(amount) */\n      tag_105\n        /* \"liquidity-staker/StakingRewards.sol\":4048:4054  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":4031:4043  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":4031:4047  _totalSupply.sub */\n      tag_90\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4031:4055  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"liquidity-staker/StakingRewards.sol\":4016:4028  _totalSupply */\n      0x0b\n        /* \"liquidity-staker/StakingRewards.sol\":4016:4055  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4090:4123  _balances[msg.sender].sub(amount) */\n      tag_106\n        /* \"liquidity-staker/StakingRewards.sol\":4116:4122  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":4090:4099  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":4090:4111  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4100:4110  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4090:4111  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":4090:4115  _balances[msg.sender].sub */\n      tag_90\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4090:4123  _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"liquidity-staker/StakingRewards.sol\":4066:4075  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":4066:4087  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4076:4086  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4066:4087  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":4066:4123  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4134:4179  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_107\n        /* \"liquidity-staker/StakingRewards.sol\":4160:4170  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4172:4178  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":4134:4146  stakingToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":4134:4159  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_108\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4134:4179  stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"liquidity-staker/StakingRewards.sol\":4205:4215  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4195:4224  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"liquidity-staker/StakingRewards.sol\":4217:4223  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":4195:4224  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n    tag_43:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_46:\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":245:264  rewardsDistribution */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:241  msg.sender */\n      caller\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":223:311  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"liquidity-staker/StakingRewards.sol\":4814:4815  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      tag_113\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n      tag_72\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      jump\t// in\n    tag_113:\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      tag_114\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n      tag_59\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_114:\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n      tag_115\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      tag_116\n        /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n      tag_31\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      jump\t// in\n    tag_116:\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n    tag_115:\n        /* \"liquidity-staker/StakingRewards.sol\":4852:4864  periodFinish */\n      sload(0x04)\n        /* \"liquidity-staker/StakingRewards.sol\":4833:4848  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":4833:4864  block.timestamp >= periodFinish */\n      lt\n        /* \"liquidity-staker/StakingRewards.sol\":4829:5147  if (block.timestamp >= periodFinish) {\r... */\n      tag_118\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":4894:4921  reward.div(rewardsDuration) */\n      tag_119\n        /* \"liquidity-staker/StakingRewards.sol\":4905:4920  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":4894:4900  reward */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":4894:4904  reward.div */\n      tag_92\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4894:4921  reward.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"liquidity-staker/StakingRewards.sol\":4881:4891  rewardRate */\n      0x05\n        /* \"liquidity-staker/StakingRewards.sol\":4881:4921  rewardRate = reward.div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4829:5147  if (block.timestamp >= periodFinish) {\r... */\n      jump(tag_120)\n    tag_118:\n        /* \"liquidity-staker/StakingRewards.sol\":4954:4971  uint256 remaining */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4974:5007  periodFinish.sub(block.timestamp) */\n      tag_121\n        /* \"liquidity-staker/StakingRewards.sol\":4991:5006  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":4974:4986  periodFinish */\n      sload(0x04)\n        /* \"liquidity-staker/StakingRewards.sol\":4974:4990  periodFinish.sub */\n      tag_90\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4974:5007  periodFinish.sub(block.timestamp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"liquidity-staker/StakingRewards.sol\":4954:5007  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5022:5038  uint256 leftover */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":5041:5066  remaining.mul(rewardRate) */\n      tag_122\n        /* \"liquidity-staker/StakingRewards.sol\":5055:5065  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":5041:5050  remaining */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":5041:5054  remaining.mul */\n      tag_91\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5041:5066  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"liquidity-staker/StakingRewards.sol\":5022:5066  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5135  reward.add(leftover).div(rewardsDuration) */\n      tag_123\n        /* \"liquidity-staker/StakingRewards.sol\":5119:5134  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5114  reward.add(leftover) */\n      tag_124\n        /* \"liquidity-staker/StakingRewards.sol\":5105:5113  leftover */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5100  reward */\n      dup8\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5104  reward.add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5114  reward.add(leftover) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5118  reward.add(leftover).div */\n      tag_92\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5094:5135  reward.add(leftover).div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"liquidity-staker/StakingRewards.sol\":5081:5091  rewardRate */\n      0x05\n        /* \"liquidity-staker/StakingRewards.sol\":5081:5135  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4829:5147  if (block.timestamp >= periodFinish) {\r... */\n      pop\n      pop\n    tag_120:\n        /* \"liquidity-staker/StakingRewards.sol\":5507:5519  uint balance */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":5522:5534  rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":5522:5544  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"liquidity-staker/StakingRewards.sol\":5553:5557  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_125\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_125:\n        /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_126:\n        /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_127:\n        /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5507:5559  uint balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5592:5620  balance.div(rewardsDuration) */\n      tag_128\n        /* \"liquidity-staker/StakingRewards.sol\":5604:5619  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":5592:5599  balance */\n      dup3\n        /* \"liquidity-staker/StakingRewards.sol\":5592:5603  balance.div */\n      tag_92\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5592:5620  balance.div(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"liquidity-staker/StakingRewards.sol\":5578:5588  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":5578:5620  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5570:5649  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"liquidity-staker/StakingRewards.sol\":5679:5694  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":5662:5676  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5662:5694  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5720:5756  block.timestamp.add(rewardsDuration) */\n      tag_130\n        /* \"liquidity-staker/StakingRewards.sol\":5740:5755  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":5720:5735  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":5720:5739  block.timestamp.add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5720:5756  block.timestamp.add(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"liquidity-staker/StakingRewards.sol\":5705:5717  periodFinish */\n      0x04\n        /* \"liquidity-staker/StakingRewards.sol\":5705:5756  periodFinish = block.timestamp.add(rewardsDuration) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5772:5791  RewardAdded(reward) */\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n        /* \"liquidity-staker/StakingRewards.sol\":5784:5790  reward */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":5772:5791  RewardAdded(reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"liquidity-staker/StakingRewards.sol\":6338:6339  _ */\n      pop\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":322:323  _ */\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":4240:4547  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4294:4304  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      tag_133\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n      tag_72\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      jump\t// in\n    tag_133:\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      tag_134\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n      tag_59\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_134:\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n      tag_135\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      tag_136\n        /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n      tag_31\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      jump\t// in\n    tag_136:\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n    tag_135:\n        /* \"liquidity-staker/StakingRewards.sol\":4317:4331  uint256 reward */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4334:4341  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":4334:4353  rewards[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4342:4352  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4334:4353  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":4317:4353  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4377:4378  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4368:4374  reward */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":4368:4378  reward > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":4364:4540  if (reward > 0) {\r... */\n      iszero\n      tag_138\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":4417:4418  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4395:4402  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":4395:4414  rewards[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4403:4413  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4395:4414  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":4395:4418  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4433:4478  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_139\n        /* \"liquidity-staker/StakingRewards.sol\":4459:4469  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4471:4477  reward */\n      dup3\n        /* \"liquidity-staker/StakingRewards.sol\":4433:4445  rewardsToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":4433:4458  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_108\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4433:4478  rewardsToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"liquidity-staker/StakingRewards.sol\":4509:4519  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4498:4528  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"liquidity-staker/StakingRewards.sol\":4521:4527  reward */\n      dup3\n        /* \"liquidity-staker/StakingRewards.sol\":4498:4528  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"liquidity-staker/StakingRewards.sol\":4364:4540  if (reward > 0) {\r... */\n    tag_138:\n        /* \"liquidity-staker/StakingRewards.sol\":6338:6339  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"liquidity-staker/StakingRewards.sol\":4240:4547  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      jump\t// out\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n    tag_50:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_53:\n        /* \"liquidity-staker/StakingRewards.sol\":2005:2012  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2032:2041  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":2032:2050  _balances[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2042:2049  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":2032:2050  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":2025:2050  return _balances[account] */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n    tag_55:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n    tag_57:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2066:2197  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_59:\n        /* \"liquidity-staker/StakingRewards.sol\":2123:2130  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2150:2189  Math.min(block.timestamp, periodFinish) */\n      tag_143\n        /* \"liquidity-staker/StakingRewards.sol\":2159:2174  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":2176:2188  periodFinish */\n      sload(0x04)\n        /* \"liquidity-staker/StakingRewards.sol\":2150:2158  Math.min */\n      tag_144\n        /* \"liquidity-staker/StakingRewards.sol\":2150:2189  Math.min(block.timestamp, periodFinish) */\n      jump\t// in\n    tag_143:\n        /* \"liquidity-staker/StakingRewards.sol\":2143:2189  return Math.min(block.timestamp, periodFinish) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2066:2197  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1261:1318  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_62:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n    tag_65:\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":245:264  rewardsDistribution */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:241  msg.sender */\n      caller\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":223:311  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"liquidity-staker/StakingRewards.sol\":5921:5926  token */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":5914:5936  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"liquidity-staker/StakingRewards.sol\":5937:5947  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":5949:5955  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_148:\n        /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_149\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_149:\n        /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_150\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_150:\n        /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_68:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3564:3574  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      tag_153\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n      tag_72\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      jump\t// in\n    tag_153:\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      tag_154\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n      tag_59\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_154:\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n      tag_155\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      tag_156\n        /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n      tag_31\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      jump\t// in\n    tag_156:\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n    tag_155:\n        /* \"liquidity-staker/StakingRewards.sol\":3604:3605  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3595:3601  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3595:3605  amount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":3587:3624  require(amount > 0, \"Cannot stake 0\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"liquidity-staker/StakingRewards.sol\":3650:3674  _totalSupply.add(amount) */\n      tag_159\n        /* \"liquidity-staker/StakingRewards.sol\":3667:3673  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3650:3662  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":3650:3666  _totalSupply.add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3650:3674  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"liquidity-staker/StakingRewards.sol\":3635:3647  _totalSupply */\n      0x0b\n        /* \"liquidity-staker/StakingRewards.sol\":3635:3674  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3709:3742  _balances[msg.sender].add(amount) */\n      tag_160\n        /* \"liquidity-staker/StakingRewards.sol\":3735:3741  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3709:3718  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3709:3730  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3719:3729  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3709:3730  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":3709:3734  _balances[msg.sender].add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3709:3742  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"liquidity-staker/StakingRewards.sol\":3685:3694  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3685:3706  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3695:3705  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3685:3706  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":3685:3742  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3753:3817  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_161\n        /* \"liquidity-staker/StakingRewards.sol\":3783:3793  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3803:3807  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":3810:3816  amount */\n      dup6\n        /* \"liquidity-staker/StakingRewards.sol\":3753:3765  stakingToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":3753:3782  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_162\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3753:3817  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"liquidity-staker/StakingRewards.sol\":3840:3850  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3833:3859  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"liquidity-staker/StakingRewards.sol\":3852:3858  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":3833:3859  Staked(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1181:1210  uint256 public lastUpdateTime */\n    tag_70:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2205:2535  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_72:\n        /* \"liquidity-staker/StakingRewards.sol\":2252:2259  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2292:2293  0 */\n      dup1\n        /* \"liquidity-staker/StakingRewards.sol\":2276:2288  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":2276:2293  _totalSupply == 0 */\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":2272:2349  if (_totalSupply == 0) {\r... */\n      iszero\n      tag_165\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":2317:2337  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":2310:2337  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_164)\n        /* \"liquidity-staker/StakingRewards.sol\":2272:2349  if (_totalSupply == 0) {\r... */\n    tag_165:\n        /* \"liquidity-staker/StakingRewards.sol\":2379:2527  rewardPerTokenStored.add(\r... */\n      tag_166\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2512  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_167\n        /* \"liquidity-staker/StakingRewards.sol\":2499:2511  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2494  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_168\n        /* \"liquidity-staker/StakingRewards.sol\":2489:2493  1e18 */\n      0x0de0b6b3a7640000\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2484  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_169\n        /* \"liquidity-staker/StakingRewards.sol\":2473:2483  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2468  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_170\n        /* \"liquidity-staker/StakingRewards.sol\":2453:2467  lastUpdateTime */\n      sload(0x07)\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2448  lastTimeRewardApplicable() */\n      tag_171\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2446  lastTimeRewardApplicable */\n      tag_59\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2448  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_171:\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2452  lastTimeRewardApplicable().sub */\n      tag_90\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2468  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2472  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_91\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2484  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_169:\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2488  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_91\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2494  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2498  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_92\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2422:2512  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"liquidity-staker/StakingRewards.sol\":2379:2399  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":2379:2403  rewardPerTokenStored.add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2379:2527  rewardPerTokenStored.add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"liquidity-staker/StakingRewards.sol\":2359:2527  return\r... */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2205:2535  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_164:\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n    tag_74:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1217:1252  uint256 public rewardPerTokenStored */\n    tag_76:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":4555:4652  function exit() external {\r... */\n    tag_78:\n        /* \"liquidity-staker/StakingRewards.sol\":4591:4622  withdraw(_balances[msg.sender]) */\n      tag_173\n        /* \"liquidity-staker/StakingRewards.sol\":4600:4609  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":4600:4621  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4610:4620  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4600:4621  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":4591:4599  withdraw */\n      tag_41\n        /* \"liquidity-staker/StakingRewards.sol\":4591:4622  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_173:\n        /* \"liquidity-staker/StakingRewards.sol\":4633:4644  getReward() */\n      tag_174\n        /* \"liquidity-staker/StakingRewards.sol\":4633:4642  getReward */\n      tag_48\n        /* \"liquidity-staker/StakingRewards.sol\":4633:4644  getReward() */\n      jump\t// in\n    tag_174:\n        /* \"liquidity-staker/StakingRewards.sol\":4555:4652  function exit() external {\r... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n    tag_80:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3054:3064  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      tag_177\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n      tag_72\n        /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n      jump\t// in\n    tag_177:\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      tag_178\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n      tag_59\n        /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_178:\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n      tag_179\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      tag_180\n        /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n      tag_31\n        /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n      jump\t// in\n    tag_180:\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n    tag_179:\n        /* \"liquidity-staker/StakingRewards.sol\":3094:3095  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3085:3091  amount */\n      dup8\n        /* \"liquidity-staker/StakingRewards.sol\":3085:3095  amount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":3077:3114  require(amount > 0, \"Cannot stake 0\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"liquidity-staker/StakingRewards.sol\":3140:3164  _totalSupply.add(amount) */\n      tag_183\n        /* \"liquidity-staker/StakingRewards.sol\":3157:3163  amount */\n      dup8\n        /* \"liquidity-staker/StakingRewards.sol\":3140:3152  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":3140:3156  _totalSupply.add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3140:3164  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"liquidity-staker/StakingRewards.sol\":3125:3137  _totalSupply */\n      0x0b\n        /* \"liquidity-staker/StakingRewards.sol\":3125:3164  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3199:3232  _balances[msg.sender].add(amount) */\n      tag_184\n        /* \"liquidity-staker/StakingRewards.sol\":3225:3231  amount */\n      dup8\n        /* \"liquidity-staker/StakingRewards.sol\":3199:3208  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3199:3220  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3209:3219  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3199:3220  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":3199:3224  _balances[msg.sender].add */\n      tag_93\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3199:3232  _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"liquidity-staker/StakingRewards.sol\":3175:3184  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3175:3196  _balances[msg.sender] */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3185:3195  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3175:3196  _balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":3175:3232  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3288:3300  stakingToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":3264:3309  IUniswapV2ERC20(address(stakingToken)).permit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd505accf\n        /* \"liquidity-staker/StakingRewards.sol\":3310:3320  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3330:3334  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":3337:3343  amount */\n      dup11\n        /* \"liquidity-staker/StakingRewards.sol\":3345:3353  deadline */\n      dup11\n        /* \"liquidity-staker/StakingRewards.sol\":3355:3356  v */\n      dup11\n        /* \"liquidity-staker/StakingRewards.sol\":3358:3359  r */\n      dup11\n        /* \"liquidity-staker/StakingRewards.sol\":3361:3362  s */\n      dup11\n        /* \"liquidity-staker/StakingRewards.sol\":3264:3363  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup9\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_185\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_185:\n        /* \"liquidity-staker/StakingRewards.sol\":3264:3363  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_186\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_186:\n        /* \"liquidity-staker/StakingRewards.sol\":3264:3363  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      pop\n      pop\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3376:3440  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_187\n        /* \"liquidity-staker/StakingRewards.sol\":3406:3416  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3426:3430  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":3433:3439  amount */\n      dup10\n        /* \"liquidity-staker/StakingRewards.sol\":3376:3388  stakingToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":3376:3405  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_162\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3376:3440  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"liquidity-staker/StakingRewards.sol\":3463:3473  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3456:3482  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"liquidity-staker/StakingRewards.sol\":3475:3481  amount */\n      dup9\n        /* \"liquidity-staker/StakingRewards.sol\":3456:3482  Staked(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_90:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1364:1365  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1360  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1410:1419  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1426:1427  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1422:1423  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1422:1427  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1410:1427  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1445:1446  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1438:1446  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1751:1758  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1997:1998  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1992:1993  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1992:1998  a == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2021:2022  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2014:2022  return 0 */\n      swap1\n      pop\n      jump(tag_191)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n    tag_192:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2043:2052  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2059:2060  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2056  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2060  a * b */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2043:2060  uint256 c = a * b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2087:2088  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2082:2083  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2079  c */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2083  c / a */\n      dup2\n      tag_193\n      jumpi\n      invalid\n    tag_193:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2088  c / a == b */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2070:2126  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2144:2145  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2137:2145  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_191:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2665:2672  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2762:2763  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2759  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2763  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2750:2794  require(b > 0, \"SafeMath: division by zero\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2804:2813  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2820:2821  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2817  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2821  a / b */\n      dup2\n      tag_197\n      jumpi\n      invalid\n    tag_197:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2804:2821  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2925:2926  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2918:2926  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_108:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_201\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":793:798  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":793:807  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":793:816  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":818:820  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":822:827  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_202\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_144:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":416:423  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":446:447  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:443  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:447  a < b */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n      tag_204\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":454:455  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n      jump(tag_205)\n    tag_204:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":450:451  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n    tag_205:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":435:455  return a < b ? a : b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_207\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":961:966  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":991:996  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":991:1009  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":991:1018  token.transferFrom.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":1020:1024  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":1026:1028  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":1030:1035  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:960  callOptionalReturn */\n      tag_202\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":2621:3716  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_202:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n      tag_209\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3224:3229  token */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3241  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n      jump\t// in\n    tag_209:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3208:3279  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3350:3362  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3364:3387  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3399:3404  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3410  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3411:3415  data */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_212:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_212)\n    tag_214:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_216\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_215)\n        /* \"--CODEGEN--\":16:47   */\n    tag_216:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_215:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3349:3416  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3434:3441  success */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3426:3478  require(success, \"SafeERC20: low-level call failed\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3513:3514  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3503  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3510  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3514  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3489:3710  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_218\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3633:3643  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_219\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3614:3699  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3489:3710  if (returndata.length > 0) { // Return data is optional... */\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":2621:3716  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n    tag_210:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":602:606  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":805:817  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":914:921  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":902:922  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":894:922  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":947:948  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":940:944  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":940:948  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":933:948  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de 43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600455600060055562278d0060065534801561002157600080fd5b5060405161243e38038061243e8339818101604052606081101561004457600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050506001808190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506122fa806101446000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637b0a47ee116100c3578063cd3daf9d1161007c578063cd3daf9d146104db578063d1af0c7d146104f9578063df136d6514610543578063e9fad8ee14610561578063ebe2b12b1461056b578063ecd9ba82146105895761014c565b80637b0a47ee146103ad57806380faa57d146103cb5780638b876347146103e9578063a4c3b09114610441578063a694fc3a1461048f578063c8f33c91146104bd5761014c565b8063386a952511610115578063386a95251461026b5780633c6b16ab146102895780633d18b912146102b75780633fc6df6e146102c157806370a082311461030b57806372f702f3146103635761014c565b80628cc262146101515780630700037d146101a957806318160ddd146102015780631c1f78eb1461021f5780632e1a7d4d1461023d575b600080fd5b6101936004803603602081101561016757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e2565b6040518082815260200191505060405180910390f35b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610700565b6040518082815260200191505060405180910390f35b610209610718565b6040518082815260200191505060405180910390f35b610227610722565b6040518082815260200191505060405180910390f35b6102696004803603602081101561025357600080fd5b8101908080359060200190929190505050610740565b005b610273610a78565b6040518082815260200191505060405180910390f35b6102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050610a7e565b005b6102bf610e5b565b005b6102c9611100565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034d6004803603602081101561032157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611125565b6040518082815260200191505060405180910390f35b61036b61116e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b5611194565b6040518082815260200191505060405180910390f35b6103d361119a565b6040518082815260200191505060405180910390f35b61042b600480360360208110156103ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ad565b6040518082815260200191505060405180910390f35b61048d6004803603604081101561045757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111c5565b005b6104bb600480360360208110156104a557600080fd5b8101908080359060200190929190505050611331565b005b6104c561166b565b6040518082815260200191505060405180910390f35b6104e3611671565b6040518082815260200191505060405180910390f35b6105016116ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61054b611725565b6040518082815260200191505060405180910390f35b61056961172b565b005b61057361177d565b6040518082815260200191505060405180910390f35b6105e0600480360360a081101561059f57600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611783565b005b60006106f9600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106eb670de0b6b3a76400006106dd61068f600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610681611671565b611bdc90919063ffffffff16565b600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b611ceb90919063ffffffff16565b611d7a90919063ffffffff16565b9050919050565b600a6020528060005260406000206000915090505481565b6000600b54905090565b600061073b600654600554611c6590919063ffffffff16565b905090565b600180600082825401925050819055506000600154905033610760611671565b60088190555061076e61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083b576107b1816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b6108c683600b54611bdc90919063ffffffff16565b600b8190555061091e83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bdc90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109ae3384600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040518082815260200191505060405180910390a2506001548114610a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b6000610b2d611671565b600881905550610b3b61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c0857610b7e816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6004544210610c3157610c2660065483611ceb90919063ffffffff16565b600581905550610c93565b6000610c4842600454611bdc90919063ffffffff16565b90506000610c6160055483611c6590919063ffffffff16565b9050610c8a600654610c7c8387611d7a90919063ffffffff16565b611ceb90919063ffffffff16565b60058190555050505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d6020811015610d5e57600080fd5b81019080805190602001909291905050509050610d8660065482611ceb90919063ffffffff16565b6005541115610dfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50726f76696465642072657761726420746f6f2068696768000000000000000081525060200191505060405180910390fd5b42600781905550610e1960065442611d7a90919063ffffffff16565b6004819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d836040518082815260200191505060405180910390a1505050565b600180600082825401925050819055506000600154905033610e7b611671565b600881905550610e8961119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f5657610ecc816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115611084576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110353382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505060015481146110fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60006111a842600454611ed3565b905090565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b8101908080519060200190929190505050505050565b600180600082825401925050819055506000600154905033611351611671565b60088190555061135f61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461142c576113a2816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b6114b783600b54611d7a90919063ffffffff16565b600b8190555061150f83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115a1333085600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040518082815260200191505060405180910390a2506001548114611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60075481565b600080600b5414156116875760085490506116fc565b6116f96116e8600b546116da670de0b6b3a76400006116cc6005546116be6007546116b061119a565b611bdc90919063ffffffff16565b611c6590919063ffffffff16565b611c6590919063ffffffff16565b611ceb90919063ffffffff16565b600854611d7a90919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b611773600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610740565b61177b610e5b565b565b60045481565b6001806000828254019250508190555060006001549050336117a3611671565b6008819055506117b161119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461187e576117f4816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600087116118f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b61190987600b54611d7a90919063ffffffff16565b600b8190555061196187600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf33308a8a8a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018460ff1660ff168152602001838152602001828152602001975050505050505050600060405180830381600087803b158015611aa757600080fd5b505af1158015611abb573d6000803e3d6000fd5b50505050611b0e333089600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d886040518082815260200191505060405180910390a2506001548114611bd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b505050505050565b600082821115611c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080831415611c785760009050611ce5565b6000828402905082848281611c8957fe5b0414611ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806122516021913960400191505060405180910390fd5b809150505b92915050565b6000808211611d62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481611d6d57fe5b0490508091505092915050565b600080828401905083811015611df8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611ece838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b505050565b6000818310611ee25781611ee4565b825b905092915050565b611fec848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b50505050565b6120118273ffffffffffffffffffffffffffffffffffffffff1661223d565b612083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106120d257805182526020820191506020810190506020830392506120af565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612134576040519150601f19603f3d011682016040523d82523d6000602084013e612139565b606091505b5091509150816121b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612237578080602001905160208110156121d057600080fd5b8101908080519060200190929190505050612236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061229c602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x278D00 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x243E CODESIZE SUB DUP1 PUSH2 0x243E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x22FA DUP1 PUSH2 0x144 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x589 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x4BD JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x363 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0xE5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1331 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0x172B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x573 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1783 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x6F9 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EB PUSH8 0xDE0B6B3A7640000 PUSH2 0x6DD PUSH2 0x68F PUSH1 0x9 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x681 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x760 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x76E PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83B JUMPI PUSH2 0x7B1 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C6 DUP4 PUSH1 0xB SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x91E DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9AE CALLER DUP5 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB3B PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC08 JUMPI PUSH2 0xB7E DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xC31 JUMPI PUSH2 0xC26 PUSH1 0x6 SLOAD DUP4 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC48 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC61 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC8A PUSH1 0x6 SLOAD PUSH2 0xC7C DUP4 DUP8 PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD86 PUSH1 0x6 SLOAD DUP3 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xE19 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0xE7B PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xE89 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF56 JUMPI PUSH2 0xECC DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1035 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1ED3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x1351 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x135F PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x142C JUMPI PUSH2 0x13A2 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B7 DUP4 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x150F DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15A1 CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1687 JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x16E8 PUSH1 0xB SLOAD PUSH2 0x16DA PUSH8 0xDE0B6B3A7640000 PUSH2 0x16CC PUSH1 0x5 SLOAD PUSH2 0x16BE PUSH1 0x7 SLOAD PUSH2 0x16B0 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1773 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x740 JUMP JUMPDEST PUSH2 0x177B PUSH2 0xE5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x17A3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x17B1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x187E JUMPI PUSH2 0x17F4 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x18F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1909 DUP8 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1961 DUP8 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1B0E CALLER ADDRESS DUP10 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP9 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1C54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C89 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1CE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2251 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1D6D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ECE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1EE2 JUMPI DUP2 PUSH2 0x1EE4 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEC DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2011 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x223D JUMP JUMPDEST PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20D2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x21B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2237 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x229C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A72315820946F89BB87 SWAP4 0x1E BALANCE 0xB6 0xAF 0xB2 0xE9 0x23 0xBC 0x4D 0x2D 0xEF 0xAE ADD 0x4C 0xC8 LT 0x4E 0xAD PUSH31 0xFCB09A4BA187B764736F6C6343000511003200000000000000000000000000 ",
							"sourceMap": "732:5880:9:-;;;1044:1;1014:31;;1080:1;1052:29;;1121:7;1088:40;;1512:284;8:9:-1;5:2;;;30:1;27;20:12;5:2;1512:284:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1512:284:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:1:7;868:13;:17;;;;1674:13:9;1652:12;;:36;;;;;;;;;;;;;;;;;;1721:13;1699:12;;:36;;;;;;;;;;;;;;;;;;1768:20;1746:19;;:42;;;;;;;;;;;;;;;;;;1512:284;;;732:5880;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061014c5760003560e01c80637b0a47ee116100c3578063cd3daf9d1161007c578063cd3daf9d146104db578063d1af0c7d146104f9578063df136d6514610543578063e9fad8ee14610561578063ebe2b12b1461056b578063ecd9ba82146105895761014c565b80637b0a47ee146103ad57806380faa57d146103cb5780638b876347146103e9578063a4c3b09114610441578063a694fc3a1461048f578063c8f33c91146104bd5761014c565b8063386a952511610115578063386a95251461026b5780633c6b16ab146102895780633d18b912146102b75780633fc6df6e146102c157806370a082311461030b57806372f702f3146103635761014c565b80628cc262146101515780630700037d146101a957806318160ddd146102015780631c1f78eb1461021f5780632e1a7d4d1461023d575b600080fd5b6101936004803603602081101561016757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e2565b6040518082815260200191505060405180910390f35b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610700565b6040518082815260200191505060405180910390f35b610209610718565b6040518082815260200191505060405180910390f35b610227610722565b6040518082815260200191505060405180910390f35b6102696004803603602081101561025357600080fd5b8101908080359060200190929190505050610740565b005b610273610a78565b6040518082815260200191505060405180910390f35b6102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050610a7e565b005b6102bf610e5b565b005b6102c9611100565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034d6004803603602081101561032157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611125565b6040518082815260200191505060405180910390f35b61036b61116e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b5611194565b6040518082815260200191505060405180910390f35b6103d361119a565b6040518082815260200191505060405180910390f35b61042b600480360360208110156103ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ad565b6040518082815260200191505060405180910390f35b61048d6004803603604081101561045757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111c5565b005b6104bb600480360360208110156104a557600080fd5b8101908080359060200190929190505050611331565b005b6104c561166b565b6040518082815260200191505060405180910390f35b6104e3611671565b6040518082815260200191505060405180910390f35b6105016116ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61054b611725565b6040518082815260200191505060405180910390f35b61056961172b565b005b61057361177d565b6040518082815260200191505060405180910390f35b6105e0600480360360a081101561059f57600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611783565b005b60006106f9600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106eb670de0b6b3a76400006106dd61068f600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610681611671565b611bdc90919063ffffffff16565b600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b611ceb90919063ffffffff16565b611d7a90919063ffffffff16565b9050919050565b600a6020528060005260406000206000915090505481565b6000600b54905090565b600061073b600654600554611c6590919063ffffffff16565b905090565b600180600082825401925050819055506000600154905033610760611671565b60088190555061076e61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083b576107b1816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b6108c683600b54611bdc90919063ffffffff16565b600b8190555061091e83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bdc90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109ae3384600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040518082815260200191505060405180910390a2506001548114610a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b6000610b2d611671565b600881905550610b3b61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c0857610b7e816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6004544210610c3157610c2660065483611ceb90919063ffffffff16565b600581905550610c93565b6000610c4842600454611bdc90919063ffffffff16565b90506000610c6160055483611c6590919063ffffffff16565b9050610c8a600654610c7c8387611d7a90919063ffffffff16565b611ceb90919063ffffffff16565b60058190555050505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d6020811015610d5e57600080fd5b81019080805190602001909291905050509050610d8660065482611ceb90919063ffffffff16565b6005541115610dfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50726f76696465642072657761726420746f6f2068696768000000000000000081525060200191505060405180910390fd5b42600781905550610e1960065442611d7a90919063ffffffff16565b6004819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d836040518082815260200191505060405180910390a1505050565b600180600082825401925050819055506000600154905033610e7b611671565b600881905550610e8961119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f5657610ecc816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115611084576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110353382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505060015481146110fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60006111a842600454611ed3565b905090565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b8101908080519060200190929190505050505050565b600180600082825401925050819055506000600154905033611351611671565b60088190555061135f61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461142c576113a2816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b6114b783600b54611d7a90919063ffffffff16565b600b8190555061150f83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115a1333085600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040518082815260200191505060405180910390a2506001548114611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60075481565b600080600b5414156116875760085490506116fc565b6116f96116e8600b546116da670de0b6b3a76400006116cc6005546116be6007546116b061119a565b611bdc90919063ffffffff16565b611c6590919063ffffffff16565b611c6590919063ffffffff16565b611ceb90919063ffffffff16565b600854611d7a90919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b611773600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610740565b61177b610e5b565b565b60045481565b6001806000828254019250508190555060006001549050336117a3611671565b6008819055506117b161119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461187e576117f4816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600087116118f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b61190987600b54611d7a90919063ffffffff16565b600b8190555061196187600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf33308a8a8a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018460ff1660ff168152602001838152602001828152602001975050505050505050600060405180830381600087803b158015611aa757600080fd5b505af1158015611abb573d6000803e3d6000fd5b50505050611b0e333089600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d886040518082815260200191505060405180910390a2506001548114611bd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b505050505050565b600082821115611c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080831415611c785760009050611ce5565b6000828402905082848281611c8957fe5b0414611ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806122516021913960400191505060405180910390fd5b809150505b92915050565b6000808211611d62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481611d6d57fe5b0490508091505092915050565b600080828401905083811015611df8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611ece838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b505050565b6000818310611ee25781611ee4565b825b905092915050565b611fec848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b50505050565b6120118273ffffffffffffffffffffffffffffffffffffffff1661223d565b612083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106120d257805182526020820191506020810190506020830392506120af565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612134576040519150601f19603f3d011682016040523d82523d6000602084013e612139565b606091505b5091509150816121b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612237578080602001905160208110156121d057600080fd5b8101908080519060200190929190505050612236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061229c602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x589 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x4BD JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x363 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0xE5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1331 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0x172B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x573 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1783 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x6F9 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EB PUSH8 0xDE0B6B3A7640000 PUSH2 0x6DD PUSH2 0x68F PUSH1 0x9 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x681 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x760 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x76E PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83B JUMPI PUSH2 0x7B1 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C6 DUP4 PUSH1 0xB SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x91E DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9AE CALLER DUP5 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB3B PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC08 JUMPI PUSH2 0xB7E DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xC31 JUMPI PUSH2 0xC26 PUSH1 0x6 SLOAD DUP4 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC48 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC61 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC8A PUSH1 0x6 SLOAD PUSH2 0xC7C DUP4 DUP8 PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD86 PUSH1 0x6 SLOAD DUP3 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xE19 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0xE7B PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xE89 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF56 JUMPI PUSH2 0xECC DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1035 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1ED3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x1351 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x135F PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x142C JUMPI PUSH2 0x13A2 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B7 DUP4 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x150F DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15A1 CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1687 JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x16E8 PUSH1 0xB SLOAD PUSH2 0x16DA PUSH8 0xDE0B6B3A7640000 PUSH2 0x16CC PUSH1 0x5 SLOAD PUSH2 0x16BE PUSH1 0x7 SLOAD PUSH2 0x16B0 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1773 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x740 JUMP JUMPDEST PUSH2 0x177B PUSH2 0xE5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x17A3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x17B1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x187E JUMPI PUSH2 0x17F4 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x18F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1909 DUP8 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1961 DUP8 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1B0E CALLER ADDRESS DUP10 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP9 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1C54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C89 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1CE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2251 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1D6D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ECE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1EE2 JUMPI DUP2 PUSH2 0x1EE4 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEC DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2011 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x223D JUMP JUMPDEST PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20D2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x21B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2237 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x229C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A72315820946F89BB87 SWAP4 0x1E BALANCE 0xB6 0xAF 0xB2 0xE9 0x23 0xBC 0x4D 0x2D 0xEF 0xAE ADD 0x4C 0xC8 LT 0x4E 0xAD PUSH31 0xFCB09A4BA187B764736F6C6343000511003200000000000000000000000000 ",
							"sourceMap": "732:5880:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;732:5880:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2543:198:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1325:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1325:42:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1845:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2749:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3875:357;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3875:357:9;;;;;;;;;;;;;;;;;:::i;:::-;;1088:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4716:1083;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4716:1083:9;;;;;;;;;;;;;;;;;:::i;:::-;;4240:307;;;:::i;:::-;;73:34:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1946:112:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1946:112:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;981:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1052:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2066:131;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1261:57;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1261:57:9;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5807:157;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5807:157:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3498:369;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3498:369:9;;;;;;;;;;;;;;;;;:::i;:::-;;1181:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2205:330;;;:::i;:::-;;;;;;;;;;;;;;;;;;;948:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1217:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4555:97;;;:::i;:::-;;1014:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2932:558;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2932:558:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2543:198;2597:7;2624:109;2716:7;:16;2724:7;2716:16;;;;;;;;;;;;;;;;2624:87;2706:4;2624:77;2647:53;2668:22;:31;2691:7;2668:31;;;;;;;;;;;;;;;;2647:16;:14;:16::i;:::-;:20;;:53;;;;:::i;:::-;2624:9;:18;2634:7;2624:18;;;;;;;;;;;;;;;;:22;;:77;;;;:::i;:::-;:81;;:87;;;;:::i;:::-;:91;;:109;;;;:::i;:::-;2617:116;;2543:198;;;:::o;1325:42::-;;;;;;;;;;;;;;;;;:::o;1845:93::-;1891:7;1918:12;;1911:19;;1845:93;:::o;2749:121::-;2804:7;2831:31;2846:15;;2831:10;;:14;;:31;;;;:::i;:::-;2824:38;;2749:121;:::o;3875:357::-;1318:1:7;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;3942:10:9;6090:16;:14;:16::i;:::-;6067:20;:39;;;;6134:26;:24;:26::i;:::-;6117:14;:43;;;;6194:1;6175:21;;:7;:21;;;6171:157;;6232:15;6239:7;6232:6;:15::i;:::-;6213:7;:16;6221:7;6213:16;;;;;;;;;;;;;;;:34;;;;6296:20;;6262:22;:31;6285:7;6262:31;;;;;;;;;;;;;;;:54;;;;6171:157;3982:1;3973:6;:10;3965:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4031:24;4048:6;4031:12;;:16;;:24;;;;:::i;:::-;4016:12;:39;;;;4090:33;4116:6;4090:9;:21;4100:10;4090:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;4066:9;:21;4076:10;4066:21;;;;;;;;;;;;;;;:57;;;;4134:45;4160:10;4172:6;4134:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;4205:10;4195:29;;;4217:6;4195:29;;;;;;;;;;;;;;;;;;1375:1:7;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:357:9;;:::o;1088:40::-;;;;:::o;4716:1083::-;245:19:8;;;;;;;;;;;231:33;;:10;:33;;;223:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4814:1:9;6090:16;:14;:16::i;:::-;6067:20;:39;;;;6134:26;:24;:26::i;:::-;6117:14;:43;;;;6194:1;6175:21;;:7;:21;;;6171:157;;6232:15;6239:7;6232:6;:15::i;:::-;6213:7;:16;6221:7;6213:16;;;;;;;;;;;;;;;:34;;;;6296:20;;6262:22;:31;6285:7;6262:31;;;;;;;;;;;;;;;:54;;;;6171:157;4852:12;;4833:15;:31;4829:318;;4894:27;4905:15;;4894:6;:10;;:27;;;;:::i;:::-;4881:10;:40;;;;4829:318;;;4954:17;4974:33;4991:15;4974:12;;:16;;:33;;;;:::i;:::-;4954:53;;5022:16;5041:25;5055:10;;5041:9;:13;;:25;;;;:::i;:::-;5022:44;;5094:41;5119:15;;5094:20;5105:8;5094:6;:10;;:20;;;;:::i;:::-;:24;;:41;;;;:::i;:::-;5081:10;:54;;;;4829:318;;;5507:12;5522;;;;;;;;;;;:22;;;5553:4;5522:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5522:37:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5522:37:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5522:37:9;;;;;;;;;;;;;;;;5507:52;;5592:28;5604:15;;5592:7;:11;;:28;;;;:::i;:::-;5578:10;;:42;;5570:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5679:15;5662:14;:32;;;;5720:36;5740:15;;5720;:19;;:36;;;;:::i;:::-;5705:12;:51;;;;5772:19;5784:6;5772:19;;;;;;;;;;;;;;;;;;6338:1;322::8;4716:1083:9;:::o;4240:307::-;1318:1:7;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;4294:10:9;6090:16;:14;:16::i;:::-;6067:20;:39;;;;6134:26;:24;:26::i;:::-;6117:14;:43;;;;6194:1;6175:21;;:7;:21;;;6171:157;;6232:15;6239:7;6232:6;:15::i;:::-;6213:7;:16;6221:7;6213:16;;;;;;;;;;;;;;;:34;;;;6296:20;;6262:22;:31;6285:7;6262:31;;;;;;;;;;;;;;;:54;;;;6171:157;4317:14;4334:7;:19;4342:10;4334:19;;;;;;;;;;;;;;;;4317:36;;4377:1;4368:6;:10;4364:176;;;4417:1;4395:7;:19;4403:10;4395:19;;;;;;;;;;;;;;;:23;;;;4433:45;4459:10;4471:6;4433:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;4509:10;4498:30;;;4521:6;4498:30;;;;;;;;;;;;;;;;;;4364:176;6338:1;1375::7;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4240:307:9;:::o;73:34:8:-;;;;;;;;;;;;;:::o;1946:112:9:-;2005:7;2032:9;:18;2042:7;2032:18;;;;;;;;;;;;;;;;2025:25;;1946:112;;;:::o;981:26::-;;;;;;;;;;;;;:::o;1052:29::-;;;;:::o;2066:131::-;2123:7;2150:39;2159:15;2176:12;;2150:8;:39::i;:::-;2143:46;;2066:131;:::o;1261:57::-;;;;;;;;;;;;;;;;;:::o;5807:157::-;245:19:8;;;;;;;;;;;231:33;;:10;:33;;;223:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5921:5:9;5914:22;;;5937:10;5949:6;5914:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5914:42:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5914:42:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5914:42:9;;;;;;;;;;;;;;;;;5807:157;;:::o;3498:369::-;1318:1:7;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;3564:10:9;6090:16;:14;:16::i;:::-;6067:20;:39;;;;6134:26;:24;:26::i;:::-;6117:14;:43;;;;6194:1;6175:21;;:7;:21;;;6171:157;;6232:15;6239:7;6232:6;:15::i;:::-;6213:7;:16;6221:7;6213:16;;;;;;;;;;;;;;;:34;;;;6296:20;;6262:22;:31;6285:7;6262:31;;;;;;;;;;;;;;;:54;;;;6171:157;3604:1;3595:6;:10;3587:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3650:24;3667:6;3650:12;;:16;;:24;;;;:::i;:::-;3635:12;:39;;;;3709:33;3735:6;3709:9;:21;3719:10;3709:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;3685:9;:21;3695:10;3685:21;;;;;;;;;;;;;;;:57;;;;3753:64;3783:10;3803:4;3810:6;3753:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;3840:10;3833:26;;;3852:6;3833:26;;;;;;;;;;;;;;;;;;1375:1:7;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3498:369:9;;:::o;1181:29::-;;;;:::o;2205:330::-;2252:7;2292:1;2276:12;;:17;2272:77;;;2317:20;;2310:27;;;;2272:77;2379:148;2422:90;2499:12;;2422:72;2489:4;2422:62;2473:10;;2422:46;2453:14;;2422:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;2379:20;;:24;;:148;;;;:::i;:::-;2359:168;;2205:330;;:::o;948:26::-;;;;;;;;;;;;;:::o;1217:35::-;;;;:::o;4555:97::-;4591:31;4600:9;:21;4610:10;4600:21;;;;;;;;;;;;;;;;4591:8;:31::i;:::-;4633:11;:9;:11::i;:::-;4555:97::o;1014:31::-;;;;:::o;2932:558::-;1318:1:7;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;3054:10:9;6090:16;:14;:16::i;:::-;6067:20;:39;;;;6134:26;:24;:26::i;:::-;6117:14;:43;;;;6194:1;6175:21;;:7;:21;;;6171:157;;6232:15;6239:7;6232:6;:15::i;:::-;6213:7;:16;6221:7;6213:16;;;;;;;;;;;;;;;:34;;;;6296:20;;6262:22;:31;6285:7;6262:31;;;;;;;;;;;;;;;:54;;;;6171:157;3094:1;3085:6;:10;3077:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3140:24;3157:6;3140:12;;:16;;:24;;;;:::i;:::-;3125:12;:39;;;;3199:33;3225:6;3199:9;:21;3209:10;3199:21;;;;;;;;;;;;;;;;:25;;:33;;;;:::i;:::-;3175:9;:21;3185:10;3175:21;;;;;;;;;;;;;;;:57;;;;3288:12;;;;;;;;;;;3264:45;;;3310:10;3330:4;3337:6;3345:8;3355:1;3358;3361;3264:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3264:99:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3264:99:9;;;;3376:64;3406:10;3426:4;3433:6;3376:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;3463:10;3456:26;;;3475:6;3456:26;;;;;;;;;;;;;;;;;;1375:1:7;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:558:9;;;;;;:::o;1274:179:1:-;1332:7;1364:1;1359;:6;;1351:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1410:9;1426:1;1422;:5;1410:17;;1445:1;1438:8;;;1274:179;;;;:::o;1693:459::-;1751:7;1997:1;1992;:6;1988:45;;;2021:1;2014:8;;;;1988:45;2043:9;2059:1;2055;:5;2043:17;;2087:1;2082;2078;:5;;;;;;:10;2070:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:1;2137:8;;;1693:459;;;;;:::o;2607:326::-;2665:7;2762:1;2758;:5;2750:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:9;2820:1;2816;:5;;;;;;2804:17;;2925:1;2918:8;;;2607:326;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;662:174:5:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:5;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:5;744:18;:85::i;:::-;662:174;;;:::o;358:104:0:-;416:7;446:1;442;:5;:13;;454:1;442:13;;;450:1;442:13;435:20;;358:104;;;;:::o;842:202:5:-;942:95;961:5;991;:18;;;:27;;;;1020:4;1026:2;1030:5;968:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;968:68:5;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;968:68:5;942:18;:95::i;:::-;842:202;;;;:::o;2621:1095::-;3216:27;3224:5;3216:25;;;:27::i;:::-;3208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3350:12;3364:23;3399:5;3391:19;;3411:4;3391:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3391:25:5;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3349:67:5;;;;3434:7;3426:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3513:1;3493:10;:17;:21;3489:221;;;3633:10;3622:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3622:30:5;;;;;;;;;;;;;;;;3614:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:221;2621:1095;;;;:::o;542:413:6:-;602:4;805:12;914:7;902:20;894:28;;947:1;940:4;:8;933:15;;;542:413;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1790800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1307",
								"earned(address)": "infinite",
								"emergencyWithdrawToken(address,uint256)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"lastTimeRewardApplicable()": "1139",
								"lastUpdateTime()": "1138",
								"notifyRewardAmount(uint256)": "infinite",
								"periodFinish()": "1115",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "1071",
								"rewardRate()": "1028",
								"rewards(address)": "1215",
								"rewardsDistribution()": "1142",
								"rewardsDuration()": "1028",
								"rewardsToken()": "1097",
								"stake(uint256)": "infinite",
								"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"stakingToken()": "1186",
								"totalSupply()": "1081",
								"userRewardPerTokenPaid(address)": "1236",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 6612,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "MSTORE"
								},
								{
									"begin": 1044,
									"end": 1045,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1045,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1014,
									"end": 1045,
									"name": "SSTORE"
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1052,
									"end": 1081,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1052,
									"end": 1081,
									"name": "SSTORE"
								},
								{
									"begin": 1121,
									"end": 1128,
									"name": "PUSH",
									"value": "278D00"
								},
								{
									"begin": 1088,
									"end": 1128,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1088,
									"end": 1128,
									"name": "SSTORE"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "MLOAD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "CODESIZE"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SUB"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP4"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "CODECOPY"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP2"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP2"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "ADD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP2"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "ADD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "MLOAD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "ADD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP3"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP2"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "MLOAD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "ADD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP3"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP2"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "DUP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "MLOAD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "ADD"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP3"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP2"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "SWAP1"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 884,
									"end": 885,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 868,
									"end": 881,
									"name": "DUP1"
								},
								{
									"begin": 868,
									"end": 885,
									"name": "DUP2"
								},
								{
									"begin": 868,
									"end": 885,
									"name": "SWAP1"
								},
								{
									"begin": 868,
									"end": 885,
									"name": "SSTORE"
								},
								{
									"begin": 868,
									"end": 885,
									"name": "POP"
								},
								{
									"begin": 1674,
									"end": 1687,
									"name": "DUP2"
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1652,
									"end": 1664,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "EXP"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "DUP2"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "SLOAD"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "DUP2"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "MUL"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "NOT"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "AND"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "SWAP1"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "DUP4"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "AND"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "MUL"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "OR"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "SWAP1"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "SSTORE"
								},
								{
									"begin": 1652,
									"end": 1688,
									"name": "POP"
								},
								{
									"begin": 1721,
									"end": 1734,
									"name": "DUP1"
								},
								{
									"begin": 1699,
									"end": 1711,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1699,
									"end": 1711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "EXP"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "DUP2"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "SLOAD"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "DUP2"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "MUL"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "NOT"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "AND"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "SWAP1"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "DUP4"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "AND"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "MUL"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "OR"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "SWAP1"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "SSTORE"
								},
								{
									"begin": 1699,
									"end": 1735,
									"name": "POP"
								},
								{
									"begin": 1768,
									"end": 1788,
									"name": "DUP3"
								},
								{
									"begin": 1746,
									"end": 1765,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1746,
									"end": 1765,
									"name": "DUP1"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "EXP"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "DUP2"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "SLOAD"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "DUP2"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "MUL"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "NOT"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "AND"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "SWAP1"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "DUP4"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "AND"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "MUL"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "OR"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "SWAP1"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "SSTORE"
								},
								{
									"begin": 1746,
									"end": 1788,
									"name": "POP"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 1512,
									"end": 1796,
									"name": "POP"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "DUP1"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "CODECOPY"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 732,
									"end": 6612,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c63430005110032",
									".code": [
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "MSTORE"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "POP"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "LT"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "SHR"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "7B0A47EE"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "GT"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "CD3DAF9D"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "GT"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "CD3DAF9D"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "DF136D65"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "E9FAD8EE"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "EBE2B12B"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "ECD9BA82"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMP"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "7B0A47EE"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "80FAA57D"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "8B876347"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "A4C3B091"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "A694FC3A"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "C8F33C91"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMP"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "386A9525"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "GT"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "386A9525"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "3D18B912"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "3FC6DF6E"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "72F702F3"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMP"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "8CC262"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "700037D"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "1C1F78EB"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6612,
											"name": "REVERT"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP2"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "ADD"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "AND"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "ADD"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP3"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "JUMPDEST"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "MLOAD"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP3"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP2"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "MSTORE"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "ADD"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "MLOAD"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SUB"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "RETURN"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "JUMPDEST"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "AND"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP3"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "JUMPDEST"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "MLOAD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP3"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "MLOAD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SUB"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "RETURN"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "MLOAD"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "DUP3"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "MLOAD"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "DUP1"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "SWAP2"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "SUB"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "RETURN"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "JUMPDEST"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "JUMPDEST"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "MLOAD"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "DUP1"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "DUP3"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "DUP2"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "MSTORE"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "ADD"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "SWAP2"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "POP"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "POP"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "MLOAD"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "DUP1"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "SWAP2"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "SUB"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "SWAP1"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "RETURN"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "JUMPDEST"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "DUP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "DUP2"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "ADD"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "DUP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "DUP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "ADD"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SWAP3"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SWAP2"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "JUMPDEST"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "STOP"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "MLOAD"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "DUP3"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "DUP2"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "MSTORE"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "ADD"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "SWAP2"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "MLOAD"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "DUP1"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "SWAP2"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "SUB"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "RETURN"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "DUP2"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "DUP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "ADD"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SWAP3"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SWAP2"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "SWAP1"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "STOP"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "STOP"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP3"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "ADD"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "RETURN"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP2"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "AND"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP3"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "MLOAD"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP3"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP2"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "MSTORE"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "MLOAD"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "DUP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SUB"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "RETURN"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "MLOAD"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP1"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP3"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "AND"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "AND"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP2"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "MSTORE"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "ADD"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP2"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "POP"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "MLOAD"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP1"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP2"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SUB"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "RETURN"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "DUP3"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "MSTORE"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "ADD"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "SWAP2"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "POP"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "MLOAD"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "DUP1"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "SWAP2"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "SUB"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "RETURN"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "JUMPDEST"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "JUMPDEST"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "MLOAD"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "DUP1"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "DUP3"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "DUP2"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "MSTORE"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "ADD"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "SWAP2"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "POP"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "POP"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "MLOAD"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "DUP1"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "SWAP2"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "SUB"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "SWAP1"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "RETURN"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "AND"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP3"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "MLOAD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP3"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "ADD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "MLOAD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SUB"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "RETURN"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "JUMPDEST"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "DUP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "DUP2"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "ADD"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "DUP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "DUP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "AND"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "ADD"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP3"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "DUP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "ADD"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP3"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP2"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "SWAP1"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "JUMPDEST"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "STOP"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "JUMPDEST"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "DUP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "DUP2"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "ADD"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "DUP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "DUP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "ADD"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SWAP3"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SWAP2"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "SWAP1"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "POP"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "POP"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "POP"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "JUMPDEST"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "STOP"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "JUMPDEST"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "JUMPDEST"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "MLOAD"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "DUP1"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "DUP3"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "MSTORE"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "ADD"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "SWAP2"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "POP"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "MLOAD"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "DUP1"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "SWAP2"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "SUB"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "RETURN"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "MLOAD"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "DUP1"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "DUP3"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "DUP2"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "MSTORE"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "ADD"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "SWAP2"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "POP"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "POP"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "MLOAD"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "DUP1"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "SWAP2"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "SUB"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "RETURN"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "MLOAD"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DUP3"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "MSTORE"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "ADD"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "POP"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "MLOAD"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DUP1"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SUB"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "RETURN"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "MLOAD"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "DUP1"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "DUP3"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "DUP2"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "MSTORE"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "ADD"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "SWAP2"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "POP"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "POP"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "MLOAD"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "DUP1"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "SWAP2"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "SUB"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "SWAP1"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "RETURN"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "JUMPDEST"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "JUMPDEST"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "STOP"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "MLOAD"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP1"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP3"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "MSTORE"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "ADD"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SWAP2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "MLOAD"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP1"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SWAP2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SUB"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "RETURN"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "JUMPDEST"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP2"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "ADD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "ADD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP3"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP2"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "ADD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP3"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP2"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "AND"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "ADD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP3"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP2"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "ADD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP3"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP2"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "DUP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "ADD"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP3"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP2"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "SWAP1"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "JUMPDEST"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "STOP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "JUMPDEST"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2716,
											"end": 2723,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2724,
											"end": 2731,
											"name": "DUP5"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "AND"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "MSTORE"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "SWAP1"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "DUP2"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "MSTORE"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "ADD"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "KECCAK256"
										},
										{
											"begin": 2716,
											"end": 2732,
											"name": "SLOAD"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2706,
											"end": 2710,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2668,
											"end": 2690,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP10"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "AND"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "AND"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "DUP2"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "MSTORE"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "ADD"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "SWAP1"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "DUP2"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "MSTORE"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "ADD"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "KECCAK256"
										},
										{
											"begin": 2668,
											"end": 2699,
											"name": "SLOAD"
										},
										{
											"begin": 2647,
											"end": 2663,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2647,
											"end": 2661,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2647,
											"end": 2663,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2647,
											"end": 2663,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2647,
											"end": 2663,
											"name": "JUMPDEST"
										},
										{
											"begin": 2647,
											"end": 2667,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2647,
											"end": 2667,
											"name": "SWAP1"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "SWAP2"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "SWAP1"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "AND"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2647,
											"end": 2700,
											"name": "JUMPDEST"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2641,
											"name": "DUP10"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "AND"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "AND"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "MSTORE"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "ADD"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "MSTORE"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "ADD"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "KECCAK256"
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "SLOAD"
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2624,
											"end": 2646,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "SWAP2"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "AND"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2624,
											"end": 2701,
											"name": "JUMPDEST"
										},
										{
											"begin": 2624,
											"end": 2705,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2624,
											"end": 2705,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "SWAP2"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "AND"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2624,
											"end": 2711,
											"name": "JUMPDEST"
										},
										{
											"begin": 2624,
											"end": 2715,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2624,
											"end": 2715,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "SWAP2"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "SWAP1"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "AND"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2624,
											"end": 2733,
											"name": "JUMPDEST"
										},
										{
											"begin": 2617,
											"end": 2733,
											"name": "SWAP1"
										},
										{
											"begin": 2617,
											"end": 2733,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP2"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "SWAP1"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2543,
											"end": 2741,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "JUMPDEST"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "KECCAK256"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "POP"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "SLOAD"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1325,
											"end": 1367,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMPDEST"
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1930,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1918,
											"end": 1930,
											"name": "SLOAD"
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "SWAP1"
										},
										{
											"begin": 1911,
											"end": 1930,
											"name": "POP"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1938,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "JUMPDEST"
										},
										{
											"begin": 2804,
											"end": 2811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2846,
											"end": 2861,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2846,
											"end": 2861,
											"name": "SLOAD"
										},
										{
											"begin": 2831,
											"end": 2841,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2831,
											"end": 2841,
											"name": "SLOAD"
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2831,
											"end": 2845,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "SWAP2"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "AND"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 2831,
											"end": 2862,
											"name": "JUMPDEST"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "SWAP1"
										},
										{
											"begin": 2824,
											"end": 2862,
											"name": "POP"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "SWAP1"
										},
										{
											"begin": 2749,
											"end": 2870,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "POP"
										},
										{
											"begin": 3942,
											"end": 3952,
											"name": "CALLER"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 6090,
											"end": 6104,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMPDEST"
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "DUP2"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SWAP1"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SSTORE"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "POP"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 6134,
											"end": 6158,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMPDEST"
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "DUP2"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SWAP1"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SSTORE"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "EQ"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPI"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMPDEST"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP4"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "KECCAK256"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SSTORE"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "POP"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "SLOAD"
										},
										{
											"begin": 6262,
											"end": 6284,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP4"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "KECCAK256"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SSTORE"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "POP"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 3982,
											"end": 3983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3979,
											"name": "DUP4"
										},
										{
											"begin": 3973,
											"end": 3983,
											"name": "GT"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "JUMPI"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "MLOAD"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP3"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "SUB"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP3"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP2"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "MSTORE"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "ADD"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "SWAP2"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "POP"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "MLOAD"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "DUP1"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "SWAP2"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "SUB"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "SWAP1"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "REVERT"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3965,
											"end": 4005,
											"name": "JUMPDEST"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 4048,
											"end": 4054,
											"name": "DUP4"
										},
										{
											"begin": 4031,
											"end": 4043,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4031,
											"end": 4043,
											"name": "SLOAD"
										},
										{
											"begin": 4031,
											"end": 4047,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 4031,
											"end": 4047,
											"name": "SWAP1"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "SWAP2"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "SWAP1"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "AND"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 4031,
											"end": 4055,
											"name": "JUMPDEST"
										},
										{
											"begin": 4016,
											"end": 4028,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "DUP2"
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "SWAP1"
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "SSTORE"
										},
										{
											"begin": 4016,
											"end": 4055,
											"name": "POP"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 4116,
											"end": 4122,
											"name": "DUP4"
										},
										{
											"begin": 4090,
											"end": 4099,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "CALLER"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "AND"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "AND"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "DUP2"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "MSTORE"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "ADD"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "SWAP1"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "DUP2"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "MSTORE"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "ADD"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "KECCAK256"
										},
										{
											"begin": 4090,
											"end": 4111,
											"name": "SLOAD"
										},
										{
											"begin": 4090,
											"end": 4115,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 4090,
											"end": 4115,
											"name": "SWAP1"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "SWAP2"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "SWAP1"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "AND"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 4090,
											"end": 4123,
											"name": "JUMPDEST"
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "CALLER"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "AND"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "AND"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "DUP2"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "MSTORE"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "ADD"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "SWAP1"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "DUP2"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "MSTORE"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "ADD"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "KECCAK256"
										},
										{
											"begin": 4066,
											"end": 4123,
											"name": "DUP2"
										},
										{
											"begin": 4066,
											"end": 4123,
											"name": "SWAP1"
										},
										{
											"begin": 4066,
											"end": 4123,
											"name": "SSTORE"
										},
										{
											"begin": 4066,
											"end": 4123,
											"name": "POP"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 4160,
											"end": 4170,
											"name": "CALLER"
										},
										{
											"begin": 4172,
											"end": 4178,
											"name": "DUP5"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "SLOAD"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "EXP"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "DIV"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4134,
											"end": 4146,
											"name": "AND"
										},
										{
											"begin": 4134,
											"end": 4159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4134,
											"end": 4159,
											"name": "AND"
										},
										{
											"begin": 4134,
											"end": 4159,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 4134,
											"end": 4159,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "SWAP3"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "SWAP2"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "SWAP1"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "AND"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 4134,
											"end": 4179,
											"name": "JUMPDEST"
										},
										{
											"begin": 4205,
											"end": 4215,
											"name": "CALLER"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "AND"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "PUSH",
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 4217,
											"end": 4223,
											"name": "DUP5"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "MLOAD"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "DUP3"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "DUP2"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "MSTORE"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "ADD"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "POP"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "MLOAD"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "DUP1"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "SWAP2"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "SUB"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "SWAP1"
										},
										{
											"begin": 4195,
											"end": 4224,
											"name": "LOG2"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 3875,
											"end": 4232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "SLOAD"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "DUP2"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SLOAD"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "EXP"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "DIV"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 241,
											"name": "CALLER"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "EQ"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH data",
											"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "CODECOPY"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "REVERT"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 4814,
											"end": 4815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 6090,
											"end": 6104,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMPDEST"
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "DUP2"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SWAP1"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SSTORE"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "POP"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 6134,
											"end": 6158,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMPDEST"
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "DUP2"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SWAP1"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SSTORE"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "EQ"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPI"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMPDEST"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP4"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "KECCAK256"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SSTORE"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "POP"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "SLOAD"
										},
										{
											"begin": 6262,
											"end": 6284,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP4"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "KECCAK256"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SSTORE"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "POP"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 4852,
											"end": 4864,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4852,
											"end": 4864,
											"name": "SLOAD"
										},
										{
											"begin": 4833,
											"end": 4848,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4833,
											"end": 4864,
											"name": "LT"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "JUMPI"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 4905,
											"end": 4920,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4905,
											"end": 4920,
											"name": "SLOAD"
										},
										{
											"begin": 4894,
											"end": 4900,
											"name": "DUP4"
										},
										{
											"begin": 4894,
											"end": 4904,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 4894,
											"end": 4904,
											"name": "SWAP1"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "SWAP2"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "SWAP1"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "AND"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 4894,
											"end": 4921,
											"name": "JUMPDEST"
										},
										{
											"begin": 4881,
											"end": 4891,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4881,
											"end": 4921,
											"name": "DUP2"
										},
										{
											"begin": 4881,
											"end": 4921,
											"name": "SWAP1"
										},
										{
											"begin": 4881,
											"end": 4921,
											"name": "SSTORE"
										},
										{
											"begin": 4881,
											"end": 4921,
											"name": "POP"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "JUMP"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "JUMPDEST"
										},
										{
											"begin": 4954,
											"end": 4971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 4991,
											"end": 5006,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4974,
											"end": 4986,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4974,
											"end": 4986,
											"name": "SLOAD"
										},
										{
											"begin": 4974,
											"end": 4990,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 4974,
											"end": 4990,
											"name": "SWAP1"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "SWAP2"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "SWAP1"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "AND"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 4974,
											"end": 5007,
											"name": "JUMPDEST"
										},
										{
											"begin": 4954,
											"end": 5007,
											"name": "SWAP1"
										},
										{
											"begin": 4954,
											"end": 5007,
											"name": "POP"
										},
										{
											"begin": 5022,
											"end": 5038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5055,
											"end": 5065,
											"name": "SLOAD"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP4"
										},
										{
											"begin": 5041,
											"end": 5054,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 5041,
											"end": 5054,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "SWAP2"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "AND"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5041,
											"end": 5066,
											"name": "JUMPDEST"
										},
										{
											"begin": 5022,
											"end": 5066,
											"name": "SWAP1"
										},
										{
											"begin": 5022,
											"end": 5066,
											"name": "POP"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 5119,
											"end": 5134,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5119,
											"end": 5134,
											"name": "SLOAD"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5105,
											"end": 5113,
											"name": "DUP4"
										},
										{
											"begin": 5094,
											"end": 5100,
											"name": "DUP8"
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5094,
											"end": 5104,
											"name": "SWAP1"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "SWAP2"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "SWAP1"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "AND"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5094,
											"end": 5114,
											"name": "JUMPDEST"
										},
										{
											"begin": 5094,
											"end": 5118,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5094,
											"end": 5118,
											"name": "SWAP1"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "SWAP2"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "SWAP1"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "AND"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 5094,
											"end": 5135,
											"name": "JUMPDEST"
										},
										{
											"begin": 5081,
											"end": 5091,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5081,
											"end": 5135,
											"name": "DUP2"
										},
										{
											"begin": 5081,
											"end": 5135,
											"name": "SWAP1"
										},
										{
											"begin": 5081,
											"end": 5135,
											"name": "SSTORE"
										},
										{
											"begin": 5081,
											"end": 5135,
											"name": "POP"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "POP"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "POP"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 4829,
											"end": 5147,
											"name": "JUMPDEST"
										},
										{
											"begin": 5507,
											"end": 5519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "SLOAD"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "EXP"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "DIV"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5534,
											"name": "AND"
										},
										{
											"begin": 5522,
											"end": 5544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5544,
											"name": "AND"
										},
										{
											"begin": 5522,
											"end": 5544,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5553,
											"end": 5557,
											"name": "ADDRESS"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "MLOAD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP3"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "AND"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SHL"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP2"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "MSTORE"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "ADD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP3"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "AND"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "AND"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP2"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "MSTORE"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "ADD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP2"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "MLOAD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP4"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SUB"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP2"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP7"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "GAS"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "STATICCALL"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "MLOAD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP2"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "ADD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "DUP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "MLOAD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "ADD"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP3"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP2"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "SWAP1"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5522,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5507,
											"end": 5559,
											"name": "SWAP1"
										},
										{
											"begin": 5507,
											"end": 5559,
											"name": "POP"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5604,
											"end": 5619,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5604,
											"end": 5619,
											"name": "SLOAD"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP3"
										},
										{
											"begin": 5592,
											"end": 5603,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 5592,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "SWAP2"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "SWAP1"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "AND"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 5592,
											"end": 5620,
											"name": "JUMPDEST"
										},
										{
											"begin": 5578,
											"end": 5588,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5578,
											"end": 5588,
											"name": "SLOAD"
										},
										{
											"begin": 5578,
											"end": 5620,
											"name": "GT"
										},
										{
											"begin": 5578,
											"end": 5620,
											"name": "ISZERO"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "JUMPI"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "MLOAD"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP2"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "MSTORE"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "ADD"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP1"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP1"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "ADD"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP3"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP2"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "SUB"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP3"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "MSTORE"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP2"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "MSTORE"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "ADD"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP1"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP2"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "MSTORE"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "POP"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "ADD"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "SWAP2"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "POP"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "POP"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "MLOAD"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "DUP1"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "SWAP2"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "SUB"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "SWAP1"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "REVERT"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5570,
											"end": 5649,
											"name": "JUMPDEST"
										},
										{
											"begin": 5679,
											"end": 5694,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5662,
											"end": 5676,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5662,
											"end": 5694,
											"name": "DUP2"
										},
										{
											"begin": 5662,
											"end": 5694,
											"name": "SWAP1"
										},
										{
											"begin": 5662,
											"end": 5694,
											"name": "SSTORE"
										},
										{
											"begin": 5662,
											"end": 5694,
											"name": "POP"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5740,
											"end": 5755,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5740,
											"end": 5755,
											"name": "SLOAD"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5720,
											"end": 5739,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 5720,
											"end": 5739,
											"name": "SWAP1"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "SWAP2"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "SWAP1"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "AND"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5720,
											"end": 5756,
											"name": "JUMPDEST"
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5756,
											"name": "DUP2"
										},
										{
											"begin": 5705,
											"end": 5756,
											"name": "SWAP1"
										},
										{
											"begin": 5705,
											"end": 5756,
											"name": "SSTORE"
										},
										{
											"begin": 5705,
											"end": 5756,
											"name": "POP"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "PUSH",
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 5784,
											"end": 5790,
											"name": "DUP4"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "MLOAD"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "DUP1"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "DUP3"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "DUP2"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "MSTORE"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "ADD"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "SWAP2"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "POP"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "POP"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "MLOAD"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "DUP1"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "SWAP2"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "SUB"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "SWAP1"
										},
										{
											"begin": 5772,
											"end": 5791,
											"name": "LOG1"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "POP"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "POP"
										},
										{
											"begin": 4716,
											"end": 5799,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "POP"
										},
										{
											"begin": 4294,
											"end": 4304,
											"name": "CALLER"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 6090,
											"end": 6104,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMPDEST"
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "DUP2"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SWAP1"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SSTORE"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "POP"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 6134,
											"end": 6158,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMPDEST"
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "DUP2"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SWAP1"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SSTORE"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "EQ"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPI"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMPDEST"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP4"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "KECCAK256"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SSTORE"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "POP"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "SLOAD"
										},
										{
											"begin": 6262,
											"end": 6284,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP4"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "KECCAK256"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SSTORE"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "POP"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 4317,
											"end": 4331,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4352,
											"name": "CALLER"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "AND"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "AND"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "DUP2"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "MSTORE"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "ADD"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "SWAP1"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "DUP2"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "MSTORE"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "ADD"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "KECCAK256"
										},
										{
											"begin": 4334,
											"end": 4353,
											"name": "SLOAD"
										},
										{
											"begin": 4317,
											"end": 4353,
											"name": "SWAP1"
										},
										{
											"begin": 4317,
											"end": 4353,
											"name": "POP"
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP2"
										},
										{
											"begin": 4368,
											"end": 4378,
											"name": "GT"
										},
										{
											"begin": 4364,
											"end": 4540,
											"name": "ISZERO"
										},
										{
											"begin": 4364,
											"end": 4540,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 4364,
											"end": 4540,
											"name": "JUMPI"
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4402,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4413,
											"name": "CALLER"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "AND"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "AND"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "DUP2"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "MSTORE"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "ADD"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "SWAP1"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "DUP2"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "MSTORE"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "ADD"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4414,
											"name": "KECCAK256"
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "DUP2"
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "SWAP1"
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "SSTORE"
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "POP"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 4459,
											"end": 4469,
											"name": "CALLER"
										},
										{
											"begin": 4471,
											"end": 4477,
											"name": "DUP3"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "SWAP1"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "SLOAD"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "SWAP1"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "EXP"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "SWAP1"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "DIV"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4433,
											"end": 4445,
											"name": "AND"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "AND"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "SWAP1"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "SWAP3"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "SWAP2"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "SWAP1"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "AND"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 4433,
											"end": 4478,
											"name": "JUMPDEST"
										},
										{
											"begin": 4509,
											"end": 4519,
											"name": "CALLER"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "AND"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "PUSH",
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP3"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "MLOAD"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "DUP1"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "DUP3"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "DUP2"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "MSTORE"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "ADD"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "SWAP2"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "POP"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "POP"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "MLOAD"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "DUP1"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "SWAP2"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "SUB"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "SWAP1"
										},
										{
											"begin": 4498,
											"end": 4528,
											"name": "LOG2"
										},
										{
											"begin": 4364,
											"end": 4540,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 4364,
											"end": 4540,
											"name": "JUMPDEST"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "POP"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "POP"
										},
										{
											"begin": 4240,
											"end": 4547,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SLOAD"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "EXP"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DIV"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "JUMPDEST"
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2049,
											"name": "DUP4"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MSTORE"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "MSTORE"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "KECCAK256"
										},
										{
											"begin": 2032,
											"end": 2050,
											"name": "SLOAD"
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "SWAP1"
										},
										{
											"begin": 2025,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP2"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "POP"
										},
										{
											"begin": 1946,
											"end": 2058,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SLOAD"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "EXP"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DIV"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "AND"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP2"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "SLOAD"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "JUMPDEST"
										},
										{
											"begin": 2123,
											"end": 2130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2189,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 2159,
											"end": 2174,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2188,
											"name": "SLOAD"
										},
										{
											"begin": 2150,
											"end": 2158,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 2150,
											"end": 2189,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2189,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 2150,
											"end": 2189,
											"name": "JUMPDEST"
										},
										{
											"begin": 2143,
											"end": 2189,
											"name": "SWAP1"
										},
										{
											"begin": 2143,
											"end": 2189,
											"name": "POP"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "SWAP1"
										},
										{
											"begin": 2066,
											"end": 2197,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "JUMPDEST"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "MSTORE"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "KECCAK256"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SWAP1"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "POP"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "SLOAD"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "DUP2"
										},
										{
											"begin": 1261,
											"end": 1318,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "DUP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SLOAD"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "EXP"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SWAP1"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "DIV"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 241,
											"name": "CALLER"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "EQ"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH data",
											"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "CODECOPY"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "REVERT"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 5921,
											"end": 5926,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5936,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5936,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5936,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 5937,
											"end": 5947,
											"name": "CALLER"
										},
										{
											"begin": 5949,
											"end": 5955,
											"name": "DUP4"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MLOAD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP4"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SHL"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MSTORE"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP4"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "AND"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MSTORE"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP3"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MSTORE"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP3"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MLOAD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP4"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SUB"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP8"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "GAS"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "CALL"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MLOAD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP2"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "DUP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "MLOAD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "ADD"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP3"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP2"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "SWAP1"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5914,
											"end": 5956,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "POP"
										},
										{
											"begin": 5807,
											"end": 5964,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "POP"
										},
										{
											"begin": 3564,
											"end": 3574,
											"name": "CALLER"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 6090,
											"end": 6104,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMPDEST"
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "DUP2"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SWAP1"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SSTORE"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "POP"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 6134,
											"end": 6158,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMPDEST"
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "DUP2"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SWAP1"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SSTORE"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "EQ"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPI"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMPDEST"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP4"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "KECCAK256"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SSTORE"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "POP"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "SLOAD"
										},
										{
											"begin": 6262,
											"end": 6284,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP4"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "KECCAK256"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SSTORE"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "POP"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 3604,
											"end": 3605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP4"
										},
										{
											"begin": 3595,
											"end": 3605,
											"name": "GT"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "JUMPI"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "MLOAD"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP2"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "MSTORE"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP3"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP2"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "SUB"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP3"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "MSTORE"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP2"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "MSTORE"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP2"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "MSTORE"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "ADD"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "POP"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "MLOAD"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "DUP1"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "SWAP2"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "SUB"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "SWAP1"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "REVERT"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 3587,
											"end": 3624,
											"name": "JUMPDEST"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "DUP4"
										},
										{
											"begin": 3650,
											"end": 3662,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3650,
											"end": 3662,
											"name": "SLOAD"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3650,
											"end": 3666,
											"name": "SWAP1"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "SWAP2"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "SWAP1"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "AND"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 3650,
											"end": 3674,
											"name": "JUMPDEST"
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3635,
											"end": 3674,
											"name": "DUP2"
										},
										{
											"begin": 3635,
											"end": 3674,
											"name": "SWAP1"
										},
										{
											"begin": 3635,
											"end": 3674,
											"name": "SSTORE"
										},
										{
											"begin": 3635,
											"end": 3674,
											"name": "POP"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 3735,
											"end": 3741,
											"name": "DUP4"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3729,
											"name": "CALLER"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "AND"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "AND"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "DUP2"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "MSTORE"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "ADD"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "KECCAK256"
										},
										{
											"begin": 3709,
											"end": 3730,
											"name": "SLOAD"
										},
										{
											"begin": 3709,
											"end": 3734,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3709,
											"end": 3734,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "AND"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 3709,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3705,
											"name": "CALLER"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "AND"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "AND"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "SWAP1"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "MSTORE"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "ADD"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3706,
											"name": "KECCAK256"
										},
										{
											"begin": 3685,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 3685,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 3685,
											"end": 3742,
											"name": "SSTORE"
										},
										{
											"begin": 3685,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 3783,
											"end": 3793,
											"name": "CALLER"
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "ADDRESS"
										},
										{
											"begin": 3810,
											"end": 3816,
											"name": "DUP6"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "SLOAD"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "EXP"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "DIV"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "AND"
										},
										{
											"begin": 3753,
											"end": 3782,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3753,
											"end": 3782,
											"name": "AND"
										},
										{
											"begin": 3753,
											"end": 3782,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 3753,
											"end": 3782,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "SWAP4"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "SWAP3"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "SWAP2"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "AND"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 3753,
											"end": 3817,
											"name": "JUMPDEST"
										},
										{
											"begin": 3840,
											"end": 3850,
											"name": "CALLER"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "AND"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3852,
											"end": 3858,
											"name": "DUP5"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "MLOAD"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "DUP1"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "DUP3"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "DUP2"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "MSTORE"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "ADD"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SWAP2"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "POP"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "POP"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "MLOAD"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "DUP1"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SWAP2"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SUB"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SWAP1"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "LOG2"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "POP"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "POP"
										},
										{
											"begin": 3498,
											"end": 3867,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "JUMPDEST"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "DUP2"
										},
										{
											"begin": 1181,
											"end": 1210,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "JUMPDEST"
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "DUP1"
										},
										{
											"begin": 2276,
											"end": 2288,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2276,
											"end": 2288,
											"name": "SLOAD"
										},
										{
											"begin": 2276,
											"end": 2293,
											"name": "EQ"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "ISZERO"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "JUMPI"
										},
										{
											"begin": 2317,
											"end": 2337,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2317,
											"end": 2337,
											"name": "SLOAD"
										},
										{
											"begin": 2310,
											"end": 2337,
											"name": "SWAP1"
										},
										{
											"begin": 2310,
											"end": 2337,
											"name": "POP"
										},
										{
											"begin": 2310,
											"end": 2337,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2310,
											"end": 2337,
											"name": "JUMP"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "JUMPDEST"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2499,
											"end": 2511,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2499,
											"end": 2511,
											"name": "SLOAD"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 2489,
											"end": 2493,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "SLOAD"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 2453,
											"end": 2467,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2453,
											"end": 2467,
											"name": "SLOAD"
										},
										{
											"begin": 2422,
											"end": 2448,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2422,
											"end": 2448,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2448,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 2422,
											"end": 2448,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2452,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2422,
											"end": 2452,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "SWAP2"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "AND"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 2422,
											"end": 2468,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2422,
											"end": 2472,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "SWAP2"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "AND"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 2422,
											"end": 2484,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2488,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2422,
											"end": 2488,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "SWAP2"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "AND"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 2422,
											"end": 2494,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2498,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2422,
											"end": 2498,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "SWAP2"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "SWAP1"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "AND"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2422,
											"end": 2512,
											"name": "JUMPDEST"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2379,
											"end": 2399,
											"name": "SLOAD"
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2379,
											"end": 2403,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "SWAP2"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 2379,
											"end": 2527,
											"name": "JUMPDEST"
										},
										{
											"begin": 2359,
											"end": 2527,
											"name": "SWAP1"
										},
										{
											"begin": 2359,
											"end": 2527,
											"name": "POP"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "JUMPDEST"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "SWAP1"
										},
										{
											"begin": 2205,
											"end": 2535,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SLOAD"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "EXP"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DIV"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "SLOAD"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "DUP2"
										},
										{
											"begin": 1217,
											"end": 1252,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "JUMPDEST"
										},
										{
											"begin": 4591,
											"end": 4622,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4620,
											"name": "CALLER"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "AND"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "DUP2"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "MSTORE"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "ADD"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "SWAP1"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "DUP2"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "MSTORE"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "ADD"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "KECCAK256"
										},
										{
											"begin": 4600,
											"end": 4621,
											"name": "SLOAD"
										},
										{
											"begin": 4591,
											"end": 4599,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 4591,
											"end": 4622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4591,
											"end": 4622,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 4591,
											"end": 4622,
											"name": "JUMPDEST"
										},
										{
											"begin": 4633,
											"end": 4644,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 4633,
											"end": 4642,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 4633,
											"end": 4644,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4633,
											"end": 4644,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 4633,
											"end": 4644,
											"name": "JUMPDEST"
										},
										{
											"begin": 4555,
											"end": 4652,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SLOAD"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP3"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "POP"
										},
										{
											"begin": 1329,
											"end": 1349,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1365,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1365,
											"name": "POP"
										},
										{
											"begin": 3054,
											"end": 3064,
											"name": "CALLER"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 6090,
											"end": 6104,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 6090,
											"end": 6106,
											"name": "JUMPDEST"
										},
										{
											"begin": 6067,
											"end": 6087,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "DUP2"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SWAP1"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "SSTORE"
										},
										{
											"begin": 6067,
											"end": 6106,
											"name": "POP"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 6134,
											"end": 6158,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 6134,
											"end": 6160,
											"name": "JUMPDEST"
										},
										{
											"begin": 6117,
											"end": 6131,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "DUP2"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SWAP1"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "SSTORE"
										},
										{
											"begin": 6117,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP2"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "AND"
										},
										{
											"begin": 6175,
											"end": 6196,
											"name": "EQ"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPI"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 6239,
											"end": 6246,
											"name": "DUP2"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "JUMPDEST"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6228,
											"name": "DUP4"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "AND"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "MSTORE"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "ADD"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6229,
											"name": "KECCAK256"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SWAP1"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SSTORE"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "POP"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6296,
											"end": 6316,
											"name": "SLOAD"
										},
										{
											"begin": 6262,
											"end": 6284,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6292,
											"name": "DUP4"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "AND"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "MSTORE"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "ADD"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6293,
											"name": "KECCAK256"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "DUP2"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SWAP1"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "SSTORE"
										},
										{
											"begin": 6262,
											"end": 6316,
											"name": "POP"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 6171,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 3094,
											"end": 3095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP8"
										},
										{
											"begin": 3085,
											"end": 3095,
											"name": "GT"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "JUMPI"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "MLOAD"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP2"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "MSTORE"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "ADD"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP1"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP1"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "ADD"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP3"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP2"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "SUB"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP3"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "MSTORE"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP2"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "MSTORE"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "ADD"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP1"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP2"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "MSTORE"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "POP"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "ADD"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "SWAP2"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "POP"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "POP"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "MLOAD"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "DUP1"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "SWAP2"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "SUB"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "SWAP1"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "REVERT"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "JUMPDEST"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP8"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3140,
											"end": 3152,
											"name": "SLOAD"
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "SWAP2"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "AND"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 3140,
											"end": 3164,
											"name": "JUMPDEST"
										},
										{
											"begin": 3125,
											"end": 3137,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3125,
											"end": 3164,
											"name": "DUP2"
										},
										{
											"begin": 3125,
											"end": 3164,
											"name": "SWAP1"
										},
										{
											"begin": 3125,
											"end": 3164,
											"name": "SSTORE"
										},
										{
											"begin": 3125,
											"end": 3164,
											"name": "POP"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP8"
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3219,
											"name": "CALLER"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "AND"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "AND"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "DUP2"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "MSTORE"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "ADD"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "DUP2"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "MSTORE"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "ADD"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "KECCAK256"
										},
										{
											"begin": 3199,
											"end": 3220,
											"name": "SLOAD"
										},
										{
											"begin": 3199,
											"end": 3224,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 3199,
											"end": 3224,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "SWAP2"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "AND"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 3199,
											"end": 3232,
											"name": "JUMPDEST"
										},
										{
											"begin": 3175,
											"end": 3184,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3195,
											"name": "CALLER"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "AND"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "AND"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "SWAP1"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3196,
											"name": "KECCAK256"
										},
										{
											"begin": 3175,
											"end": 3232,
											"name": "DUP2"
										},
										{
											"begin": 3175,
											"end": 3232,
											"name": "SWAP1"
										},
										{
											"begin": 3175,
											"end": 3232,
											"name": "SSTORE"
										},
										{
											"begin": 3175,
											"end": 3232,
											"name": "POP"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "SLOAD"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "EXP"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "DIV"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3309,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3309,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3309,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 3310,
											"end": 3320,
											"name": "CALLER"
										},
										{
											"begin": 3330,
											"end": 3334,
											"name": "ADDRESS"
										},
										{
											"begin": 3337,
											"end": 3343,
											"name": "DUP11"
										},
										{
											"begin": 3345,
											"end": 3353,
											"name": "DUP11"
										},
										{
											"begin": 3355,
											"end": 3356,
											"name": "DUP11"
										},
										{
											"begin": 3358,
											"end": 3359,
											"name": "DUP11"
										},
										{
											"begin": 3361,
											"end": 3362,
											"name": "DUP11"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MLOAD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP9"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "SHL"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP1"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP9"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP8"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP7"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP6"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP5"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "AND"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP4"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP3"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MSTORE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ADD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "SWAP8"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "MLOAD"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP1"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP4"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "SUB"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP2"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP8"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "DUP1"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "GAS"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "CALL"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3264,
											"end": 3363,
											"name": "POP"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 3406,
											"end": 3416,
											"name": "CALLER"
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS"
										},
										{
											"begin": 3433,
											"end": 3439,
											"name": "DUP10"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "SLOAD"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "EXP"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "DIV"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "AND"
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "AND"
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 3376,
											"end": 3405,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "SWAP4"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "SWAP3"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "SWAP2"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "SWAP1"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "AND"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 3376,
											"end": 3440,
											"name": "JUMPDEST"
										},
										{
											"begin": 3463,
											"end": 3473,
											"name": "CALLER"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "PUSH",
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "DUP9"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "DUP3"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "DUP2"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "MSTORE"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "ADD"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "POP"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "MLOAD"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "DUP1"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "SWAP2"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "SUB"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "SWAP1"
										},
										{
											"begin": 3456,
											"end": 3482,
											"name": "LOG2"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "POP"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "POP"
										},
										{
											"begin": 2932,
											"end": 3490,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1419,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP3"
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "DUP5"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SUB"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1410,
											"end": 1427,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP1"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "SWAP2"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1438,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "JUMPDEST"
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "DUP1"
										},
										{
											"begin": 1992,
											"end": 1993,
											"name": "DUP4"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "EQ"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "ISZERO"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "JUMPI"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "SWAP1"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "POP"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "JUMP"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "JUMPDEST"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP5"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "MUL"
										},
										{
											"begin": 2043,
											"end": 2060,
											"name": "SWAP1"
										},
										{
											"begin": 2043,
											"end": 2060,
											"name": "POP"
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "DUP3"
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "DUP5"
										},
										{
											"begin": 2078,
											"end": 2079,
											"name": "DUP3"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP2"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "JUMPI"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "INVALID"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DIV"
										},
										{
											"begin": 2078,
											"end": 2088,
											"name": "EQ"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "JUMPI"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MLOAD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MSTORE"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP3"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SUB"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP3"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MSTORE"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MSTORE"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "CODECOPY"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "POP"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "POP"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MLOAD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SUB"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "REVERT"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "JUMPDEST"
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "DUP1"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "SWAP2"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "POP"
										},
										{
											"begin": 2137,
											"end": 2145,
											"name": "POP"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "JUMPDEST"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "SWAP3"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "SWAP2"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "POP"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "POP"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "JUMPDEST"
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP3"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "GT"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "JUMPI"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MLOAD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP3"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SUB"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP3"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "POP"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "POP"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "POP"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MLOAD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SUB"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "REVERT"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "JUMPDEST"
										},
										{
											"begin": 2804,
											"end": 2813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP3"
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "DUP5"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "JUMPI"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "INVALID"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "JUMPDEST"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DIV"
										},
										{
											"begin": 2804,
											"end": 2821,
											"name": "SWAP1"
										},
										{
											"begin": 2804,
											"end": 2821,
											"name": "POP"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP1"
										},
										{
											"begin": 2918,
											"end": 2926,
											"name": "SWAP2"
										},
										{
											"begin": 2918,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2918,
											"end": 2926,
											"name": "POP"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "SWAP3"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "SWAP2"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "POP"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP5"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SHL"
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP5"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP4"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "NOT"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 443,
											"name": "DUP4"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "LT"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMPI"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMP"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMPDEST"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "DUP3"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "SWAP3"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 961,
											"end": 966,
											"name": "DUP5"
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP6"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "SWAP1"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "SHL"
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "DUP6"
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "DUP6"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "DUP6"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP5"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP4"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP4"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "NOT"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "JUMPDEST"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 3224,
											"end": 3229,
											"name": "DUP3"
										},
										{
											"begin": 3216,
											"end": 3241,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3216,
											"end": 3241,
											"name": "AND"
										},
										{
											"begin": 3216,
											"end": 3241,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "JUMPDEST"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "JUMPI"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MLOAD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP3"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SUB"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP3"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "POP"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "POP"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "POP"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MLOAD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SUB"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "REVERT"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "JUMPDEST"
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3387,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3399,
											"end": 3404,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "AND"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "MLOAD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP3"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "MLOAD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "ADD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "ADD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "MLOAD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SUB"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP2"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP7"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "GAS"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "CALL"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3434,
											"end": 3441,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "JUMPI"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MLOAD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP3"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SUB"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP3"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "POP"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "POP"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "POP"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MLOAD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SUB"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "REVERT"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "JUMPDEST"
										},
										{
											"begin": 3513,
											"end": 3514,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3503,
											"name": "DUP2"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3514,
											"name": "GT"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "ISZERO"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "JUMPI"
										},
										{
											"begin": 3633,
											"end": 3643,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "DUP2"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "MLOAD"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP3"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP2"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "POP"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "POP"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "POP"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "JUMPI"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MLOAD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SUB"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "CODECOPY"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "POP"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "POP"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MLOAD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SUB"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "REVERT"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "JUMPDEST"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "JUMPDEST"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "POP"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "JUMPDEST"
										},
										{
											"begin": 602,
											"end": 606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 805,
											"end": 817,
											"name": "DUP1"
										},
										{
											"begin": 914,
											"end": 921,
											"name": "DUP3"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 894,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 894,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 940,
											"end": 944,
											"name": "DUP2"
										},
										{
											"begin": 940,
											"end": 948,
											"name": "GT"
										},
										{
											"begin": 933,
											"end": 948,
											"name": "SWAP2"
										},
										{
											"begin": 933,
											"end": 948,
											"name": "POP"
										},
										{
											"begin": 933,
											"end": 948,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "SWAP2"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"emergencyWithdrawToken(address,uint256)": "a4c3b091",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"periodFinish()": "ebe2b12b",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)": "ecd9ba82",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"stakeWithPermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]},\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]},\"liquidity-staker/StakingRewards.sol\":{\"keccak256\":\"0xddb23f2f6524b37083b38a40d3f4c0eab25f87d59230578380636c374c6725a4\",\"urls\":[\"bzz-raw://85f2e3a4d0457cb11c0f069172fc4c5d619f0b1cd405eb9866f3a0a12cd733b0\",\"dweb:/ipfs/QmfLoLk2zKaBqjdzQf4zSjEjQRRRNasJA4ZqaJvEoY8rvF\"]},\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 681,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 754,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)439"
							},
							{
								"astId": 756,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)439"
							},
							{
								"astId": 759,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 762,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 765,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 767,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 769,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 773,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 777,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 779,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 783,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)439": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"liquidity-staker/StakingRewardsFactory.sol": {
				"StakingRewardsFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardsGenesis",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "deploy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "notifyRewardAmounts",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stakingRewardsGenesis",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingRewardsInfoByStakingToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "stakingRewards",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakingTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":666:676  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:663  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:676  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":724:730  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":691:731  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":720:721  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":691:731  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":997:1012  block.timestamp */\n  timestamp\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":971:993  _stakingRewardsGenesis */\n  dup2\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":971:1012  _stakingRewardsGenesis >= block.timestamp */\n  lt\n  iszero\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":963:1069  require(_stakingRewardsGenesis >= block.timestamp, 'StakingRewardsFactory::constructor: genesis too soon') */\n  tag_7\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x34\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515\n  0x34\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1097:1110  _rewardsToken */\n  dup2\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1082:1094  rewardsToken */\n  0x01\n  0x00\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1082:1110  rewardsToken = _rewardsToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1145:1167  _stakingRewardsGenesis */\n  dup1\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1121:1142  stakingRewardsGenesis */\n  0x02\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1121:1167  stakingRewardsGenesis = _stakingRewardsGenesis */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  pop\n  pop\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515 5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e\n\nsub_0: assembly {\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa0928c11\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xae741d8d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x344e5e34\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4956eaf0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6cf8caf8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x81e16298\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":521:551  address[] public stakingTokens */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":521:551  address[] public stakingTokens */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":759:837  mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":759:837  mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1599:1736  function renounceOwnership() public onlyOwner {... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":814:891  function owner() public view returns (address) {... */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1165:1255  function isOwner() public view returns (bool) {... */\n    tag_9:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":403:436  uint public stakingRewardsGenesis */\n    tag_10:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2004:2288  function notifyRewardAmounts() public {\r... */\n    tag_11:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      stop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":369:396  address public rewardsToken */\n    tag_12:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_13:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":521:551  address[] public stakingTokens */\n    tag_17:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1025  isOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1010:1064  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1493:1524  StakingRewardsInfo storage info */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1559  stakingRewardsInfoByStakingToken */\n      0x04\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1573  stakingRewardsInfoByStakingToken[stakingToken] */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1560:1572  stakingToken */\n      dup5\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1573  stakingRewardsInfoByStakingToken[stakingToken] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1493:1573  StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken] */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1623:1624  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1625  info.stakingRewards == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1596  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1611  info.stakingRewards */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1625  info.stakingRewards == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1584:1677  require(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed') */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1773:1777  this */\n      address\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1780:1792  rewardsToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1794:1806  stakingToken */\n      dup5\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1720:1807  new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken) */\n      mload(0x40)\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1720:1807  new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken) */\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1690:1694  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1690:1709  info.stakingRewards */\n      0x00\n      add\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1690:1808  info.stakingRewards = address(new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1839:1851  rewardAmount */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1819:1823  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1819:1836  info.rewardAmount */\n      0x01\n      add\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1819:1851  info.rewardAmount = rewardAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1862:1875  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1881:1893  stakingToken */\n      dup4\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1862:1894  stakingTokens.push(stakingToken) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1862:1894  stakingTokens.push(stakingToken) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1074:1075  _ */\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":759:837  mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken */\n    tag_23:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1599:1736  function renounceOwnership() public onlyOwner {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1025  isOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      jump\t// in\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1010:1064  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1697:1698  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1660:1700  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1681:1687  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1660:1700  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1727:1728  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1710:1729  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1599:1736  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n    tag_28:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2557:2578  stakingRewardsGenesis */\n      sload(0x02)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2538:2553  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2538:2578  block.timestamp >= stakingRewardsGenesis */\n      lt\n      iszero\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2530:2635  require(block.timestamp >= stakingRewardsGenesis, 'StakingRewardsFactory::notifyRewardAmount: not ready') */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2648:2679  StakingRewardsInfo storage info */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2714  stakingRewardsInfoByStakingToken */\n      0x04\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2728  stakingRewardsInfoByStakingToken[stakingToken] */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2715:2727  stakingToken */\n      dup4\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2728  stakingRewardsInfoByStakingToken[stakingToken] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2648:2728  StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken] */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2778:2779  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2747:2780  info.stakingRewards != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2747:2751  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2747:2766  info.stakingRewards */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2747:2780  info.stakingRewards != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2739:2840  require(info.stakingRewards != address(0), 'StakingRewardsFactory::notifyRewardAmount: not deployed') */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x37\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427\n      0x37\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2877:2878  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2857:2861  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2857:2874  info.rewardAmount */\n      0x01\n      add\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2857:2878  info.rewardAmount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2853:3264  if (info.rewardAmount > 0) {\r... */\n      iszero\n      tag_60\n      jumpi\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2895:2912  uint rewardAmount */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2915:2919  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2915:2932  info.rewardAmount */\n      0x01\n      add\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2895:2932  uint rewardAmount = info.rewardAmount */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2967:2968  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2947:2951  info */\n      dup3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2947:2964  info.rewardAmount */\n      0x01\n      add\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2947:2968  info.rewardAmount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3018:3030  rewardsToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3040  IERC20(rewardsToken).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3041:3045  info */\n      dup4\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3041:3060  info.stakingRewards */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3062:3074  rewardAmount */\n      dup4\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2985:3169  require(\r... */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3199:3203  info */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3199:3218  info.stakingRewards */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3238  StakingRewards(info.stakingRewards).notifyRewardAmount */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3c6b16ab\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3239:3251  rewardAmount */\n      dup3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_66:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      pop\n      pop\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2853:3264  if (info.rewardAmount > 0) {\r... */\n      pop\n    tag_60:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":814:891  function owner() public view returns (address) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":852:859  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":878:884  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":871:884  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":814:891  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1165:1255  function isOwner() public view returns (bool) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1205:1209  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1242:1248  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1228:1248  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1228:1238  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1228:1248  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1221:1248  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1165:1255  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":403:436  uint public stakingRewardsGenesis */\n    tag_34:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2004:2288  function notifyRewardAmounts() public {\r... */\n    tag_36:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2084:2085  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2061:2074  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2061:2081  stakingTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2061:2085  stakingTokens.length > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2053:2159  require(stakingTokens.length > 0, 'StakingRewardsFactory::notifyRewardAmounts: called before any deploys') */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x45\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb\n      0x45\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2175:2181  uint i */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2184:2185  0 */\n      dup1\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2175:2185  uint i = 0 */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2170:2281  for (uint i = 0; i < stakingTokens.length; i++) {\r... */\n    tag_71:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2191:2204  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2191:2211  stakingTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2187:2188  i */\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2187:2211  i < stakingTokens.length */\n      lt\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2170:2281  for (uint i = 0; i < stakingTokens.length; i++) {\r... */\n      iszero\n      tag_72\n      jumpi\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2233:2269  notifyRewardAmount(stakingTokens[i]) */\n      tag_74\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2252:2265  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2266:2267  i */\n      dup3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2252:2268  stakingTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      invalid\n    tag_75:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2233:2251  notifyRewardAmount */\n      tag_28\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2233:2269  notifyRewardAmount(stakingTokens[i]) */\n      jump\t// in\n    tag_74:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2213:2216  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2170:2281  for (uint i = 0; i < stakingTokens.length; i++) {\r... */\n      jump(tag_71)\n    tag_72:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2004:2288  function notifyRewardAmounts() public {\r... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":369:396  address public rewardsToken */\n    tag_38:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1025  isOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1010:1064  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1957:1985  _transferOwnership(newOwner) */\n      tag_81\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1976:1984  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1957:1975  _transferOwnership */\n      tag_82\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1957:1985  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_81:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2093:2318  function _transferOwnership(address newOwner) internal {... */\n    tag_82:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2186:2187  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2166:2188  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2166:2174  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2166:2188  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2158:2231  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2275:2283  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2246:2284  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2267:2273  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2246:2284  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2303:2311  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2294:2300  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2294:2311  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2093:2318  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n    tag_50:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a 5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564\n    data_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973\n    data_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c6564\n    data_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74207265616479\n    data_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564\n\n    sub_0: assembly {\n            /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n          mstore(0x40, 0x80)\n            /* \"liquidity-staker/StakingRewards.sol\":1044:1045  0 */\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n          0x04\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1080:1081  0 */\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n          0x05\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1121:1128  30 days */\n          0x278d00\n            /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n          0x06\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n          callvalue\n            /* \"--CODEGEN--\":8:17   */\n          dup1\n            /* \"--CODEGEN--\":5:7   */\n          iszero\n          tag_1\n          jumpi\n            /* \"--CODEGEN--\":30:31   */\n          0x00\n            /* \"--CODEGEN--\":27:28   */\n          dup1\n            /* \"--CODEGEN--\":20:32   */\n          revert\n            /* \"--CODEGEN--\":5:7   */\n        tag_1:\n            /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          dup2\n          add\n          0x40\n          mstore\n            /* \"--CODEGEN--\":13:15   */\n          0x60\n            /* \"--CODEGEN--\":8:11   */\n          dup2\n            /* \"--CODEGEN--\":5:16   */\n          lt\n            /* \"--CODEGEN--\":2:4   */\n          iszero\n          tag_2\n          jumpi\n            /* \"--CODEGEN--\":29:30   */\n          0x00\n            /* \"--CODEGEN--\":26:27   */\n          dup1\n            /* \"--CODEGEN--\":19:31   */\n          revert\n            /* \"--CODEGEN--\":2:4   */\n        tag_2:\n            /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n          dup2\n          add\n          swap1\n          dup1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap3\n          swap2\n          swap1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap3\n          swap2\n          swap1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap3\n          swap2\n          swap1\n          pop\n          pop\n          pop\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":884:885  1 */\n          0x01\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":868:881  _guardCounter */\n          dup1\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":868:885  _guardCounter = 1 */\n          dup2\n          swap1\n          sstore\n          pop\n            /* \"liquidity-staker/StakingRewards.sol\":1674:1687  _rewardsToken */\n          dup2\n            /* \"liquidity-staker/StakingRewards.sol\":1652:1664  rewardsToken */\n          0x02\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1652:1688  rewardsToken = IERC20(_rewardsToken) */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"liquidity-staker/StakingRewards.sol\":1721:1734  _stakingToken */\n          dup1\n            /* \"liquidity-staker/StakingRewards.sol\":1699:1711  stakingToken */\n          0x03\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1699:1735  stakingToken = IERC20(_stakingToken) */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"liquidity-staker/StakingRewards.sol\":1768:1788  _rewardsDistribution */\n          dup3\n            /* \"liquidity-staker/StakingRewards.sol\":1746:1765  rewardsDistribution */\n          0x00\n          dup1\n            /* \"liquidity-staker/StakingRewards.sol\":1746:1788  rewardsDistribution = _rewardsDistribution */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"liquidity-staker/StakingRewards.sol\":1512:1796  constructor(\r... */\n          pop\n          pop\n          pop\n            /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n          dataSize(sub_0)\n          dup1\n          dataOffset(sub_0)\n          0x00\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n              mstore(0x40, 0x80)\n              callvalue\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_1\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_1:\n                /* \"liquidity-staker/StakingRewards.sol\":732:6612  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x7b0a47ee\n              gt\n              tag_26\n              jumpi\n              dup1\n              0xcd3daf9d\n              gt\n              tag_27\n              jumpi\n              dup1\n              0xcd3daf9d\n              eq\n              tag_20\n              jumpi\n              dup1\n              0xd1af0c7d\n              eq\n              tag_21\n              jumpi\n              dup1\n              0xdf136d65\n              eq\n              tag_22\n              jumpi\n              dup1\n              0xe9fad8ee\n              eq\n              tag_23\n              jumpi\n              dup1\n              0xebe2b12b\n              eq\n              tag_24\n              jumpi\n              dup1\n              0xecd9ba82\n              eq\n              tag_25\n              jumpi\n              jump(tag_2)\n            tag_27:\n              dup1\n              0x7b0a47ee\n              eq\n              tag_14\n              jumpi\n              dup1\n              0x80faa57d\n              eq\n              tag_15\n              jumpi\n              dup1\n              0x8b876347\n              eq\n              tag_16\n              jumpi\n              dup1\n              0xa4c3b091\n              eq\n              tag_17\n              jumpi\n              dup1\n              0xa694fc3a\n              eq\n              tag_18\n              jumpi\n              dup1\n              0xc8f33c91\n              eq\n              tag_19\n              jumpi\n              jump(tag_2)\n            tag_26:\n              dup1\n              0x386a9525\n              gt\n              tag_28\n              jumpi\n              dup1\n              0x386a9525\n              eq\n              tag_8\n              jumpi\n              dup1\n              0x3c6b16ab\n              eq\n              tag_9\n              jumpi\n              dup1\n              0x3d18b912\n              eq\n              tag_10\n              jumpi\n              dup1\n              0x3fc6df6e\n              eq\n              tag_11\n              jumpi\n              dup1\n              0x70a08231\n              eq\n              tag_12\n              jumpi\n              dup1\n              0x72f702f3\n              eq\n              tag_13\n              jumpi\n              jump(tag_2)\n            tag_28:\n              dup1\n              0x8cc262\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x0700037d\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x18160ddd\n              eq\n              tag_5\n              jumpi\n              dup1\n              0x1c1f78eb\n              eq\n              tag_6\n              jumpi\n              dup1\n              0x2e1a7d4d\n              eq\n              tag_7\n              jumpi\n            tag_2:\n              0x00\n              dup1\n              revert\n                /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n            tag_3:\n              tag_29\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_30\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_30:\n                /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_31\n              jump\t// in\n            tag_29:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1325:1367  mapping(address => uint256) public rewards */\n            tag_4:\n              tag_32\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_33\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_33:\n                /* \"liquidity-staker/StakingRewards.sol\":1325:1367  mapping(address => uint256) public rewards */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_34\n              jump\t// in\n            tag_32:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1845:1938  function totalSupply() external view returns (uint256) {\r... */\n            tag_5:\n              tag_35\n              tag_36\n              jump\t// in\n            tag_35:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":2749:2870  function getRewardForDuration() external view returns (uint256) {\r... */\n            tag_6:\n              tag_37\n              tag_38\n              jump\t// in\n            tag_37:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n            tag_7:\n              tag_39\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_40\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_40:\n                /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_41\n              jump\t// in\n            tag_39:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n            tag_8:\n              tag_42\n              tag_43\n              jump\t// in\n            tag_42:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n            tag_9:\n              tag_44\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_45\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_45:\n                /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_46\n              jump\t// in\n            tag_44:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":4240:4547  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n            tag_10:\n              tag_47\n              tag_48\n              jump\t// in\n            tag_47:\n              stop\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n            tag_11:\n              tag_49\n              tag_50\n              jump\t// in\n            tag_49:\n              mload(0x40)\n              dup1\n              dup3\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n            tag_12:\n              tag_51\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_52\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_52:\n                /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_53\n              jump\t// in\n            tag_51:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n            tag_13:\n              tag_54\n              tag_55\n              jump\t// in\n            tag_54:\n              mload(0x40)\n              dup1\n              dup3\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n            tag_14:\n              tag_56\n              tag_57\n              jump\t// in\n            tag_56:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":2066:2197  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n            tag_15:\n              tag_58\n              tag_59\n              jump\t// in\n            tag_58:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1261:1318  mapping(address => uint256) public userRewardPerTokenPaid */\n            tag_16:\n              tag_60\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_61\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_61:\n                /* \"liquidity-staker/StakingRewards.sol\":1261:1318  mapping(address => uint256) public userRewardPerTokenPaid */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_62\n              jump\t// in\n            tag_60:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n            tag_17:\n              tag_63\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x40\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_64\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_64:\n                /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_65\n              jump\t// in\n            tag_63:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_18:\n              tag_66\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_67\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_67:\n                /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_68\n              jump\t// in\n            tag_66:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":1181:1210  uint256 public lastUpdateTime */\n            tag_19:\n              tag_69\n              tag_70\n              jump\t// in\n            tag_69:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":2205:2535  function rewardPerToken() public view returns (uint256) {\r... */\n            tag_20:\n              tag_71\n              tag_72\n              jump\t// in\n            tag_71:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n            tag_21:\n              tag_73\n              tag_74\n              jump\t// in\n            tag_73:\n              mload(0x40)\n              dup1\n              dup3\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1217:1252  uint256 public rewardPerTokenStored */\n            tag_22:\n              tag_75\n              tag_76\n              jump\t// in\n            tag_75:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":4555:4652  function exit() external {\r... */\n            tag_23:\n              tag_77\n              tag_78\n              jump\t// in\n            tag_77:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n            tag_24:\n              tag_79\n              tag_80\n              jump\t// in\n            tag_79:\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_25:\n              tag_81\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:16   */\n              0xa0\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:17   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_82\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_82:\n                /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              dup1\n              calldataload\n              0xff\n              and\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              dup1\n              calldataload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              tag_83\n              jump\t// in\n            tag_81:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n            tag_31:\n                /* \"liquidity-staker/StakingRewards.sol\":2597:2604  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2733  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              tag_85\n                /* \"liquidity-staker/StakingRewards.sol\":2716:2723  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":2716:2732  rewards[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2724:2731  account */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":2716:2732  rewards[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2711  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n              tag_86\n                /* \"liquidity-staker/StakingRewards.sol\":2706:2710  1e18 */\n              0x0de0b6b3a7640000\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2701  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n              tag_87\n                /* \"liquidity-staker/StakingRewards.sol\":2647:2700  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n              tag_88\n                /* \"liquidity-staker/StakingRewards.sol\":2668:2690  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":2668:2699  userRewardPerTokenPaid[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2691:2698  account */\n              dup10\n                /* \"liquidity-staker/StakingRewards.sol\":2668:2699  userRewardPerTokenPaid[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":2647:2663  rewardPerToken() */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":2647:2661  rewardPerToken */\n              tag_72\n                /* \"liquidity-staker/StakingRewards.sol\":2647:2663  rewardPerToken() */\n              jump\t// in\n            tag_89:\n                /* \"liquidity-staker/StakingRewards.sol\":2647:2667  rewardPerToken().sub */\n              tag_90\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2647:2700  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_88:\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2633  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2642  _balances[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2634:2641  account */\n              dup10\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2642  _balances[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2646  _balances[account].mul */\n              tag_91\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2701  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_87:\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2705  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n              tag_92\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2711  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_86:\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2715  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2624:2733  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_85:\n                /* \"liquidity-staker/StakingRewards.sol\":2617:2733  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2543:2741  function earned(address account) public view returns (uint256) {\r... */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1325:1367  mapping(address => uint256) public rewards */\n            tag_34:\n              mstore(0x20, 0x0a)\n              dup1\n              0x00\n              mstore\n              keccak256(0x00, 0x40)\n              0x00\n              swap2\n              pop\n              swap1\n              pop\n              sload\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1845:1938  function totalSupply() external view returns (uint256) {\r... */\n            tag_36:\n                /* \"liquidity-staker/StakingRewards.sol\":1891:1898  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":1918:1930  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":1911:1930  return _totalSupply */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":1845:1938  function totalSupply() external view returns (uint256) {\r... */\n              swap1\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2749:2870  function getRewardForDuration() external view returns (uint256) {\r... */\n            tag_38:\n                /* \"liquidity-staker/StakingRewards.sol\":2804:2811  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2831:2862  rewardRate.mul(rewardsDuration) */\n              tag_96\n                /* \"liquidity-staker/StakingRewards.sol\":2846:2861  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":2831:2841  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":2831:2845  rewardRate.mul */\n              tag_91\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2831:2862  rewardRate.mul(rewardsDuration) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_96:\n                /* \"liquidity-staker/StakingRewards.sol\":2824:2862  return rewardRate.mul(rewardsDuration) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2749:2870  function getRewardForDuration() external view returns (uint256) {\r... */\n              swap1\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n            tag_41:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n              dup1\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup3\n              dup3\n              sload\n              add\n              swap3\n              pop\n              pop\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3942:3952  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              tag_99\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n              tag_72\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              jump\t// in\n            tag_99:\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              tag_100\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n              tag_59\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_100:\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n              tag_101\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              tag_102\n                /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n              tag_31\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              jump\t// in\n            tag_102:\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n            tag_101:\n                /* \"liquidity-staker/StakingRewards.sol\":3982:3983  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3973:3979  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3973:3983  amount > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":3965:4005  require(amount > 0, \"Cannot withdraw 0\") */\n              tag_104\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x11\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x43616e6e6f742077697468647261772030000000000000000000000000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_104:\n                /* \"liquidity-staker/StakingRewards.sol\":4031:4055  _totalSupply.sub(amount) */\n              tag_105\n                /* \"liquidity-staker/StakingRewards.sol\":4048:4054  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":4031:4043  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":4031:4047  _totalSupply.sub */\n              tag_90\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4031:4055  _totalSupply.sub(amount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_105:\n                /* \"liquidity-staker/StakingRewards.sol\":4016:4028  _totalSupply */\n              0x0b\n                /* \"liquidity-staker/StakingRewards.sol\":4016:4055  _totalSupply = _totalSupply.sub(amount) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4090:4123  _balances[msg.sender].sub(amount) */\n              tag_106\n                /* \"liquidity-staker/StakingRewards.sol\":4116:4122  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":4090:4099  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":4090:4111  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4100:4110  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4090:4111  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":4090:4115  _balances[msg.sender].sub */\n              tag_90\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4090:4123  _balances[msg.sender].sub(amount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_106:\n                /* \"liquidity-staker/StakingRewards.sol\":4066:4075  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":4066:4087  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4076:4086  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4066:4087  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":4066:4123  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4134:4179  stakingToken.safeTransfer(msg.sender, amount) */\n              tag_107\n                /* \"liquidity-staker/StakingRewards.sol\":4160:4170  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4172:4178  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":4134:4146  stakingToken */\n              0x03\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":4134:4159  stakingToken.safeTransfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              tag_108\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4134:4179  stakingToken.safeTransfer(msg.sender, amount) */\n              swap3\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_107:\n                /* \"liquidity-staker/StakingRewards.sol\":4205:4215  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4195:4224  Withdrawn(msg.sender, amount) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n                /* \"liquidity-staker/StakingRewards.sol\":4217:4223  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":4195:4224  Withdrawn(msg.sender, amount) */\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_109\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1f\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_109:\n                /* \"liquidity-staker/StakingRewards.sol\":3875:4232  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n            tag_43:\n              sload(0x06)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n            tag_46:\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":245:264  rewardsDistribution */\n              0x00\n              dup1\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:241  msg.sender */\n              caller\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":223:311  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n              tag_111\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x2a\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n              0x2a\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_111:\n                /* \"liquidity-staker/StakingRewards.sol\":4814:4815  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              tag_113\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n              tag_72\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              jump\t// in\n            tag_113:\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              tag_114\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n              tag_59\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_114:\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n              tag_115\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              tag_116\n                /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n              tag_31\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              jump\t// in\n            tag_116:\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n            tag_115:\n                /* \"liquidity-staker/StakingRewards.sol\":4852:4864  periodFinish */\n              sload(0x04)\n                /* \"liquidity-staker/StakingRewards.sol\":4833:4848  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":4833:4864  block.timestamp >= periodFinish */\n              lt\n                /* \"liquidity-staker/StakingRewards.sol\":4829:5147  if (block.timestamp >= periodFinish) {\r... */\n              tag_118\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":4894:4921  reward.div(rewardsDuration) */\n              tag_119\n                /* \"liquidity-staker/StakingRewards.sol\":4905:4920  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":4894:4900  reward */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":4894:4904  reward.div */\n              tag_92\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4894:4921  reward.div(rewardsDuration) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_119:\n                /* \"liquidity-staker/StakingRewards.sol\":4881:4891  rewardRate */\n              0x05\n                /* \"liquidity-staker/StakingRewards.sol\":4881:4921  rewardRate = reward.div(rewardsDuration) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4829:5147  if (block.timestamp >= periodFinish) {\r... */\n              jump(tag_120)\n            tag_118:\n                /* \"liquidity-staker/StakingRewards.sol\":4954:4971  uint256 remaining */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4974:5007  periodFinish.sub(block.timestamp) */\n              tag_121\n                /* \"liquidity-staker/StakingRewards.sol\":4991:5006  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":4974:4986  periodFinish */\n              sload(0x04)\n                /* \"liquidity-staker/StakingRewards.sol\":4974:4990  periodFinish.sub */\n              tag_90\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4974:5007  periodFinish.sub(block.timestamp) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_121:\n                /* \"liquidity-staker/StakingRewards.sol\":4954:5007  uint256 remaining = periodFinish.sub(block.timestamp) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5022:5038  uint256 leftover */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":5041:5066  remaining.mul(rewardRate) */\n              tag_122\n                /* \"liquidity-staker/StakingRewards.sol\":5055:5065  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":5041:5050  remaining */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":5041:5054  remaining.mul */\n              tag_91\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5041:5066  remaining.mul(rewardRate) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_122:\n                /* \"liquidity-staker/StakingRewards.sol\":5022:5066  uint256 leftover = remaining.mul(rewardRate) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5135  reward.add(leftover).div(rewardsDuration) */\n              tag_123\n                /* \"liquidity-staker/StakingRewards.sol\":5119:5134  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5114  reward.add(leftover) */\n              tag_124\n                /* \"liquidity-staker/StakingRewards.sol\":5105:5113  leftover */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5100  reward */\n              dup8\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5104  reward.add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5114  reward.add(leftover) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_124:\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5118  reward.add(leftover).div */\n              tag_92\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5094:5135  reward.add(leftover).div(rewardsDuration) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_123:\n                /* \"liquidity-staker/StakingRewards.sol\":5081:5091  rewardRate */\n              0x05\n                /* \"liquidity-staker/StakingRewards.sol\":5081:5135  rewardRate = reward.add(leftover).div(rewardsDuration) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4829:5147  if (block.timestamp >= periodFinish) {\r... */\n              pop\n              pop\n            tag_120:\n                /* \"liquidity-staker/StakingRewards.sol\":5507:5519  uint balance */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":5522:5534  rewardsToken */\n              0x02\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":5522:5544  rewardsToken.balanceOf */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x70a08231\n                /* \"liquidity-staker/StakingRewards.sol\":5553:5557  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n              mload(0x40)\n              dup3\n              0xffffffff\n              and\n              0xe0\n              shl\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup3\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              0x20\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup7\n              dup1\n              extcodesize\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_125\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_125:\n                /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n              pop\n              gas\n              staticcall\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_126\n              jumpi\n                /* \"--CODEGEN--\":45:61   */\n              returndatasize\n                /* \"--CODEGEN--\":42:43   */\n              0x00\n                /* \"--CODEGEN--\":39:40   */\n              dup1\n                /* \"--CODEGEN--\":24:62   */\n              returndatacopy\n                /* \"--CODEGEN--\":77:93   */\n              returndatasize\n                /* \"--CODEGEN--\":74:75   */\n              0x00\n                /* \"--CODEGEN--\":67:94   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_126:\n                /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n              pop\n              pop\n              pop\n              pop\n              mload(0x40)\n              returndatasize\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_127\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_127:\n                /* \"liquidity-staker/StakingRewards.sol\":5522:5559  rewardsToken.balanceOf(address(this)) */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              mload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5507:5559  uint balance = rewardsToken.balanceOf(address(this)) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5592:5620  balance.div(rewardsDuration) */\n              tag_128\n                /* \"liquidity-staker/StakingRewards.sol\":5604:5619  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":5592:5599  balance */\n              dup3\n                /* \"liquidity-staker/StakingRewards.sol\":5592:5603  balance.div */\n              tag_92\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5592:5620  balance.div(rewardsDuration) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_128:\n                /* \"liquidity-staker/StakingRewards.sol\":5578:5588  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":5578:5620  rewardRate <= balance.div(rewardsDuration) */\n              gt\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5570:5649  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n              tag_129\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x18\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x50726f76696465642072657761726420746f6f20686967680000000000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_129:\n                /* \"liquidity-staker/StakingRewards.sol\":5679:5694  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":5662:5676  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5662:5694  lastUpdateTime = block.timestamp */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5720:5756  block.timestamp.add(rewardsDuration) */\n              tag_130\n                /* \"liquidity-staker/StakingRewards.sol\":5740:5755  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":5720:5735  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":5720:5739  block.timestamp.add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5720:5756  block.timestamp.add(rewardsDuration) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_130:\n                /* \"liquidity-staker/StakingRewards.sol\":5705:5717  periodFinish */\n              0x04\n                /* \"liquidity-staker/StakingRewards.sol\":5705:5756  periodFinish = block.timestamp.add(rewardsDuration) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5772:5791  RewardAdded(reward) */\n              0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n                /* \"liquidity-staker/StakingRewards.sol\":5784:5790  reward */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":5772:5791  RewardAdded(reward) */\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log1\n                /* \"liquidity-staker/StakingRewards.sol\":6338:6339  _ */\n              pop\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":322:323  _ */\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4716:5799  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":4240:4547  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n            tag_48:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n              dup1\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup3\n              dup3\n              sload\n              add\n              swap3\n              pop\n              pop\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4294:4304  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              tag_133\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n              tag_72\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              jump\t// in\n            tag_133:\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              tag_134\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n              tag_59\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_134:\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n              tag_135\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              tag_136\n                /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n              tag_31\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              jump\t// in\n            tag_136:\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n            tag_135:\n                /* \"liquidity-staker/StakingRewards.sol\":4317:4331  uint256 reward */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4334:4341  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":4334:4353  rewards[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4342:4352  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4334:4353  rewards[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":4317:4353  uint256 reward = rewards[msg.sender] */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4377:4378  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4368:4374  reward */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":4368:4378  reward > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":4364:4540  if (reward > 0) {\r... */\n              iszero\n              tag_138\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":4417:4418  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4395:4402  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":4395:4414  rewards[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4403:4413  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4395:4414  rewards[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":4395:4418  rewards[msg.sender] = 0 */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4433:4478  rewardsToken.safeTransfer(msg.sender, reward) */\n              tag_139\n                /* \"liquidity-staker/StakingRewards.sol\":4459:4469  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4471:4477  reward */\n              dup3\n                /* \"liquidity-staker/StakingRewards.sol\":4433:4445  rewardsToken */\n              0x02\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":4433:4458  rewardsToken.safeTransfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              tag_108\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4433:4478  rewardsToken.safeTransfer(msg.sender, reward) */\n              swap3\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_139:\n                /* \"liquidity-staker/StakingRewards.sol\":4509:4519  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4498:4528  RewardPaid(msg.sender, reward) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n                /* \"liquidity-staker/StakingRewards.sol\":4521:4527  reward */\n              dup3\n                /* \"liquidity-staker/StakingRewards.sol\":4498:4528  RewardPaid(msg.sender, reward) */\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log2\n                /* \"liquidity-staker/StakingRewards.sol\":4364:4540  if (reward > 0) {\r... */\n            tag_138:\n                /* \"liquidity-staker/StakingRewards.sol\":6338:6339  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_140\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1f\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_140:\n                /* \"liquidity-staker/StakingRewards.sol\":4240:4547  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              jump\t// out\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n            tag_50:\n              0x00\n              dup1\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n            tag_53:\n                /* \"liquidity-staker/StakingRewards.sol\":2005:2012  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2032:2041  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":2032:2050  _balances[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2042:2049  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":2032:2050  _balances[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":2025:2050  return _balances[account] */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":1946:2058  function balanceOf(address account) external view returns (uint256) {\r... */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n            tag_55:\n              0x03\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n            tag_57:\n              sload(0x05)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2066:2197  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n            tag_59:\n                /* \"liquidity-staker/StakingRewards.sol\":2123:2130  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2150:2189  Math.min(block.timestamp, periodFinish) */\n              tag_143\n                /* \"liquidity-staker/StakingRewards.sol\":2159:2174  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":2176:2188  periodFinish */\n              sload(0x04)\n                /* \"liquidity-staker/StakingRewards.sol\":2150:2158  Math.min */\n              tag_144\n                /* \"liquidity-staker/StakingRewards.sol\":2150:2189  Math.min(block.timestamp, periodFinish) */\n              jump\t// in\n            tag_143:\n                /* \"liquidity-staker/StakingRewards.sol\":2143:2189  return Math.min(block.timestamp, periodFinish) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2066:2197  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n              swap1\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1261:1318  mapping(address => uint256) public userRewardPerTokenPaid */\n            tag_62:\n              mstore(0x20, 0x09)\n              dup1\n              0x00\n              mstore\n              keccak256(0x00, 0x40)\n              0x00\n              swap2\n              pop\n              swap1\n              pop\n              sload\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n            tag_65:\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":245:264  rewardsDistribution */\n              0x00\n              dup1\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:241  msg.sender */\n              caller\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":223:311  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n              tag_146\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x2a\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n              0x2a\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_146:\n                /* \"liquidity-staker/StakingRewards.sol\":5921:5926  token */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":5914:5936  IERC20(token).transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xa9059cbb\n                /* \"liquidity-staker/StakingRewards.sol\":5937:5947  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":5949:5955  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n              mload(0x40)\n              dup4\n              0xffffffff\n              and\n              0xe0\n              shl\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup4\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap3\n              pop\n              pop\n              pop\n              0x20\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              0x00\n              dup8\n              dup1\n              extcodesize\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_148\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_148:\n                /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n              pop\n              gas\n              call\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_149\n              jumpi\n                /* \"--CODEGEN--\":45:61   */\n              returndatasize\n                /* \"--CODEGEN--\":42:43   */\n              0x00\n                /* \"--CODEGEN--\":39:40   */\n              dup1\n                /* \"--CODEGEN--\":24:62   */\n              returndatacopy\n                /* \"--CODEGEN--\":77:93   */\n              returndatasize\n                /* \"--CODEGEN--\":74:75   */\n              0x00\n                /* \"--CODEGEN--\":67:94   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_149:\n                /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n              pop\n              pop\n              pop\n              pop\n              mload(0x40)\n              returndatasize\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_150\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_150:\n                /* \"liquidity-staker/StakingRewards.sol\":5914:5956  IERC20(token).transfer(msg.sender, amount) */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              mload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5807:5964  function emergencyWithdrawToken(address token, uint256 amount) external onlyRewardsDistribution {\r... */\n              pop\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_68:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n              dup1\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup3\n              dup3\n              sload\n              add\n              swap3\n              pop\n              pop\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3564:3574  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              tag_153\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n              tag_72\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              jump\t// in\n            tag_153:\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              tag_154\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n              tag_59\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_154:\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n              tag_155\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              tag_156\n                /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n              tag_31\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              jump\t// in\n            tag_156:\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n            tag_155:\n                /* \"liquidity-staker/StakingRewards.sol\":3604:3605  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3595:3601  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3595:3605  amount > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":3587:3624  require(amount > 0, \"Cannot stake 0\") */\n              tag_158\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x0e\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_158:\n                /* \"liquidity-staker/StakingRewards.sol\":3650:3674  _totalSupply.add(amount) */\n              tag_159\n                /* \"liquidity-staker/StakingRewards.sol\":3667:3673  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3650:3662  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":3650:3666  _totalSupply.add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3650:3674  _totalSupply.add(amount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_159:\n                /* \"liquidity-staker/StakingRewards.sol\":3635:3647  _totalSupply */\n              0x0b\n                /* \"liquidity-staker/StakingRewards.sol\":3635:3674  _totalSupply = _totalSupply.add(amount) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3709:3742  _balances[msg.sender].add(amount) */\n              tag_160\n                /* \"liquidity-staker/StakingRewards.sol\":3735:3741  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3709:3718  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3709:3730  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3719:3729  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3709:3730  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":3709:3734  _balances[msg.sender].add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3709:3742  _balances[msg.sender].add(amount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_160:\n                /* \"liquidity-staker/StakingRewards.sol\":3685:3694  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3685:3706  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3695:3705  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3685:3706  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":3685:3742  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3753:3817  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              tag_161\n                /* \"liquidity-staker/StakingRewards.sol\":3783:3793  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3803:3807  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":3810:3816  amount */\n              dup6\n                /* \"liquidity-staker/StakingRewards.sol\":3753:3765  stakingToken */\n              0x03\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":3753:3782  stakingToken.safeTransferFrom */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              tag_162\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3753:3817  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              swap4\n              swap3\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_161:\n                /* \"liquidity-staker/StakingRewards.sol\":3840:3850  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3833:3859  Staked(msg.sender, amount) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n                /* \"liquidity-staker/StakingRewards.sol\":3852:3858  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":3833:3859  Staked(msg.sender, amount) */\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_163\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1f\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_163:\n                /* \"liquidity-staker/StakingRewards.sol\":3498:3867  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1181:1210  uint256 public lastUpdateTime */\n            tag_70:\n              sload(0x07)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2205:2535  function rewardPerToken() public view returns (uint256) {\r... */\n            tag_72:\n                /* \"liquidity-staker/StakingRewards.sol\":2252:2259  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2292:2293  0 */\n              dup1\n                /* \"liquidity-staker/StakingRewards.sol\":2276:2288  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":2276:2293  _totalSupply == 0 */\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":2272:2349  if (_totalSupply == 0) {\r... */\n              iszero\n              tag_165\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":2317:2337  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":2310:2337  return rewardPerTokenStored */\n              swap1\n              pop\n              jump(tag_164)\n                /* \"liquidity-staker/StakingRewards.sol\":2272:2349  if (_totalSupply == 0) {\r... */\n            tag_165:\n                /* \"liquidity-staker/StakingRewards.sol\":2379:2527  rewardPerTokenStored.add(\r... */\n              tag_166\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2512  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n              tag_167\n                /* \"liquidity-staker/StakingRewards.sol\":2499:2511  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2494  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n              tag_168\n                /* \"liquidity-staker/StakingRewards.sol\":2489:2493  1e18 */\n              0x0de0b6b3a7640000\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2484  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n              tag_169\n                /* \"liquidity-staker/StakingRewards.sol\":2473:2483  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2468  lastTimeRewardApplicable().sub(lastUpdateTime) */\n              tag_170\n                /* \"liquidity-staker/StakingRewards.sol\":2453:2467  lastUpdateTime */\n              sload(0x07)\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2448  lastTimeRewardApplicable() */\n              tag_171\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2446  lastTimeRewardApplicable */\n              tag_59\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2448  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_171:\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2452  lastTimeRewardApplicable().sub */\n              tag_90\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2468  lastTimeRewardApplicable().sub(lastUpdateTime) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_170:\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2472  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n              tag_91\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2484  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_169:\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2488  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n              tag_91\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2494  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_168:\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2498  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n              tag_92\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2422:2512  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_167:\n                /* \"liquidity-staker/StakingRewards.sol\":2379:2399  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":2379:2403  rewardPerTokenStored.add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2379:2527  rewardPerTokenStored.add(\r... */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_166:\n                /* \"liquidity-staker/StakingRewards.sol\":2359:2527  return\r... */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2205:2535  function rewardPerToken() public view returns (uint256) {\r... */\n            tag_164:\n              swap1\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n            tag_74:\n              0x02\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1217:1252  uint256 public rewardPerTokenStored */\n            tag_76:\n              sload(0x08)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":4555:4652  function exit() external {\r... */\n            tag_78:\n                /* \"liquidity-staker/StakingRewards.sol\":4591:4622  withdraw(_balances[msg.sender]) */\n              tag_173\n                /* \"liquidity-staker/StakingRewards.sol\":4600:4609  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":4600:4621  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4610:4620  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4600:4621  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":4591:4599  withdraw */\n              tag_41\n                /* \"liquidity-staker/StakingRewards.sol\":4591:4622  withdraw(_balances[msg.sender]) */\n              jump\t// in\n            tag_173:\n                /* \"liquidity-staker/StakingRewards.sol\":4633:4644  getReward() */\n              tag_174\n                /* \"liquidity-staker/StakingRewards.sol\":4633:4642  getReward */\n              tag_48\n                /* \"liquidity-staker/StakingRewards.sol\":4633:4644  getReward() */\n              jump\t// in\n            tag_174:\n                /* \"liquidity-staker/StakingRewards.sol\":4555:4652  function exit() external {\r... */\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n            tag_80:\n              sload(0x04)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_83:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1314  _guardCounter */\n              dup1\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup3\n              dup3\n              sload\n              add\n              swap3\n              pop\n              pop\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1349  uint256 localCounter */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1352:1365  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1329:1365  uint256 localCounter = _guardCounter */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3054:3064  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              tag_177\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6104  rewardPerToken */\n              tag_72\n                /* \"liquidity-staker/StakingRewards.sol\":6090:6106  rewardPerToken() */\n              jump\t// in\n            tag_177:\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6087  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":6067:6106  rewardPerTokenStored = rewardPerToken() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              tag_178\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6158  lastTimeRewardApplicable */\n              tag_59\n                /* \"liquidity-staker/StakingRewards.sol\":6134:6160  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_178:\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6131  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":6117:6160  lastUpdateTime = lastTimeRewardApplicable() */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6194:6195  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6182  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6175:6196  account != address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n              tag_179\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              tag_180\n                /* \"liquidity-staker/StakingRewards.sol\":6239:6246  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6238  earned */\n              tag_31\n                /* \"liquidity-staker/StakingRewards.sol\":6232:6247  earned(account) */\n              jump\t// in\n            tag_180:\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6220  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6221:6228  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6229  rewards[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6213:6247  rewards[account] = earned(account) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6296:6316  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6284  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":6285:6292  account */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6293  userRewardPerTokenPaid[account] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6262:6316  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":6171:6328  if (account != address(0)) {\r... */\n            tag_179:\n                /* \"liquidity-staker/StakingRewards.sol\":3094:3095  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3085:3091  amount */\n              dup8\n                /* \"liquidity-staker/StakingRewards.sol\":3085:3095  amount > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":3077:3114  require(amount > 0, \"Cannot stake 0\") */\n              tag_182\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x0e\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_182:\n                /* \"liquidity-staker/StakingRewards.sol\":3140:3164  _totalSupply.add(amount) */\n              tag_183\n                /* \"liquidity-staker/StakingRewards.sol\":3157:3163  amount */\n              dup8\n                /* \"liquidity-staker/StakingRewards.sol\":3140:3152  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":3140:3156  _totalSupply.add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3140:3164  _totalSupply.add(amount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_183:\n                /* \"liquidity-staker/StakingRewards.sol\":3125:3137  _totalSupply */\n              0x0b\n                /* \"liquidity-staker/StakingRewards.sol\":3125:3164  _totalSupply = _totalSupply.add(amount) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3199:3232  _balances[msg.sender].add(amount) */\n              tag_184\n                /* \"liquidity-staker/StakingRewards.sol\":3225:3231  amount */\n              dup8\n                /* \"liquidity-staker/StakingRewards.sol\":3199:3208  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3199:3220  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3209:3219  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3199:3220  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":3199:3224  _balances[msg.sender].add */\n              tag_93\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3199:3232  _balances[msg.sender].add(amount) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_184:\n                /* \"liquidity-staker/StakingRewards.sol\":3175:3184  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3175:3196  _balances[msg.sender] */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3185:3195  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3175:3196  _balances[msg.sender] */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              swap1\n              dup2\n              mstore\n              0x20\n              add\n              0x00\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":3175:3232  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n              dup2\n              swap1\n              sstore\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3288:3300  stakingToken */\n              0x03\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":3264:3309  IUniswapV2ERC20(address(stakingToken)).permit */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xd505accf\n                /* \"liquidity-staker/StakingRewards.sol\":3310:3320  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3330:3334  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":3337:3343  amount */\n              dup11\n                /* \"liquidity-staker/StakingRewards.sol\":3345:3353  deadline */\n              dup11\n                /* \"liquidity-staker/StakingRewards.sol\":3355:3356  v */\n              dup11\n                /* \"liquidity-staker/StakingRewards.sol\":3358:3359  r */\n              dup11\n                /* \"liquidity-staker/StakingRewards.sol\":3361:3362  s */\n              dup11\n                /* \"liquidity-staker/StakingRewards.sol\":3264:3363  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              mload(0x40)\n              dup9\n              0xffffffff\n              and\n              0xe0\n              shl\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup9\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup8\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup7\n              dup2\n              mstore\n              0x20\n              add\n              dup6\n              dup2\n              mstore\n              0x20\n              add\n              dup5\n              0xff\n              and\n              0xff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup4\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap8\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              0x00\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              0x00\n              dup8\n              dup1\n              extcodesize\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_185\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_185:\n                /* \"liquidity-staker/StakingRewards.sol\":3264:3363  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              pop\n              gas\n              call\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_186\n              jumpi\n                /* \"--CODEGEN--\":45:61   */\n              returndatasize\n                /* \"--CODEGEN--\":42:43   */\n              0x00\n                /* \"--CODEGEN--\":39:40   */\n              dup1\n                /* \"--CODEGEN--\":24:62   */\n              returndatacopy\n                /* \"--CODEGEN--\":77:93   */\n              returndatasize\n                /* \"--CODEGEN--\":74:75   */\n              0x00\n                /* \"--CODEGEN--\":67:94   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_186:\n                /* \"liquidity-staker/StakingRewards.sol\":3264:3363  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              pop\n              pop\n              pop\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3376:3440  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              tag_187\n                /* \"liquidity-staker/StakingRewards.sol\":3406:3416  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3426:3430  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":3433:3439  amount */\n              dup10\n                /* \"liquidity-staker/StakingRewards.sol\":3376:3388  stakingToken */\n              0x03\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":3376:3405  stakingToken.safeTransferFrom */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              tag_162\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3376:3440  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              swap4\n              swap3\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_187:\n                /* \"liquidity-staker/StakingRewards.sol\":3463:3473  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3456:3482  Staked(msg.sender, amount) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n                /* \"liquidity-staker/StakingRewards.sol\":3475:3481  amount */\n              dup9\n                /* \"liquidity-staker/StakingRewards.sol\":3456:3482  Staked(msg.sender, amount) */\n              mload(0x40)\n              dup1\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_188\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1f\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_188:\n                /* \"liquidity-staker/StakingRewards.sol\":2932:3490  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_90:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1364:1365  a */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1360  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n              gt\n              iszero\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n              tag_190\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1e\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_190:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1410:1419  uint256 c */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1426:1427  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1422:1423  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1422:1427  a - b */\n              sub\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1410:1427  uint256 c = a - b */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1445:1446  c */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1438:1446  return c */\n              swap2\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_91:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1751:1758  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1997:1998  0 */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1992:1993  a */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1992:1998  a == 0 */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n              iszero\n              tag_192\n              jumpi\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2021:2022  0 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2014:2022  return 0 */\n              swap1\n              pop\n              jump(tag_191)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n            tag_192:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2043:2052  uint256 c */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2059:2060  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2056  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2060  a * b */\n              mul\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2043:2060  uint256 c = a * b */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2087:2088  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2082:2083  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2079  c */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2083  c / a */\n              dup2\n              tag_193\n              jumpi\n              invalid\n            tag_193:\n              div\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2088  c / a == b */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2070:2126  require(c / a == b, \"SafeMath: multiplication overflow\") */\n              tag_194\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x21\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n              0x21\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_194:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2144:2145  c */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2137:2145  return c */\n              swap2\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_191:\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_92:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2665:2672  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2762:2763  0 */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2759  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2763  b > 0 */\n              gt\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2750:2794  require(b > 0, \"SafeMath: division by zero\") */\n              tag_196\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1a\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_196:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2804:2813  uint256 c */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2820:2821  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2817  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2821  a / b */\n              dup2\n              tag_197\n              jumpi\n              invalid\n            tag_197:\n              div\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2804:2821  uint256 c = a / b */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2925:2926  c */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2918:2926  return c */\n              swap2\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_93:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":927:928  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":923:924  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n              add\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":951:952  a */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":946:947  c */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n              lt\n              iszero\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n              tag_199\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1b\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_199:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1002:1003  c */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":995:1003  return c */\n              swap2\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n            tag_108:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n              tag_201\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":793:798  token */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":793:807  token.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xa9059cbb\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":793:816  token.transfer.selector */\n              swap1\n              pop\n              0xe0\n              shl\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":818:820  to */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":822:827  value */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n              add(0x24, mload(0x40))\n              dup1\n              dup4\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap3\n              pop\n              pop\n              pop\n              mload(0x40)\n                /* \"--CODEGEN--\":49:53   */\n              0x20\n                /* \"--CODEGEN--\":39:46   */\n              dup2\n                /* \"--CODEGEN--\":30:37   */\n              dup4\n                /* \"--CODEGEN--\":26:47   */\n              sub\n                /* \"--CODEGEN--\":22:54   */\n              sub\n                /* \"--CODEGEN--\":13:20   */\n              dup2\n                /* \"--CODEGEN--\":6:55   */\n              mstore\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n              swap1\n              0x40\n              mstore\n              swap1\n              not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n              and\n                /* \"--CODEGEN--\":38:42   */\n              0x20\n                /* \"--CODEGEN--\":29:36   */\n              dup3\n                /* \"--CODEGEN--\":25:43   */\n              add\n                /* \"--CODEGEN--\":67:77   */\n              dup1\n                /* \"--CODEGEN--\":61:78   */\n              mload\n                /* \"--CODEGEN--\":96:154   */\n              0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                /* \"--CODEGEN--\":199:207   */\n              dup4\n                /* \"--CODEGEN--\":192:196   */\n              dup2\n                /* \"--CODEGEN--\":186:190   */\n              dup4\n                /* \"--CODEGEN--\":182:197   */\n              and\n                /* \"--CODEGEN--\":179:208   */\n              or\n                /* \"--CODEGEN--\":167:177   */\n              dup4\n                /* \"--CODEGEN--\":160:209   */\n              mstore\n                /* \"--CODEGEN--\":0:215   */\n              pop\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n              tag_202\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n              jump\t// in\n            tag_201:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_144:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":416:423  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":446:447  b */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:443  a */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:447  a < b */\n              lt\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n              tag_204\n              jumpi\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":454:455  b */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n              jump(tag_205)\n            tag_204:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":450:451  a */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n            tag_205:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":435:455  return a < b ? a : b */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n            tag_162:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n              tag_207\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":961:966  token */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":991:996  token */\n              dup6\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":991:1009  token.transferFrom */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x23b872dd\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":991:1018  token.transferFrom.selector */\n              swap1\n              pop\n              0xe0\n              shl\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":1020:1024  from */\n              dup6\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":1026:1028  to */\n              dup6\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":1030:1035  value */\n              dup6\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n              add(0x24, mload(0x40))\n              dup1\n              dup5\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup4\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              dup2\n              mstore\n              0x20\n              add\n              dup3\n              dup2\n              mstore\n              0x20\n              add\n              swap4\n              pop\n              pop\n              pop\n              pop\n              mload(0x40)\n                /* \"--CODEGEN--\":49:53   */\n              0x20\n                /* \"--CODEGEN--\":39:46   */\n              dup2\n                /* \"--CODEGEN--\":30:37   */\n              dup4\n                /* \"--CODEGEN--\":26:47   */\n              sub\n                /* \"--CODEGEN--\":22:54   */\n              sub\n                /* \"--CODEGEN--\":13:20   */\n              dup2\n                /* \"--CODEGEN--\":6:55   */\n              mstore\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n              swap1\n              0x40\n              mstore\n              swap1\n              not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n              and\n                /* \"--CODEGEN--\":38:42   */\n              0x20\n                /* \"--CODEGEN--\":29:36   */\n              dup3\n                /* \"--CODEGEN--\":25:43   */\n              add\n                /* \"--CODEGEN--\":67:77   */\n              dup1\n                /* \"--CODEGEN--\":61:78   */\n              mload\n                /* \"--CODEGEN--\":96:154   */\n              0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                /* \"--CODEGEN--\":199:207   */\n              dup4\n                /* \"--CODEGEN--\":192:196   */\n              dup2\n                /* \"--CODEGEN--\":186:190   */\n              dup4\n                /* \"--CODEGEN--\":182:197   */\n              and\n                /* \"--CODEGEN--\":179:208   */\n              or\n                /* \"--CODEGEN--\":167:177   */\n              dup4\n                /* \"--CODEGEN--\":160:209   */\n              mstore\n                /* \"--CODEGEN--\":0:215   */\n              pop\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:960  callOptionalReturn */\n              tag_202\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n              jump\t// in\n            tag_207:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":2621:3716  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n            tag_202:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n              tag_209\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3224:3229  token */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3241  address(token).isContract */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              tag_210\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n              jump\t// in\n            tag_209:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3208:3279  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n              tag_211\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x1f\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_211:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3350:3362  bool success */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3364:3387  bytes memory returndata */\n              0x60\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3399:3404  token */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3410  address(token).call */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3411:3415  data */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n              mload(0x40)\n              dup1\n              dup3\n              dup1\n              mload\n              swap1\n              0x20\n              add\n              swap1\n              dup1\n              dup4\n              dup4\n                /* \"--CODEGEN--\":36:189   */\n            tag_212:\n                /* \"--CODEGEN--\":66:68   */\n              0x20\n                /* \"--CODEGEN--\":61:64   */\n              dup4\n                /* \"--CODEGEN--\":58:69   */\n              lt\n                /* \"--CODEGEN--\":36:189   */\n              tag_214\n              jumpi\n                /* \"--CODEGEN--\":182:185   */\n              dup1\n                /* \"--CODEGEN--\":176:186   */\n              mload\n                /* \"--CODEGEN--\":171:174   */\n              dup3\n                /* \"--CODEGEN--\":164:187   */\n              mstore\n                /* \"--CODEGEN--\":98:100   */\n              0x20\n                /* \"--CODEGEN--\":93:96   */\n              dup3\n                /* \"--CODEGEN--\":89:101   */\n              add\n                /* \"--CODEGEN--\":82:101   */\n              swap2\n              pop\n                /* \"--CODEGEN--\":123:125   */\n              0x20\n                /* \"--CODEGEN--\":118:121   */\n              dup2\n                /* \"--CODEGEN--\":114:126   */\n              add\n                /* \"--CODEGEN--\":107:126   */\n              swap1\n              pop\n                /* \"--CODEGEN--\":148:150   */\n              0x20\n                /* \"--CODEGEN--\":143:146   */\n              dup4\n                /* \"--CODEGEN--\":139:151   */\n              sub\n                /* \"--CODEGEN--\":132:151   */\n              swap3\n              pop\n                /* \"--CODEGEN--\":36:189   */\n              jump(tag_212)\n            tag_214:\n                /* \"--CODEGEN--\":274:275   */\n              0x01\n                /* \"--CODEGEN--\":267:270   */\n              dup4\n                /* \"--CODEGEN--\":263:265   */\n              0x20\n                /* \"--CODEGEN--\":259:271   */\n              sub\n                /* \"--CODEGEN--\":254:257   */\n              0x0100\n                /* \"--CODEGEN--\":250:272   */\n              exp\n                /* \"--CODEGEN--\":246:276   */\n              sub\n                /* \"--CODEGEN--\":315:319   */\n              dup1\n                /* \"--CODEGEN--\":311:320   */\n              not\n                /* \"--CODEGEN--\":305:308   */\n              dup3\n                /* \"--CODEGEN--\":299:309   */\n              mload\n                /* \"--CODEGEN--\":295:321   */\n              and\n                /* \"--CODEGEN--\":356:360   */\n              dup2\n                /* \"--CODEGEN--\":350:353   */\n              dup5\n                /* \"--CODEGEN--\":344:354   */\n              mload\n                /* \"--CODEGEN--\":340:361   */\n              and\n                /* \"--CODEGEN--\":389:396   */\n              dup1\n                /* \"--CODEGEN--\":380:387   */\n              dup3\n                /* \"--CODEGEN--\":377:397   */\n              or\n                /* \"--CODEGEN--\":372:375   */\n              dup6\n                /* \"--CODEGEN--\":365:398   */\n              mstore\n                /* \"--CODEGEN--\":3:402   */\n              pop\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n              pop\n              pop\n              pop\n              swap1\n              pop\n              add\n              swap2\n              pop\n              pop\n              0x00\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              0x00\n              dup7\n              gas\n              call\n              swap2\n              pop\n              pop\n              returndatasize\n                /* \"--CODEGEN--\":14:15   */\n              dup1\n                /* \"--CODEGEN--\":21:22   */\n              0x00\n                /* \"--CODEGEN--\":16:47   */\n              dup2\n              eq\n              tag_216\n              jumpi\n                /* \"--CODEGEN--\":75:79   */\n              0x40\n                /* \"--CODEGEN--\":69:80   */\n              mload\n                /* \"--CODEGEN--\":64:80   */\n              swap2\n              pop\n                /* \"--CODEGEN--\":144:148   */\n              0x1f\n                /* \"--CODEGEN--\":140:149   */\n              not\n                /* \"--CODEGEN--\":133:137   */\n              0x3f\n                /* \"--CODEGEN--\":115:131   */\n              returndatasize\n                /* \"--CODEGEN--\":111:138   */\n              add\n                /* \"--CODEGEN--\":107:150   */\n              and\n                /* \"--CODEGEN--\":104:105   */\n              dup3\n                /* \"--CODEGEN--\":100:151   */\n              add\n                /* \"--CODEGEN--\":94:98   */\n              0x40\n                /* \"--CODEGEN--\":87:152   */\n              mstore\n                /* \"--CODEGEN--\":169:185   */\n              returndatasize\n                /* \"--CODEGEN--\":166:167   */\n              dup3\n                /* \"--CODEGEN--\":159:186   */\n              mstore\n                /* \"--CODEGEN--\":225:241   */\n              returndatasize\n                /* \"--CODEGEN--\":222:223   */\n              0x00\n                /* \"--CODEGEN--\":215:219   */\n              0x20\n                /* \"--CODEGEN--\":212:213   */\n              dup5\n                /* \"--CODEGEN--\":208:220   */\n              add\n                /* \"--CODEGEN--\":193:242   */\n              returndatacopy\n                /* \"--CODEGEN--\":7:249   */\n              jump(tag_215)\n                /* \"--CODEGEN--\":16:47   */\n            tag_216:\n                /* \"--CODEGEN--\":36:40   */\n              0x60\n                /* \"--CODEGEN--\":31:40   */\n              swap2\n              pop\n                /* \"--CODEGEN--\":7:249   */\n            tag_215:\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3349:3416  (bool success, bytes memory returndata) = address(token).call(data) */\n              swap2\n              pop\n              swap2\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3434:3441  success */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3426:3478  require(success, \"SafeERC20: low-level call failed\") */\n              tag_217\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x20\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n              dup2\n              mstore\n              pop\n              0x20\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_217:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3513:3514  0 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3503  returndata */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3510  returndata.length */\n              mload\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3514  returndata.length > 0 */\n              gt\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3489:3710  if (returndata.length > 0) { // Return data is optional... */\n              iszero\n              tag_218\n              jumpi\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3633:3643  returndata */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n              dup1\n              0x20\n              add\n              swap1\n              mload\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_219\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_219:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n              dup2\n              add\n              swap1\n              dup1\n              dup1\n              mload\n              swap1\n              0x20\n              add\n              swap1\n              swap3\n              swap2\n              swap1\n              pop\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3614:3699  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n              tag_220\n              jumpi\n              mload(0x40)\n              0x08c379a000000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x2a\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n              0x2a\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_220:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3489:3710  if (returndata.length > 0) { // Return data is optional... */\n            tag_218:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":2621:3716  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n            tag_210:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":602:606  bool */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":805:817  uint256 size */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":914:921  account */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":902:922  extcodesize(account) */\n              extcodesize\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":894:922  size := extcodesize(account) */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":947:948  0 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":940:944  size */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":940:948  size > 0 */\n              gt\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":933:948  return size > 0 */\n              swap2\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n              swap2\n              swap1\n              pop\n              jump\t// out\n            stop\n            data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n            data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de 43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374\n            data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n            auxdata: 0xa265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c63430005110032\n        }\n    }\n\n    auxdata: 0xa265627a7a72315820f68a9c976ed31cb83efe1c3fadee5a781858bc6c295b87f758fe27dee93edf4064736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516136643803806136648339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a342811015610163576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806136306034913960400191505060405180910390fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050613474806101bc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146102435780638f32d59b1461028d578063a0928c11146102af578063ae741d8d146102cd578063d1af0c7d146102d7578063f2fde38b14610321576100a9565b8063344e5e34146100ae5780634956eaf01461011c5780636cf8caf81461016a578063715018a6146101f557806381e16298146101ff575b600080fd5b6100da600480360360208110156100c457600080fd5b8101908080359060200190929190505050610365565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101686004803603604081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a1565b005b6101ac6004803603602081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6101fd6106eb565b005b6102416004803603602081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610824565b005b61024b610b7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610295610ba7565b604051808215151515815260200191505060405180910390f35b6102b7610bfe565b6040518082815260200191505060405180910390f35b6102d5610c04565b005b6102df610cc5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103636004803603602081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ceb565b005b6003818154811061037257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103a9610ba7565b61041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613327602f913960400191505060405180910390fd5b30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405161053890610eb5565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f0801580156105f0573d6000803e3d6000fd5b508160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001018190555060038390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6106f3610ba7565b610765576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60025442101561087f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806133d56034913960400191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561096c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806134096037913960400191505060405180910390fd5b600081600101541115610b7a5760008160010154905060008260010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a5957600080fd5b505af1158015610a6d573d6000803e3d6000fd5b505050506040513d6020811015610a8357600080fd5b8101908080519060200190929190505050610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061339b603a913960400191505060405180910390fd5b8160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c6b16ab826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610b6057600080fd5b505af1158015610b74573d6000803e3d6000fd5b50505050505b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60025481565b600060038054905011610c62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806133566045913960600191505060405180910390fd5b60008090505b600380549050811015610cc257610cb560038281548110610c8557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610824565b8080600101915050610c68565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cf3610ba7565b610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d6e81610d71565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610df7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806133016026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61243e80610ec38339019056fe60806040526000600455600060055562278d0060065534801561002157600080fd5b5060405161243e38038061243e8339818101604052606081101561004457600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050506001808190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506122fa806101446000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637b0a47ee116100c3578063cd3daf9d1161007c578063cd3daf9d146104db578063d1af0c7d146104f9578063df136d6514610543578063e9fad8ee14610561578063ebe2b12b1461056b578063ecd9ba82146105895761014c565b80637b0a47ee146103ad57806380faa57d146103cb5780638b876347146103e9578063a4c3b09114610441578063a694fc3a1461048f578063c8f33c91146104bd5761014c565b8063386a952511610115578063386a95251461026b5780633c6b16ab146102895780633d18b912146102b75780633fc6df6e146102c157806370a082311461030b57806372f702f3146103635761014c565b80628cc262146101515780630700037d146101a957806318160ddd146102015780631c1f78eb1461021f5780632e1a7d4d1461023d575b600080fd5b6101936004803603602081101561016757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e2565b6040518082815260200191505060405180910390f35b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610700565b6040518082815260200191505060405180910390f35b610209610718565b6040518082815260200191505060405180910390f35b610227610722565b6040518082815260200191505060405180910390f35b6102696004803603602081101561025357600080fd5b8101908080359060200190929190505050610740565b005b610273610a78565b6040518082815260200191505060405180910390f35b6102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050610a7e565b005b6102bf610e5b565b005b6102c9611100565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034d6004803603602081101561032157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611125565b6040518082815260200191505060405180910390f35b61036b61116e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b5611194565b6040518082815260200191505060405180910390f35b6103d361119a565b6040518082815260200191505060405180910390f35b61042b600480360360208110156103ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ad565b6040518082815260200191505060405180910390f35b61048d6004803603604081101561045757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111c5565b005b6104bb600480360360208110156104a557600080fd5b8101908080359060200190929190505050611331565b005b6104c561166b565b6040518082815260200191505060405180910390f35b6104e3611671565b6040518082815260200191505060405180910390f35b6105016116ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61054b611725565b6040518082815260200191505060405180910390f35b61056961172b565b005b61057361177d565b6040518082815260200191505060405180910390f35b6105e0600480360360a081101561059f57600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611783565b005b60006106f9600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106eb670de0b6b3a76400006106dd61068f600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610681611671565b611bdc90919063ffffffff16565b600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b611ceb90919063ffffffff16565b611d7a90919063ffffffff16565b9050919050565b600a6020528060005260406000206000915090505481565b6000600b54905090565b600061073b600654600554611c6590919063ffffffff16565b905090565b600180600082825401925050819055506000600154905033610760611671565b60088190555061076e61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083b576107b1816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b6108c683600b54611bdc90919063ffffffff16565b600b8190555061091e83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bdc90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109ae3384600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040518082815260200191505060405180910390a2506001548114610a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b6000610b2d611671565b600881905550610b3b61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c0857610b7e816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6004544210610c3157610c2660065483611ceb90919063ffffffff16565b600581905550610c93565b6000610c4842600454611bdc90919063ffffffff16565b90506000610c6160055483611c6590919063ffffffff16565b9050610c8a600654610c7c8387611d7a90919063ffffffff16565b611ceb90919063ffffffff16565b60058190555050505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d6020811015610d5e57600080fd5b81019080805190602001909291905050509050610d8660065482611ceb90919063ffffffff16565b6005541115610dfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50726f76696465642072657761726420746f6f2068696768000000000000000081525060200191505060405180910390fd5b42600781905550610e1960065442611d7a90919063ffffffff16565b6004819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d836040518082815260200191505060405180910390a1505050565b600180600082825401925050819055506000600154905033610e7b611671565b600881905550610e8961119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f5657610ecc816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115611084576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110353382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505060015481146110fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60006111a842600454611ed3565b905090565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b8101908080519060200190929190505050505050565b600180600082825401925050819055506000600154905033611351611671565b60088190555061135f61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461142c576113a2816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b6114b783600b54611d7a90919063ffffffff16565b600b8190555061150f83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115a1333085600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040518082815260200191505060405180910390a2506001548114611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60075481565b600080600b5414156116875760085490506116fc565b6116f96116e8600b546116da670de0b6b3a76400006116cc6005546116be6007546116b061119a565b611bdc90919063ffffffff16565b611c6590919063ffffffff16565b611c6590919063ffffffff16565b611ceb90919063ffffffff16565b600854611d7a90919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b611773600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610740565b61177b610e5b565b565b60045481565b6001806000828254019250508190555060006001549050336117a3611671565b6008819055506117b161119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461187e576117f4816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600087116118f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b61190987600b54611d7a90919063ffffffff16565b600b8190555061196187600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf33308a8a8a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018460ff1660ff168152602001838152602001828152602001975050505050505050600060405180830381600087803b158015611aa757600080fd5b505af1158015611abb573d6000803e3d6000fd5b50505050611b0e333089600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d886040518082815260200191505060405180910390a2506001548114611bd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b505050505050565b600082821115611c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080831415611c785760009050611ce5565b6000828402905082848281611c8957fe5b0414611ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806122516021913960400191505060405180910390fd5b809150505b92915050565b6000808211611d62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481611d6d57fe5b0490508091505092915050565b600080828401905083811015611df8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611ece838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b505050565b6000818310611ee25781611ee4565b825b905092915050565b611fec848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b50505050565b6120118273ffffffffffffffffffffffffffffffffffffffff1661223d565b612083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106120d257805182526020820191506020810190506020830392506120af565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612134576040519150601f19603f3d011682016040523d82523d6000602084013e612139565b606091505b5091509150816121b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612237578080602001905160208110156121d057600080fd5b8101908080519060200190929190505050612236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061229c602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c634300051100324f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f7965645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f79735374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c65645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f742072656164795374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564a265627a7a72315820f68a9c976ed31cb83efe1c3fadee5a781858bc6c295b87f758fe27dee93edf4064736f6c634300051100325374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3664 CODESIZE SUB DUP1 PUSH2 0x3664 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP DUP2 LT ISZERO PUSH2 0x163 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3630 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x3474 DUP1 PUSH2 0x1BC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA0928C11 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAE741D8D EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x321 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x344E5E34 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4956EAF0 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x6CF8CAF8 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x81E16298 EQ PUSH2 0x1FF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x6EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0xC04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x372 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3327 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x538 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x5F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x33D5 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3409 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x339B PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3C6B16AB DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP GT PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3356 PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCB5 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC85 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x824 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCF3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6E DUP2 PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3301 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x243E DUP1 PUSH2 0xEC3 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x278D00 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x243E CODESIZE SUB DUP1 PUSH2 0x243E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x22FA DUP1 PUSH2 0x144 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x589 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x4BD JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x363 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0xE5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1331 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0x172B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x573 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1783 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x6F9 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EB PUSH8 0xDE0B6B3A7640000 PUSH2 0x6DD PUSH2 0x68F PUSH1 0x9 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x681 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x760 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x76E PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83B JUMPI PUSH2 0x7B1 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C6 DUP4 PUSH1 0xB SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x91E DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9AE CALLER DUP5 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB3B PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC08 JUMPI PUSH2 0xB7E DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xC31 JUMPI PUSH2 0xC26 PUSH1 0x6 SLOAD DUP4 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC48 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC61 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC8A PUSH1 0x6 SLOAD PUSH2 0xC7C DUP4 DUP8 PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD86 PUSH1 0x6 SLOAD DUP3 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xE19 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0xE7B PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xE89 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF56 JUMPI PUSH2 0xECC DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1035 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1ED3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x1351 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x135F PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x142C JUMPI PUSH2 0x13A2 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B7 DUP4 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x150F DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15A1 CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1687 JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x16E8 PUSH1 0xB SLOAD PUSH2 0x16DA PUSH8 0xDE0B6B3A7640000 PUSH2 0x16CC PUSH1 0x5 SLOAD PUSH2 0x16BE PUSH1 0x7 SLOAD PUSH2 0x16B0 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1773 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x740 JUMP JUMPDEST PUSH2 0x177B PUSH2 0xE5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x17A3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x17B1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x187E JUMPI PUSH2 0x17F4 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x18F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1909 DUP8 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1961 DUP8 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1B0E CALLER ADDRESS DUP10 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP9 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1C54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C89 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1CE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2251 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1D6D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ECE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1EE2 JUMPI DUP2 PUSH2 0x1EE4 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEC DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2011 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x223D JUMP JUMPDEST PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20D2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x21B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2237 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x229C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A72315820946F89BB87 SWAP4 0x1E BALANCE 0xB6 0xAF 0xB2 0xE9 0x23 0xBC 0x4D 0x2D 0xEF 0xAE ADD 0x4C 0xC8 LT 0x4E 0xAD PUSH31 0xFCB09A4BA187B764736F6C634300051100324F776E61626C653A206E657720 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573735374616B696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH5 0x65706C6F79 GASPRICE KECCAK256 PUSH2 0x6C72 PUSH6 0x616479206465 PUSH17 0x6C6F7965645374616B696E675265776172 PUSH5 0x7346616374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E74733A2063616C6C656420 PUSH3 0x65666F PUSH19 0x6520616E79206465706C6F79735374616B696E PUSH8 0x5265776172647346 PUSH2 0x6374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E743A207472616E73666572 KECCAK256 PUSH7 0x61696C65645374 PUSH2 0x6B69 PUSH15 0x6752657761726473466163746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74207265616479537461 PUSH12 0x696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74206465706C6F796564 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF6 DUP11 SWAP13 SWAP8 PUSH15 0xD31CB83EFE1C3FADEE5A781858BC6C 0x29 JUMPDEST DUP8 0xF7 PC INVALID 0x27 0xDE 0xE9 RETURNDATACOPY 0xDF BLOCKHASH PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN MSTORE8 PUSH21 0x616B696E6752657761726473466163746F72793A3A PUSH4 0x6F6E7374 PUSH19 0x7563746F723A2067656E6573697320746F6F20 PUSH20 0x6F6F6E0000000000000000000000000000000000 ",
							"sourceMap": "301:2973:10:-;;;846:329;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:329:10;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;846:329:10;;;;;;;;;;;;;;;;;;;;;;;;;666:10:2;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;997:15:10;971:22;:41;;963:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:13;1082:12;;:28;;;;;;;;;;;;;;;;;;1145:22;1121:21;:46;;;;846:329;;301:2973;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b146102435780638f32d59b1461028d578063a0928c11146102af578063ae741d8d146102cd578063d1af0c7d146102d7578063f2fde38b14610321576100a9565b8063344e5e34146100ae5780634956eaf01461011c5780636cf8caf81461016a578063715018a6146101f557806381e16298146101ff575b600080fd5b6100da600480360360208110156100c457600080fd5b8101908080359060200190929190505050610365565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101686004803603604081101561013257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a1565b005b6101ac6004803603602081101561018057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a7565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b6101fd6106eb565b005b6102416004803603602081101561021557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610824565b005b61024b610b7e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610295610ba7565b604051808215151515815260200191505060405180910390f35b6102b7610bfe565b6040518082815260200191505060405180910390f35b6102d5610c04565b005b6102df610cc5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103636004803603602081101561033757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ceb565b005b6003818154811061037257fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103a9610ba7565b61041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613327602f913960400191505060405180910390fd5b30600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405161053890610eb5565b808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050604051809103906000f0801580156105f0573d6000803e3d6000fd5b508160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001018190555060038390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b6106f3610ba7565b610765576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60025442101561087f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806133d56034913960400191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561096c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001806134096037913960400191505060405180910390fd5b600081600101541115610b7a5760008160010154905060008260010181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a5957600080fd5b505af1158015610a6d573d6000803e3d6000fd5b505050506040513d6020811015610a8357600080fd5b8101908080519060200190929190505050610ae9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061339b603a913960400191505060405180910390fd5b8160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c6b16ab826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610b6057600080fd5b505af1158015610b74573d6000803e3d6000fd5b50505050505b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60025481565b600060038054905011610c62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260458152602001806133566045913960600191505060405180910390fd5b60008090505b600380549050811015610cc257610cb560038281548110610c8557fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610824565b8080600101915050610c68565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cf3610ba7565b610d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610d6e81610d71565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610df7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806133016026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61243e80610ec38339019056fe60806040526000600455600060055562278d0060065534801561002157600080fd5b5060405161243e38038061243e8339818101604052606081101561004457600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050506001808190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506122fa806101446000396000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c80637b0a47ee116100c3578063cd3daf9d1161007c578063cd3daf9d146104db578063d1af0c7d146104f9578063df136d6514610543578063e9fad8ee14610561578063ebe2b12b1461056b578063ecd9ba82146105895761014c565b80637b0a47ee146103ad57806380faa57d146103cb5780638b876347146103e9578063a4c3b09114610441578063a694fc3a1461048f578063c8f33c91146104bd5761014c565b8063386a952511610115578063386a95251461026b5780633c6b16ab146102895780633d18b912146102b75780633fc6df6e146102c157806370a082311461030b57806372f702f3146103635761014c565b80628cc262146101515780630700037d146101a957806318160ddd146102015780631c1f78eb1461021f5780632e1a7d4d1461023d575b600080fd5b6101936004803603602081101561016757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105e2565b6040518082815260200191505060405180910390f35b6101eb600480360360208110156101bf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610700565b6040518082815260200191505060405180910390f35b610209610718565b6040518082815260200191505060405180910390f35b610227610722565b6040518082815260200191505060405180910390f35b6102696004803603602081101561025357600080fd5b8101908080359060200190929190505050610740565b005b610273610a78565b6040518082815260200191505060405180910390f35b6102b56004803603602081101561029f57600080fd5b8101908080359060200190929190505050610a7e565b005b6102bf610e5b565b005b6102c9611100565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61034d6004803603602081101561032157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611125565b6040518082815260200191505060405180910390f35b61036b61116e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b5611194565b6040518082815260200191505060405180910390f35b6103d361119a565b6040518082815260200191505060405180910390f35b61042b600480360360208110156103ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ad565b6040518082815260200191505060405180910390f35b61048d6004803603604081101561045757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111c5565b005b6104bb600480360360208110156104a557600080fd5b8101908080359060200190929190505050611331565b005b6104c561166b565b6040518082815260200191505060405180910390f35b6104e3611671565b6040518082815260200191505060405180910390f35b6105016116ff565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61054b611725565b6040518082815260200191505060405180910390f35b61056961172b565b005b61057361177d565b6040518082815260200191505060405180910390f35b6105e0600480360360a081101561059f57600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291908035906020019092919080359060200190929190505050611783565b005b60006106f9600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546106eb670de0b6b3a76400006106dd61068f600960008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610681611671565b611bdc90919063ffffffff16565b600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611c6590919063ffffffff16565b611ceb90919063ffffffff16565b611d7a90919063ffffffff16565b9050919050565b600a6020528060005260406000206000915090505481565b6000600b54905090565b600061073b600654600554611c6590919063ffffffff16565b905090565b600180600082825401925050819055506000600154905033610760611671565b60088190555061076e61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461083b576107b1816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f43616e6e6f74207769746864726177203000000000000000000000000000000081525060200191505060405180910390fd5b6108c683600b54611bdc90919063ffffffff16565b600b8190555061091e83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bdc90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506109ae3384600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040518082815260200191505060405180910390a2506001548114610a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b6000610b2d611671565b600881905550610b3b61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c0857610b7e816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6004544210610c3157610c2660065483611ceb90919063ffffffff16565b600581905550610c93565b6000610c4842600454611bdc90919063ffffffff16565b90506000610c6160055483611c6590919063ffffffff16565b9050610c8a600654610c7c8387611d7a90919063ffffffff16565b611ceb90919063ffffffff16565b60058190555050505b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d6020811015610d5e57600080fd5b81019080805190602001909291905050509050610d8660065482611ceb90919063ffffffff16565b6005541115610dfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f50726f76696465642072657761726420746f6f2068696768000000000000000081525060200191505060405180910390fd5b42600781905550610e1960065442611d7a90919063ffffffff16565b6004819055507fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d836040518082815260200191505060405180910390a1505050565b600180600082825401925050819055506000600154905033610e7b611671565b600881905550610e8961119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f5657610ecc816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115611084576000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110353382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e029092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505060015481146110fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60006111a842600454611ed3565b905090565b60096020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461126a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612272602a913960400191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112f157600080fd5b505af1158015611305573d6000803e3d6000fd5b505050506040513d602081101561131b57600080fd5b8101908080519060200190929190505050505050565b600180600082825401925050819055506000600154905033611351611671565b60088190555061135f61119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461142c576113a2816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600083116114a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b6114b783600b54611d7a90919063ffffffff16565b600b8190555061150f83600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115a1333085600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d846040518082815260200191505060405180910390a2506001548114611667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60075481565b600080600b5414156116875760085490506116fc565b6116f96116e8600b546116da670de0b6b3a76400006116cc6005546116be6007546116b061119a565b611bdc90919063ffffffff16565b611c6590919063ffffffff16565b611c6590919063ffffffff16565b611ceb90919063ffffffff16565b600854611d7a90919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60085481565b611773600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610740565b61177b610e5b565b565b60045481565b6001806000828254019250508190555060006001549050336117a3611671565b6008819055506117b161119a565b600781905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461187e576117f4816105e2565b600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600854600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600087116118f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f43616e6e6f74207374616b65203000000000000000000000000000000000000081525060200191505060405180910390fd5b61190987600b54611d7a90919063ffffffff16565b600b8190555061196187600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d7a90919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d505accf33308a8a8a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020018460ff1660ff168152602001838152602001828152602001975050505050505050600060405180830381600087803b158015611aa757600080fd5b505af1158015611abb573d6000803e3d6000fd5b50505050611b0e333089600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611eec909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d886040518082815260200191505060405180910390a2506001548114611bd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b505050505050565b600082821115611c54576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600080831415611c785760009050611ce5565b6000828402905082848281611c8957fe5b0414611ce0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806122516021913960400191505060405180910390fd5b809150505b92915050565b6000808211611d62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481611d6d57fe5b0490508091505092915050565b600080828401905083811015611df8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b611ece838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b505050565b6000818310611ee25781611ee4565b825b905092915050565b611fec848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611ff2565b50505050565b6120118273ffffffffffffffffffffffffffffffffffffffff1661223d565b612083576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b602083106120d257805182526020820191506020810190506020830392506120af565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612134576040519150601f19603f3d011682016040523d82523d6000602084013e612139565b606091505b5091509150816121b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612237578080602001905160208110156121d057600080fd5b8101908080519060200190929190505050612236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061229c602a913960400191505060405180910390fd5b5b50505050565b600080823b90506000811191505091905056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c634300051100324f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f7965645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f79735374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c65645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f742072656164795374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564a265627a7a72315820f68a9c976ed31cb83efe1c3fadee5a781858bc6c295b87f758fe27dee93edf4064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xA0928C11 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAE741D8D EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x321 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x344E5E34 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4956EAF0 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x6CF8CAF8 EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x81E16298 EQ PUSH2 0x1FF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x6EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24B PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH2 0xBA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH2 0xC04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DF PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x363 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x337 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xCEB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x372 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3327 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x538 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x5F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x765 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x33D5 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3409 PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0xB7A JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA6D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x339B PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3C6B16AB DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP GT PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3356 PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCC2 JUMPI PUSH2 0xCB5 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC85 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x824 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCF3 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6E DUP2 PUSH2 0xD71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3301 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x243E DUP1 PUSH2 0xEC3 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x278D00 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x243E CODESIZE SUB DUP1 PUSH2 0x243E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x22FA DUP1 PUSH2 0x144 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x589 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x3AD JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x4BD JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x363 JUMPI PUSH2 0x14C JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH2 0x722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x740 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0xA78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA7E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0xE5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0x116E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B5 PUSH2 0x1194 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1331 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C5 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x501 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x569 PUSH2 0x172B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x573 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1783 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x6F9 PUSH1 0xA PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6EB PUSH8 0xDE0B6B3A7640000 PUSH2 0x6DD PUSH2 0x68F PUSH1 0x9 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x681 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73B PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x760 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x76E PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x83B JUMPI PUSH2 0x7B1 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F742077697468647261772030000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8C6 DUP4 PUSH1 0xB SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x91E DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x9AE CALLER DUP5 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xA74 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB2D PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xB3B PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC08 JUMPI PUSH2 0xB7E DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0xC31 JUMPI PUSH2 0xC26 PUSH1 0x6 SLOAD DUP4 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC48 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC61 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC8A PUSH1 0x6 SLOAD PUSH2 0xC7C DUP4 DUP8 PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xD86 PUSH1 0x6 SLOAD DUP3 PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0xDFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xE19 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0xE7B PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xE89 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF56 JUMPI PUSH2 0xECC DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1084 JUMPI PUSH1 0x0 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1035 CALLER DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E02 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x10FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A8 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0x1ED3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x126A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2272 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x1351 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x135F PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x142C JUMPI PUSH2 0x13A2 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B7 DUP4 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x150F DUP4 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x15A1 CALLER ADDRESS DUP6 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD EQ ISZERO PUSH2 0x1687 JUMPI PUSH1 0x8 SLOAD SWAP1 POP PUSH2 0x16FC JUMP JUMPDEST PUSH2 0x16F9 PUSH2 0x16E8 PUSH1 0xB SLOAD PUSH2 0x16DA PUSH8 0xDE0B6B3A7640000 PUSH2 0x16CC PUSH1 0x5 SLOAD PUSH2 0x16BE PUSH1 0x7 SLOAD PUSH2 0x16B0 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1BDC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1C65 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1CEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1773 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x740 JUMP JUMPDEST PUSH2 0x177B PUSH2 0xE5B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP CALLER PUSH2 0x17A3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x17B1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x187E JUMPI PUSH2 0x17F4 DUP2 PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x9 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0x18F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1909 DUP8 PUSH1 0xB SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1961 DUP8 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1D7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF CALLER ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1B0E CALLER ADDRESS DUP10 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EEC SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP9 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1C54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1C78 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1C89 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1CE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2251 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1D6D JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1DF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ECE DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1EE2 JUMPI DUP2 PUSH2 0x1EE4 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEC DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FF2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2011 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x223D JUMP JUMPDEST PUSH2 0x2083 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x20D2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2139 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x21B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2237 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2236 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x229C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A72315820946F89BB87 SWAP4 0x1E BALANCE 0xB6 0xAF 0xB2 0xE9 0x23 0xBC 0x4D 0x2D 0xEF 0xAE ADD 0x4C 0xC8 LT 0x4E 0xAD PUSH31 0xFCB09A4BA187B764736F6C634300051100324F776E61626C653A206E657720 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573735374616B696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH5 0x65706C6F79 GASPRICE KECCAK256 PUSH2 0x6C72 PUSH6 0x616479206465 PUSH17 0x6C6F7965645374616B696E675265776172 PUSH5 0x7346616374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E74733A2063616C6C656420 PUSH3 0x65666F PUSH19 0x6520616E79206465706C6F79735374616B696E PUSH8 0x5265776172647346 PUSH2 0x6374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E743A207472616E73666572 KECCAK256 PUSH7 0x61696C65645374 PUSH2 0x6B69 PUSH15 0x6752657761726473466163746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74207265616479537461 PUSH12 0x696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74206465706C6F796564 LOG2 PUSH6 0x627A7A723158 KECCAK256 0xF6 DUP11 SWAP13 SWAP8 PUSH15 0xD31CB83EFE1C3FADEE5A781858BC6C 0x29 JUMPDEST DUP8 0xF7 PC INVALID 0x27 0xDE 0xE9 RETURNDATACOPY 0xDF BLOCKHASH PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "301:2973:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:2973:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;521:30:10;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1408:494;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1408:494:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;759:78;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;759:78:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1599:137:2;;;:::i;:::-;;2462:809:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2462:809:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;814:77:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1165:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;403:33:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2004:284;;;:::i;:::-;;369:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1885:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;521:30:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1408:494::-;1018:9:2;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1493:31:10;1527:32;:46;1560:12;1527:46;;;;;;;;;;;;;;;1493:80;;1623:1;1592:33;;:4;:19;;;;;;;;;;;;:33;;;1584:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1773:4;1780:12;;;;;;;;;;;1794;1720:87;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1720:87:10;1690:4;:19;;;:118;;;;;;;;;;;;;;;;;;1839:12;1819:4;:17;;:32;;;;1862:13;1881:12;1862:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1862:32:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1074:1:2;1408:494:10;;:::o;759:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1599:137:2:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;2462:809:10:-;2557:21;;2538:15;:40;;2530:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:31;2682:32;:46;2715:12;2682:46;;;;;;;;;;;;;;;2648:80;;2778:1;2747:33;;:4;:19;;;;;;;;;;;;:33;;;;2739:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2877:1;2857:4;:17;;;:21;2853:411;;;2895:17;2915:4;:17;;;2895:37;;2967:1;2947:4;:17;;:21;;;;3018:12;;;;;;;;;;;3011:29;;;3041:4;:19;;;;;;;;;;;;3062:12;3011:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3011:64:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3011:64:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3011:64:10;;;;;;;;;;;;;;;;2985:184;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:4;:19;;;;;;;;;;;;3184:54;;;3239:12;3184:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3184:68:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3184:68:10;;;;2853:411;;2462:809;;:::o;814:77:2:-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;1165:90::-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;403:33:10:-;;;;:::o;2004:284::-;2084:1;2061:13;:20;;;;:24;2053:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:6;2184:1;2175:10;;2170:111;2191:13;:20;;;;2187:1;:24;2170:111;;;2233:36;2252:13;2266:1;2252:16;;;;;;;;;;;;;;;;;;;;;;;;;2233:18;:36::i;:::-;2213:3;;;;;;;2170:111;;;;2004:284::o;369:27::-;;;;;;;;;;;;;:::o;1885:107:2:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;2093:225::-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;301:2973:10:-;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2685600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deploy(address,uint256)": "infinite",
								"isOwner()": "1100",
								"notifyRewardAmount(address)": "infinite",
								"notifyRewardAmounts()": "infinite",
								"owner()": "1061",
								"renounceOwnership()": "24364",
								"rewardsToken()": "1141",
								"stakingRewardsGenesis()": "1049",
								"stakingRewardsInfoByStakingToken(address)": "2108",
								"stakingTokens(uint256)": "2018",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "MSTORE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MLOAD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSHSIZE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "CODESIZE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SUB"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSHSIZE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP4"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "CODECOPY"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "ADD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "ADD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MLOAD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "ADD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP3"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MLOAD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "ADD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP3"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 666,
									"end": 676,
									"name": "CALLER"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "DUP1"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "EXP"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "SLOAD"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "MUL"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "NOT"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "DUP4"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "MUL"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "OR"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "SSTORE"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "POP"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "DUP1"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SLOAD"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "EXP"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "DIV"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "AND"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "AND"
								},
								{
									"begin": 720,
									"end": 721,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "AND"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "MLOAD"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "MLOAD"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "DUP1"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "SWAP2"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "SUB"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "SWAP1"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "LOG3"
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "TIMESTAMP"
								},
								{
									"begin": 971,
									"end": 993,
									"name": "DUP2"
								},
								{
									"begin": 971,
									"end": 1012,
									"name": "LT"
								},
								{
									"begin": 971,
									"end": 1012,
									"name": "ISZERO"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "JUMPI"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MLOAD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP3"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SUB"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP3"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "34"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH data",
									"value": "F22E14100106EB9F2180E576EDA6E762FDCBD26E14106A6823275A3B8FDEA515"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "34"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "CODECOPY"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "POP"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "POP"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MLOAD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SUB"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "REVERT"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "JUMPDEST"
								},
								{
									"begin": 1097,
									"end": 1110,
									"name": "DUP2"
								},
								{
									"begin": 1082,
									"end": 1094,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1082,
									"end": 1094,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "EXP"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "DUP2"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SLOAD"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "DUP2"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "MUL"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "NOT"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "AND"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "DUP4"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "AND"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "MUL"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "OR"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SSTORE"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "POP"
								},
								{
									"begin": 1145,
									"end": 1167,
									"name": "DUP1"
								},
								{
									"begin": 1121,
									"end": 1142,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1121,
									"end": 1167,
									"name": "DUP2"
								},
								{
									"begin": 1121,
									"end": 1167,
									"name": "SWAP1"
								},
								{
									"begin": 1121,
									"end": 1167,
									"name": "SSTORE"
								},
								{
									"begin": 1121,
									"end": 1167,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "DUP1"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "CODECOPY"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f68a9c976ed31cb83efe1c3fadee5a781858bc6c295b87f758fe27dee93edf4064736f6c63430005110032",
									".code": [
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "LT"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "SHR"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "A0928C11"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "AE741D8D"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "344E5E34"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "4956EAF0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "6CF8CAF8"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "81E16298"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "REVERT"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MLOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MSTORE"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MLOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SUB"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "RETURN"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP2"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "AND"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP2"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "STOP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP3"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP3"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP3"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "RETURN"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMPDEST"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMPDEST"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "STOP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "DUP2"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "ADD"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SWAP3"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SWAP2"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SWAP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "STOP"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "MLOAD"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "DUP3"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "MSTORE"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "SWAP2"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "MLOAD"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "SWAP2"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "SUB"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "RETURN"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMPDEST"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMPDEST"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "MLOAD"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP3"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP2"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "MSTORE"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP2"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "POP"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "POP"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "MLOAD"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP2"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SUB"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "RETURN"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MSTORE"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "ADD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "POP"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "RETURN"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMPDEST"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMPDEST"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "STOP"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP3"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MSTORE"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "ADD"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "POP"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MLOAD"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SUB"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "RETURN"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "DUP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "DUP2"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "ADD"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "DUP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "DUP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "ADD"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SWAP3"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SWAP2"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SWAP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "POP"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "POP"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "POP"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "STOP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SLOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "LT"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPI"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "INVALID"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MSTORE"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "KECCAK256"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SLOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "EXP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DIV"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1572,
											"name": "DUP5"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "ADD"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "KECCAK256"
										},
										{
											"begin": 1493,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1493,
											"end": 1573,
											"name": "POP"
										},
										{
											"begin": 1623,
											"end": 1624,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1625,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1625,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "DUP2"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "SLOAD"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "EXP"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "DIV"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1625,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1625,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1625,
											"name": "EQ"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "JUMPI"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MLOAD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP3"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SUB"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP3"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH data",
											"value": "77D8567A7B7BF9A9A30EA727F6E525CAE6667D736CDAFF555C86DB8D81648A1A"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "CODECOPY"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MLOAD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SUB"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "REVERT"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "JUMPDEST"
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "ADDRESS"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "SLOAD"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "EXP"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "DIV"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "AND"
										},
										{
											"begin": 1794,
											"end": 1806,
											"name": "DUP5"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MLOAD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "JUMPDEST"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP5"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP4"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP3"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP4"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MLOAD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SUB"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "CREATE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 1694,
											"name": "DUP2"
										},
										{
											"begin": 1690,
											"end": 1709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1709,
											"name": "ADD"
										},
										{
											"begin": 1690,
											"end": 1709,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "EXP"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SLOAD"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "MUL"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "NOT"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "AND"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP4"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "AND"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "MUL"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "OR"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SSTORE"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "POP"
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "DUP2"
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1819,
											"end": 1836,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 1836,
											"name": "ADD"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "DUP2"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP1"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SSTORE"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "POP"
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1881,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "DUP3"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SUB"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "MSTORE"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "KECCAK256"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP3"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "EXP"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SLOAD"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "DUP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "MUL"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "NOT"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "DUP4"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "MUL"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "OR"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SSTORE"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "POP"
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "KECCAK256"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SLOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "EXP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DIV"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SLOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP3"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SLOAD"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "EXP"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DIV"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "AND"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "MLOAD"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "MLOAD"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "DUP1"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "SWAP2"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "SUB"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "SWAP1"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "LOG3"
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "EXP"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SLOAD"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "MUL"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "NOT"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "AND"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SWAP1"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP4"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "AND"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "MUL"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "OR"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SWAP1"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SSTORE"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "POP"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2557,
											"end": 2578,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2557,
											"end": 2578,
											"name": "SLOAD"
										},
										{
											"begin": 2538,
											"end": 2553,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2538,
											"end": 2578,
											"name": "LT"
										},
										{
											"begin": 2538,
											"end": 2578,
											"name": "ISZERO"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "JUMPI"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MLOAD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP3"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SUB"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP3"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH data",
											"value": "E71986032604F829CCAEC9386C51E838A85CDBF506769BD103C829F640682ADF"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "CODECOPY"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MLOAD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SUB"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "REVERT"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "JUMPDEST"
										},
										{
											"begin": 2648,
											"end": 2679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "DUP4"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "AND"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "AND"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "DUP2"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "MSTORE"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "ADD"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "DUP2"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "MSTORE"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "ADD"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "KECCAK256"
										},
										{
											"begin": 2648,
											"end": 2728,
											"name": "SWAP1"
										},
										{
											"begin": 2648,
											"end": 2728,
											"name": "POP"
										},
										{
											"begin": 2778,
											"end": 2779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "AND"
										},
										{
											"begin": 2747,
											"end": 2751,
											"name": "DUP2"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "ADD"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "SWAP1"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "SLOAD"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "SWAP1"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "EXP"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "SWAP1"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "DIV"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "AND"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "AND"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "EQ"
										},
										{
											"begin": 2747,
											"end": 2780,
											"name": "ISZERO"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH data",
											"value": "E8F5C4CA6631F4BFE6FFABF099741B79E5C6B86618DDCBEEE6BA3C5940184427"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "CODECOPY"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "REVERT"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2861,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "SLOAD"
										},
										{
											"begin": 2857,
											"end": 2878,
											"name": "GT"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "ISZERO"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "JUMPI"
										},
										{
											"begin": 2895,
											"end": 2912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2919,
											"name": "DUP2"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "ADD"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "SLOAD"
										},
										{
											"begin": 2895,
											"end": 2932,
											"name": "SWAP1"
										},
										{
											"begin": 2895,
											"end": 2932,
											"name": "POP"
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2951,
											"name": "DUP3"
										},
										{
											"begin": 2947,
											"end": 2964,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2947,
											"end": 2964,
											"name": "ADD"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "DUP2"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "SSTORE"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "POP"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SLOAD"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "EXP"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DIV"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "AND"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "DUP4"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "ADD"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SWAP1"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SLOAD"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SWAP1"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "EXP"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SWAP1"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "DIV"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "AND"
										},
										{
											"begin": 3062,
											"end": 3074,
											"name": "DUP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SHL"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SUB"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP8"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "GAS"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "CALL"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "JUMPI"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MLOAD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP3"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SUB"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP3"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH data",
											"value": "AFBE2226ADED12CD2F0D3C83FF167EEDC78632DC0894F92EEA331D3F2B56D089"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "CODECOPY"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MLOAD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SUB"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "REVERT"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "JUMPDEST"
										},
										{
											"begin": 3199,
											"end": 3203,
											"name": "DUP2"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "ADD"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SLOAD"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "EXP"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "DIV"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "AND"
										},
										{
											"begin": 3184,
											"end": 3238,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3184,
											"end": 3238,
											"name": "AND"
										},
										{
											"begin": 3184,
											"end": 3238,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": 3239,
											"end": 3251,
											"name": "DUP3"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MLOAD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP3"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "AND"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SHL"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MSTORE"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP3"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MSTORE"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MLOAD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP4"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SUB"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP8"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "GAS"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "CALL"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "POP"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "JUMPDEST"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP1"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "SLOAD"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "EXP"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DIV"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 871,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 871,
											"end": 884,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "SLOAD"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "EXP"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "DIV"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1228,
											"end": 1238,
											"name": "CALLER"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "EQ"
										},
										{
											"begin": 1221,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1248,
											"name": "POP"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SLOAD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMPDEST"
										},
										{
											"begin": 2084,
											"end": 2085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2074,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2061,
											"end": 2081,
											"name": "DUP1"
										},
										{
											"begin": 2061,
											"end": 2081,
											"name": "SLOAD"
										},
										{
											"begin": 2061,
											"end": 2081,
											"name": "SWAP1"
										},
										{
											"begin": 2061,
											"end": 2081,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2085,
											"name": "GT"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "JUMPI"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MLOAD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP3"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SUB"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP3"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "45"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH data",
											"value": "AE1F87E20C157D2878A2E48B377D209DFDDFC6D5EC9B80CEECC5ADDD0EF6FFDB"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "45"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "CODECOPY"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "POP"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "POP"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MLOAD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SUB"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "REVERT"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "JUMPDEST"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "DUP1"
										},
										{
											"begin": 2175,
											"end": 2185,
											"name": "SWAP1"
										},
										{
											"begin": 2175,
											"end": 2185,
											"name": "POP"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2191,
											"end": 2204,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "DUP1"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "SLOAD"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "SWAP1"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "POP"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "DUP2"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "LT"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "ISZERO"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMPI"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2252,
											"end": 2265,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP3"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "DUP2"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SLOAD"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "DUP2"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "LT"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "JUMPI"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "INVALID"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "JUMPDEST"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "MSTORE"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "KECCAK256"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "ADD"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SLOAD"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "EXP"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "DIV"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "AND"
										},
										{
											"begin": 2233,
											"end": 2251,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "JUMPDEST"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "DUP1"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "DUP1"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "ADD"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "SWAP2"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "POP"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "POP"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMP"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "POP"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SLOAD"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "EXP"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SWAP1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DIV"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1976,
											"end": 1984,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "POP"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2093,
											"end": 2318,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2093,
											"end": 2318,
											"name": "JUMPDEST"
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "AND"
										},
										{
											"begin": 2166,
											"end": 2174,
											"name": "DUP2"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "AND"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "EQ"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "ISZERO"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "JUMPI"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MLOAD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP3"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SUB"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP3"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "CODECOPY"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MLOAD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SUB"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "REVERT"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "JUMPDEST"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "DUP1"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "AND"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP1"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SLOAD"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "EXP"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SWAP1"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DIV"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "MLOAD"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "MLOAD"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "DUP1"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "SUB"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "SWAP1"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "LOG3"
										},
										{
											"begin": 2303,
											"end": 2311,
											"name": "DUP1"
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "DUP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "EXP"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "DUP2"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SLOAD"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "DUP2"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "MUL"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "NOT"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "AND"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "DUP4"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "AND"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "MUL"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "OR"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SSTORE"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "POP"
										},
										{
											"begin": 2093,
											"end": 2318,
											"name": "POP"
										},
										{
											"begin": 2093,
											"end": 2318,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH #[$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP4"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CODECOPY"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 732,
													"end": 6612,
													"name": "PUSH",
													"value": "80"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "MSTORE"
												},
												{
													"begin": 1044,
													"end": 1045,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1014,
													"end": 1045,
													"name": "PUSH",
													"value": "4"
												},
												{
													"begin": 1014,
													"end": 1045,
													"name": "SSTORE"
												},
												{
													"begin": 1080,
													"end": 1081,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1052,
													"end": 1081,
													"name": "PUSH",
													"value": "5"
												},
												{
													"begin": 1052,
													"end": 1081,
													"name": "SSTORE"
												},
												{
													"begin": 1121,
													"end": 1128,
													"name": "PUSH",
													"value": "278D00"
												},
												{
													"begin": 1088,
													"end": 1128,
													"name": "PUSH",
													"value": "6"
												},
												{
													"begin": 1088,
													"end": 1128,
													"name": "SSTORE"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "CALLVALUE"
												},
												{
													"begin": 8,
													"end": 17,
													"name": "DUP1"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "ISZERO"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "PUSH [tag]",
													"value": "1"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "JUMPI"
												},
												{
													"begin": 30,
													"end": 31,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 27,
													"end": 28,
													"name": "DUP1"
												},
												{
													"begin": 20,
													"end": 32,
													"name": "REVERT"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "tag",
													"value": "1"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "JUMPDEST"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "MLOAD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSHSIZE"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "CODESIZE"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SUB"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSHSIZE"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP4"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "CODECOPY"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP2"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP2"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "ADD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "MSTORE"
												},
												{
													"begin": 13,
													"end": 15,
													"name": "PUSH",
													"value": "60"
												},
												{
													"begin": 8,
													"end": 11,
													"name": "DUP2"
												},
												{
													"begin": 5,
													"end": 16,
													"name": "LT"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "ISZERO"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "PUSH [tag]",
													"value": "2"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPI"
												},
												{
													"begin": 29,
													"end": 30,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 26,
													"end": 27,
													"name": "DUP1"
												},
												{
													"begin": 19,
													"end": 31,
													"name": "REVERT"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "tag",
													"value": "2"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPDEST"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP2"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "ADD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "MLOAD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "ADD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP3"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP2"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "MLOAD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "ADD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP3"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP2"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "DUP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "MLOAD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "ADD"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP3"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP2"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "SWAP1"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 884,
													"end": 885,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": 868,
													"end": 881,
													"name": "DUP1"
												},
												{
													"begin": 868,
													"end": 885,
													"name": "DUP2"
												},
												{
													"begin": 868,
													"end": 885,
													"name": "SWAP1"
												},
												{
													"begin": 868,
													"end": 885,
													"name": "SSTORE"
												},
												{
													"begin": 868,
													"end": 885,
													"name": "POP"
												},
												{
													"begin": 1674,
													"end": 1687,
													"name": "DUP2"
												},
												{
													"begin": 1652,
													"end": 1664,
													"name": "PUSH",
													"value": "2"
												},
												{
													"begin": 1652,
													"end": 1664,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "PUSH",
													"value": "100"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "EXP"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "DUP2"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "SLOAD"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "DUP2"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "MUL"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "NOT"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "AND"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "SWAP1"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "DUP4"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "AND"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "MUL"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "OR"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "SWAP1"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "SSTORE"
												},
												{
													"begin": 1652,
													"end": 1688,
													"name": "POP"
												},
												{
													"begin": 1721,
													"end": 1734,
													"name": "DUP1"
												},
												{
													"begin": 1699,
													"end": 1711,
													"name": "PUSH",
													"value": "3"
												},
												{
													"begin": 1699,
													"end": 1711,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "PUSH",
													"value": "100"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "EXP"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "DUP2"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "SLOAD"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "DUP2"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "MUL"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "NOT"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "AND"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "SWAP1"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "DUP4"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "AND"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "MUL"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "OR"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "SWAP1"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "SSTORE"
												},
												{
													"begin": 1699,
													"end": 1735,
													"name": "POP"
												},
												{
													"begin": 1768,
													"end": 1788,
													"name": "DUP3"
												},
												{
													"begin": 1746,
													"end": 1765,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1746,
													"end": 1765,
													"name": "DUP1"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "PUSH",
													"value": "100"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "EXP"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "DUP2"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "SLOAD"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "DUP2"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "MUL"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "NOT"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "AND"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "SWAP1"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "DUP4"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "AND"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "MUL"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "OR"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "SWAP1"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "SSTORE"
												},
												{
													"begin": 1746,
													"end": 1788,
													"name": "POP"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 1512,
													"end": 1796,
													"name": "POP"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "PUSH #[$]",
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "DUP1"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "PUSH [$]",
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "CODECOPY"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 732,
													"end": 6612,
													"name": "RETURN"
												}
											],
											".data": {
												"0": {
													".auxdata": "a265627a7a72315820946f89bb87931e31b6afb2e923bc4d2defae014cc8104ead7efcb09a4ba187b764736f6c63430005110032",
													".code": [
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "80"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "MSTORE"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "CALLVALUE"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "POP"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "LT"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "SHR"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "7B0A47EE"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "GT"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "26"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "CD3DAF9D"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "GT"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "27"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "CD3DAF9D"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "20"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "D1AF0C7D"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "21"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "DF136D65"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "22"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "E9FAD8EE"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "23"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "EBE2B12B"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "24"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "ECD9BA82"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "25"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMP"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "tag",
															"value": "27"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "7B0A47EE"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "14"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "80FAA57D"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "15"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "8B876347"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "16"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "A4C3B091"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "17"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "A694FC3A"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "18"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "C8F33C91"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "19"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMP"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "tag",
															"value": "26"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "386A9525"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "GT"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "386A9525"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "8"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "3C6B16AB"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "9"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "3D18B912"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "10"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "3FC6DF6E"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "11"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "70A08231"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "12"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "72F702F3"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "13"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMP"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "tag",
															"value": "28"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "8CC262"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "3"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "700037D"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "4"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "18160DDD"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "5"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "1C1F78EB"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "6"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "2E1A7D4D"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH [tag]",
															"value": "7"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "tag",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6612,
															"name": "REVERT"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "tag",
															"value": "3"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "JUMPDEST"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH [tag]",
															"value": "29"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "30"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP2"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "ADD"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "AND"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "ADD"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP3"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP2"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "tag",
															"value": "29"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "JUMPDEST"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "MLOAD"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP3"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP2"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "MSTORE"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "ADD"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP2"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "MLOAD"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "DUP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP2"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SUB"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "RETURN"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "tag",
															"value": "4"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "JUMPDEST"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH [tag]",
															"value": "32"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "33"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "33"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "ADD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "AND"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "ADD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP3"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH [tag]",
															"value": "34"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "tag",
															"value": "32"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "JUMPDEST"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "MLOAD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP3"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "MSTORE"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "ADD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "MLOAD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SUB"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "RETURN"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "tag",
															"value": "5"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "JUMPDEST"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "PUSH [tag]",
															"value": "35"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "PUSH [tag]",
															"value": "36"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "tag",
															"value": "35"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "JUMPDEST"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "MLOAD"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "DUP3"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "DUP2"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "MSTORE"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "ADD"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "SWAP2"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "MLOAD"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "DUP1"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "SWAP2"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "SUB"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "RETURN"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "tag",
															"value": "6"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "JUMPDEST"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "PUSH [tag]",
															"value": "37"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "tag",
															"value": "37"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "JUMPDEST"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "MLOAD"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "DUP1"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "DUP3"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "DUP2"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "MSTORE"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "ADD"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "SWAP2"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "POP"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "POP"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "MLOAD"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "DUP1"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "SWAP2"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "SUB"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "SWAP1"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "RETURN"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "tag",
															"value": "7"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "JUMPDEST"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "PUSH [tag]",
															"value": "39"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "DUP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "40"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "40"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "DUP2"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "ADD"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SWAP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "DUP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "DUP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SWAP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "ADD"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SWAP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SWAP3"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SWAP2"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "SWAP1"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "POP"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "POP"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "POP"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "PUSH [tag]",
															"value": "41"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "tag",
															"value": "39"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "JUMPDEST"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "STOP"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "tag",
															"value": "8"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMPDEST"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH [tag]",
															"value": "42"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH [tag]",
															"value": "43"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "tag",
															"value": "42"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMPDEST"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "MLOAD"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "DUP1"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "DUP3"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "DUP2"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "MSTORE"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "ADD"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "SWAP2"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "POP"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "POP"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "MLOAD"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "DUP1"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "SWAP2"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "SUB"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "SWAP1"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "RETURN"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "tag",
															"value": "9"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "JUMPDEST"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "PUSH [tag]",
															"value": "44"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "DUP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "45"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "45"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "DUP2"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "ADD"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SWAP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "DUP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "DUP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SWAP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "ADD"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SWAP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SWAP3"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SWAP2"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "SWAP1"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "POP"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "POP"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "POP"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "PUSH [tag]",
															"value": "46"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "tag",
															"value": "44"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "JUMPDEST"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "STOP"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "tag",
															"value": "10"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "JUMPDEST"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "PUSH [tag]",
															"value": "47"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "PUSH [tag]",
															"value": "48"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "tag",
															"value": "47"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "JUMPDEST"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "STOP"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "tag",
															"value": "11"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMPDEST"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH [tag]",
															"value": "49"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH [tag]",
															"value": "50"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "tag",
															"value": "49"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMPDEST"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "MLOAD"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP3"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "AND"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "AND"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP2"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "MSTORE"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "ADD"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP2"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "POP"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "POP"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "MLOAD"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP2"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SUB"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "RETURN"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "tag",
															"value": "12"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "JUMPDEST"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH [tag]",
															"value": "51"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "52"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "52"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP2"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "ADD"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "AND"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "ADD"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP3"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP2"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH [tag]",
															"value": "53"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "tag",
															"value": "51"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "JUMPDEST"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "MLOAD"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP3"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP2"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "MSTORE"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "ADD"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP2"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "MLOAD"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "DUP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP2"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SUB"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "RETURN"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "tag",
															"value": "13"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMPDEST"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH [tag]",
															"value": "54"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH [tag]",
															"value": "55"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "tag",
															"value": "54"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMPDEST"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "MLOAD"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DUP1"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DUP3"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "AND"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "AND"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DUP2"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "MSTORE"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "ADD"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SWAP2"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "POP"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "POP"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "MLOAD"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DUP1"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SWAP2"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SUB"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SWAP1"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "RETURN"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "tag",
															"value": "14"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMPDEST"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH [tag]",
															"value": "56"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH [tag]",
															"value": "57"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "tag",
															"value": "56"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMPDEST"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "MLOAD"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "DUP1"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "DUP3"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "DUP2"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "MSTORE"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "ADD"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "SWAP2"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "POP"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "POP"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "MLOAD"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "DUP1"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "SWAP2"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "SUB"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "SWAP1"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "RETURN"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "tag",
															"value": "15"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "JUMPDEST"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "tag",
															"value": "58"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "JUMPDEST"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "MLOAD"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "DUP1"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "DUP3"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "DUP2"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "MSTORE"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "ADD"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "SWAP2"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "POP"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "POP"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "MLOAD"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "DUP1"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "SWAP2"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "SUB"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "SWAP1"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "RETURN"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "tag",
															"value": "16"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "JUMPDEST"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH [tag]",
															"value": "60"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "61"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "61"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "ADD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "AND"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "ADD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP3"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH [tag]",
															"value": "62"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "tag",
															"value": "60"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "JUMPDEST"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "MLOAD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP3"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "MSTORE"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "ADD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "MLOAD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SUB"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "RETURN"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "tag",
															"value": "17"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "JUMPDEST"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "PUSH [tag]",
															"value": "63"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "DUP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "64"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "64"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "DUP2"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "ADD"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "DUP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "DUP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "AND"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "ADD"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP3"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP2"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "DUP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "ADD"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP3"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP2"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "SWAP1"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "POP"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "POP"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "POP"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "PUSH [tag]",
															"value": "65"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "tag",
															"value": "63"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "JUMPDEST"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "STOP"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "tag",
															"value": "18"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "JUMPDEST"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "PUSH [tag]",
															"value": "66"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "DUP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "67"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "67"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "DUP2"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "ADD"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SWAP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "DUP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "DUP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SWAP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "ADD"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SWAP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SWAP3"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SWAP2"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "SWAP1"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "POP"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "POP"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "POP"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "tag",
															"value": "66"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "JUMPDEST"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "STOP"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "tag",
															"value": "19"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "JUMPDEST"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "PUSH [tag]",
															"value": "69"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "PUSH [tag]",
															"value": "70"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "tag",
															"value": "69"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "JUMPDEST"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "MLOAD"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "DUP1"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "DUP3"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "DUP2"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "MSTORE"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "ADD"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "SWAP2"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "POP"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "POP"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "MLOAD"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "DUP1"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "SWAP2"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "SUB"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "SWAP1"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "RETURN"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "tag",
															"value": "20"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "JUMPDEST"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "PUSH [tag]",
															"value": "71"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "tag",
															"value": "71"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "JUMPDEST"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "MLOAD"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "DUP1"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "DUP3"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "DUP2"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "MSTORE"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "ADD"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "SWAP2"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "POP"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "POP"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "MLOAD"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "DUP1"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "SWAP2"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "SUB"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "SWAP1"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "RETURN"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "tag",
															"value": "21"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMPDEST"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH [tag]",
															"value": "73"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH [tag]",
															"value": "74"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "tag",
															"value": "73"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMPDEST"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "MLOAD"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DUP1"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DUP3"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "AND"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "AND"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DUP2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "MSTORE"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "ADD"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SWAP2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "POP"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "POP"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "MLOAD"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DUP1"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SWAP2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SUB"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SWAP1"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "RETURN"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "tag",
															"value": "22"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "JUMPDEST"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "PUSH [tag]",
															"value": "75"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "PUSH [tag]",
															"value": "76"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "tag",
															"value": "75"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "JUMPDEST"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "MLOAD"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "DUP1"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "DUP3"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "DUP2"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "MSTORE"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "ADD"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "SWAP2"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "POP"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "POP"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "MLOAD"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "DUP1"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "SWAP2"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "SUB"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "SWAP1"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "RETURN"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "tag",
															"value": "23"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "JUMPDEST"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "PUSH [tag]",
															"value": "77"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "PUSH [tag]",
															"value": "78"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "tag",
															"value": "77"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "JUMPDEST"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "STOP"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "tag",
															"value": "24"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMPDEST"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH [tag]",
															"value": "79"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH [tag]",
															"value": "80"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "tag",
															"value": "79"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMPDEST"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "MLOAD"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "DUP1"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "DUP3"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "DUP2"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "MSTORE"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "ADD"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "SWAP2"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "POP"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "POP"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "MLOAD"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "DUP1"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "SWAP2"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "SUB"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "SWAP1"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "RETURN"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "tag",
															"value": "25"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "JUMPDEST"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH [tag]",
															"value": "81"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 16,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 17,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "82"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "82"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP2"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "ADD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "ADD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP3"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP2"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "ADD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP3"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP2"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "AND"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "ADD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP3"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP2"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "ADD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP3"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP2"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "DUP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "ADD"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP3"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP2"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "SWAP1"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "PUSH [tag]",
															"value": "83"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "tag",
															"value": "81"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "JUMPDEST"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "STOP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "tag",
															"value": "31"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "JUMPDEST"
														},
														{
															"begin": 2597,
															"end": 2604,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "PUSH [tag]",
															"value": "85"
														},
														{
															"begin": 2716,
															"end": 2723,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2724,
															"end": 2731,
															"name": "DUP5"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "AND"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "AND"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "DUP2"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "MSTORE"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "ADD"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "SWAP1"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "DUP2"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "MSTORE"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "ADD"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "KECCAK256"
														},
														{
															"begin": 2716,
															"end": 2732,
															"name": "SLOAD"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "PUSH [tag]",
															"value": "86"
														},
														{
															"begin": 2706,
															"end": 2710,
															"name": "PUSH",
															"value": "DE0B6B3A7640000"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "PUSH [tag]",
															"value": "87"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "PUSH [tag]",
															"value": "88"
														},
														{
															"begin": 2668,
															"end": 2690,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2691,
															"end": 2698,
															"name": "DUP10"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "AND"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "AND"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "DUP2"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "MSTORE"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "ADD"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "SWAP1"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "DUP2"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "MSTORE"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "ADD"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "KECCAK256"
														},
														{
															"begin": 2668,
															"end": 2699,
															"name": "SLOAD"
														},
														{
															"begin": 2647,
															"end": 2663,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 2647,
															"end": 2661,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 2647,
															"end": 2663,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2647,
															"end": 2663,
															"name": "tag",
															"value": "89"
														},
														{
															"begin": 2647,
															"end": 2663,
															"name": "JUMPDEST"
														},
														{
															"begin": 2647,
															"end": 2667,
															"name": "PUSH [tag]",
															"value": "90"
														},
														{
															"begin": 2647,
															"end": 2667,
															"name": "SWAP1"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "SWAP2"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "SWAP1"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "AND"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "tag",
															"value": "88"
														},
														{
															"begin": 2647,
															"end": 2700,
															"name": "JUMPDEST"
														},
														{
															"begin": 2624,
															"end": 2633,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2634,
															"end": 2641,
															"name": "DUP10"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "AND"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "AND"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "DUP2"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "MSTORE"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "ADD"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "DUP2"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "MSTORE"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "ADD"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "KECCAK256"
														},
														{
															"begin": 2624,
															"end": 2642,
															"name": "SLOAD"
														},
														{
															"begin": 2624,
															"end": 2646,
															"name": "PUSH [tag]",
															"value": "91"
														},
														{
															"begin": 2624,
															"end": 2646,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "SWAP2"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "AND"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "tag",
															"value": "87"
														},
														{
															"begin": 2624,
															"end": 2701,
															"name": "JUMPDEST"
														},
														{
															"begin": 2624,
															"end": 2705,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 2624,
															"end": 2705,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "SWAP2"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "AND"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "tag",
															"value": "86"
														},
														{
															"begin": 2624,
															"end": 2711,
															"name": "JUMPDEST"
														},
														{
															"begin": 2624,
															"end": 2715,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 2624,
															"end": 2715,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "SWAP2"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "SWAP1"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "AND"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "tag",
															"value": "85"
														},
														{
															"begin": 2624,
															"end": 2733,
															"name": "JUMPDEST"
														},
														{
															"begin": 2617,
															"end": 2733,
															"name": "SWAP1"
														},
														{
															"begin": 2617,
															"end": 2733,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP2"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "SWAP1"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "POP"
														},
														{
															"begin": 2543,
															"end": 2741,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "tag",
															"value": "34"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "JUMPDEST"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "MSTORE"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "MSTORE"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "KECCAK256"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SWAP1"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "POP"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "SLOAD"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "DUP2"
														},
														{
															"begin": 1325,
															"end": 1367,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "tag",
															"value": "36"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "JUMPDEST"
														},
														{
															"begin": 1891,
															"end": 1898,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1918,
															"end": 1930,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 1918,
															"end": 1930,
															"name": "SLOAD"
														},
														{
															"begin": 1911,
															"end": 1930,
															"name": "SWAP1"
														},
														{
															"begin": 1911,
															"end": 1930,
															"name": "POP"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "SWAP1"
														},
														{
															"begin": 1845,
															"end": 1938,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "tag",
															"value": "38"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "JUMPDEST"
														},
														{
															"begin": 2804,
															"end": 2811,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 2846,
															"end": 2861,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 2846,
															"end": 2861,
															"name": "SLOAD"
														},
														{
															"begin": 2831,
															"end": 2841,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 2831,
															"end": 2841,
															"name": "SLOAD"
														},
														{
															"begin": 2831,
															"end": 2845,
															"name": "PUSH [tag]",
															"value": "91"
														},
														{
															"begin": 2831,
															"end": 2845,
															"name": "SWAP1"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "SWAP2"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "SWAP1"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "AND"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "tag",
															"value": "96"
														},
														{
															"begin": 2831,
															"end": 2862,
															"name": "JUMPDEST"
														},
														{
															"begin": 2824,
															"end": 2862,
															"name": "SWAP1"
														},
														{
															"begin": 2824,
															"end": 2862,
															"name": "POP"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "SWAP1"
														},
														{
															"begin": 2749,
															"end": 2870,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "tag",
															"value": "41"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1329,
															"end": 1349,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "SLOAD"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "SWAP1"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "POP"
														},
														{
															"begin": 3942,
															"end": 3952,
															"name": "CALLER"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "PUSH [tag]",
															"value": "99"
														},
														{
															"begin": 6090,
															"end": 6104,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "tag",
															"value": "99"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMPDEST"
														},
														{
															"begin": 6067,
															"end": 6087,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "DUP2"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SWAP1"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SSTORE"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "POP"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "PUSH [tag]",
															"value": "100"
														},
														{
															"begin": 6134,
															"end": 6158,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "tag",
															"value": "100"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMPDEST"
														},
														{
															"begin": 6117,
															"end": 6131,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "DUP2"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SWAP1"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SSTORE"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "POP"
														},
														{
															"begin": 6194,
															"end": 6195,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6182,
															"name": "DUP2"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "EQ"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "PUSH [tag]",
															"value": "101"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPI"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "PUSH [tag]",
															"value": "102"
														},
														{
															"begin": 6239,
															"end": 6246,
															"name": "DUP2"
														},
														{
															"begin": 6232,
															"end": 6238,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "tag",
															"value": "102"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMPDEST"
														},
														{
															"begin": 6213,
															"end": 6220,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6221,
															"end": 6228,
															"name": "DUP4"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "KECCAK256"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SSTORE"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "POP"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "SLOAD"
														},
														{
															"begin": 6262,
															"end": 6284,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6285,
															"end": 6292,
															"name": "DUP4"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "KECCAK256"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SSTORE"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "POP"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "tag",
															"value": "101"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPDEST"
														},
														{
															"begin": 3982,
															"end": 3983,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3973,
															"end": 3979,
															"name": "DUP4"
														},
														{
															"begin": 3973,
															"end": 3983,
															"name": "GT"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH [tag]",
															"value": "104"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "JUMPI"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "MLOAD"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP2"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "MSTORE"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "ADD"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP1"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP1"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "ADD"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP3"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP2"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "SUB"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP3"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "MSTORE"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "11"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP2"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "MSTORE"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "ADD"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP1"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "43616E6E6F742077697468647261772030000000000000000000000000000000"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP2"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "MSTORE"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "POP"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "ADD"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "SWAP2"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "POP"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "POP"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "MLOAD"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "DUP1"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "SWAP2"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "SUB"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "SWAP1"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "REVERT"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "tag",
															"value": "104"
														},
														{
															"begin": 3965,
															"end": 4005,
															"name": "JUMPDEST"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "PUSH [tag]",
															"value": "105"
														},
														{
															"begin": 4048,
															"end": 4054,
															"name": "DUP4"
														},
														{
															"begin": 4031,
															"end": 4043,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 4031,
															"end": 4043,
															"name": "SLOAD"
														},
														{
															"begin": 4031,
															"end": 4047,
															"name": "PUSH [tag]",
															"value": "90"
														},
														{
															"begin": 4031,
															"end": 4047,
															"name": "SWAP1"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "SWAP2"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "SWAP1"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "AND"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "tag",
															"value": "105"
														},
														{
															"begin": 4031,
															"end": 4055,
															"name": "JUMPDEST"
														},
														{
															"begin": 4016,
															"end": 4028,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 4016,
															"end": 4055,
															"name": "DUP2"
														},
														{
															"begin": 4016,
															"end": 4055,
															"name": "SWAP1"
														},
														{
															"begin": 4016,
															"end": 4055,
															"name": "SSTORE"
														},
														{
															"begin": 4016,
															"end": 4055,
															"name": "POP"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "PUSH [tag]",
															"value": "106"
														},
														{
															"begin": 4116,
															"end": 4122,
															"name": "DUP4"
														},
														{
															"begin": 4090,
															"end": 4099,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4100,
															"end": 4110,
															"name": "CALLER"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "AND"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "AND"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "DUP2"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "MSTORE"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "ADD"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "SWAP1"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "DUP2"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "MSTORE"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "ADD"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "KECCAK256"
														},
														{
															"begin": 4090,
															"end": 4111,
															"name": "SLOAD"
														},
														{
															"begin": 4090,
															"end": 4115,
															"name": "PUSH [tag]",
															"value": "90"
														},
														{
															"begin": 4090,
															"end": 4115,
															"name": "SWAP1"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "SWAP2"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "SWAP1"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "AND"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "tag",
															"value": "106"
														},
														{
															"begin": 4090,
															"end": 4123,
															"name": "JUMPDEST"
														},
														{
															"begin": 4066,
															"end": 4075,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4076,
															"end": 4086,
															"name": "CALLER"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "AND"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "AND"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "DUP2"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "MSTORE"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "ADD"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "SWAP1"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "DUP2"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "MSTORE"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "ADD"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4066,
															"end": 4087,
															"name": "KECCAK256"
														},
														{
															"begin": 4066,
															"end": 4123,
															"name": "DUP2"
														},
														{
															"begin": 4066,
															"end": 4123,
															"name": "SWAP1"
														},
														{
															"begin": 4066,
															"end": 4123,
															"name": "SSTORE"
														},
														{
															"begin": 4066,
															"end": 4123,
															"name": "POP"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "PUSH [tag]",
															"value": "107"
														},
														{
															"begin": 4160,
															"end": 4170,
															"name": "CALLER"
														},
														{
															"begin": 4172,
															"end": 4178,
															"name": "DUP5"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "SWAP1"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "SLOAD"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "SWAP1"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "EXP"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "SWAP1"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "DIV"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4134,
															"end": 4146,
															"name": "AND"
														},
														{
															"begin": 4134,
															"end": 4159,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4134,
															"end": 4159,
															"name": "AND"
														},
														{
															"begin": 4134,
															"end": 4159,
															"name": "PUSH [tag]",
															"value": "108"
														},
														{
															"begin": 4134,
															"end": 4159,
															"name": "SWAP1"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "SWAP3"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "SWAP2"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "SWAP1"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "AND"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "tag",
															"value": "107"
														},
														{
															"begin": 4134,
															"end": 4179,
															"name": "JUMPDEST"
														},
														{
															"begin": 4205,
															"end": 4215,
															"name": "CALLER"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "AND"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "PUSH",
															"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
														},
														{
															"begin": 4217,
															"end": 4223,
															"name": "DUP5"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "MLOAD"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "DUP1"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "DUP3"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "DUP2"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "MSTORE"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "ADD"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "SWAP2"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "POP"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "POP"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "MLOAD"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "DUP1"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "SWAP2"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "SUB"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "SWAP1"
														},
														{
															"begin": 4195,
															"end": 4224,
															"name": "LOG2"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "109"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "109"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "POP"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "POP"
														},
														{
															"begin": 3875,
															"end": 4232,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "tag",
															"value": "43"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMPDEST"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "SLOAD"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "DUP2"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "tag",
															"value": "46"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "JUMPDEST"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "DUP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SWAP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SLOAD"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SWAP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "EXP"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SWAP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "DIV"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 241,
															"name": "CALLER"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "EQ"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH [tag]",
															"value": "111"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "JUMPI"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MLOAD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP3"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SUB"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP3"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH data",
															"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "CODECOPY"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "POP"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "POP"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MLOAD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SUB"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "REVERT"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "tag",
															"value": "111"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "JUMPDEST"
														},
														{
															"begin": 4814,
															"end": 4815,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "PUSH [tag]",
															"value": "113"
														},
														{
															"begin": 6090,
															"end": 6104,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "tag",
															"value": "113"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMPDEST"
														},
														{
															"begin": 6067,
															"end": 6087,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "DUP2"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SWAP1"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SSTORE"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "POP"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "PUSH [tag]",
															"value": "114"
														},
														{
															"begin": 6134,
															"end": 6158,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "tag",
															"value": "114"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMPDEST"
														},
														{
															"begin": 6117,
															"end": 6131,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "DUP2"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SWAP1"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SSTORE"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "POP"
														},
														{
															"begin": 6194,
															"end": 6195,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6182,
															"name": "DUP2"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "EQ"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "PUSH [tag]",
															"value": "115"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPI"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "PUSH [tag]",
															"value": "116"
														},
														{
															"begin": 6239,
															"end": 6246,
															"name": "DUP2"
														},
														{
															"begin": 6232,
															"end": 6238,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "tag",
															"value": "116"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMPDEST"
														},
														{
															"begin": 6213,
															"end": 6220,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6221,
															"end": 6228,
															"name": "DUP4"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "KECCAK256"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SSTORE"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "POP"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "SLOAD"
														},
														{
															"begin": 6262,
															"end": 6284,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6285,
															"end": 6292,
															"name": "DUP4"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "KECCAK256"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SSTORE"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "POP"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "tag",
															"value": "115"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPDEST"
														},
														{
															"begin": 4852,
															"end": 4864,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4852,
															"end": 4864,
															"name": "SLOAD"
														},
														{
															"begin": 4833,
															"end": 4848,
															"name": "TIMESTAMP"
														},
														{
															"begin": 4833,
															"end": 4864,
															"name": "LT"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "PUSH [tag]",
															"value": "118"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "JUMPI"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "PUSH [tag]",
															"value": "119"
														},
														{
															"begin": 4905,
															"end": 4920,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 4905,
															"end": 4920,
															"name": "SLOAD"
														},
														{
															"begin": 4894,
															"end": 4900,
															"name": "DUP4"
														},
														{
															"begin": 4894,
															"end": 4904,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 4894,
															"end": 4904,
															"name": "SWAP1"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "SWAP2"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "SWAP1"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "AND"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "tag",
															"value": "119"
														},
														{
															"begin": 4894,
															"end": 4921,
															"name": "JUMPDEST"
														},
														{
															"begin": 4881,
															"end": 4891,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4881,
															"end": 4921,
															"name": "DUP2"
														},
														{
															"begin": 4881,
															"end": 4921,
															"name": "SWAP1"
														},
														{
															"begin": 4881,
															"end": 4921,
															"name": "SSTORE"
														},
														{
															"begin": 4881,
															"end": 4921,
															"name": "POP"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "PUSH [tag]",
															"value": "120"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "JUMP"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "tag",
															"value": "118"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "JUMPDEST"
														},
														{
															"begin": 4954,
															"end": 4971,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "PUSH [tag]",
															"value": "121"
														},
														{
															"begin": 4991,
															"end": 5006,
															"name": "TIMESTAMP"
														},
														{
															"begin": 4974,
															"end": 4986,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4974,
															"end": 4986,
															"name": "SLOAD"
														},
														{
															"begin": 4974,
															"end": 4990,
															"name": "PUSH [tag]",
															"value": "90"
														},
														{
															"begin": 4974,
															"end": 4990,
															"name": "SWAP1"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "SWAP2"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "SWAP1"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "AND"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "tag",
															"value": "121"
														},
														{
															"begin": 4974,
															"end": 5007,
															"name": "JUMPDEST"
														},
														{
															"begin": 4954,
															"end": 5007,
															"name": "SWAP1"
														},
														{
															"begin": 4954,
															"end": 5007,
															"name": "POP"
														},
														{
															"begin": 5022,
															"end": 5038,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "PUSH [tag]",
															"value": "122"
														},
														{
															"begin": 5055,
															"end": 5065,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 5055,
															"end": 5065,
															"name": "SLOAD"
														},
														{
															"begin": 5041,
															"end": 5050,
															"name": "DUP4"
														},
														{
															"begin": 5041,
															"end": 5054,
															"name": "PUSH [tag]",
															"value": "91"
														},
														{
															"begin": 5041,
															"end": 5054,
															"name": "SWAP1"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "SWAP2"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "SWAP1"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "AND"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "tag",
															"value": "122"
														},
														{
															"begin": 5041,
															"end": 5066,
															"name": "JUMPDEST"
														},
														{
															"begin": 5022,
															"end": 5066,
															"name": "SWAP1"
														},
														{
															"begin": 5022,
															"end": 5066,
															"name": "POP"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "PUSH [tag]",
															"value": "123"
														},
														{
															"begin": 5119,
															"end": 5134,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 5119,
															"end": 5134,
															"name": "SLOAD"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "PUSH [tag]",
															"value": "124"
														},
														{
															"begin": 5105,
															"end": 5113,
															"name": "DUP4"
														},
														{
															"begin": 5094,
															"end": 5100,
															"name": "DUP8"
														},
														{
															"begin": 5094,
															"end": 5104,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 5094,
															"end": 5104,
															"name": "SWAP1"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "SWAP2"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "SWAP1"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "AND"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "tag",
															"value": "124"
														},
														{
															"begin": 5094,
															"end": 5114,
															"name": "JUMPDEST"
														},
														{
															"begin": 5094,
															"end": 5118,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 5094,
															"end": 5118,
															"name": "SWAP1"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "SWAP2"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "SWAP1"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "AND"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "tag",
															"value": "123"
														},
														{
															"begin": 5094,
															"end": 5135,
															"name": "JUMPDEST"
														},
														{
															"begin": 5081,
															"end": 5091,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 5081,
															"end": 5135,
															"name": "DUP2"
														},
														{
															"begin": 5081,
															"end": 5135,
															"name": "SWAP1"
														},
														{
															"begin": 5081,
															"end": 5135,
															"name": "SSTORE"
														},
														{
															"begin": 5081,
															"end": 5135,
															"name": "POP"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "POP"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "POP"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "tag",
															"value": "120"
														},
														{
															"begin": 4829,
															"end": 5147,
															"name": "JUMPDEST"
														},
														{
															"begin": 5507,
															"end": 5519,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "SLOAD"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "EXP"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "DIV"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5522,
															"end": 5534,
															"name": "AND"
														},
														{
															"begin": 5522,
															"end": 5544,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5522,
															"end": 5544,
															"name": "AND"
														},
														{
															"begin": 5522,
															"end": 5544,
															"name": "PUSH",
															"value": "70A08231"
														},
														{
															"begin": 5553,
															"end": 5557,
															"name": "ADDRESS"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "MLOAD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP3"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "AND"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SHL"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP2"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "MSTORE"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "ADD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP3"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "AND"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "AND"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP2"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "MSTORE"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "ADD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP2"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "MLOAD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP4"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SUB"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP2"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP7"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "125"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "125"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "GAS"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "STATICCALL"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "126"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 45,
															"end": 61,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 42,
															"end": 43,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 39,
															"end": 40,
															"name": "DUP1"
														},
														{
															"begin": 24,
															"end": 62,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 77,
															"end": 93,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 74,
															"end": 75,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 67,
															"end": 94,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "126"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "MLOAD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "127"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "127"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP2"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "ADD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "DUP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "MLOAD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "ADD"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP3"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP2"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "SWAP1"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5522,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5507,
															"end": 5559,
															"name": "SWAP1"
														},
														{
															"begin": 5507,
															"end": 5559,
															"name": "POP"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "PUSH [tag]",
															"value": "128"
														},
														{
															"begin": 5604,
															"end": 5619,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 5604,
															"end": 5619,
															"name": "SLOAD"
														},
														{
															"begin": 5592,
															"end": 5599,
															"name": "DUP3"
														},
														{
															"begin": 5592,
															"end": 5603,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 5592,
															"end": 5603,
															"name": "SWAP1"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "SWAP2"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "SWAP1"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "AND"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "tag",
															"value": "128"
														},
														{
															"begin": 5592,
															"end": 5620,
															"name": "JUMPDEST"
														},
														{
															"begin": 5578,
															"end": 5588,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 5578,
															"end": 5588,
															"name": "SLOAD"
														},
														{
															"begin": 5578,
															"end": 5620,
															"name": "GT"
														},
														{
															"begin": 5578,
															"end": 5620,
															"name": "ISZERO"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH [tag]",
															"value": "129"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "JUMPI"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "MLOAD"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP2"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "MSTORE"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "ADD"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP1"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP1"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "ADD"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP3"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP2"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "SUB"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP3"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "MSTORE"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "18"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP2"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "MSTORE"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "ADD"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP1"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP2"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "MSTORE"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "POP"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "ADD"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "SWAP2"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "POP"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "POP"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "MLOAD"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "DUP1"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "SWAP2"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "SUB"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "SWAP1"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "REVERT"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "tag",
															"value": "129"
														},
														{
															"begin": 5570,
															"end": 5649,
															"name": "JUMPDEST"
														},
														{
															"begin": 5679,
															"end": 5694,
															"name": "TIMESTAMP"
														},
														{
															"begin": 5662,
															"end": 5676,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5662,
															"end": 5694,
															"name": "DUP2"
														},
														{
															"begin": 5662,
															"end": 5694,
															"name": "SWAP1"
														},
														{
															"begin": 5662,
															"end": 5694,
															"name": "SSTORE"
														},
														{
															"begin": 5662,
															"end": 5694,
															"name": "POP"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "PUSH [tag]",
															"value": "130"
														},
														{
															"begin": 5740,
															"end": 5755,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 5740,
															"end": 5755,
															"name": "SLOAD"
														},
														{
															"begin": 5720,
															"end": 5735,
															"name": "TIMESTAMP"
														},
														{
															"begin": 5720,
															"end": 5739,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 5720,
															"end": 5739,
															"name": "SWAP1"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "SWAP2"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "SWAP1"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "AND"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "tag",
															"value": "130"
														},
														{
															"begin": 5720,
															"end": 5756,
															"name": "JUMPDEST"
														},
														{
															"begin": 5705,
															"end": 5717,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5705,
															"end": 5756,
															"name": "DUP2"
														},
														{
															"begin": 5705,
															"end": 5756,
															"name": "SWAP1"
														},
														{
															"begin": 5705,
															"end": 5756,
															"name": "SSTORE"
														},
														{
															"begin": 5705,
															"end": 5756,
															"name": "POP"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "PUSH",
															"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
														},
														{
															"begin": 5784,
															"end": 5790,
															"name": "DUP4"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "MLOAD"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "DUP1"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "DUP3"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "DUP2"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "MSTORE"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "ADD"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "SWAP2"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "POP"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "POP"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "MLOAD"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "DUP1"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "SWAP2"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "SUB"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "SWAP1"
														},
														{
															"begin": 5772,
															"end": 5791,
															"name": "LOG1"
														},
														{
															"begin": 6338,
															"end": 6339,
															"name": "POP"
														},
														{
															"begin": 322,
															"end": 323,
															"name": "POP"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "POP"
														},
														{
															"begin": 4716,
															"end": 5799,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "tag",
															"value": "48"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1329,
															"end": 1349,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "SLOAD"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "SWAP1"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "POP"
														},
														{
															"begin": 4294,
															"end": 4304,
															"name": "CALLER"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "PUSH [tag]",
															"value": "133"
														},
														{
															"begin": 6090,
															"end": 6104,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "tag",
															"value": "133"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMPDEST"
														},
														{
															"begin": 6067,
															"end": 6087,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "DUP2"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SWAP1"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SSTORE"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "POP"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "PUSH [tag]",
															"value": "134"
														},
														{
															"begin": 6134,
															"end": 6158,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "tag",
															"value": "134"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMPDEST"
														},
														{
															"begin": 6117,
															"end": 6131,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "DUP2"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SWAP1"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SSTORE"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "POP"
														},
														{
															"begin": 6194,
															"end": 6195,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6182,
															"name": "DUP2"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "EQ"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "PUSH [tag]",
															"value": "135"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPI"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "PUSH [tag]",
															"value": "136"
														},
														{
															"begin": 6239,
															"end": 6246,
															"name": "DUP2"
														},
														{
															"begin": 6232,
															"end": 6238,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "tag",
															"value": "136"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMPDEST"
														},
														{
															"begin": 6213,
															"end": 6220,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6221,
															"end": 6228,
															"name": "DUP4"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "KECCAK256"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SSTORE"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "POP"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "SLOAD"
														},
														{
															"begin": 6262,
															"end": 6284,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6285,
															"end": 6292,
															"name": "DUP4"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "KECCAK256"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SSTORE"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "POP"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "tag",
															"value": "135"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPDEST"
														},
														{
															"begin": 4317,
															"end": 4331,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4334,
															"end": 4341,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4342,
															"end": 4352,
															"name": "CALLER"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "AND"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "AND"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "DUP2"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "MSTORE"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "ADD"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "SWAP1"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "DUP2"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "MSTORE"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "ADD"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "KECCAK256"
														},
														{
															"begin": 4334,
															"end": 4353,
															"name": "SLOAD"
														},
														{
															"begin": 4317,
															"end": 4353,
															"name": "SWAP1"
														},
														{
															"begin": 4317,
															"end": 4353,
															"name": "POP"
														},
														{
															"begin": 4377,
															"end": 4378,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4368,
															"end": 4374,
															"name": "DUP2"
														},
														{
															"begin": 4368,
															"end": 4378,
															"name": "GT"
														},
														{
															"begin": 4364,
															"end": 4540,
															"name": "ISZERO"
														},
														{
															"begin": 4364,
															"end": 4540,
															"name": "PUSH [tag]",
															"value": "138"
														},
														{
															"begin": 4364,
															"end": 4540,
															"name": "JUMPI"
														},
														{
															"begin": 4417,
															"end": 4418,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4395,
															"end": 4402,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4403,
															"end": 4413,
															"name": "CALLER"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "AND"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "AND"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "DUP2"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "MSTORE"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "ADD"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "SWAP1"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "DUP2"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "MSTORE"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "ADD"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4395,
															"end": 4414,
															"name": "KECCAK256"
														},
														{
															"begin": 4395,
															"end": 4418,
															"name": "DUP2"
														},
														{
															"begin": 4395,
															"end": 4418,
															"name": "SWAP1"
														},
														{
															"begin": 4395,
															"end": 4418,
															"name": "SSTORE"
														},
														{
															"begin": 4395,
															"end": 4418,
															"name": "POP"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "PUSH [tag]",
															"value": "139"
														},
														{
															"begin": 4459,
															"end": 4469,
															"name": "CALLER"
														},
														{
															"begin": 4471,
															"end": 4477,
															"name": "DUP3"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "SWAP1"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "SLOAD"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "SWAP1"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "EXP"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "SWAP1"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "DIV"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4433,
															"end": 4445,
															"name": "AND"
														},
														{
															"begin": 4433,
															"end": 4458,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4433,
															"end": 4458,
															"name": "AND"
														},
														{
															"begin": 4433,
															"end": 4458,
															"name": "PUSH [tag]",
															"value": "108"
														},
														{
															"begin": 4433,
															"end": 4458,
															"name": "SWAP1"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "SWAP3"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "SWAP2"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "SWAP1"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "AND"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "tag",
															"value": "139"
														},
														{
															"begin": 4433,
															"end": 4478,
															"name": "JUMPDEST"
														},
														{
															"begin": 4509,
															"end": 4519,
															"name": "CALLER"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "AND"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "PUSH",
															"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
														},
														{
															"begin": 4521,
															"end": 4527,
															"name": "DUP3"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "MLOAD"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "DUP1"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "DUP3"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "DUP2"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "MSTORE"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "ADD"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "SWAP2"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "POP"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "POP"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "MLOAD"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "DUP1"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "SWAP2"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "SUB"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "SWAP1"
														},
														{
															"begin": 4498,
															"end": 4528,
															"name": "LOG2"
														},
														{
															"begin": 4364,
															"end": 4540,
															"name": "tag",
															"value": "138"
														},
														{
															"begin": 4364,
															"end": 4540,
															"name": "JUMPDEST"
														},
														{
															"begin": 6338,
															"end": 6339,
															"name": "POP"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "140"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "140"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "POP"
														},
														{
															"begin": 4240,
															"end": 4547,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "tag",
															"value": "50"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMPDEST"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SLOAD"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "EXP"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DIV"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "AND"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP2"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "tag",
															"value": "53"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "JUMPDEST"
														},
														{
															"begin": 2005,
															"end": 2012,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2032,
															"end": 2041,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2042,
															"end": 2049,
															"name": "DUP4"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "AND"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "AND"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "DUP2"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "MSTORE"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "ADD"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "SWAP1"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "DUP2"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "MSTORE"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "ADD"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "KECCAK256"
														},
														{
															"begin": 2032,
															"end": 2050,
															"name": "SLOAD"
														},
														{
															"begin": 2025,
															"end": 2050,
															"name": "SWAP1"
														},
														{
															"begin": 2025,
															"end": 2050,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP2"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "SWAP1"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "POP"
														},
														{
															"begin": 1946,
															"end": 2058,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "tag",
															"value": "55"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMPDEST"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SWAP1"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SLOAD"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SWAP1"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "EXP"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SWAP1"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DIV"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "AND"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DUP2"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "tag",
															"value": "57"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMPDEST"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "SLOAD"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "DUP2"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "tag",
															"value": "59"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "JUMPDEST"
														},
														{
															"begin": 2123,
															"end": 2130,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2150,
															"end": 2189,
															"name": "PUSH [tag]",
															"value": "143"
														},
														{
															"begin": 2159,
															"end": 2174,
															"name": "TIMESTAMP"
														},
														{
															"begin": 2176,
															"end": 2188,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2176,
															"end": 2188,
															"name": "SLOAD"
														},
														{
															"begin": 2150,
															"end": 2158,
															"name": "PUSH [tag]",
															"value": "144"
														},
														{
															"begin": 2150,
															"end": 2189,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2150,
															"end": 2189,
															"name": "tag",
															"value": "143"
														},
														{
															"begin": 2150,
															"end": 2189,
															"name": "JUMPDEST"
														},
														{
															"begin": 2143,
															"end": 2189,
															"name": "SWAP1"
														},
														{
															"begin": 2143,
															"end": 2189,
															"name": "POP"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "SWAP1"
														},
														{
															"begin": 2066,
															"end": 2197,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "tag",
															"value": "62"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "JUMPDEST"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "MSTORE"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "MSTORE"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "KECCAK256"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SWAP1"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "POP"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "SLOAD"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "DUP2"
														},
														{
															"begin": 1261,
															"end": 1318,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "tag",
															"value": "65"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "JUMPDEST"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "DUP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SWAP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SLOAD"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SWAP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "EXP"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SWAP1"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "DIV"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 241,
															"name": "CALLER"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "EQ"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH [tag]",
															"value": "146"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "JUMPI"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MLOAD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP3"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SUB"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP3"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH data",
															"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "CODECOPY"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "POP"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "POP"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MLOAD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SUB"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "REVERT"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "tag",
															"value": "146"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "JUMPDEST"
														},
														{
															"begin": 5921,
															"end": 5926,
															"name": "DUP2"
														},
														{
															"begin": 5914,
															"end": 5936,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5914,
															"end": 5936,
															"name": "AND"
														},
														{
															"begin": 5914,
															"end": 5936,
															"name": "PUSH",
															"value": "A9059CBB"
														},
														{
															"begin": 5937,
															"end": 5947,
															"name": "CALLER"
														},
														{
															"begin": 5949,
															"end": 5955,
															"name": "DUP4"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MLOAD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP4"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "AND"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SHL"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP2"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MSTORE"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ADD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP4"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "AND"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "AND"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP2"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MSTORE"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ADD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP3"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP2"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MSTORE"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ADD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP3"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MLOAD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP4"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SUB"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP2"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP8"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "148"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "148"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "GAS"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "CALL"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "149"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 45,
															"end": 61,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 42,
															"end": 43,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 39,
															"end": 40,
															"name": "DUP1"
														},
														{
															"begin": 24,
															"end": 62,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 77,
															"end": 93,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 74,
															"end": 75,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 67,
															"end": 94,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "149"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MLOAD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "150"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "150"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP2"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ADD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "DUP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "MLOAD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "ADD"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP3"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP2"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "SWAP1"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5914,
															"end": 5956,
															"name": "POP"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "POP"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "POP"
														},
														{
															"begin": 5807,
															"end": 5964,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "tag",
															"value": "68"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1329,
															"end": 1349,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "SLOAD"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "SWAP1"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "POP"
														},
														{
															"begin": 3564,
															"end": 3574,
															"name": "CALLER"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "PUSH [tag]",
															"value": "153"
														},
														{
															"begin": 6090,
															"end": 6104,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "tag",
															"value": "153"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMPDEST"
														},
														{
															"begin": 6067,
															"end": 6087,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "DUP2"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SWAP1"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SSTORE"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "POP"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "PUSH [tag]",
															"value": "154"
														},
														{
															"begin": 6134,
															"end": 6158,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "tag",
															"value": "154"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMPDEST"
														},
														{
															"begin": 6117,
															"end": 6131,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "DUP2"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SWAP1"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SSTORE"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "POP"
														},
														{
															"begin": 6194,
															"end": 6195,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6182,
															"name": "DUP2"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "EQ"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "PUSH [tag]",
															"value": "155"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPI"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "PUSH [tag]",
															"value": "156"
														},
														{
															"begin": 6239,
															"end": 6246,
															"name": "DUP2"
														},
														{
															"begin": 6232,
															"end": 6238,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "tag",
															"value": "156"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMPDEST"
														},
														{
															"begin": 6213,
															"end": 6220,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6221,
															"end": 6228,
															"name": "DUP4"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "KECCAK256"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SSTORE"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "POP"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "SLOAD"
														},
														{
															"begin": 6262,
															"end": 6284,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6285,
															"end": 6292,
															"name": "DUP4"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "KECCAK256"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SSTORE"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "POP"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "tag",
															"value": "155"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPDEST"
														},
														{
															"begin": 3604,
															"end": 3605,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3595,
															"end": 3601,
															"name": "DUP4"
														},
														{
															"begin": 3595,
															"end": 3605,
															"name": "GT"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH [tag]",
															"value": "158"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "JUMPI"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "MLOAD"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP2"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "MSTORE"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "ADD"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP1"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP1"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "ADD"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP3"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP2"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "SUB"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP3"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "MSTORE"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP2"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "MSTORE"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "ADD"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP1"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP2"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "MSTORE"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "POP"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "ADD"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "SWAP2"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "POP"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "POP"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "MLOAD"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "DUP1"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "SWAP2"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "SUB"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "SWAP1"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "REVERT"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "tag",
															"value": "158"
														},
														{
															"begin": 3587,
															"end": 3624,
															"name": "JUMPDEST"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "PUSH [tag]",
															"value": "159"
														},
														{
															"begin": 3667,
															"end": 3673,
															"name": "DUP4"
														},
														{
															"begin": 3650,
															"end": 3662,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3650,
															"end": 3662,
															"name": "SLOAD"
														},
														{
															"begin": 3650,
															"end": 3666,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 3650,
															"end": 3666,
															"name": "SWAP1"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "SWAP2"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "SWAP1"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "AND"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "tag",
															"value": "159"
														},
														{
															"begin": 3650,
															"end": 3674,
															"name": "JUMPDEST"
														},
														{
															"begin": 3635,
															"end": 3647,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3635,
															"end": 3674,
															"name": "DUP2"
														},
														{
															"begin": 3635,
															"end": 3674,
															"name": "SWAP1"
														},
														{
															"begin": 3635,
															"end": 3674,
															"name": "SSTORE"
														},
														{
															"begin": 3635,
															"end": 3674,
															"name": "POP"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "PUSH [tag]",
															"value": "160"
														},
														{
															"begin": 3735,
															"end": 3741,
															"name": "DUP4"
														},
														{
															"begin": 3709,
															"end": 3718,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3719,
															"end": 3729,
															"name": "CALLER"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "AND"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "AND"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "DUP2"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "MSTORE"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "ADD"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "SWAP1"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "DUP2"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "MSTORE"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "ADD"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "KECCAK256"
														},
														{
															"begin": 3709,
															"end": 3730,
															"name": "SLOAD"
														},
														{
															"begin": 3709,
															"end": 3734,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 3709,
															"end": 3734,
															"name": "SWAP1"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "SWAP2"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "SWAP1"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "AND"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "tag",
															"value": "160"
														},
														{
															"begin": 3709,
															"end": 3742,
															"name": "JUMPDEST"
														},
														{
															"begin": 3685,
															"end": 3694,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3695,
															"end": 3705,
															"name": "CALLER"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "AND"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "AND"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "DUP2"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "MSTORE"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "ADD"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "SWAP1"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "DUP2"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "MSTORE"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "ADD"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3685,
															"end": 3706,
															"name": "KECCAK256"
														},
														{
															"begin": 3685,
															"end": 3742,
															"name": "DUP2"
														},
														{
															"begin": 3685,
															"end": 3742,
															"name": "SWAP1"
														},
														{
															"begin": 3685,
															"end": 3742,
															"name": "SSTORE"
														},
														{
															"begin": 3685,
															"end": 3742,
															"name": "POP"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "PUSH [tag]",
															"value": "161"
														},
														{
															"begin": 3783,
															"end": 3793,
															"name": "CALLER"
														},
														{
															"begin": 3803,
															"end": 3807,
															"name": "ADDRESS"
														},
														{
															"begin": 3810,
															"end": 3816,
															"name": "DUP6"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "SWAP1"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "SLOAD"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "SWAP1"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "EXP"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "SWAP1"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "DIV"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3753,
															"end": 3765,
															"name": "AND"
														},
														{
															"begin": 3753,
															"end": 3782,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3753,
															"end": 3782,
															"name": "AND"
														},
														{
															"begin": 3753,
															"end": 3782,
															"name": "PUSH [tag]",
															"value": "162"
														},
														{
															"begin": 3753,
															"end": 3782,
															"name": "SWAP1"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "SWAP4"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "SWAP3"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "SWAP2"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "SWAP1"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "AND"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "tag",
															"value": "161"
														},
														{
															"begin": 3753,
															"end": 3817,
															"name": "JUMPDEST"
														},
														{
															"begin": 3840,
															"end": 3850,
															"name": "CALLER"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "AND"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "PUSH",
															"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
														},
														{
															"begin": 3852,
															"end": 3858,
															"name": "DUP5"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "MLOAD"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "DUP1"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "DUP3"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "DUP2"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "MSTORE"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "ADD"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "SWAP2"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "POP"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "POP"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "MLOAD"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "DUP1"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "SWAP2"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "SUB"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "SWAP1"
														},
														{
															"begin": 3833,
															"end": 3859,
															"name": "LOG2"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "163"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "163"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "POP"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "POP"
														},
														{
															"begin": 3498,
															"end": 3867,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "tag",
															"value": "70"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "JUMPDEST"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "SLOAD"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "DUP2"
														},
														{
															"begin": 1181,
															"end": 1210,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "tag",
															"value": "72"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "JUMPDEST"
														},
														{
															"begin": 2252,
															"end": 2259,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2292,
															"end": 2293,
															"name": "DUP1"
														},
														{
															"begin": 2276,
															"end": 2288,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 2276,
															"end": 2288,
															"name": "SLOAD"
														},
														{
															"begin": 2276,
															"end": 2293,
															"name": "EQ"
														},
														{
															"begin": 2272,
															"end": 2349,
															"name": "ISZERO"
														},
														{
															"begin": 2272,
															"end": 2349,
															"name": "PUSH [tag]",
															"value": "165"
														},
														{
															"begin": 2272,
															"end": 2349,
															"name": "JUMPI"
														},
														{
															"begin": 2317,
															"end": 2337,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 2317,
															"end": 2337,
															"name": "SLOAD"
														},
														{
															"begin": 2310,
															"end": 2337,
															"name": "SWAP1"
														},
														{
															"begin": 2310,
															"end": 2337,
															"name": "POP"
														},
														{
															"begin": 2310,
															"end": 2337,
															"name": "PUSH [tag]",
															"value": "164"
														},
														{
															"begin": 2310,
															"end": 2337,
															"name": "JUMP"
														},
														{
															"begin": 2272,
															"end": 2349,
															"name": "tag",
															"value": "165"
														},
														{
															"begin": 2272,
															"end": 2349,
															"name": "JUMPDEST"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "PUSH [tag]",
															"value": "166"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "PUSH [tag]",
															"value": "167"
														},
														{
															"begin": 2499,
															"end": 2511,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 2499,
															"end": 2511,
															"name": "SLOAD"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "PUSH [tag]",
															"value": "168"
														},
														{
															"begin": 2489,
															"end": 2493,
															"name": "PUSH",
															"value": "DE0B6B3A7640000"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "PUSH [tag]",
															"value": "169"
														},
														{
															"begin": 2473,
															"end": 2483,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 2473,
															"end": 2483,
															"name": "SLOAD"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "PUSH [tag]",
															"value": "170"
														},
														{
															"begin": 2453,
															"end": 2467,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 2453,
															"end": 2467,
															"name": "SLOAD"
														},
														{
															"begin": 2422,
															"end": 2448,
															"name": "PUSH [tag]",
															"value": "171"
														},
														{
															"begin": 2422,
															"end": 2446,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 2422,
															"end": 2448,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2422,
															"end": 2448,
															"name": "tag",
															"value": "171"
														},
														{
															"begin": 2422,
															"end": 2448,
															"name": "JUMPDEST"
														},
														{
															"begin": 2422,
															"end": 2452,
															"name": "PUSH [tag]",
															"value": "90"
														},
														{
															"begin": 2422,
															"end": 2452,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "SWAP2"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "AND"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "tag",
															"value": "170"
														},
														{
															"begin": 2422,
															"end": 2468,
															"name": "JUMPDEST"
														},
														{
															"begin": 2422,
															"end": 2472,
															"name": "PUSH [tag]",
															"value": "91"
														},
														{
															"begin": 2422,
															"end": 2472,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "SWAP2"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "AND"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "tag",
															"value": "169"
														},
														{
															"begin": 2422,
															"end": 2484,
															"name": "JUMPDEST"
														},
														{
															"begin": 2422,
															"end": 2488,
															"name": "PUSH [tag]",
															"value": "91"
														},
														{
															"begin": 2422,
															"end": 2488,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "SWAP2"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "AND"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "tag",
															"value": "168"
														},
														{
															"begin": 2422,
															"end": 2494,
															"name": "JUMPDEST"
														},
														{
															"begin": 2422,
															"end": 2498,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 2422,
															"end": 2498,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "SWAP2"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "SWAP1"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "AND"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "tag",
															"value": "167"
														},
														{
															"begin": 2422,
															"end": 2512,
															"name": "JUMPDEST"
														},
														{
															"begin": 2379,
															"end": 2399,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 2379,
															"end": 2399,
															"name": "SLOAD"
														},
														{
															"begin": 2379,
															"end": 2403,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 2379,
															"end": 2403,
															"name": "SWAP1"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "SWAP2"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "SWAP1"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "AND"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "tag",
															"value": "166"
														},
														{
															"begin": 2379,
															"end": 2527,
															"name": "JUMPDEST"
														},
														{
															"begin": 2359,
															"end": 2527,
															"name": "SWAP1"
														},
														{
															"begin": 2359,
															"end": 2527,
															"name": "POP"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "tag",
															"value": "164"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "JUMPDEST"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "SWAP1"
														},
														{
															"begin": 2205,
															"end": 2535,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "tag",
															"value": "74"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMPDEST"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SWAP1"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SLOAD"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SWAP1"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "EXP"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SWAP1"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DIV"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "AND"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DUP2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "tag",
															"value": "76"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "JUMPDEST"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "SLOAD"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "DUP2"
														},
														{
															"begin": 1217,
															"end": 1252,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "tag",
															"value": "78"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "JUMPDEST"
														},
														{
															"begin": 4591,
															"end": 4622,
															"name": "PUSH [tag]",
															"value": "173"
														},
														{
															"begin": 4600,
															"end": 4609,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4610,
															"end": 4620,
															"name": "CALLER"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "AND"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "AND"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "DUP2"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "MSTORE"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "ADD"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "SWAP1"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "DUP2"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "MSTORE"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "ADD"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "KECCAK256"
														},
														{
															"begin": 4600,
															"end": 4621,
															"name": "SLOAD"
														},
														{
															"begin": 4591,
															"end": 4599,
															"name": "PUSH [tag]",
															"value": "41"
														},
														{
															"begin": 4591,
															"end": 4622,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4591,
															"end": 4622,
															"name": "tag",
															"value": "173"
														},
														{
															"begin": 4591,
															"end": 4622,
															"name": "JUMPDEST"
														},
														{
															"begin": 4633,
															"end": 4644,
															"name": "PUSH [tag]",
															"value": "174"
														},
														{
															"begin": 4633,
															"end": 4642,
															"name": "PUSH [tag]",
															"value": "48"
														},
														{
															"begin": 4633,
															"end": 4644,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4633,
															"end": 4644,
															"name": "tag",
															"value": "174"
														},
														{
															"begin": 4633,
															"end": 4644,
															"name": "JUMPDEST"
														},
														{
															"begin": 4555,
															"end": 4652,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "tag",
															"value": "80"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMPDEST"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "SLOAD"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "DUP2"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "tag",
															"value": "83"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1314,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP3"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "POP"
														},
														{
															"begin": 1329,
															"end": 1349,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1352,
															"end": 1365,
															"name": "SLOAD"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "SWAP1"
														},
														{
															"begin": 1329,
															"end": 1365,
															"name": "POP"
														},
														{
															"begin": 3054,
															"end": 3064,
															"name": "CALLER"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "PUSH [tag]",
															"value": "177"
														},
														{
															"begin": 6090,
															"end": 6104,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "tag",
															"value": "177"
														},
														{
															"begin": 6090,
															"end": 6106,
															"name": "JUMPDEST"
														},
														{
															"begin": 6067,
															"end": 6087,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "DUP2"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SWAP1"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "SSTORE"
														},
														{
															"begin": 6067,
															"end": 6106,
															"name": "POP"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "PUSH [tag]",
															"value": "178"
														},
														{
															"begin": 6134,
															"end": 6158,
															"name": "PUSH [tag]",
															"value": "59"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "tag",
															"value": "178"
														},
														{
															"begin": 6134,
															"end": 6160,
															"name": "JUMPDEST"
														},
														{
															"begin": 6117,
															"end": 6131,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "DUP2"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SWAP1"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "SSTORE"
														},
														{
															"begin": 6117,
															"end": 6160,
															"name": "POP"
														},
														{
															"begin": 6194,
															"end": 6195,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6182,
															"name": "DUP2"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "AND"
														},
														{
															"begin": 6175,
															"end": 6196,
															"name": "EQ"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "PUSH [tag]",
															"value": "179"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPI"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "PUSH [tag]",
															"value": "180"
														},
														{
															"begin": 6239,
															"end": 6246,
															"name": "DUP2"
														},
														{
															"begin": 6232,
															"end": 6238,
															"name": "PUSH [tag]",
															"value": "31"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "tag",
															"value": "180"
														},
														{
															"begin": 6232,
															"end": 6247,
															"name": "JUMPDEST"
														},
														{
															"begin": 6213,
															"end": 6220,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6221,
															"end": 6228,
															"name": "DUP4"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "AND"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "MSTORE"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "ADD"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6213,
															"end": 6229,
															"name": "KECCAK256"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "DUP2"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SWAP1"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "SSTORE"
														},
														{
															"begin": 6213,
															"end": 6247,
															"name": "POP"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6296,
															"end": 6316,
															"name": "SLOAD"
														},
														{
															"begin": 6262,
															"end": 6284,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6285,
															"end": 6292,
															"name": "DUP4"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "AND"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "MSTORE"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "ADD"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6262,
															"end": 6293,
															"name": "KECCAK256"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "DUP2"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SWAP1"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "SSTORE"
														},
														{
															"begin": 6262,
															"end": 6316,
															"name": "POP"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "tag",
															"value": "179"
														},
														{
															"begin": 6171,
															"end": 6328,
															"name": "JUMPDEST"
														},
														{
															"begin": 3094,
															"end": 3095,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3085,
															"end": 3091,
															"name": "DUP8"
														},
														{
															"begin": 3085,
															"end": 3095,
															"name": "GT"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH [tag]",
															"value": "182"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "JUMPI"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "MLOAD"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP2"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "MSTORE"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "ADD"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP1"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP1"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "ADD"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP3"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP2"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "SUB"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP3"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "MSTORE"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP2"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "MSTORE"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "ADD"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP1"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP2"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "MSTORE"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "POP"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "ADD"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "SWAP2"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "POP"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "POP"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "MLOAD"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "DUP1"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "SWAP2"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "SUB"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "SWAP1"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "REVERT"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "tag",
															"value": "182"
														},
														{
															"begin": 3077,
															"end": 3114,
															"name": "JUMPDEST"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "PUSH [tag]",
															"value": "183"
														},
														{
															"begin": 3157,
															"end": 3163,
															"name": "DUP8"
														},
														{
															"begin": 3140,
															"end": 3152,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3140,
															"end": 3152,
															"name": "SLOAD"
														},
														{
															"begin": 3140,
															"end": 3156,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 3140,
															"end": 3156,
															"name": "SWAP1"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "SWAP2"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "SWAP1"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "AND"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "tag",
															"value": "183"
														},
														{
															"begin": 3140,
															"end": 3164,
															"name": "JUMPDEST"
														},
														{
															"begin": 3125,
															"end": 3137,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3125,
															"end": 3164,
															"name": "DUP2"
														},
														{
															"begin": 3125,
															"end": 3164,
															"name": "SWAP1"
														},
														{
															"begin": 3125,
															"end": 3164,
															"name": "SSTORE"
														},
														{
															"begin": 3125,
															"end": 3164,
															"name": "POP"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "PUSH [tag]",
															"value": "184"
														},
														{
															"begin": 3225,
															"end": 3231,
															"name": "DUP8"
														},
														{
															"begin": 3199,
															"end": 3208,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3209,
															"end": 3219,
															"name": "CALLER"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "AND"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "AND"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "DUP2"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "MSTORE"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "ADD"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "SWAP1"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "DUP2"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "MSTORE"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "ADD"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "KECCAK256"
														},
														{
															"begin": 3199,
															"end": 3220,
															"name": "SLOAD"
														},
														{
															"begin": 3199,
															"end": 3224,
															"name": "PUSH [tag]",
															"value": "93"
														},
														{
															"begin": 3199,
															"end": 3224,
															"name": "SWAP1"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "SWAP2"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "SWAP1"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "AND"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "tag",
															"value": "184"
														},
														{
															"begin": 3199,
															"end": 3232,
															"name": "JUMPDEST"
														},
														{
															"begin": 3175,
															"end": 3184,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3185,
															"end": 3195,
															"name": "CALLER"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "AND"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "AND"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "DUP2"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "MSTORE"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "ADD"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "SWAP1"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "DUP2"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "MSTORE"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "ADD"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3175,
															"end": 3196,
															"name": "KECCAK256"
														},
														{
															"begin": 3175,
															"end": 3232,
															"name": "DUP2"
														},
														{
															"begin": 3175,
															"end": 3232,
															"name": "SWAP1"
														},
														{
															"begin": 3175,
															"end": 3232,
															"name": "SSTORE"
														},
														{
															"begin": 3175,
															"end": 3232,
															"name": "POP"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "SWAP1"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "SLOAD"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "SWAP1"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "EXP"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "SWAP1"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "DIV"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3288,
															"end": 3300,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3309,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3264,
															"end": 3309,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3309,
															"name": "PUSH",
															"value": "D505ACCF"
														},
														{
															"begin": 3310,
															"end": 3320,
															"name": "CALLER"
														},
														{
															"begin": 3330,
															"end": 3334,
															"name": "ADDRESS"
														},
														{
															"begin": 3337,
															"end": 3343,
															"name": "DUP11"
														},
														{
															"begin": 3345,
															"end": 3353,
															"name": "DUP11"
														},
														{
															"begin": 3355,
															"end": 3356,
															"name": "DUP11"
														},
														{
															"begin": 3358,
															"end": 3359,
															"name": "DUP11"
														},
														{
															"begin": 3361,
															"end": 3362,
															"name": "DUP11"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MLOAD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP9"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "SHL"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP1"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP9"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP8"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP7"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP6"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP5"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "AND"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP4"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP3"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MSTORE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ADD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "SWAP8"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "MLOAD"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP1"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP4"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "SUB"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP2"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP8"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "DUP1"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "185"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "185"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "GAS"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "CALL"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "186"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 45,
															"end": 61,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 42,
															"end": 43,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 39,
															"end": 40,
															"name": "DUP1"
														},
														{
															"begin": 24,
															"end": 62,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 77,
															"end": 93,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 74,
															"end": 75,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 67,
															"end": 94,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "186"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3264,
															"end": 3363,
															"name": "POP"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "PUSH [tag]",
															"value": "187"
														},
														{
															"begin": 3406,
															"end": 3416,
															"name": "CALLER"
														},
														{
															"begin": 3426,
															"end": 3430,
															"name": "ADDRESS"
														},
														{
															"begin": 3433,
															"end": 3439,
															"name": "DUP10"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "SWAP1"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "SLOAD"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "SWAP1"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "EXP"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "SWAP1"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "DIV"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3376,
															"end": 3388,
															"name": "AND"
														},
														{
															"begin": 3376,
															"end": 3405,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3376,
															"end": 3405,
															"name": "AND"
														},
														{
															"begin": 3376,
															"end": 3405,
															"name": "PUSH [tag]",
															"value": "162"
														},
														{
															"begin": 3376,
															"end": 3405,
															"name": "SWAP1"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "SWAP4"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "SWAP3"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "SWAP2"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "SWAP1"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "AND"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "tag",
															"value": "187"
														},
														{
															"begin": 3376,
															"end": 3440,
															"name": "JUMPDEST"
														},
														{
															"begin": 3463,
															"end": 3473,
															"name": "CALLER"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "AND"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "PUSH",
															"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
														},
														{
															"begin": 3475,
															"end": 3481,
															"name": "DUP9"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "MLOAD"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "DUP1"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "DUP3"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "DUP2"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "MSTORE"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "ADD"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "SWAP2"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "POP"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "POP"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "MLOAD"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "DUP1"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "SWAP2"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "SUB"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "SWAP1"
														},
														{
															"begin": 3456,
															"end": 3482,
															"name": "LOG2"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "188"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "POP"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "188"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "POP"
														},
														{
															"begin": 2932,
															"end": 3490,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "tag",
															"value": "90"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "JUMPDEST"
														},
														{
															"begin": 1332,
															"end": 1339,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1364,
															"end": 1365,
															"name": "DUP3"
														},
														{
															"begin": 1359,
															"end": 1360,
															"name": "DUP3"
														},
														{
															"begin": 1359,
															"end": 1365,
															"name": "GT"
														},
														{
															"begin": 1359,
															"end": 1365,
															"name": "ISZERO"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH [tag]",
															"value": "190"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "JUMPI"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MLOAD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP3"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SUB"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP3"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "1E"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "POP"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "POP"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "POP"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MLOAD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SUB"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "REVERT"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "tag",
															"value": "190"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "JUMPDEST"
														},
														{
															"begin": 1410,
															"end": 1419,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1426,
															"end": 1427,
															"name": "DUP3"
														},
														{
															"begin": 1422,
															"end": 1423,
															"name": "DUP5"
														},
														{
															"begin": 1422,
															"end": 1427,
															"name": "SUB"
														},
														{
															"begin": 1410,
															"end": 1427,
															"name": "SWAP1"
														},
														{
															"begin": 1410,
															"end": 1427,
															"name": "POP"
														},
														{
															"begin": 1445,
															"end": 1446,
															"name": "DUP1"
														},
														{
															"begin": 1438,
															"end": 1446,
															"name": "SWAP2"
														},
														{
															"begin": 1438,
															"end": 1446,
															"name": "POP"
														},
														{
															"begin": 1438,
															"end": 1446,
															"name": "POP"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "SWAP3"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "SWAP2"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "POP"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "POP"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "tag",
															"value": "91"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "JUMPDEST"
														},
														{
															"begin": 1751,
															"end": 1758,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1997,
															"end": 1998,
															"name": "DUP1"
														},
														{
															"begin": 1992,
															"end": 1993,
															"name": "DUP4"
														},
														{
															"begin": 1992,
															"end": 1998,
															"name": "EQ"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "ISZERO"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "PUSH [tag]",
															"value": "192"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "JUMPI"
														},
														{
															"begin": 2021,
															"end": 2022,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2014,
															"end": 2022,
															"name": "SWAP1"
														},
														{
															"begin": 2014,
															"end": 2022,
															"name": "POP"
														},
														{
															"begin": 2014,
															"end": 2022,
															"name": "PUSH [tag]",
															"value": "191"
														},
														{
															"begin": 2014,
															"end": 2022,
															"name": "JUMP"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "tag",
															"value": "192"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "JUMPDEST"
														},
														{
															"begin": 2043,
															"end": 2052,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2059,
															"end": 2060,
															"name": "DUP3"
														},
														{
															"begin": 2055,
															"end": 2056,
															"name": "DUP5"
														},
														{
															"begin": 2055,
															"end": 2060,
															"name": "MUL"
														},
														{
															"begin": 2043,
															"end": 2060,
															"name": "SWAP1"
														},
														{
															"begin": 2043,
															"end": 2060,
															"name": "POP"
														},
														{
															"begin": 2087,
															"end": 2088,
															"name": "DUP3"
														},
														{
															"begin": 2082,
															"end": 2083,
															"name": "DUP5"
														},
														{
															"begin": 2078,
															"end": 2079,
															"name": "DUP3"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "DUP2"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "PUSH [tag]",
															"value": "193"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "JUMPI"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "INVALID"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "tag",
															"value": "193"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "JUMPDEST"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "DIV"
														},
														{
															"begin": 2078,
															"end": 2088,
															"name": "EQ"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH [tag]",
															"value": "194"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "JUMPI"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MLOAD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MSTORE"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP3"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SUB"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP3"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MSTORE"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "21"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MSTORE"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH data",
															"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "21"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "CODECOPY"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "POP"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "POP"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MLOAD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SUB"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "REVERT"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "tag",
															"value": "194"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "JUMPDEST"
														},
														{
															"begin": 2144,
															"end": 2145,
															"name": "DUP1"
														},
														{
															"begin": 2137,
															"end": 2145,
															"name": "SWAP2"
														},
														{
															"begin": 2137,
															"end": 2145,
															"name": "POP"
														},
														{
															"begin": 2137,
															"end": 2145,
															"name": "POP"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "tag",
															"value": "191"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "JUMPDEST"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "SWAP3"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "SWAP2"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "POP"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "POP"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "tag",
															"value": "92"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "JUMPDEST"
														},
														{
															"begin": 2665,
															"end": 2672,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2762,
															"end": 2763,
															"name": "DUP1"
														},
														{
															"begin": 2758,
															"end": 2759,
															"name": "DUP3"
														},
														{
															"begin": 2758,
															"end": 2763,
															"name": "GT"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH [tag]",
															"value": "196"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "JUMPI"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MLOAD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP3"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SUB"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP3"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "1A"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "POP"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "POP"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "POP"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MLOAD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SUB"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "REVERT"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "tag",
															"value": "196"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "JUMPDEST"
														},
														{
															"begin": 2804,
															"end": 2813,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2820,
															"end": 2821,
															"name": "DUP3"
														},
														{
															"begin": 2816,
															"end": 2817,
															"name": "DUP5"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "DUP2"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "PUSH [tag]",
															"value": "197"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "JUMPI"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "INVALID"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "tag",
															"value": "197"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "JUMPDEST"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "DIV"
														},
														{
															"begin": 2804,
															"end": 2821,
															"name": "SWAP1"
														},
														{
															"begin": 2804,
															"end": 2821,
															"name": "POP"
														},
														{
															"begin": 2925,
															"end": 2926,
															"name": "DUP1"
														},
														{
															"begin": 2918,
															"end": 2926,
															"name": "SWAP2"
														},
														{
															"begin": 2918,
															"end": 2926,
															"name": "POP"
														},
														{
															"begin": 2918,
															"end": 2926,
															"name": "POP"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "SWAP3"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "SWAP2"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "POP"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "POP"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "tag",
															"value": "93"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "JUMPDEST"
														},
														{
															"begin": 892,
															"end": 899,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 911,
															"end": 920,
															"name": "DUP1"
														},
														{
															"begin": 927,
															"end": 928,
															"name": "DUP3"
														},
														{
															"begin": 923,
															"end": 924,
															"name": "DUP5"
														},
														{
															"begin": 923,
															"end": 928,
															"name": "ADD"
														},
														{
															"begin": 911,
															"end": 928,
															"name": "SWAP1"
														},
														{
															"begin": 911,
															"end": 928,
															"name": "POP"
														},
														{
															"begin": 951,
															"end": 952,
															"name": "DUP4"
														},
														{
															"begin": 946,
															"end": 947,
															"name": "DUP2"
														},
														{
															"begin": 946,
															"end": 952,
															"name": "LT"
														},
														{
															"begin": 946,
															"end": 952,
															"name": "ISZERO"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH [tag]",
															"value": "199"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "JUMPI"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MLOAD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP3"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SUB"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP3"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "1B"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "POP"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "POP"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "POP"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MLOAD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SUB"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "REVERT"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "tag",
															"value": "199"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "JUMPDEST"
														},
														{
															"begin": 1002,
															"end": 1003,
															"name": "DUP1"
														},
														{
															"begin": 995,
															"end": 1003,
															"name": "SWAP2"
														},
														{
															"begin": 995,
															"end": 1003,
															"name": "POP"
														},
														{
															"begin": 995,
															"end": 1003,
															"name": "POP"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "SWAP3"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "SWAP2"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "POP"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "POP"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "tag",
															"value": "108"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "JUMPDEST"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "PUSH [tag]",
															"value": "201"
														},
														{
															"begin": 763,
															"end": 768,
															"name": "DUP4"
														},
														{
															"begin": 793,
															"end": 798,
															"name": "DUP5"
														},
														{
															"begin": 793,
															"end": 807,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 793,
															"end": 807,
															"name": "AND"
														},
														{
															"begin": 793,
															"end": 807,
															"name": "PUSH",
															"value": "A9059CBB"
														},
														{
															"begin": 793,
															"end": 816,
															"name": "SWAP1"
														},
														{
															"begin": 793,
															"end": 816,
															"name": "POP"
														},
														{
															"begin": 793,
															"end": 816,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 793,
															"end": 816,
															"name": "SHL"
														},
														{
															"begin": 818,
															"end": 820,
															"name": "DUP5"
														},
														{
															"begin": 822,
															"end": 827,
															"name": "DUP5"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MLOAD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "ADD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP4"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "AND"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "AND"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP2"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "ADD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP3"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP2"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "ADD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP3"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "POP"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "POP"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "POP"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MLOAD"
														},
														{
															"begin": 49,
															"end": 53,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 39,
															"end": 46,
															"name": "DUP2"
														},
														{
															"begin": 30,
															"end": 37,
															"name": "DUP4"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "SUB"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 20,
															"name": "DUP2"
														},
														{
															"begin": 6,
															"end": 55,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "NOT"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "AND"
														},
														{
															"begin": 38,
															"end": 42,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 29,
															"end": 36,
															"name": "DUP3"
														},
														{
															"begin": 25,
															"end": 43,
															"name": "ADD"
														},
														{
															"begin": 67,
															"end": 77,
															"name": "DUP1"
														},
														{
															"begin": 61,
															"end": 78,
															"name": "MLOAD"
														},
														{
															"begin": 96,
															"end": 154,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 199,
															"end": 207,
															"name": "DUP4"
														},
														{
															"begin": 192,
															"end": 196,
															"name": "DUP2"
														},
														{
															"begin": 186,
															"end": 190,
															"name": "DUP4"
														},
														{
															"begin": 182,
															"end": 197,
															"name": "AND"
														},
														{
															"begin": 179,
															"end": 208,
															"name": "OR"
														},
														{
															"begin": 167,
															"end": 177,
															"name": "DUP4"
														},
														{
															"begin": 160,
															"end": 209,
															"name": "MSTORE"
														},
														{
															"begin": 0,
															"end": 215,
															"name": "POP"
														},
														{
															"begin": 0,
															"end": 215,
															"name": "POP"
														},
														{
															"begin": 0,
															"end": 215,
															"name": "POP"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "POP"
														},
														{
															"begin": 744,
															"end": 762,
															"name": "PUSH [tag]",
															"value": "202"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "tag",
															"value": "201"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "JUMPDEST"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "POP"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "POP"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "POP"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "tag",
															"value": "144"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "JUMPDEST"
														},
														{
															"begin": 416,
															"end": 423,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 446,
															"end": 447,
															"name": "DUP2"
														},
														{
															"begin": 442,
															"end": 443,
															"name": "DUP4"
														},
														{
															"begin": 442,
															"end": 447,
															"name": "LT"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "PUSH [tag]",
															"value": "204"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMPI"
														},
														{
															"begin": 454,
															"end": 455,
															"name": "DUP2"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "PUSH [tag]",
															"value": "205"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMP"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "tag",
															"value": "204"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMPDEST"
														},
														{
															"begin": 450,
															"end": 451,
															"name": "DUP3"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "tag",
															"value": "205"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMPDEST"
														},
														{
															"begin": 435,
															"end": 455,
															"name": "SWAP1"
														},
														{
															"begin": 435,
															"end": 455,
															"name": "POP"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "SWAP3"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "SWAP2"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "POP"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "POP"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "tag",
															"value": "162"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "JUMPDEST"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "PUSH [tag]",
															"value": "207"
														},
														{
															"begin": 961,
															"end": 966,
															"name": "DUP5"
														},
														{
															"begin": 991,
															"end": 996,
															"name": "DUP6"
														},
														{
															"begin": 991,
															"end": 1009,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 991,
															"end": 1009,
															"name": "AND"
														},
														{
															"begin": 991,
															"end": 1009,
															"name": "PUSH",
															"value": "23B872DD"
														},
														{
															"begin": 991,
															"end": 1018,
															"name": "SWAP1"
														},
														{
															"begin": 991,
															"end": 1018,
															"name": "POP"
														},
														{
															"begin": 991,
															"end": 1018,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 991,
															"end": 1018,
															"name": "SHL"
														},
														{
															"begin": 1020,
															"end": 1024,
															"name": "DUP6"
														},
														{
															"begin": 1026,
															"end": 1028,
															"name": "DUP6"
														},
														{
															"begin": 1030,
															"end": 1035,
															"name": "DUP6"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MLOAD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP5"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP2"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP4"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP2"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP3"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP2"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP4"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "POP"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "POP"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "POP"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "POP"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MLOAD"
														},
														{
															"begin": 49,
															"end": 53,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 39,
															"end": 46,
															"name": "DUP2"
														},
														{
															"begin": 30,
															"end": 37,
															"name": "DUP4"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "SUB"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 20,
															"name": "DUP2"
														},
														{
															"begin": 6,
															"end": 55,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "NOT"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 38,
															"end": 42,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 29,
															"end": 36,
															"name": "DUP3"
														},
														{
															"begin": 25,
															"end": 43,
															"name": "ADD"
														},
														{
															"begin": 67,
															"end": 77,
															"name": "DUP1"
														},
														{
															"begin": 61,
															"end": 78,
															"name": "MLOAD"
														},
														{
															"begin": 96,
															"end": 154,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 199,
															"end": 207,
															"name": "DUP4"
														},
														{
															"begin": 192,
															"end": 196,
															"name": "DUP2"
														},
														{
															"begin": 186,
															"end": 190,
															"name": "DUP4"
														},
														{
															"begin": 182,
															"end": 197,
															"name": "AND"
														},
														{
															"begin": 179,
															"end": 208,
															"name": "OR"
														},
														{
															"begin": 167,
															"end": 177,
															"name": "DUP4"
														},
														{
															"begin": 160,
															"end": 209,
															"name": "MSTORE"
														},
														{
															"begin": 0,
															"end": 215,
															"name": "POP"
														},
														{
															"begin": 0,
															"end": 215,
															"name": "POP"
														},
														{
															"begin": 0,
															"end": 215,
															"name": "POP"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "POP"
														},
														{
															"begin": 942,
															"end": 960,
															"name": "PUSH [tag]",
															"value": "202"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "tag",
															"value": "207"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "JUMPDEST"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "tag",
															"value": "202"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "JUMPDEST"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "PUSH [tag]",
															"value": "209"
														},
														{
															"begin": 3224,
															"end": 3229,
															"name": "DUP3"
														},
														{
															"begin": 3216,
															"end": 3241,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3216,
															"end": 3241,
															"name": "AND"
														},
														{
															"begin": 3216,
															"end": 3241,
															"name": "PUSH [tag]",
															"value": "210"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "tag",
															"value": "209"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "JUMPDEST"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH [tag]",
															"value": "211"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "JUMPI"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MLOAD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP3"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SUB"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP3"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "POP"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "POP"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "POP"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MLOAD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SUB"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "REVERT"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "tag",
															"value": "211"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "JUMPDEST"
														},
														{
															"begin": 3350,
															"end": 3362,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3364,
															"end": 3387,
															"name": "PUSH",
															"value": "60"
														},
														{
															"begin": 3399,
															"end": 3404,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3410,
															"name": "PUSH",
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3391,
															"end": 3410,
															"name": "AND"
														},
														{
															"begin": 3411,
															"end": 3415,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "MLOAD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP3"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "MLOAD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "ADD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP4"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "tag",
															"value": "212"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMPDEST"
														},
														{
															"begin": 66,
															"end": 68,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 61,
															"end": 64,
															"name": "DUP4"
														},
														{
															"begin": 58,
															"end": 69,
															"name": "LT"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "PUSH [tag]",
															"value": "214"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMPI"
														},
														{
															"begin": 182,
															"end": 185,
															"name": "DUP1"
														},
														{
															"begin": 176,
															"end": 186,
															"name": "MLOAD"
														},
														{
															"begin": 171,
															"end": 174,
															"name": "DUP3"
														},
														{
															"begin": 164,
															"end": 187,
															"name": "MSTORE"
														},
														{
															"begin": 98,
															"end": 100,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 93,
															"end": 96,
															"name": "DUP3"
														},
														{
															"begin": 89,
															"end": 101,
															"name": "ADD"
														},
														{
															"begin": 82,
															"end": 101,
															"name": "SWAP2"
														},
														{
															"begin": 82,
															"end": 101,
															"name": "POP"
														},
														{
															"begin": 123,
															"end": 125,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 118,
															"end": 121,
															"name": "DUP2"
														},
														{
															"begin": 114,
															"end": 126,
															"name": "ADD"
														},
														{
															"begin": 107,
															"end": 126,
															"name": "SWAP1"
														},
														{
															"begin": 107,
															"end": 126,
															"name": "POP"
														},
														{
															"begin": 148,
															"end": 150,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 143,
															"end": 146,
															"name": "DUP4"
														},
														{
															"begin": 139,
															"end": 151,
															"name": "SUB"
														},
														{
															"begin": 132,
															"end": 151,
															"name": "SWAP3"
														},
														{
															"begin": 132,
															"end": 151,
															"name": "POP"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "PUSH [tag]",
															"value": "212"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMP"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "tag",
															"value": "214"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMPDEST"
														},
														{
															"begin": 274,
															"end": 275,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 267,
															"end": 270,
															"name": "DUP4"
														},
														{
															"begin": 263,
															"end": 265,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 259,
															"end": 271,
															"name": "SUB"
														},
														{
															"begin": 254,
															"end": 257,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 250,
															"end": 272,
															"name": "EXP"
														},
														{
															"begin": 246,
															"end": 276,
															"name": "SUB"
														},
														{
															"begin": 315,
															"end": 319,
															"name": "DUP1"
														},
														{
															"begin": 311,
															"end": 320,
															"name": "NOT"
														},
														{
															"begin": 305,
															"end": 308,
															"name": "DUP3"
														},
														{
															"begin": 299,
															"end": 309,
															"name": "MLOAD"
														},
														{
															"begin": 295,
															"end": 321,
															"name": "AND"
														},
														{
															"begin": 356,
															"end": 360,
															"name": "DUP2"
														},
														{
															"begin": 350,
															"end": 353,
															"name": "DUP5"
														},
														{
															"begin": 344,
															"end": 354,
															"name": "MLOAD"
														},
														{
															"begin": 340,
															"end": 361,
															"name": "AND"
														},
														{
															"begin": 389,
															"end": 396,
															"name": "DUP1"
														},
														{
															"begin": 380,
															"end": 387,
															"name": "DUP3"
														},
														{
															"begin": 377,
															"end": 397,
															"name": "OR"
														},
														{
															"begin": 372,
															"end": 375,
															"name": "DUP6"
														},
														{
															"begin": 365,
															"end": 398,
															"name": "MSTORE"
														},
														{
															"begin": 3,
															"end": 402,
															"name": "POP"
														},
														{
															"begin": 3,
															"end": 402,
															"name": "POP"
														},
														{
															"begin": 3,
															"end": 402,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "ADD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "MLOAD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SUB"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP2"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP7"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "GAS"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "CALL"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 14,
															"end": 15,
															"name": "DUP1"
														},
														{
															"begin": 21,
															"end": 22,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "DUP2"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "EQ"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "PUSH [tag]",
															"value": "216"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "JUMPI"
														},
														{
															"begin": 75,
															"end": 79,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 69,
															"end": 80,
															"name": "MLOAD"
														},
														{
															"begin": 64,
															"end": 80,
															"name": "SWAP2"
														},
														{
															"begin": 64,
															"end": 80,
															"name": "POP"
														},
														{
															"begin": 144,
															"end": 148,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 140,
															"end": 149,
															"name": "NOT"
														},
														{
															"begin": 133,
															"end": 137,
															"name": "PUSH",
															"value": "3F"
														},
														{
															"begin": 115,
															"end": 131,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 111,
															"end": 138,
															"name": "ADD"
														},
														{
															"begin": 107,
															"end": 150,
															"name": "AND"
														},
														{
															"begin": 104,
															"end": 105,
															"name": "DUP3"
														},
														{
															"begin": 100,
															"end": 151,
															"name": "ADD"
														},
														{
															"begin": 94,
															"end": 98,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 87,
															"end": 152,
															"name": "MSTORE"
														},
														{
															"begin": 169,
															"end": 185,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 166,
															"end": 167,
															"name": "DUP3"
														},
														{
															"begin": 159,
															"end": 186,
															"name": "MSTORE"
														},
														{
															"begin": 225,
															"end": 241,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 222,
															"end": 223,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 215,
															"end": 219,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 212,
															"end": 213,
															"name": "DUP5"
														},
														{
															"begin": 208,
															"end": 220,
															"name": "ADD"
														},
														{
															"begin": 193,
															"end": 242,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "PUSH [tag]",
															"value": "215"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "JUMP"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "tag",
															"value": "216"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "JUMPDEST"
														},
														{
															"begin": 36,
															"end": 40,
															"name": "PUSH",
															"value": "60"
														},
														{
															"begin": 31,
															"end": 40,
															"name": "SWAP2"
														},
														{
															"begin": 31,
															"end": 40,
															"name": "POP"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "tag",
															"value": "215"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "JUMPDEST"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "POP"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3434,
															"end": 3441,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH [tag]",
															"value": "217"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "JUMPI"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MLOAD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP3"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SUB"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP3"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "POP"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "POP"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "POP"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MLOAD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SUB"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "REVERT"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "tag",
															"value": "217"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "JUMPDEST"
														},
														{
															"begin": 3513,
															"end": 3514,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3493,
															"end": 3503,
															"name": "DUP2"
														},
														{
															"begin": 3493,
															"end": 3510,
															"name": "MLOAD"
														},
														{
															"begin": 3493,
															"end": 3514,
															"name": "GT"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "ISZERO"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "PUSH [tag]",
															"value": "218"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "JUMPI"
														},
														{
															"begin": 3633,
															"end": 3643,
															"name": "DUP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "DUP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "ADD"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "MLOAD"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "219"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "219"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "DUP2"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "ADD"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "DUP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "DUP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "MLOAD"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "ADD"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP3"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP2"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "POP"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "POP"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "POP"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH [tag]",
															"value": "220"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "JUMPI"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MLOAD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "8C379A000000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MSTORE"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP3"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SUB"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP3"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MSTORE"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MSTORE"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH data",
															"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "CODECOPY"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "POP"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "POP"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MLOAD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SUB"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "REVERT"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "tag",
															"value": "220"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "JUMPDEST"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "tag",
															"value": "218"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "JUMPDEST"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "POP"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "POP"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "POP"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "POP"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "tag",
															"value": "210"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "JUMPDEST"
														},
														{
															"begin": 602,
															"end": 606,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 805,
															"end": 817,
															"name": "DUP1"
														},
														{
															"begin": 914,
															"end": 921,
															"name": "DUP3"
														},
														{
															"begin": 902,
															"end": 922,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 894,
															"end": 922,
															"name": "SWAP1"
														},
														{
															"begin": 894,
															"end": 922,
															"name": "POP"
														},
														{
															"begin": 947,
															"end": 948,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 940,
															"end": 944,
															"name": "DUP2"
														},
														{
															"begin": 940,
															"end": 948,
															"name": "GT"
														},
														{
															"begin": 933,
															"end": 948,
															"name": "SWAP2"
														},
														{
															"begin": 933,
															"end": 948,
															"name": "POP"
														},
														{
															"begin": 933,
															"end": 948,
															"name": "POP"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "SWAP2"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "SWAP1"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "POP"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "JUMP",
															"value": "[out]"
														}
													],
													".data": {
														"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
														"D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
														"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
													}
												}
											}
										},
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"77D8567A7B7BF9A9A30EA727F6E525CAE6667D736CDAFF555C86DB8D81648A1A": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
										"AE1F87E20C157D2878A2E48B377D209DFDDFC6D5EC9B80CEECC5ADDD0EF6FFDB": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973",
										"AFBE2226ADED12CD2F0D3C83FF167EEDC78632DC0894F92EEA331D3F2B56D089": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c6564",
										"E71986032604F829CCAEC9386C51E838A85CDBF506769BD103C829F640682ADF": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74207265616479",
										"E8F5C4CA6631F4BFE6FFABF099741B79E5C6B86618DDCBEEE6BA3C5940184427": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564"
									}
								},
								"F22E14100106EB9F2180E576EDA6E762FDCBD26E14106A6823275A3B8FDEA515": "5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e"
							}
						},
						"methodIdentifiers": {
							"deploy(address,uint256)": "4956eaf0",
							"isOwner()": "8f32d59b",
							"notifyRewardAmount(address)": "81e16298",
							"notifyRewardAmounts()": "ae741d8d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardsToken()": "d1af0c7d",
							"stakingRewardsGenesis()": "a0928c11",
							"stakingRewardsInfoByStakingToken(address)": "6cf8caf8",
							"stakingTokens(uint256)": "344e5e34",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardsGenesis\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"notifyRewardAmounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingRewardsGenesis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewardsInfoByStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingRewards\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"deploy(address,uint256)\":{\"notice\":\"// permissioned functions\"},\"notifyRewardAmounts()\":{\"notice\":\"// permissionless functions\"}}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/StakingRewardsFactory.sol\":\"StakingRewardsFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]},\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]},\"liquidity-staker/StakingRewards.sol\":{\"keccak256\":\"0xddb23f2f6524b37083b38a40d3f4c0eab25f87d59230578380636c374c6725a4\",\"urls\":[\"bzz-raw://85f2e3a4d0457cb11c0f069172fc4c5d619f0b1cd405eb9866f3a0a12cd733b0\",\"dweb:/ipfs/QmfLoLk2zKaBqjdzQf4zSjEjQRRRNasJA4ZqaJvEoY8rvF\"]},\"liquidity-staker/StakingRewardsFactory.sol\":{\"keccak256\":\"0xac9845bdfec55972392f891e26cca747788c7b16bf592d931996849a02291daa\",\"urls\":[\"bzz-raw://022e734d2ac16310a39772629b42aee9b01bd03f1ca6c3b2e3317aaf69730ed5\",\"dweb:/ipfs/QmSiLgrefp74NSd9Ymi6HtehEgZgTn6beGscGskbRFvDNN\"]},\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1355,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1357,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "stakingRewardsGenesis",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1360,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "stakingTokens",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1369,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "stakingRewardsInfoByStakingToken",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(StakingRewardsInfo)1365_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(StakingRewardsInfo)1365_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakingRewardsInfo)1365_storage"
							},
							"t_struct(StakingRewardsInfo)1365_storage": {
								"encoding": "inplace",
								"label": "struct StakingRewardsFactory.StakingRewardsInfo",
								"members": [
									{
										"astId": 1362,
										"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
										"label": "stakingRewards",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1364,
										"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
										"label": "rewardAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"deploy(address,uint256)": {
								"notice": "// permissioned functions"
							},
							"notifyRewardAmounts()": {
								"notice": "// permissionless functions"
							}
						}
					}
				}
			},
			"liquidity-staker/interfaces/IStakingRewards.sol": {
				"IStakingRewards": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"rewardPerToken()": "cd3daf9d",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/interfaces/IStakingRewards.sol\":\"IStakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							68
						]
					},
					"id": 69,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Standard math utilities missing in the Solidity language.",
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "249:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 10,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "266:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 11,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "271:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "266:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "266:14:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 16,
												"nodeType": "Return",
												"src": "259:21:0"
											}
										]
									},
									"documentation": "@dev Returns the largest of two numbers.",
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "195:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "194:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "240:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "239:9:0"
									},
									"scope": 68,
									"src": "182:105:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "425:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 27,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 28,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "446:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "442:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "454:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "442:13:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 26,
												"id": 33,
												"nodeType": "Return",
												"src": "435:20:0"
											}
										]
									},
									"documentation": "@dev Returns the smallest of two numbers.",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:22:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "416:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "415:9:0"
									},
									"scope": 68,
									"src": "358:104:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "646:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 44,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "718:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "722:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "718:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 47,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 48,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "728:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "732:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "728:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 51,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "717:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 59,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 55,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 53,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 37,
																					"src": "739:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 54,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "743:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "739:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 58,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 56,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 39,
																					"src": "747:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 57,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "751:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "747:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "739:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 60,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "738:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "756:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "738:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 63,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "737:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "717:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 43,
												"id": 65,
												"nodeType": "Return",
												"src": "710:48:0"
											}
										]
									},
									"documentation": "@dev Returns the average of two numbers. The result is rounded towards\nzero.",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "592:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "603:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "591:22:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "637:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:9:0"
									},
									"scope": 68,
									"src": "575:190:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 69,
							"src": "99:668:0"
						}
					],
					"src": "0:768:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							201
						]
					},
					"id": 202,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 70,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 84,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 78,
												"id": 93,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 201,
									"src": "834:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1341:112:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1359:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1364:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "1351:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1351:49:1"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1410:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1410:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1422:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1426:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1410:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1445:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 118,
												"nodeType": "Return",
												"src": "1438:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 201,
									"src": "1274:179:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1760:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1992:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1997:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1988:45:1",
												"trueBody": {
													"id": 134,
													"nodeType": "Block",
													"src": "2000:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2021:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 128,
															"id": 133,
															"nodeType": "Return",
															"src": "2014:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "2043:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2055:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2059:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2055:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2043:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 143,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2078:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 144,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2082:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2078:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "2087:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2078:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "2070:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2070:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "2144:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 152,
												"nodeType": "Return",
												"src": "2137:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1706:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1717:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1705:22:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:1"
									},
									"scope": 201,
									"src": "1693:459:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2674:259:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2762:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "2750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2750:44:1"
											},
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2804:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 172,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2816:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2820:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2816:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2804:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 176,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2925:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 177,
												"nodeType": "Return",
												"src": "2918:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2620:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2631:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2619:22:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2665:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2664:9:1"
									},
									"scope": 201,
									"src": "2607:326:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3444:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "3462:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3467:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3462:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3470:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "3454:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3454:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3454:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 195,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3514:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 196,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "3518:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3514:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 187,
												"id": 198,
												"nodeType": "Return",
												"src": "3507:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3390:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3401:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3389:22:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3435:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3434:9:1"
									},
									"scope": 201,
									"src": "3377:149:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 202,
							"src": "589:2939:1"
						}
					],
					"src": "0:3529:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							312
						]
					},
					"id": 313,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be aplied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 312,
							"linearizedBaseContracts": [
								312
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 205,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 312,
									"src": "408:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 204,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 211,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "464:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "495:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:57:2"
									},
									"src": "437:84:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "647:91:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 214,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "657:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "666:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "666:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "657:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "657:19:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "720:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "712:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "712:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 223,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "724:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "691:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "691:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "686:45:2"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 227,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:0:2"
									},
									"scope": 312,
									"src": "623:115:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "861:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 232,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 231,
												"id": 233,
												"nodeType": "Return",
												"src": "871:13:2"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "852:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:9:2"
									},
									"scope": 312,
									"src": "814:77:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1000:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 238,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "1018:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1018:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1029:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "1010:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1010:54:2"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "1074:1:2"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 245,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:2:2"
									},
									"src": "979:103:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1211:44:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 250,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "1228:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1228:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1242:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1228:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 249,
												"id": 254,
												"nodeType": "Return",
												"src": "1221:27:2"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1205:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1204:6:2"
									},
									"scope": 312,
									"src": "1165:90:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1645:91:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 262,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1697:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1689:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 261,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1660:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "EmitStatement",
												"src": "1655:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 268,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1710:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1727:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1719:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1719:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1710:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1710:19:2"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * > Note: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 259,
											"modifierName": {
												"argumentTypes": null,
												"id": 258,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 245,
												"src": "1635:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1635:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1625:2:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:0:2"
									},
									"scope": 312,
									"src": "1599:137:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "1947:45:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 283,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "1976:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "1957:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1957:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1957:28:2"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 280,
											"modifierName": {
												"argumentTypes": null,
												"id": 279,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 245,
												"src": "1937:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1937:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1911:18:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:2"
									},
									"scope": 312,
									"src": "1885:107:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2148:170:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 293,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "2166:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2186:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2178:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2178:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2166:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2190:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "2158:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2158:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "2158:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 302,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2267:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "2275:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 301,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2246:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "EmitStatement",
												"src": "2241:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2294:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 307,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2303:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2294:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2294:17:2"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2121:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2120:18:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:0:2"
									},
									"scope": 312,
									"src": "2093:225:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 313,
							"src": "385:1935:2"
						}
					],
					"src": "0:2321:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							370
						]
					},
					"id": 371,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 315,
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 440,
							"src": "25:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 316,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "135:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "135:6:3"
								}
							],
							"contractDependencies": [
								439
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 370,
							"linearizedBaseContracts": [
								370,
								439
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 319,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "148:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "148:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 321,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "174:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 320,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "174:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "202:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 322,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "494:85:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 332,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "504:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 333,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "512:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "504:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "504:12:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 336,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 337,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "536:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "526:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "526:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 340,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "552:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 341,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "564:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "552:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "552:20:3"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "429:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "449:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 326,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "471:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 328,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:58:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:3"
									},
									"scope": 370,
									"src": "416:163:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "696:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 350,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "713:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 349,
												"id": 351,
												"nodeType": "Return",
												"src": "706:12:3"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "681:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "681:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:15:3"
									},
									"scope": 370,
									"src": "644:81:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "892:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 358,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "902:14:3"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:3"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "877:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "876:15:3"
									},
									"scope": 370,
									"src": "838:85:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1526:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 366,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "1543:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "1536:16:3"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:2:3"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1519:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 363,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1519:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1518:7:3"
									},
									"scope": 370,
									"src": "1478:81:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 371,
							"src": "109:1452:3"
						}
					],
					"src": "0:1562:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							439
						]
					},
					"id": 440,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:4"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "316:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:4"
									},
									"scope": 439,
									"src": "270:55:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "427:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:4"
									},
									"scope": 439,
									"src": "408:68:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "714:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "733:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "767:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:4"
									},
									"scope": 439,
									"src": "696:77:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through `transferFrom`. This is\nzero by default.\n     * This value changes when `approve` or `transferFrom` are called.",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1067:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1082:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1122:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:4"
									},
									"scope": 439,
									"src": "1048:83:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * > Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an `Approval` event.",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1792:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1809:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:33:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1843:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:6:4"
									},
									"scope": 439,
									"src": "1775:74:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2178:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2194:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2213:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2177:51:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2247:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2247:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2246:6:4"
									},
									"scope": 439,
									"src": "2156:97:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 430,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2437:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2459:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2479:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2436:57:4"
									},
									"src": "2422:72:4"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to `approve`. `value` is the new allowance.",
									"id": 438,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2668:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2691:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2716:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2667:63:4"
									},
									"src": "2653:78:4"
								}
							],
							"scope": 440,
							"src": "176:2557:4"
						}
					],
					"src": "0:2734:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							658
						]
					},
					"id": 659,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 442,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 440,
							"src": "25:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 443,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 202,
							"src": "48:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 444,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 678,
							"src": "82:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 447,
									"libraryName": {
										"contractScope": null,
										"id": 445,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 201,
										"src": "604:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$201",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "598:27:5",
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 450,
									"libraryName": {
										"contractScope": null,
										"id": 448,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 677,
										"src": "636:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$677",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:5",
									"typeName": {
										"id": 449,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "734:102:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 460,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 463,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 452,
																			"src": "793:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "793:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "793:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 466,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "818:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 467,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "822:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "770:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "770:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 459,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "744:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:85:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "744:85:5"
											}
										]
									},
									"documentation": null,
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "684:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 451,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "684:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "698:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "710:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:41:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:5"
									},
									"scope": 658,
									"src": "662:174:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "932:112:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 484,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "961:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 487,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "991:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 422,
																		"src": "991:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "991:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 490,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "1020:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 491,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1026:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 492,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "1030:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 485,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "968:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "968:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:68:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 483,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "942:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:95:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "942:95:5"
											}
										]
									},
									"documentation": null,
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "868:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 473,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "868:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "882:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "896:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "908:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:55:5"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:5"
									},
									"scope": 658,
									"src": "842:202:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1126:536:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "1415:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1424:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1415:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1414:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 514,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1641,
																							"src": "1455:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$658",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$658",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1447:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 515,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1447:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 516,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 501,
																					"src": "1462:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 511,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "1431:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$439",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 402,
																				"src": "1431:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:39:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1431:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 520,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1430:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1414:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:56:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "1406:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:150:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1406:150:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1585:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 529,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "1615:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 411,
																		"src": "1615:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1615:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 532,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "1639:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "1648:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 527,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "1592:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1592:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1592:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1566:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1566:89:5"
											}
										]
									},
									"documentation": null,
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1071:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 498,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "1071:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1085:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1102:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:46:5"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:5"
									},
									"scope": 658,
									"src": "1050:612:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "1754:196:5",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1764:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1764:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 557,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "1831:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 552,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "1811:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1803:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1803:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 554,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "1818:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 549,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "1787:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 402,
																"src": "1787:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "1787:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 561,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1866:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 564,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 540,
																			"src": "1896:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 411,
																		"src": "1896:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1896:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 567,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "1920:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 568,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1929:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 562,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "1873:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1873:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:69:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1847:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:96:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1847:96:5"
											}
										]
									},
									"documentation": null,
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1699:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 539,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "1699:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1713:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1730:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:46:5"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:5"
									},
									"scope": 658,
									"src": "1668:282:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2042:196:5",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "2052:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "2119:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 587,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1641,
																			"src": "2099:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 589,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2106:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2075:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 402,
																"src": "2075:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 120,
														"src": "2075:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "2154:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "2184:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 411,
																		"src": "2184:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2184:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2208:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 603,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "2217:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 597,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "2161:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2161:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:69:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 595,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "2135:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:96:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "2135:96:5"
											}
										]
									},
									"documentation": null,
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 574,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "1987:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2001:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2018:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:46:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:5"
									},
									"scope": 658,
									"src": "1956:282:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2690:1026:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 617,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "3224:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3216:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3216:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 676,
																"src": "3216:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3216:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3245:33:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "3208:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3208:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "3208:71:5"
											},
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "3350:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3350:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "3364:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3364:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 632,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3411:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 629,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "3399:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3391:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3391:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3391:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3349:67:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 636,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "3434:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3443:34:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "3426:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3426:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "3426:52:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 640,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3493:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3493:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3513:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3493:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 655,
												"nodeType": "IfStatement",
												"src": "3489:221:5",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "3516:194:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 647,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "3633:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3646:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 649,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3645:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 645,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1602,
																				"src": "3622:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3622:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3622:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3654:44:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 644,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1618,
																		1619
																	],
																	"referencedDeclaration": 1619,
																	"src": "3614:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3614:85:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 653,
															"nodeType": "ExpressionStatement",
															"src": "3614:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2649:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 609,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "2649:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2663:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2663:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2648:33:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2690:0:5"
									},
									"scope": 658,
									"src": "2621:1095:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 659,
							"src": "574:3144:5"
						}
					],
					"src": "0:3719:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							677
						]
					},
					"id": 678,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type,",
							"fullyImplemented": true,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "608:347:6",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "805:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "805:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "805:12:6"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 668,
															"isOffset": false,
															"isSlot": false,
															"src": "894:4:6",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 662,
															"isOffset": false,
															"isSlot": false,
															"src": "914:7:6",
															"valueSize": 1
														}
													}
												],
												"id": 670,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "883:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 671,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "940:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "947:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "940:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 666,
												"id": 674,
												"nodeType": "Return",
												"src": "933:15:6"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * > It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.",
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "562:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:17:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "602:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "602:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "601:6:6"
									},
									"scope": 677,
									"src": "542:413:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 678,
							"src": "94:863:6"
						}
					],
					"src": "0:958:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							709
						]
					},
					"id": 710,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\navailable, which can be aplied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
							"fullyImplemented": true,
							"id": 709,
							"linearizedBaseContracts": [
								709
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 681,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 709,
									"src": "659:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 680,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "719:173:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "868:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "884:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "868:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "868:17:7"
											}
										]
									},
									"documentation": null,
									"id": 689,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:7"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:0:7"
									},
									"scope": 709,
									"src": "695:197:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "1291:175:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 691,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "1301:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1318:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1301:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "1301:18:7"
											},
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "1329:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1329:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"argumentTypes": null,
													"id": 697,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 681,
													"src": "1352:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1329:36:7"
											},
											{
												"id": 699,
												"nodeType": "PlaceholderStatement",
												"src": "1375:1:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1394:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "1410:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1394:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1425:33:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "1386:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "1386:73:7"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 708,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:2:7"
									},
									"src": "1267:199:7",
									"visibility": "internal"
								}
							],
							"scope": 710,
							"src": "556:912:7"
						}
					],
					"src": "0:1469:7"
				},
				"id": 7
			},
			"liquidity-staker/RewardsDistributionRecipient.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/RewardsDistributionRecipient.sol",
					"exportedSymbols": {
						"RewardsDistributionRecipient": [
							731
						]
					},
					"id": 732,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 711,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 731,
							"linearizedBaseContracts": [
								731
							],
							"name": "RewardsDistributionRecipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 713,
									"name": "rewardsDistribution",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "73:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 712,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "73:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "144:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "143:16:8"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:8"
									},
									"scope": 731,
									"src": "116:53:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "212:119:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 721,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "231:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "231:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 723,
																"name": "rewardsDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "245:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "231:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "266:44:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															},
															"value": "Caller is not RewardsDistribution contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "223:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "223:88:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "223:88:8"
											},
											{
												"id": 728,
												"nodeType": "PlaceholderStatement",
												"src": "322:1:8"
											}
										]
									},
									"documentation": null,
									"id": 730,
									"name": "onlyRewardsDistribution",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:8"
									},
									"src": "177:154:8",
									"visibility": "internal"
								}
							],
							"scope": 732,
							"src": "28:306:8"
						}
					],
					"src": "0:334:8"
				},
				"id": 8
			},
			"liquidity-staker/StakingRewards.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/StakingRewards.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							1346
						],
						"StakingRewards": [
							1328
						]
					},
					"id": 1347,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 733,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol",
							"id": 734,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 69,
							"src": "28:108:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
							"id": 735,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 202,
							"src": "138:112:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"id": 736,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 371,
							"src": "252:124:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol",
							"id": 737,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 659,
							"src": "378:120:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol",
							"id": 738,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 710,
							"src": "500:120:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "liquidity-staker/interfaces/IStakingRewards.sol",
							"file": "./interfaces/IStakingRewards.sol",
							"id": 739,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 1601,
							"src": "640:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "liquidity-staker/RewardsDistributionRecipient.sol",
							"file": "./RewardsDistributionRecipient.sol",
							"id": 740,
							"nodeType": "ImportDirective",
							"scope": 1347,
							"sourceUnit": 732,
							"src": "684:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 741,
										"name": "IStakingRewards",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1600,
										"src": "759:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStakingRewards_$1600",
											"typeString": "contract IStakingRewards"
										}
									},
									"id": 742,
									"nodeType": "InheritanceSpecifier",
									"src": "759:15:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 743,
										"name": "RewardsDistributionRecipient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 731,
										"src": "776:28:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RewardsDistributionRecipient_$731",
											"typeString": "contract RewardsDistributionRecipient"
										}
									},
									"id": 744,
									"nodeType": "InheritanceSpecifier",
									"src": "776:28:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 745,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 709,
										"src": "806:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$709",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "806:15:9"
								}
							],
							"contractDependencies": [
								709,
								731,
								1600
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								709,
								731,
								1600
							],
							"name": "StakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 749,
									"libraryName": {
										"contractScope": null,
										"id": 747,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 201,
										"src": "835:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$201",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "829:27:9",
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "848:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 752,
									"libraryName": {
										"contractScope": null,
										"id": 750,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 658,
										"src": "868:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$658",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "862:27:9",
									"typeName": {
										"contractScope": null,
										"id": 751,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "882:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 754,
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "948:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$439",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 753,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "948:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 756,
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "981:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$439",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 755,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "981:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 759,
									"name": "periodFinish",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1014:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 757,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1014:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1044:1:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 762,
									"name": "rewardRate",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1052:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1052:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 761,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1080:1:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 765,
									"name": "rewardsDuration",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1088:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 763,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1088:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330",
										"id": 764,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1121:7:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 767,
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1181:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 766,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 769,
									"name": "rewardPerTokenStored",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1217:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 768,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1217:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 773,
									"name": "userRewardPerTokenPaid",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1261:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 772,
										"keyType": {
											"id": 770,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1269:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1261:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 771,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1280:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 777,
									"name": "rewards",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1325:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 776,
										"keyType": {
											"id": 774,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1333:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1325:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 775,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1344:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 779,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1376:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1376:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 783,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1328,
									"src": "1411:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 782,
										"keyType": {
											"id": 780,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1419:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1411:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 781,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1430:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "1641:155:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 792,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1652:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 794,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "1674:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 793,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "1667:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1667:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"src": "1652:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "1652:36:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 798,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1699:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 800,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "1721:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 799,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "1714:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1714:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"src": "1699:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "1699:36:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 804,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1746:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 805,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1768:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1746:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "1746:42:9"
											}
										]
									},
									"documentation": null,
									"id": 809,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "_rewardsDistribution",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1534:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1573:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"name": "_stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1605:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1523:110:9"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1641:0:9"
									},
									"scope": 1328,
									"src": "1512:284:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "1900:38:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 814,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 779,
													"src": "1918:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 813,
												"id": 815,
												"nodeType": "Return",
												"src": "1911:19:9"
											}
										]
									},
									"documentation": null,
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:9"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1891:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1890:9:9"
									},
									"scope": 1328,
									"src": "1845:93:9",
									"stateMutability": "view",
									"superFunction": 1576,
									"visibility": "external"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "2014:44:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 824,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "2032:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 826,
													"indexExpression": {
														"argumentTypes": null,
														"id": 825,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "2042:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2032:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 823,
												"id": 827,
												"nodeType": "Return",
												"src": "2025:25:9"
											}
										]
									},
									"documentation": null,
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1965:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1964:17:9"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "2005:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2005:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2004:9:9"
									},
									"scope": 1328,
									"src": "1946:112:9",
									"stateMutability": "view",
									"superFunction": 1583,
									"visibility": "external"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2132:65:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 836,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "2159:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2159:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 838,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "2176:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 834,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2150:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$68_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 35,
														"src": "2150:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2150:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 833,
												"id": 840,
												"nodeType": "Return",
												"src": "2143:46:9"
											}
										]
									},
									"documentation": null,
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2099:2:9"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2123:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2122:9:9"
									},
									"scope": 1328,
									"src": "2066:131:9",
									"stateMutability": "view",
									"superFunction": 1554,
									"visibility": "public"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "2261:274:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 847,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "2276:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2292:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2276:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 853,
												"nodeType": "IfStatement",
												"src": "2272:77:9",
												"trueBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "2295:54:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 850,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2317:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 846,
															"id": 851,
															"nodeType": "Return",
															"src": "2310:27:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 868,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2499:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2489:4:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 862,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 762,
																					"src": "2473:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 859,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 767,
																							"src": "2453:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 856,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 842,
																								"src": "2422:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 857,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2422:26:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 858,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 120,
																						"src": "2422:30:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 860,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2422:46:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "2422:50:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2422:62:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "2422:66:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2422:72:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 179,
																"src": "2422:76:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2422:90:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 854,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2379:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "2379:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:148:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 846,
												"id": 871,
												"nodeType": "Return",
												"src": "2359:168:9"
											}
										]
									},
									"documentation": null,
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2228:2:9"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2252:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2252:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2251:9:9"
									},
									"scope": 1328,
									"src": "2205:330:9",
									"stateMutability": "view",
									"superFunction": 1559,
									"visibility": "public"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "2606:135:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 896,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2716:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 898,
															"indexExpression": {
																"argumentTypes": null,
																"id": 897,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "2724:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2716:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2706:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 887,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 773,
																						"src": "2668:22:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 889,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 888,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 875,
																						"src": "2691:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2668:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 884,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 873,
																						"src": "2647:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 885,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2647:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 120,
																				"src": "2647:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2647:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 880,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "2624:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 882,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 881,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "2634:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2624:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "2624:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2624:77:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 179,
																"src": "2624:81:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2624:87:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "2624:91:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:109:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 900,
												"nodeType": "Return",
												"src": "2617:116:9"
											}
										]
									},
									"documentation": null,
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2559:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2558:17:9"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2597:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2596:9:9"
									},
									"scope": 1328,
									"src": "2543:198:9",
									"stateMutability": "view",
									"superFunction": 1566,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2813:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 909,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "2846:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 907,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "2831:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "2831:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 906,
												"id": 911,
												"nodeType": "Return",
												"src": "2824:38:9"
											}
										]
									},
									"documentation": null,
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2778:2:9"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2804:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2804:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2803:9:9"
									},
									"scope": 1328,
									"src": "2749:121:9",
									"stateMutability": "view",
									"superFunction": 1571,
									"visibility": "external"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3066:424:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 933,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3085:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3094:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3085:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3097:16:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "3077:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3077:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "3077:37:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 939,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3125:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 942,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3157:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 940,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3140:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3140:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3140:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3125:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "3125:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 946,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3175:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 949,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 947,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3185:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3185:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3175:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 955,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3225:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 950,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3199:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 953,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 951,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "3209:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3209:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3199:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3199:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3199:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3175:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "3175:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 965,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3310:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3310:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 968,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "3330:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3322:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3322:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3337:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 971,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3345:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 972,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3355:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 973,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "3358:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 974,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "3361:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 961,
																			"name": "stakingToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "3288:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3280:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3280:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 959,
																"name": "IUniswapV2ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "3264:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2ERC20_$1346_$",
																	"typeString": "type(contract IUniswapV2ERC20)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3264:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2ERC20_$1346",
																"typeString": "contract IUniswapV2ERC20"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1345,
														"src": "3264:45:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3264:99:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "3264:99:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 980,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3406:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3406:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 983,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "3426:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3418:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3418:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 985,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3433:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 977,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3376:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "3376:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3376:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "3376:64:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 989,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3463:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3463:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 991,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3475:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "3456:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3456:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "EmitStatement",
												"src": "3451:31:9"
											}
										]
									},
									"documentation": null,
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 926,
											"modifierName": {
												"argumentTypes": null,
												"id": 925,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "3028:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3028:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 928,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "3054:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3054:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 930,
											"modifierName": {
												"argumentTypes": null,
												"id": 927,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1305,
												"src": "3041:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3041:24:9"
										}
									],
									"name": "stakeWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2957:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2957:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2973:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2973:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2988:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 918,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2988:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2997:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "3008:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 922,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2956:62:9"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3066:0:9"
									},
									"scope": 1328,
									"src": "2932:558:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "3576:291:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1007,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "3595:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3604:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3595:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3607:16:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "3587:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3587:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3587:37:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1013,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3635:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1016,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "3667:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3650:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3650:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3650:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3635:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "3635:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1020,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3685:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1023,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1021,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3695:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3695:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3685:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1029,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "3735:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3709:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1027,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1025,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "3719:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3719:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3709:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3709:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3709:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3685:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "3685:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1036,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3783:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3783:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1039,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "3803:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3795:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3795:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1041,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3810:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3753:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "3753:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3753:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "3753:64:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1045,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "3840:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3840:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3852:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "3833:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "3828:31:9"
											}
										]
									},
									"documentation": null,
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1000,
											"modifierName": {
												"argumentTypes": null,
												"id": 999,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "3538:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3538:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "3564:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3564:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1004,
											"modifierName": {
												"argumentTypes": null,
												"id": 1001,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1305,
												"src": "3551:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3551:24:9"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3513:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3512:16:9"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:9"
									},
									"scope": 1328,
									"src": "3498:369:9",
									"stateMutability": "nonpayable",
									"superFunction": 1588,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3954:278:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1063,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "3973:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3982:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3973:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3985:19:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "3965:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3965:40:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "4016:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1072,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "4048:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1070,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "4031:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 120,
															"src": "4031:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4031:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4016:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "4016:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1076,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "4066:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1079,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "4076:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4076:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4066:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1085,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "4116:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1080,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "4090:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1083,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1081,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "4100:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4100:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4090:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 120,
															"src": "4090:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4090:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4066:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "4066:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "4160:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4160:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1094,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4172:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1089,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "4134:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 472,
														"src": "4134:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4134:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "4134:45:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1098,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "4205:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4205:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1100,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4217:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1097,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "4195:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4195:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "EmitStatement",
												"src": "4190:34:9"
											}
										]
									},
									"documentation": null,
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1056,
											"modifierName": {
												"argumentTypes": null,
												"id": 1055,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "3916:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3916:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "3942:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3942:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1060,
											"modifierName": {
												"argumentTypes": null,
												"id": 1057,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1305,
												"src": "3929:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3929:24:9"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3893:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3893:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3892:16:9"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3954:0:9"
									},
									"scope": 1328,
									"src": "3875:357:9",
									"stateMutability": "nonpayable",
									"superFunction": 1593,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "4306:241:9",
										"statements": [
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4317:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4317:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1115,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "4334:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1118,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1116,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4342:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4342:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4334:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4317:36:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1120,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "4368:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4377:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4368:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "4364:176:9",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "4380:160:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1123,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "4395:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1126,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1124,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "4403:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4403:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4395:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4417:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4395:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1129,
															"nodeType": "ExpressionStatement",
															"src": "4395:23:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1133,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "4459:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4459:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1135,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "4471:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1130,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4433:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$439",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 472,
																	"src": "4433:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4433:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "4433:45:9"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1139,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "4509:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4509:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1141,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "4521:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1138,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "4498:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4498:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "EmitStatement",
															"src": "4493:35:9"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1107,
											"modifierName": {
												"argumentTypes": null,
												"id": 1106,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "4268:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4268:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1109,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "4294:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4294:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1111,
											"modifierName": {
												"argumentTypes": null,
												"id": 1108,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1305,
												"src": "4281:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4281:24:9"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4258:2:9"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4306:0:9"
									},
									"scope": 1328,
									"src": "4240:307:9",
									"stateMutability": "nonpayable",
									"superFunction": 1596,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "4580:72:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1151,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "4600:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1154,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1152,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "4610:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4610:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4600:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "4591:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "4591:31:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1157,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "4633:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4633:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "4633:11:9"
											}
										]
									},
									"documentation": null,
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4568:2:9"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4580:0:9"
									},
									"scope": 1328,
									"src": "4555:97:9",
									"stateMutability": "nonpayable",
									"superFunction": 1599,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "4818:981:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1173,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "4833:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4833:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1175,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "4852:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4833:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "4939:208:9",
													"statements": [
														{
															"assignments": [
																1186
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1186,
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 1210,
																	"src": "4954:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1185,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4954:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1192,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1189,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1605,
																			"src": "4991:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4991:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1187,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "4974:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 120,
																	"src": "4974:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4974:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4954:53:9"
														},
														{
															"assignments": [
																1194
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1194,
																	"name": "leftover",
																	"nodeType": "VariableDeclaration",
																	"scope": 1210,
																	"src": "5022:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5022:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1197,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "5055:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1195,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "5041:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 154,
																	"src": "5041:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5041:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5022:44:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1200,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "5081:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1206,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "5119:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1203,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1194,
																					"src": "5105:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1201,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "5094:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 95,
																				"src": "5094:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5094:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 179,
																		"src": "5094:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5094:41:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5081:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "5081:54:9"
														}
													]
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "4829:318:9",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "4866:67:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1177,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "4881:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1180,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "4905:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1178,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "4894:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 179,
																		"src": "4894:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4894:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4881:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1183,
															"nodeType": "ExpressionStatement",
															"src": "4881:40:9"
														}
													]
												}
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "5507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1217,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "5553:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1328",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5545:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5545:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1214,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "5522:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "5522:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5522:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5507:52:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1222,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5578:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1225,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5604:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1223,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "5592:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 179,
																	"src": "5592:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5592:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5578:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5622:26:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "5570:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5570:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "5570:79:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1231,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5662:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1232,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "5679:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5679:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5662:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "5662:32:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1236,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "5705:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1240,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5740:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1237,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "5720:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5720:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "5720:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5720:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5705:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "5705:51:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1245,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5784:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "5772:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5772:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "EmitStatement",
												"src": "5767:24:9"
											}
										]
									},
									"documentation": null,
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1166,
											"modifierName": {
												"argumentTypes": null,
												"id": 1165,
												"name": "onlyRewardsDistribution",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 730,
												"src": "4769:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4769:23:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4814:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4806:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4806:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1171,
											"modifierName": {
												"argumentTypes": null,
												"id": 1167,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1305,
												"src": "4793:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4793:24:9"
										}
									],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4744:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4744:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4743:16:9"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4818:0:9"
									},
									"scope": 1328,
									"src": "4716:1083:9",
									"stateMutability": "nonpayable",
									"superFunction": 718,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "5903:61:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1262,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "5937:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5937:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1264,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "5949:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1259,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "5921:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1258,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "5914:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5914:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 393,
														"src": "5914:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5914:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "5914:42:9"
											}
										]
									},
									"documentation": null,
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1256,
											"modifierName": {
												"argumentTypes": null,
												"id": 1255,
												"name": "onlyRewardsDistribution",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 730,
												"src": "5879:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "5879:23:9"
										}
									],
									"name": "emergencyWithdrawToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5839:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5839:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "5854:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5854:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5838:31:9"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5903:0:9"
									},
									"scope": 1328,
									"src": "5807:157:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "6056:291:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1272,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "6067:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1273,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "6090:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6090:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6067:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "6067:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1277,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "6117:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1278,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "6134:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6134:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6117:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "6117:43:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1282,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "6175:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6194:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "6175:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "6171:157:9",
												"trueBody": {
													"id": 1301,
													"nodeType": "Block",
													"src": "6198:130:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1287,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "6213:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1289,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1288,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "6221:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6213:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1291,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "6239:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1290,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "6232:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6232:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6213:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1294,
															"nodeType": "ExpressionStatement",
															"src": "6213:34:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1295,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "6262:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1297,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1296,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1270,
																		"src": "6285:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6262:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1298,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "6296:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6262:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1300,
															"nodeType": "ExpressionStatement",
															"src": "6262:54:9"
														}
													]
												}
											},
											{
												"id": 1303,
												"nodeType": "PlaceholderStatement",
												"src": "6338:1:9"
											}
										]
									},
									"documentation": null,
									"id": 1305,
									"name": "updateReward",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "6039:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6038:17:9"
									},
									"src": "6017:330:9",
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1309,
									"name": "RewardAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "6415:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6415:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6414:16:9"
									},
									"src": "6397:34:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1315,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "6450:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6450:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "6472:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6449:38:9"
									},
									"src": "6437:51:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1321,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6510:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "6532:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6532:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6509:38:9"
									},
									"src": "6494:54:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1327,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6571:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6571:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6593:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6570:38:9"
									},
									"src": "6554:55:9"
								}
							],
							"scope": 1347,
							"src": "732:5880:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1346,
							"linearizedBaseContracts": [
								1346
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6665:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6665:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6680:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6697:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6697:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6709:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6709:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6724:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1337,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6724:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6733:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6733:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "6744:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6744:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6664:90:9"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6763:0:9"
									},
									"scope": 1346,
									"src": "6649:115:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1347,
							"src": "6616:151:9"
						}
					],
					"src": "0:6769:9"
				},
				"id": 9
			},
			"liquidity-staker/StakingRewardsFactory.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/StakingRewardsFactory.sol",
					"exportedSymbols": {
						"StakingRewardsFactory": [
							1547
						]
					},
					"id": 1548,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1348,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"id": 1349,
							"nodeType": "ImportDirective",
							"scope": 1548,
							"sourceUnit": 440,
							"src": "28:117:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol",
							"id": 1350,
							"nodeType": "ImportDirective",
							"scope": 1548,
							"sourceUnit": 313,
							"src": "147:116:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "liquidity-staker/StakingRewards.sol",
							"file": "./StakingRewards.sol",
							"id": 1351,
							"nodeType": "ImportDirective",
							"scope": 1548,
							"sourceUnit": 1347,
							"src": "267:30:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1352,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 312,
										"src": "335:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$312",
											"typeString": "contract Ownable"
										}
									},
									"id": 1353,
									"nodeType": "InheritanceSpecifier",
									"src": "335:7:10"
								}
							],
							"contractDependencies": [
								312,
								1328
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1547,
							"linearizedBaseContracts": [
								1547,
								312
							],
							"name": "StakingRewardsFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1355,
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1547,
									"src": "369:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1354,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1357,
									"name": "stakingRewardsGenesis",
									"nodeType": "VariableDeclaration",
									"scope": 1547,
									"src": "403:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1356,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "403:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1360,
									"name": "stakingTokens",
									"nodeType": "VariableDeclaration",
									"scope": 1547,
									"src": "521:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1358,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "521:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1359,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "521:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "StakingRewardsFactory.StakingRewardsInfo",
									"id": 1365,
									"members": [
										{
											"constant": false,
											"id": 1362,
											"name": "stakingRewards",
											"nodeType": "VariableDeclaration",
											"scope": 1365,
											"src": "655:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1361,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "655:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1364,
											"name": "rewardAmount",
											"nodeType": "VariableDeclaration",
											"scope": 1365,
											"src": "688:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1363,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "688:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "StakingRewardsInfo",
									"nodeType": "StructDefinition",
									"scope": 1547,
									"src": "618:95:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1369,
									"name": "stakingRewardsInfoByStakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1547,
									"src": "759:78:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1365_storage_$",
										"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
									},
									"typeName": {
										"id": 1368,
										"keyType": {
											"id": 1366,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "759:38:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1365_storage_$",
											"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1367,
											"name": "StakingRewardsInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1365,
											"src": "778:18:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
												"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "952:223:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1379,
																"name": "_stakingRewardsGenesis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "971:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1380,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "997:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "997:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "971:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1014:54:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
																"typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
															},
															"value": "StakingRewardsFactory::constructor: genesis too soon"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
																"typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
															}
														],
														"id": 1378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "963:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:106:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "963:106:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1386,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "1082:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1387,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "1097:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1082:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "1082:28:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1390,
														"name": "stakingRewardsGenesis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "1121:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1391,
														"name": "_stakingRewardsGenesis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "1145:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1121:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1393,
												"nodeType": "ExpressionStatement",
												"src": "1121:46:10"
											}
										]
									},
									"documentation": null,
									"id": 1395,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 1376,
											"modifierName": {
												"argumentTypes": null,
												"id": 1375,
												"name": "Ownable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 312,
												"src": "935:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Ownable_$312_$",
													"typeString": "type(contract Ownable)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "935:9:10"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "868:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"name": "_stakingRewardsGenesis",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "900:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "857:77:10"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:10"
									},
									"scope": 1547,
									"src": "846:329:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "1482:420:10",
										"statements": [
											{
												"assignments": [
													1405
												],
												"declarations": [
													{
														"constant": false,
														"id": 1405,
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 1447,
														"src": "1493:31:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
															"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1404,
															"name": "StakingRewardsInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1365,
															"src": "1493:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1409,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1406,
														"name": "stakingRewardsInfoByStakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "1527:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1365_storage_$",
															"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
														}
													},
													"id": 1408,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1407,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "1560:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1527:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage",
														"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1493:80:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1411,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "1592:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																		"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakingRewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "1592:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1615:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1615:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1592:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1627:49:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
																"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
															},
															"value": "StakingRewardsFactory::deploy: already deployed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
																"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "1584:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:93:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1584:93:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1420,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "1690:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
															}
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakingRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1362,
														"src": "1690:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1427,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1653,
																				"src": "1773:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingRewardsFactory_$1547",
																					"typeString": "contract StakingRewardsFactory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingRewardsFactory_$1547",
																					"typeString": "contract StakingRewardsFactory"
																				}
																			],
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1765:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1765:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1429,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1355,
																		"src": "1780:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1430,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "1794:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "1720:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StakingRewards_$1328_$",
																		"typeString": "function (address,address,address) returns (contract StakingRewards)"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1424,
																		"name": "StakingRewards",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1328,
																		"src": "1724:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$1328",
																			"typeString": "contract StakingRewards"
																		}
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:87:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StakingRewards_$1328",
																	"typeString": "contract StakingRewards"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_StakingRewards_$1328",
																	"typeString": "contract StakingRewards"
																}
															],
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1712:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:96:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1690:118:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "1690:118:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1435,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "1819:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "1819:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1438,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "1839:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1819:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "1819:32:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1444,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "1881:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1441,
															"name": "stakingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "1862:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1862:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "1862:32:10"
											}
										]
									},
									"documentation": "// permissioned functions",
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1402,
											"modifierName": {
												"argumentTypes": null,
												"id": 1401,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 245,
												"src": "1472:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1472:9:10"
										}
									],
									"name": "deploy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"name": "stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1424:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"name": "rewardAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "1446:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:41:10"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:0:10"
									},
									"scope": 1547,
									"src": "1408:494:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "2042:246:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1452,
																	"name": "stakingTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "2061:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2061:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2084:1:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2061:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2087:71:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmounts: called before any deploys\""
															},
															"value": "StakingRewardsFactory::notifyRewardAmounts: called before any deploys"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmounts: called before any deploys\""
															}
														],
														"id": 1451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "2053:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:106:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "2053:106:10"
											},
											{
												"body": {
													"id": 1476,
													"nodeType": "Block",
													"src": "2218:63:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1471,
																			"name": "stakingTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1360,
																			"src": "2252:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1473,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1472,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1460,
																			"src": "2266:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2252:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1470,
																	"name": "notifyRewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "2233:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2233:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1475,
															"nodeType": "ExpressionStatement",
															"src": "2233:36:10"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1463,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "2187:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1464,
															"name": "stakingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "2191:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2191:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2187:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1477,
												"initializationExpression": {
													"assignments": [
														1460
													],
													"declarations": [
														{
															"constant": false,
															"id": 1460,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1477,
															"src": "2175:6:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1459,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2175:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1462,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2184:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2175:10:10"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2213:3:10",
														"subExpression": {
															"argumentTypes": null,
															"id": 1467,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "2213:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1469,
													"nodeType": "ExpressionStatement",
													"src": "2213:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2170:111:10"
											}
										]
									},
									"documentation": "// permissionless functions",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:10"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:10"
									},
									"scope": 1547,
									"src": "2004:284:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "2519:752:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1485,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "2538:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2538:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1487,
																"name": "stakingRewardsGenesis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "2557:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2538:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74207265616479",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2580:54:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not ready\""
															},
															"value": "StakingRewardsFactory::notifyRewardAmount: not ready"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not ready\""
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "2530:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:105:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "2530:105:10"
											},
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 1545,
														"src": "2648:31:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
															"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1492,
															"name": "StakingRewardsInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1365,
															"src": "2648:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1494,
														"name": "stakingRewardsInfoByStakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "2682:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1365_storage_$",
															"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
														}
													},
													"id": 1496,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1495,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2715:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2682:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage",
														"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2648:80:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1499,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "2747:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																		"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																	}
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakingRewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1362,
																"src": "2747:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2778:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2770:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2747:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564",
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2782:57:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not deployed\""
															},
															"value": "StakingRewardsFactory::notifyRewardAmount: not deployed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not deployed\""
															}
														],
														"id": 1498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1618,
															1619
														],
														"referencedDeclaration": 1619,
														"src": "2739:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:101:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "2739:101:10"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1508,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "2857:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1364,
														"src": "2857:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2877:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2857:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1544,
												"nodeType": "IfStatement",
												"src": "2853:411:10",
												"trueBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "2880:384:10",
													"statements": [
														{
															"assignments": [
																1513
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1513,
																	"name": "rewardAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 1543,
																	"src": "2895:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1512,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2895:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1516,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1514,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "2915:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																		"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1364,
																"src": "2915:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2895:37:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1517,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "2947:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																			"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																		}
																	},
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1364,
																	"src": "2947:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2967:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2947:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1522,
															"nodeType": "ExpressionStatement",
															"src": "2947:21:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1528,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "3041:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																						"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																					}
																				},
																				"id": 1529,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakingRewards",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1362,
																				"src": "3041:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1530,
																				"name": "rewardAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1513,
																				"src": "3062:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1525,
																						"name": "rewardsToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1355,
																						"src": "3018:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1524,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 439,
																					"src": "3011:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3011:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$439",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 393,
																			"src": "3011:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3011:64:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c6564",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3094:60:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089",
																			"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: transfer failed\""
																		},
																		"value": "StakingRewardsFactory::notifyRewardAmount: transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089",
																			"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: transfer failed\""
																		}
																	],
																	"id": 1523,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1618,
																		1619
																	],
																	"referencedDeclaration": 1619,
																	"src": "2985:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2985:184:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1534,
															"nodeType": "ExpressionStatement",
															"src": "2985:184:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1540,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "3239:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1536,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "3199:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingRewardsInfo_$1365_storage_ptr",
																						"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																					}
																				},
																				"id": 1537,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakingRewards",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1362,
																				"src": "3199:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1535,
																			"name": "StakingRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1328,
																			"src": "3184:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StakingRewards_$1328_$",
																				"typeString": "type(contract StakingRewards)"
																			}
																		},
																		"id": 1538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3184:35:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$1328",
																			"typeString": "contract StakingRewards"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "notifyRewardAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1249,
																	"src": "3184:54:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3184:68:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1542,
															"nodeType": "ExpressionStatement",
															"src": "3184:68:10"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"name": "stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "2490:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:22:10"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:0:10"
									},
									"scope": 1547,
									"src": "2462:809:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1548,
							"src": "301:2973:10"
						}
					],
					"src": "0:3274:10"
				},
				"id": 10
			},
			"liquidity-staker/interfaces/IStakingRewards.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/interfaces/IStakingRewards.sol",
					"exportedSymbols": {
						"IStakingRewards": [
							1600
						]
					},
					"id": 1601,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1549,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:11"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1600,
							"linearizedBaseContracts": [
								1600
							],
							"name": "IStakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:11"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "137:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "136:9:11"
									},
									"scope": 1600,
									"src": "78:68:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:2:11"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "203:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "202:9:11"
									},
									"scope": 1600,
									"src": "154:58:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "236:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:17:11"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "276:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "275:9:11"
									},
									"scope": 1600,
									"src": "220:65:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:11"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "348:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "347:9:11"
									},
									"scope": 1600,
									"src": "293:64:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:11"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "411:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:9:11"
									},
									"scope": 1600,
									"src": "365:55:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "447:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:17:11"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "487:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "486:9:11"
									},
									"scope": 1600,
									"src": "428:68:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "538:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:16:11"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:11"
									},
									"scope": 1600,
									"src": "523:40:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "589:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:16:11"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:0:11"
									},
									"scope": 1600,
									"src": "571:43:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:2:11"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:11"
									},
									"scope": 1600,
									"src": "622:30:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:2:11"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:0:11"
									},
									"scope": 1600,
									"src": "660:25:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1601,
							"src": "31:657:11"
						}
					],
					"src": "0:688:11"
				},
				"id": 11
			}
		}
	}
}
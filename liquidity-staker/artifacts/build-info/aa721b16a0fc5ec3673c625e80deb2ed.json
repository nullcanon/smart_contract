{
	"id": "aa721b16a0fc5ec3673c625e80deb2ed",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"liquidity-staker/StakingRewardsFactory.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol';\r\nimport 'https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol';\r\n\r\nimport './StakingRewards.sol';\r\n\r\ncontract StakingRewardsFactory is Ownable {\r\n    // immutables\r\n    address public rewardsToken;\r\n    uint public stakingRewardsGenesis;\r\n\r\n    // the staking tokens for which the rewards contract has been deployed\r\n    address[] public stakingTokens;\r\n\r\n    // info about rewards for a particular staking token\r\n    struct StakingRewardsInfo {\r\n        address stakingRewards;\r\n        uint rewardAmount;\r\n    }\r\n\r\n    // rewards info by staking token\r\n    mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken;\r\n\r\n    constructor(\r\n        address _rewardsToken,\r\n        uint _stakingRewardsGenesis\r\n    ) Ownable() public {\r\n        require(_stakingRewardsGenesis >= block.timestamp, 'StakingRewardsFactory::constructor: genesis too soon');\r\n\r\n        rewardsToken = _rewardsToken;\r\n        stakingRewardsGenesis = _stakingRewardsGenesis;\r\n    }\r\n\r\n    ///// permissioned functions\r\n\r\n    // deploy a staking reward contract for the staking token, and store the reward amount\r\n    // the reward will be distributed to the staking reward contract no sooner than the genesis\r\n    function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\r\n        require(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed');\r\n\r\n        info.stakingRewards = address(new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken));\r\n        info.rewardAmount = rewardAmount;\r\n        stakingTokens.push(stakingToken);\r\n    }\r\n\r\n    ///// permissionless functions\r\n\r\n    // call notifyRewardAmount for all staking tokens.\r\n    function notifyRewardAmounts() public {\r\n        require(stakingTokens.length > 0, 'StakingRewardsFactory::notifyRewardAmounts: called before any deploys');\r\n        for (uint i = 0; i < stakingTokens.length; i++) {\r\n            notifyRewardAmount(stakingTokens[i]);\r\n        }\r\n    }\r\n\r\n    // notify reward amount for an individual staking token.\r\n    // this is a fallback in case the notifyRewardAmounts costs too much gas to call for all contracts\r\n    function notifyRewardAmount(address stakingToken) public {\r\n        require(block.timestamp >= stakingRewardsGenesis, 'StakingRewardsFactory::notifyRewardAmount: not ready');\r\n\r\n        StakingRewardsInfo storage info = stakingRewardsInfoByStakingToken[stakingToken];\r\n        require(info.stakingRewards != address(0), 'StakingRewardsFactory::notifyRewardAmount: not deployed');\r\n\r\n        if (info.rewardAmount > 0) {\r\n            uint rewardAmount = info.rewardAmount;\r\n            info.rewardAmount = 0;\r\n\r\n            require(\r\n                IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount),\r\n                'StakingRewardsFactory::notifyRewardAmount: transfer failed'\r\n            );\r\n            StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount);\r\n        }\r\n    }\r\n}"
			},
			"liquidity-staker/StakingRewards.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\";\r\n\r\n// Inheritance\r\nimport \"./interfaces/IStakingRewards.sol\";\r\nimport \"./RewardsDistributionRecipient.sol\";\r\n\r\ncontract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    IERC20 public rewardsToken;\r\n    IERC20 public stakingToken;\r\n    uint256 public periodFinish = 0;\r\n    uint256 public rewardRate = 0;\r\n    uint256 public rewardsDuration = 30 days;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 private _totalSupply;\r\n    mapping(address => uint256) private _balances;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    constructor(\r\n        address _rewardsDistribution,\r\n        address _rewardsToken,\r\n        address _stakingToken\r\n    ) public {\r\n        rewardsToken = IERC20(_rewardsToken);\r\n        stakingToken = IERC20(_stakingToken);\r\n        rewardsDistribution = _rewardsDistribution;\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    function totalSupply() external view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return Math.min(block.timestamp, periodFinish);\r\n    }\r\n\r\n    function rewardPerToken() public view returns (uint256) {\r\n        if (_totalSupply == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    function getRewardForDuration() external view returns (uint256) {\r\n        return rewardRate.mul(rewardsDuration);\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n\r\n        // permit\r\n        IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s);\r\n\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalSupply = _totalSupply.add(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].add(amount);\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n\r\n    function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot withdraw 0\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n        _balances[msg.sender] = _balances[msg.sender].sub(amount);\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.safeTransfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function exit() external {\r\n        withdraw(_balances[msg.sender]);\r\n        getReward();\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r\n        if (block.timestamp >= periodFinish) {\r\n            rewardRate = reward.div(rewardsDuration);\r\n        } else {\r\n            uint256 remaining = periodFinish.sub(block.timestamp);\r\n            uint256 leftover = remaining.mul(rewardRate);\r\n            rewardRate = reward.add(leftover).div(rewardsDuration);\r\n        }\r\n\r\n        // Ensure the provided reward amount is not more than the balance in the contract.\r\n        // This keeps the reward rate in the right range, preventing overflows due to\r\n        // very high values of rewardRate in the earned and rewardsPerToken functions;\r\n        // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\r\n        uint balance = rewardsToken.balanceOf(address(this));\r\n        require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\");\r\n\r\n        lastUpdateTime = block.timestamp;\r\n        periodFinish = block.timestamp.add(rewardsDuration);\r\n        emit RewardAdded(reward);\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    modifier updateReward(address account) {\r\n        rewardPerTokenStored = rewardPerToken();\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    /* ========== EVENTS ========== */\r\n\r\n    event RewardAdded(uint256 reward);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n}\r\n\r\ninterface IUniswapV2ERC20 {\r\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        _owner = msg.sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * > Note: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through `transferFrom`. This is\n     * zero by default.\n     *\n     * This value changes when `approve` or `transferFrom` are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * > Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an `Approval` event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a `Transfer` event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to `approve`. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"liquidity-staker/RewardsDistributionRecipient.sol": {
				"content": "pragma solidity ^0.5.16;\r\n\r\ncontract RewardsDistributionRecipient {\r\n    address public rewardsDistribution;\r\n\r\n    function notifyRewardAmount(uint256 reward) external;\r\n\r\n    modifier onlyRewardsDistribution() {\r\n        require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\");\r\n        _;\r\n    }\r\n}"
			},
			"liquidity-staker/interfaces/IStakingRewards.sol": {
				"content": "pragma solidity >=0.4.24;\r\n\r\n\r\ninterface IStakingRewards {\r\n    // Views\r\n    function lastTimeRewardApplicable() external view returns (uint256);\r\n\r\n    function rewardPerToken() external view returns (uint256);\r\n\r\n    function earned(address account) external view returns (uint256);\r\n\r\n    function getRewardForDuration() external view returns (uint256);\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    // Mutative\r\n\r\n    function stake(uint256 amount) external;\r\n\r\n    function withdraw(uint256 amount) external;\r\n\r\n    function getReward() external;\r\n\r\n    function exit() external;\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\n * available, which can be aplied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n */\ncontract ReentrancyGuard {\n    /// @dev counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    constructor () internal {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow, so we distribute\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Collection of functions related to the address type,\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * This test is non-exhaustive, and there may be false-negatives: during the\n     * execution of a contract's constructor, its address will be reported as\n     * not containing a contract.\n     *\n     * > It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":99:767  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":99:767  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820556f04c49af5b4b1fe4a4b253df148bf534550bf9b805f47a0ed9ae2da33c46264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820556f04c49af5b4b1fe4a4b253df148bf534550bf9b805f47a0ed9ae2da33c46264736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE PUSH16 0x4C49AF5B4B1FE4A4B253DF148BF5345 POP 0xBF SWAP12 DUP1 0x5F SELFBALANCE LOG0 0xED SWAP11 0xE2 0xDA CALLER 0xC4 PUSH3 0x64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "99:668:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820556f04c49af5b4b1fe4a4b253df148bf534550bf9b805f47a0ed9ae2da33c46264736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SSTORE PUSH16 0x4C49AF5B4B1FE4A4B253DF148BF5345 POP 0xBF SWAP12 DUP1 0x5F SELFBALANCE LOG0 0xED SWAP11 0xE2 0xDA CALLER 0xC4 PUSH3 0x64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "99:668:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 99,
									"end": 767,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 99,
									"end": 767,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820556f04c49af5b4b1fe4a4b253df148bf534550bf9b805f47a0ed9ae2da33c46264736f6c63430005100032",
									".code": [
										{
											"begin": 99,
											"end": 767,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "ADDRESS"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "EQ"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 767,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":589:3528  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":589:3528  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820df6dbf63dc32274bf22a6dc581dd4c00883e202dbf9f9863afd1cc4fce3db9f464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820df6dbf63dc32274bf22a6dc581dd4c00883e202dbf9f9863afd1cc4fce3db9f464736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xDF PUSH14 0xBF63DC32274BF22A6DC581DD4C00 DUP9 RETURNDATACOPY KECCAK256 0x2D 0xBF SWAP16 SWAP9 PUSH4 0xAFD1CC4F 0xCE RETURNDATASIZE 0xB9 DELEGATECALL PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "589:2939:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820df6dbf63dc32274bf22a6dc581dd4c00883e202dbf9f9863afd1cc4fce3db9f464736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xDF PUSH14 0xBF63DC32274BF22A6DC581DD4C00 DUP9 RETURNDATACOPY KECCAK256 0x2D 0xBF SWAP16 SWAP9 PUSH4 0xAFD1CC4F 0xCE RETURNDATASIZE 0xB9 DELEGATECALL PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "589:2939:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 3528,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 3528,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820df6dbf63dc32274bf22a6dc581dd4c00883e202dbf9f9863afd1cc4fce3db9f464736f6c63430005100032",
									".code": [
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 3528,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 321,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol:ERC20Detailed",
								"label": "_decimals",
								"offset": 0,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see `ERC20Detailed`.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through `transferFrom`. This is zero by default.     * This value changes when `approve` or `transferFrom` are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * > Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an `Approval` event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a `Transfer` event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":574:3718  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":574:3718  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582008604c6dd70bcc2e5d396e0c10bc5859e396fd178ad7edb5d4e83ffaef05680664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582008604c6dd70bcc2e5d396e0c10bc5859e396fd178ad7edb5d4e83ffaef05680664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADDMOD PUSH1 0x4C PUSH14 0xD70BCC2E5D396E0C10BC5859E396 REVERT OR DUP11 0xD7 0xED 0xB5 0xD4 0xE8 EXTCODEHASH STATICCALL 0xEF SDIV PUSH9 0x664736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "574:3144:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582008604c6dd70bcc2e5d396e0c10bc5859e396fd178ad7edb5d4e83ffaef05680664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADDMOD PUSH1 0x4C PUSH14 0xD70BCC2E5D396E0C10BC5859E396 REVERT OR DUP11 0xD7 0xED 0xB5 0xD4 0xE8 EXTCODEHASH STATICCALL 0xEF SDIV PUSH9 0x664736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "574:3144:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 3718,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 3718,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582008604c6dd70bcc2e5d396e0c10bc5859e396fd178ad7edb5d4e83ffaef05680664736f6c63430005100032",
									".code": [
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "ADDRESS"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "EQ"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 3718,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type,",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":94:957  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":94:957  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820324f98e80f53153d5e49f1746b618f68d8c9ca88776403bbb1c826da088e5df464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820324f98e80f53153d5e49f1746b618f68d8c9ca88776403bbb1c826da088e5df464736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ORIGIN 0x4F SWAP9 0xE8 0xF MSTORE8 ISZERO RETURNDATASIZE 0x5E 0x49 CALL PUSH21 0x6B618F68D8C9CA88776403BBB1C826DA088E5DF464 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "94:863:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820324f98e80f53153d5e49f1746b618f68d8c9ca88776403bbb1c826da088e5df464736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ORIGIN 0x4F SWAP9 0xE8 0xF MSTORE8 ISZERO RETURNDATASIZE 0x5E 0x49 CALL PUSH21 0x6B618F68D8C9CA88776403BBB1C826DA088E5DF464 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "94:863:6:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 94,
									"end": 957,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 94,
									"end": 957,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820324f98e80f53153d5e49f1746b618f68d8c9ca88776403bbb1c826da088e5df464736f6c63430005100032",
									".code": [
										{
											"begin": 94,
											"end": 957,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "ADDRESS"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "EQ"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "MSTORE"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 957,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type,\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier available, which can be aplied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier available, which can be aplied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 681,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"liquidity-staker/RewardsDistributionRecipient.sol": {
				"RewardsDistributionRecipient": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"rewardsDistribution()": "3fc6df6e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/RewardsDistributionRecipient.sol\":\"RewardsDistributionRecipient\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "liquidity-staker/RewardsDistributionRecipient.sol:RewardsDistributionRecipient",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"liquidity-staker/StakingRewards.sol": {
				"IUniswapV2ERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/StakingRewards.sol\":\"IUniswapV2ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]},\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]},\"liquidity-staker/StakingRewards.sol\":{\"keccak256\":\"0xd6e38b2ef65232cf59a7431cc1fb7d26c8b0b4f3cebb01d3e2d7e915a2a05a2a\",\"urls\":[\"bzz-raw://45aa9805f15bf19d520dead2bf9b2ec2cba0fce1fa690e9eba6487c917ae75da\",\"dweb:/ipfs/QmcieAaUBNTVdfuBFN4Ys2sr2fhoFqC5goAJp4ZKVE5S2x\"]},\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"StakingRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsDistribution",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingToken",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDistribution",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "stakeWithPermit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"liquidity-staker/StakingRewards.sol\":1044:1045  0 */\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n  0x04\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1080:1081  0 */\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n  0x05\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1121:1128  30 days */\n  0x278d00\n    /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n  0x06\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1466:1750  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"liquidity-staker/StakingRewards.sol\":1466:1750  constructor(\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x60\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"liquidity-staker/StakingRewards.sol\":1466:1750  constructor(\r... */\n  dup1\n  mload\n  0x20\n  dup3\n  add\n  mload\n  0x40\n  swap1\n  swap3\n  add\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":884:885  1 */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":868:885  _guardCounter = 1 */\n  dup1\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1606:1618  rewardsToken */\n  0x02\n    /* \"liquidity-staker/StakingRewards.sol\":1606:1642  rewardsToken = IERC20(_rewardsToken) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"liquidity-staker/StakingRewards.sol\":1653:1665  stakingToken */\n  0x03\n    /* \"liquidity-staker/StakingRewards.sol\":1653:1689  stakingToken = IERC20(_stakingToken) */\n  dup1\n  sload\n  dup3\n  and\n  swap3\n  dup6\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"liquidity-staker/StakingRewards.sol\":1700:1742  rewardsDistribution = _rewardsDistribution */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap3\n  swap1\n  swap2\n  and\n  swap2\n  swap1\n  swap2\n  or\n  dup2\n  sstore\n  0x1262\n  swap1\n  dup2\n  swap1\n    /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n  dataOffset(sub_0)\n  swap1\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7b0a47ee\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xcd3daf9d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xecd9ba82\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x7b0a47ee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x386a9525\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3c6b16ab\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3fc6df6e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1279:1321  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":1279:1321  mapping(address => uint256) public rewards */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_33\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1799:1892  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_28\n      tag_35\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2703:2824  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_6:\n      tag_28\n      tag_37\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      calldataload\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n    tag_8:\n      tag_28\n      tag_42\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":4194:4501  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_10:\n      tag_38\n      tag_47\n      jump\t// in\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_12:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_52\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n    tag_13:\n      tag_48\n      tag_54\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n    tag_14:\n      tag_28\n      tag_56\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2020:2151  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_15:\n      tag_28\n      tag_58\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1215:1272  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_16:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":1215:1272  mapping(address => uint256) public userRewardPerTokenPaid */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_61\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":3452:3821  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_17:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3452:3821  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1135:1164  uint256 public lastUpdateTime */\n    tag_18:\n      tag_28\n      tag_66\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2159:2489  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_19:\n      tag_28\n      tag_68\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n    tag_20:\n      tag_48\n      tag_70\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1171:1206  uint256 public rewardPerTokenStored */\n    tag_21:\n      tag_28\n      tag_72\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":4509:4606  function exit() external {\r... */\n    tag_22:\n      tag_38\n      tag_74\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n    tag_23:\n      tag_28\n      tag_76\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_24:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xa0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_78:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x40\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0x80\n      add\n      calldataload\n      tag_79\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n      dup2\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":2551:2558  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":2670:2677  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":2622:2644  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":2622:2653  userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2687  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_81\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2665  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_82\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2660:2664  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2655  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      tag_83\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2654  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      tag_84\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2617  rewardPerToken() */\n      tag_85\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2615  rewardPerToken */\n      tag_68\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2617  rewardPerToken() */\n      jump\t// in\n    tag_85:\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2621  rewardPerToken().sub */\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2654  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2621  rewardPerToken().sub */\n      tag_86\n        /* \"liquidity-staker/StakingRewards.sol\":2601:2654  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n      and\n      jump\t// in\n    tag_84:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2596  _balances[account] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2587  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2596  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2600  _balances[account].mul */\n      tag_87\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2655  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n      jump\t// in\n    tag_83:\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2659  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2665  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2659  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n      tag_88\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2665  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n      and\n      jump\t// in\n    tag_82:\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2669  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2687  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2669  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":2578:2687  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      and\n      jump\t// in\n    tag_81:\n        /* \"liquidity-staker/StakingRewards.sol\":2571:2687  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap3\n        /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1279:1321  mapping(address => uint256) public rewards */\n    tag_33:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1799:1892  function totalSupply() external view returns (uint256) {\r... */\n    tag_35:\n        /* \"liquidity-staker/StakingRewards.sol\":1872:1884  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":1799:1892  function totalSupply() external view returns (uint256) {\r... */\n    tag_90:\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2703:2824  function getRewardForDuration() external view returns (uint256) {\r... */\n    tag_37:\n        /* \"liquidity-staker/StakingRewards.sol\":2758:2765  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2785:2816  rewardRate.mul(rewardsDuration) */\n      tag_92\n        /* \"liquidity-staker/StakingRewards.sol\":2800:2815  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":2785:2795  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":2785:2799  rewardRate.mul */\n      tag_87\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2785:2816  rewardRate.mul(rewardsDuration) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"liquidity-staker/StakingRewards.sol\":2778:2816  return rewardRate.mul(rewardsDuration) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2703:2824  function getRewardForDuration() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3896:3906  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      tag_95\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n      tag_68\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      jump\t// in\n    tag_95:\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      tag_96\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n      tag_58\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_96:\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n      tag_97\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      tag_98\n        /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n      tag_30\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      jump\t// in\n    tag_98:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n    tag_97:\n        /* \"liquidity-staker/StakingRewards.sol\":3936:3937  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3927:3933  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3927:3937  amount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":3919:3959  require(amount > 0, \"Cannot withdraw 0\") */\n      tag_100\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7c, 0x043616e6e6f74207769746864726177203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_100:\n        /* \"liquidity-staker/StakingRewards.sol\":3985:3997  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":3985:4009  _totalSupply.sub(amount) */\n      tag_101\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4002:4008  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":3985:4009  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":3985:4001  _totalSupply.sub */\n      tag_86\n        /* \"liquidity-staker/StakingRewards.sol\":3985:4009  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_101:\n        /* \"liquidity-staker/StakingRewards.sol\":3970:3982  _totalSupply */\n      0x0b\n        /* \"liquidity-staker/StakingRewards.sol\":3970:4009  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":4054:4064  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4065  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4053  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4065  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4077  _balances[msg.sender].sub(amount) */\n      tag_102\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4070:4076  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4077  _balances[msg.sender].sub(amount) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4069  _balances[msg.sender].sub */\n      tag_86\n        /* \"liquidity-staker/StakingRewards.sol\":4044:4077  _balances[msg.sender].sub(amount) */\n      and\n      jump\t// in\n    tag_102:\n        /* \"liquidity-staker/StakingRewards.sol\":4030:4040  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4020:4041  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":4020:4029  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":4020:4041  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":4020:4077  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":4088:4100  stakingToken */\n      sload(0x03)\n        /* \"liquidity-staker/StakingRewards.sol\":4088:4133  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_103\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":4088:4100  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4126:4132  amount */\n      dup6\n        /* \"liquidity-staker/StakingRewards.sol\":4088:4113  stakingToken.safeTransfer */\n      tag_104\n        /* \"liquidity-staker/StakingRewards.sol\":4088:4133  stakingToken.safeTransfer(msg.sender, amount) */\n      jump\t// in\n    tag_103:\n        /* \"liquidity-staker/StakingRewards.sol\":4149:4178  Withdrawn(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"liquidity-staker/StakingRewards.sol\":4159:4169  msg.sender */\n      caller\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":4149:4178  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_105\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_105:\n        /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n    tag_42:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n    tag_45:\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":245:264  rewardsDistribution */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:241  msg.sender */\n      caller\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n      eq\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":223:311  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"liquidity-staker/StakingRewards.sol\":4768:4769  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      tag_109\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n      tag_68\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      jump\t// in\n    tag_109:\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      tag_110\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n      tag_58\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_110:\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n      tag_111\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      tag_112\n        /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n      tag_30\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      jump\t// in\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n    tag_111:\n        /* \"liquidity-staker/StakingRewards.sol\":4806:4818  periodFinish */\n      sload(0x04)\n        /* \"liquidity-staker/StakingRewards.sol\":4787:4802  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":4787:4818  block.timestamp >= periodFinish */\n      lt\n        /* \"liquidity-staker/StakingRewards.sol\":4783:5101  if (block.timestamp >= periodFinish) {\r... */\n      tag_114\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":4859:4874  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":4848:4875  reward.div(rewardsDuration) */\n      tag_115\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4848:4854  reward */\n      dup4\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4848:4875  reward.div(rewardsDuration) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":4848:4858  reward.div */\n      tag_88\n        /* \"liquidity-staker/StakingRewards.sol\":4848:4875  reward.div(rewardsDuration) */\n      and\n      jump\t// in\n    tag_115:\n        /* \"liquidity-staker/StakingRewards.sol\":4835:4845  rewardRate */\n      0x05\n        /* \"liquidity-staker/StakingRewards.sol\":4835:4875  rewardRate = reward.div(rewardsDuration) */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":4783:5101  if (block.timestamp >= periodFinish) {\r... */\n      jump(tag_116)\n    tag_114:\n        /* \"liquidity-staker/StakingRewards.sol\":4928:4940  periodFinish */\n      sload(0x04)\n        /* \"liquidity-staker/StakingRewards.sol\":4908:4925  uint256 remaining */\n      0x00\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4928:4961  periodFinish.sub(block.timestamp) */\n      tag_117\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4945:4960  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":4928:4961  periodFinish.sub(block.timestamp) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":4928:4944  periodFinish.sub */\n      tag_86\n        /* \"liquidity-staker/StakingRewards.sol\":4928:4961  periodFinish.sub(block.timestamp) */\n      and\n      jump\t// in\n    tag_117:\n        /* \"liquidity-staker/StakingRewards.sol\":4908:4961  uint256 remaining = periodFinish.sub(block.timestamp) */\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4976:4992  uint256 leftover */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4995:5020  remaining.mul(rewardRate) */\n      tag_118\n        /* \"liquidity-staker/StakingRewards.sol\":5009:5019  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":4995:5004  remaining */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":4995:5008  remaining.mul */\n      tag_87\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4995:5020  remaining.mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"liquidity-staker/StakingRewards.sol\":5073:5088  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":4976:5020  uint256 leftover = remaining.mul(rewardRate) */\n      swap1\n      swap2\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5089  reward.add(leftover).div(rewardsDuration) */\n      tag_119\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5068  reward.add(leftover) */\n      tag_83\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5054  reward */\n      dup7\n        /* \"liquidity-staker/StakingRewards.sol\":4976:5020  uint256 leftover = remaining.mul(rewardRate) */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5068  reward.add(leftover) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5058  reward.add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5068  reward.add(leftover) */\n      and\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":5048:5089  reward.add(leftover).div(rewardsDuration) */\n    tag_119:\n        /* \"liquidity-staker/StakingRewards.sol\":5035:5045  rewardRate */\n      0x05\n        /* \"liquidity-staker/StakingRewards.sol\":5035:5089  rewardRate = reward.add(leftover).div(rewardsDuration) */\n      sstore\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4783:5101  if (block.timestamp >= periodFinish) {\r... */\n    tag_116:\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5488  rewardsToken */\n      sload(0x02)\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":5507:5511  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5488  rewardsToken */\n      and\n      swap2\n      0x70a08231\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5488  rewardsToken */\n      dup7\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_121:\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_122:\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_123:\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      mload\n        /* \"liquidity-staker/StakingRewards.sol\":5558:5573  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":5546:5574  balance.div(rewardsDuration) */\n      tag_124\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n      dup3\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5546:5574  balance.div(rewardsDuration) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":5546:5557  balance.div */\n      tag_88\n        /* \"liquidity-staker/StakingRewards.sol\":5546:5574  balance.div(rewardsDuration) */\n      and\n      jump\t// in\n    tag_124:\n        /* \"liquidity-staker/StakingRewards.sol\":5532:5542  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":5532:5574  rewardRate <= balance.div(rewardsDuration) */\n      gt\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5524:5603  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n      tag_125\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x50726f76696465642072657761726420746f6f20686967680000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_125:\n        /* \"liquidity-staker/StakingRewards.sol\":5633:5648  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":5616:5630  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5616:5648  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5694:5709  rewardsDuration */\n      sload(0x06)\n        /* \"liquidity-staker/StakingRewards.sol\":5674:5710  block.timestamp.add(rewardsDuration) */\n      tag_126\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":5633:5648  block.timestamp */\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":5674:5710  block.timestamp.add(rewardsDuration) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":5674:5693  block.timestamp.add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":5674:5710  block.timestamp.add(rewardsDuration) */\n      and\n      jump\t// in\n    tag_126:\n        /* \"liquidity-staker/StakingRewards.sol\":5659:5671  periodFinish */\n      0x04\n        /* \"liquidity-staker/StakingRewards.sol\":5659:5710  periodFinish = block.timestamp.add(rewardsDuration) */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5726:5745  RewardAdded(reward) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n      0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log1\n        /* \"liquidity-staker/StakingRewards.sol\":6127:6128  _ */\n      pop\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":322:323  _ */\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n      pop\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":4194:4501  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":4248:4258  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      tag_129\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n      tag_68\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      jump\t// in\n    tag_129:\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      tag_130\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n      tag_58\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_130:\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n      tag_131\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      tag_132\n        /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n      tag_30\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n    tag_131:\n        /* \"liquidity-staker/StakingRewards.sol\":4296:4306  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4271:4285  uint256 reward */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4288:4307  rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":4288:4295  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":4288:4307  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":4322:4332  reward > 0 */\n      dup1\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":4318:4494  if (reward > 0) {\r... */\n      tag_134\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":4357:4367  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4371:4372  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":4349:4368  rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":4349:4356  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":4349:4368  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":4349:4372  rewards[msg.sender] = 0 */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":4387:4399  rewardsToken */\n      sload(0x02)\n        /* \"liquidity-staker/StakingRewards.sol\":4387:4432  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_135\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":4387:4399  rewardsToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4425:4431  reward */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":4387:4412  rewardsToken.safeTransfer */\n      tag_104\n        /* \"liquidity-staker/StakingRewards.sol\":4387:4432  rewardsToken.safeTransfer(msg.sender, reward) */\n      jump\t// in\n    tag_135:\n        /* \"liquidity-staker/StakingRewards.sol\":4452:4482  RewardPaid(msg.sender, reward) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"liquidity-staker/StakingRewards.sol\":4463:4473  msg.sender */\n      caller\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":4452:4482  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"liquidity-staker/StakingRewards.sol\":4318:4494  if (reward > 0) {\r... */\n    tag_134:\n        /* \"liquidity-staker/StakingRewards.sol\":6127:6128  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_136\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_136:\n        /* \"liquidity-staker/StakingRewards.sol\":4194:4501  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      jump\t// out\n        /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n    tag_49:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":1986:2004  _balances[account] */\n      and\n        /* \"liquidity-staker/StakingRewards.sol\":1959:1966  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":1986:2004  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":1986:1995  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":1986:2004  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n    tag_54:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n    tag_56:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2020:2151  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n    tag_58:\n        /* \"liquidity-staker/StakingRewards.sol\":2077:2084  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2104:2143  Math.min(block.timestamp, periodFinish) */\n      tag_92\n        /* \"liquidity-staker/StakingRewards.sol\":2113:2128  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewards.sol\":2130:2142  periodFinish */\n      sload(0x04)\n        /* \"liquidity-staker/StakingRewards.sol\":2104:2112  Math.min */\n      tag_140\n        /* \"liquidity-staker/StakingRewards.sol\":2104:2143  Math.min(block.timestamp, periodFinish) */\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":1215:1272  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_61:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":3452:3821  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3518:3528  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      tag_143\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n      tag_68\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      jump\t// in\n    tag_143:\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      tag_144\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n      tag_58\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_144:\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n      tag_145\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      tag_146\n        /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n      tag_30\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      jump\t// in\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n    tag_145:\n        /* \"liquidity-staker/StakingRewards.sol\":3558:3559  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3549:3555  amount */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3549:3559  amount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":3541:3578  require(amount > 0, \"Cannot stake 0\") */\n      tag_148\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x94, 0x043616e6e6f74207374616b65203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_148:\n        /* \"liquidity-staker/StakingRewards.sol\":3604:3616  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":3604:3628  _totalSupply.add(amount) */\n      tag_149\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3621:3627  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":3604:3628  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":3604:3620  _totalSupply.add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":3604:3628  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_149:\n        /* \"liquidity-staker/StakingRewards.sol\":3589:3601  _totalSupply */\n      0x0b\n        /* \"liquidity-staker/StakingRewards.sol\":3589:3628  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3673:3683  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3684  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3672  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3684  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3696  _balances[msg.sender].add(amount) */\n      tag_150\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3689:3695  amount */\n      dup5\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3696  _balances[msg.sender].add(amount) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3688  _balances[msg.sender].add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":3663:3696  _balances[msg.sender].add(amount) */\n      and\n      jump\t// in\n    tag_150:\n        /* \"liquidity-staker/StakingRewards.sol\":3649:3659  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3639:3660  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":3639:3648  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3639:3660  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":3639:3696  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3707:3719  stakingToken */\n      sload(0x03)\n        /* \"liquidity-staker/StakingRewards.sol\":3707:3771  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_151\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":3707:3719  stakingToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3757:3761  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":3764:3770  amount */\n      dup7\n        /* \"liquidity-staker/StakingRewards.sol\":3707:3736  stakingToken.safeTransferFrom */\n      tag_152\n        /* \"liquidity-staker/StakingRewards.sol\":3707:3771  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_151:\n        /* \"liquidity-staker/StakingRewards.sol\":3787:3813  Staked(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup5\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"liquidity-staker/StakingRewards.sol\":3794:3804  msg.sender */\n      caller\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":3787:3813  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_105\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"liquidity-staker/StakingRewards.sol\":1135:1164  uint256 public lastUpdateTime */\n    tag_66:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2159:2489  function rewardPerToken() public view returns (uint256) {\r... */\n    tag_68:\n        /* \"liquidity-staker/StakingRewards.sol\":2206:2213  uint256 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2230:2242  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":2246:2247  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":2230:2247  _totalSupply == 0 */\n      eq\n        /* \"liquidity-staker/StakingRewards.sol\":2226:2303  if (_totalSupply == 0) {\r... */\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":2271:2291  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":2264:2291  return rewardPerTokenStored */\n      jump(tag_90)\n        /* \"liquidity-staker/StakingRewards.sol\":2226:2303  if (_totalSupply == 0) {\r... */\n    tag_155:\n        /* \"liquidity-staker/StakingRewards.sol\":2333:2481  rewardPerTokenStored.add(\r... */\n      tag_92\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2466  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n      tag_157\n        /* \"liquidity-staker/StakingRewards.sol\":2453:2465  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2448  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_83\n        /* \"liquidity-staker/StakingRewards.sol\":2443:2447  1e18 */\n      0x0de0b6b3a7640000\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2438  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_160\n        /* \"liquidity-staker/StakingRewards.sol\":2427:2437  rewardRate */\n      sload(0x05)\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2422  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_160\n        /* \"liquidity-staker/StakingRewards.sol\":2407:2421  lastUpdateTime */\n      sload(0x07)\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2402  lastTimeRewardApplicable() */\n      tag_85\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2400  lastTimeRewardApplicable */\n      tag_58\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2402  lastTimeRewardApplicable() */\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2422  lastTimeRewardApplicable().sub(lastUpdateTime) */\n    tag_160:\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2426  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2438  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2426  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_87\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2438  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      and\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":2376:2466  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n    tag_157:\n        /* \"liquidity-staker/StakingRewards.sol\":2333:2353  rewardPerTokenStored */\n      sload(0x08)\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":2333:2481  rewardPerTokenStored.add(\r... */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":2333:2357  rewardPerTokenStored.add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":2333:2481  rewardPerTokenStored.add(\r... */\n      and\n      jump\t// in\n        /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n    tag_70:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1171:1206  uint256 public rewardPerTokenStored */\n    tag_72:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":4509:4606  function exit() external {\r... */\n    tag_74:\n        /* \"liquidity-staker/StakingRewards.sol\":4564:4574  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":4554:4575  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":4554:4563  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":4554:4575  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":4545:4576  withdraw(_balances[msg.sender]) */\n      tag_163\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":4545:4553  withdraw */\n      tag_40\n        /* \"liquidity-staker/StakingRewards.sol\":4545:4576  withdraw(_balances[msg.sender]) */\n      jump\t// in\n    tag_163:\n        /* \"liquidity-staker/StakingRewards.sol\":4587:4598  getReward() */\n      tag_164\n        /* \"liquidity-staker/StakingRewards.sol\":4587:4596  getReward */\n      tag_47\n        /* \"liquidity-staker/StakingRewards.sol\":4587:4598  getReward() */\n      jump\t// in\n    tag_164:\n        /* \"liquidity-staker/StakingRewards.sol\":4509:4606  function exit() external {\r... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n    tag_76:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n      dup1\n      sload\n      dup2\n      add\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3008:3018  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      tag_167\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n      tag_68\n        /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n      jump\t// in\n    tag_167:\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n      0x08\n        /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      tag_168\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n      tag_58\n        /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_168:\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n      0x07\n        /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n      dup2\n      and\n      iszero\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n      tag_169\n      jumpi\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      tag_170\n        /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n      tag_30\n        /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n      0x0a\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n      sload(0x08)\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n      0x09\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n    tag_169:\n        /* \"liquidity-staker/StakingRewards.sol\":3048:3049  0 */\n      0x00\n        /* \"liquidity-staker/StakingRewards.sol\":3039:3045  amount */\n      dup8\n        /* \"liquidity-staker/StakingRewards.sol\":3039:3049  amount > 0 */\n      gt\n        /* \"liquidity-staker/StakingRewards.sol\":3031:3068  require(amount > 0, \"Cannot stake 0\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x94, 0x043616e6e6f74207374616b65203)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n        /* \"liquidity-staker/StakingRewards.sol\":3094:3106  _totalSupply */\n      sload(0x0b)\n        /* \"liquidity-staker/StakingRewards.sol\":3094:3118  _totalSupply.add(amount) */\n      tag_173\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3111:3117  amount */\n      dup9\n        /* \"liquidity-staker/StakingRewards.sol\":3094:3118  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":3094:3110  _totalSupply.add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":3094:3118  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_173:\n        /* \"liquidity-staker/StakingRewards.sol\":3079:3091  _totalSupply */\n      0x0b\n        /* \"liquidity-staker/StakingRewards.sol\":3079:3118  _totalSupply = _totalSupply.add(amount) */\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3163:3173  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3174  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3162  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3174  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3186  _balances[msg.sender].add(amount) */\n      tag_174\n      swap1\n        /* \"liquidity-staker/StakingRewards.sol\":3179:3185  amount */\n      dup9\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3186  _balances[msg.sender].add(amount) */\n      0xffffffff\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3178  _balances[msg.sender].add */\n      tag_89\n        /* \"liquidity-staker/StakingRewards.sol\":3153:3186  _balances[msg.sender].add(amount) */\n      and\n      jump\t// in\n    tag_174:\n        /* \"liquidity-staker/StakingRewards.sol\":3139:3149  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":3129:3138  _balances */\n      0x0c\n        /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"liquidity-staker/StakingRewards.sol\":3129:3186  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewards.sol\":3242:3254  stakingToken */\n      sload(0x03)\n        /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      dup4\n      mload\n      shl(0xe0, 0xd505accf)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"liquidity-staker/StakingRewards.sol\":3284:3288  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0x24\n      dup5\n      add\n      mstore\n      0x44\n      dup4\n      add\n      dup12\n      swap1\n      mstore\n      0x64\n      dup4\n      add\n      dup11\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x84\n      dup5\n      add\n      mstore\n      0xa4\n      dup4\n      add\n      dup9\n      swap1\n      mstore\n      0xc4\n      dup4\n      add\n      dup8\n      swap1\n      mstore\n      swap3\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":3242:3254  stakingToken */\n      swap1\n      swap4\n      and\n      swap3\n      0xd505accf\n      swap3\n        /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      0xe4\n      dup1\n      dup3\n      add\n      swap4\n        /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n      swap3\n        /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n      dup4\n        /* \"liquidity-staker/StakingRewards.sol\":3242:3254  stakingToken */\n      dup8\n        /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3330:3342  stakingToken */\n      sload(0x03)\n        /* \"liquidity-staker/StakingRewards.sol\":3330:3394  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_177\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewards.sol\":3330:3342  stakingToken */\n      and\n      swap1\n      pop\n        /* \"liquidity-staker/StakingRewards.sol\":3360:3370  msg.sender */\n      caller\n        /* \"liquidity-staker/StakingRewards.sol\":3380:3384  this */\n      address\n        /* \"liquidity-staker/StakingRewards.sol\":3387:3393  amount */\n      dup11\n        /* \"liquidity-staker/StakingRewards.sol\":3330:3359  stakingToken.safeTransferFrom */\n      tag_152\n        /* \"liquidity-staker/StakingRewards.sol\":3330:3394  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_177:\n        /* \"liquidity-staker/StakingRewards.sol\":3410:3436  Staked(msg.sender, amount) */\n      0x40\n      dup1\n      mload\n      dup9\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"liquidity-staker/StakingRewards.sol\":3417:3427  msg.sender */\n      caller\n      swap2\n        /* \"liquidity-staker/StakingRewards.sol\":3410:3436  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n      sload(0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_178\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_178:\n        /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1364:1365  a */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1360  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_180\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_180:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1422:1427  a - b */\n      swap1\n      sub\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1751:1758  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1992:1998  a == 0 */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n      tag_182\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2021:2022  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2014:2022  return 0 */\n      jump(tag_81)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2060  a * b */\n      dup3\n      dup3\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2059:2060  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2056  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2060  a * b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2056  a */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2083  c / a */\n      tag_183\n      jumpi\n      invalid\n    tag_183:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2088  c / a == b */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2070:2126  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2144:2145  c */\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2665:2672  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2762:2763  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2759  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2763  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2750:2794  require(b > 0, \"SafeMath: division by zero\") */\n      tag_186\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2804:2813  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2820:2821  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2817  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2821  a / b */\n      dup2\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      div\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_89:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      dup3\n      dup3\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_184\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n        /* \"--CODEGEN--\":25:43   */\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0xa9059cbb)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_191\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_191:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":416:423  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":446:447  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:443  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:447  a < b */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n      tag_194\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":454:455  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n      jump(tag_184)\n    tag_194:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":450:451  a */\n      swap1\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":435:455  return a < b ? a : b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      dup2\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n        /* \"--CODEGEN--\":25:43   */\n      dup2\n      add\n        /* \"--CODEGEN--\":61:78   */\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n        /* \"--CODEGEN--\":182:197   */\n      and\n      shl(0xe0, 0x23b872dd)\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":160:209   */\n      swap1\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_197\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":961:966  token */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:960  callOptionalReturn */\n      tag_192\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":2621:3716  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_192:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n      tag_199\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3241  address(token).isContract */\n      dup4\n      and\n      tag_200\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n      jump\t// in\n    tag_199:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3208:3279  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_201\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3350:3362  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3364:3387  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3399:3404  token */\n      dup4\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3410  address(token).call */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3411:3415  data */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_202:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_204\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_202)\n    tag_204:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_206\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_205)\n        /* \"--CODEGEN--\":16:47   */\n    tag_206:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_205:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3349:3416  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3434:3441  success */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3426:3478  require(success, \"SafeERC20: low-level call failed\") */\n      tag_207\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3510  returndata.length */\n      dup1\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3514  returndata.length > 0 */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3489:3710  if (returndata.length > 0) { // Return data is optional... */\n      tag_197\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3633:3643  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_209\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_209:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3614:3699  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n    tag_200:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":902:922  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":940:948  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n    stop\n    data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c 5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de 43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x278D00 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1307 CODESIZE SUB DUP1 PUSH2 0x1307 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1262 DUP1 PUSH2 0xA5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x2D5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2A5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x24A JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x569 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x56F JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x16C PUSH2 0x91D JUMP JUMPDEST PUSH2 0x16C PUSH2 0x923 JUMP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xACC JUMP JUMPDEST PUSH2 0x16C PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x391 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x385 SWAP1 PUSH2 0x360 SWAP1 PUSH2 0x354 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x3ED PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x3F8 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x43F JUMPI PUSH2 0x413 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x488 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x49B SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4BE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x4EA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11DA PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C2 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x5CD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x614 JUMPI PUSH2 0x5E8 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x639 JUMPI PUSH1 0x6 SLOAD PUSH2 0x631 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x688 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x64F SWAP1 TIMESTAMP PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x668 PUSH1 0x5 SLOAD DUP4 PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x682 SWAP1 PUSH2 0x385 DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x716 SWAP1 DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x76C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x785 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x7D3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x7DE PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x825 JUMPI PUSH2 0x7F9 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x89B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x864 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x956 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x961 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x97C DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x9EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xA01 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA24 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xA51 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0xB1D PUSH1 0xB SLOAD PUSH2 0x385 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB11 PUSH1 0x5 SLOAD PUSH2 0xB11 PUSH1 0x7 SLOAD PUSH2 0x354 PUSH2 0x923 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB5A SWAP1 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0xB62 PUSH2 0x7C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0xB7D PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xB88 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBA3 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0xC15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xC28 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC4B SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC4 DUP4 ADD DUP8 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xD505ACCF SWAP3 PUSH1 0xE4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xD09 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP11 PUSH4 0xFFFFFFFF PUSH2 0xF7A AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDF8 JUMPI POP PUSH1 0x0 PUSH2 0x39D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xE05 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11B9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xEAA JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF5F SWAP1 DUP5 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xF73 JUMPI DUP2 PUSH2 0xE42 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xFD4 SWAP1 DUP6 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFEC DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x103D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x107B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x105C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1139 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xFD4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1204 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0053 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A7231582017C4023055 0xE3 0xC 0x2E 0x5D 0xBE PUSH14 0xAE37C15ABB0BDAA558D6077D65BF 0xAC 0xAD PUSH27 0xC615FD564736F6C63430005100032000000000000000000000000 ",
							"sourceMap": "732:5669:9:-;;;1044:1;1014:31;;1080:1;1052:29;;1121:7;1088:40;;1466:284;8:9:-1;5:2;;;30:1;27;20:12;5:2;1466:284:9;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1466:284:9;;;;;;;;;;;884:1:7;868:17;;1606:12:9;:36;;-1:-1:-1;;;;;;1606:36:9;;;-1:-1:-1;;;;;1606:36:9;;;;;;;1653:12;:36;;;;;;;;;;;;;;-1:-1:-1;1700:42:9;;;;;;;;;;;;;;;-1:-1:-1;;;;732:5669:9;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101415760003560e01c80637b0a47ee116100b8578063cd3daf9d1161007c578063cd3daf9d146102ad578063d1af0c7d146102b5578063df136d65146102bd578063e9fad8ee146102c5578063ebe2b12b146102cd578063ecd9ba82146102d557610141565b80637b0a47ee1461025257806380faa57d1461025a5780638b87634714610262578063a694fc3a14610288578063c8f33c91146102a557610141565b8063386a95251161010a578063386a9525146101d35780633c6b16ab146101db5780633d18b912146101f85780633fc6df6e1461020057806370a082311461022457806372f702f31461024a57610141565b80628cc262146101465780630700037d1461017e57806318160ddd146101a45780631c1f78eb146101ac5780632e1a7d4d146101b4575b600080fd5b61016c6004803603602081101561015c57600080fd5b50356001600160a01b031661030d565b60408051918252519081900360200190f35b61016c6004803603602081101561019457600080fd5b50356001600160a01b03166103a3565b61016c6103b5565b61016c6103bc565b6101d1600480360360208110156101ca57600080fd5b50356103da565b005b61016c610569565b6101d1600480360360208110156101f157600080fd5b503561056f565b6101d16107c0565b6102086108e4565b604080516001600160a01b039092168252519081900360200190f35b61016c6004803603602081101561023a57600080fd5b50356001600160a01b03166108f3565b61020861090e565b61016c61091d565b61016c610923565b61016c6004803603602081101561027857600080fd5b50356001600160a01b0316610931565b6101d16004803603602081101561029e57600080fd5b5035610943565b61016c610acc565b61016c610ad2565b610208610b2c565b61016c610b3b565b6101d1610b41565b61016c610b64565b6101d1600480360360a08110156102eb57600080fd5b5080359060208101359060ff6040820135169060608101359060800135610b6a565b6001600160a01b0381166000908152600a6020908152604080832054600990925282205461039d919061039190670de0b6b3a7640000906103859061036090610354610ad2565b9063ffffffff610d8c16565b6001600160a01b0388166000908152600c60205260409020549063ffffffff610de916565b9063ffffffff610e4916565b9063ffffffff610eb316565b92915050565b600a6020526000908152604090205481565b600b545b90565b60006103d5600654600554610de990919063ffffffff16565b905090565b60018054810190819055336103ed610ad2565b6008556103f8610923565b6007556001600160a01b0381161561043f576104138161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008311610488576040805162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015290519081900360640190fd5b600b5461049b908463ffffffff610d8c16565b600b55336000908152600c60205260409020546104be908463ffffffff610d8c16565b336000818152600c60205260409020919091556003546104ea916001600160a01b039091169085610f0d565b60408051848152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a2506001548114610565576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b5050565b60065481565b6000546001600160a01b031633146105b85760405162461bcd60e51b815260040180806020018281038252602a8152602001806111da602a913960400191505060405180910390fd5b60006105c2610ad2565b6008556105cd610923565b6007556001600160a01b03811615610614576105e88161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60045442106106395760065461063190839063ffffffff610e4916565b600555610688565b60045460009061064f904263ffffffff610d8c16565b9050600061066860055483610de990919063ffffffff16565b60065490915061068290610385868463ffffffff610eb316565b60055550505b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156106d357600080fd5b505afa1580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b505160065490915061071690829063ffffffff610e4916565b600554111561076c576040805162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015290519081900360640190fd5b426007819055600654610785919063ffffffff610eb316565b6004556040805184815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a1505050565b60018054810190819055336107d3610ad2565b6008556107de610923565b6007556001600160a01b03811615610825576107f98161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b336000908152600a6020526040902054801561089b57336000818152600a6020526040812055600254610864916001600160a01b039091169083610f0d565b60408051828152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505060015481146108e1576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b50565b6000546001600160a01b031681565b6001600160a01b03166000908152600c602052604090205490565b6003546001600160a01b031681565b60055481565b60006103d542600454610f64565b60096020526000908152604090205481565b6001805481019081905533610956610ad2565b600855610961610923565b6007556001600160a01b038116156109a85761097c8161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b600083116109ee576040805162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015290519081900360640190fd5b600b54610a01908463ffffffff610eb316565b600b55336000908152600c6020526040902054610a24908463ffffffff610eb316565b336000818152600c6020526040902091909155600354610a51916001600160a01b03909116903086610f7a565b60408051848152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506001548114610565576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b60075481565b6000600b5460001415610ae857506008546103b9565b6103d5610b1d600b54610385670de0b6b3a7640000610b11600554610b11600754610354610923565b9063ffffffff610de916565b6008549063ffffffff610eb316565b6002546001600160a01b031681565b60085481565b336000908152600c6020526040902054610b5a906103da565b610b626107c0565b565b60045481565b6001805481019081905533610b7d610ad2565b600855610b88610923565b6007556001600160a01b03811615610bcf57610ba38161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008711610c15576040805162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015290519081900360640190fd5b600b54610c28908863ffffffff610eb316565b600b55336000908152600c6020526040902054610c4b908863ffffffff610eb316565b336000818152600c602052604080822093909355600354835163d505accf60e01b81526004810193909352306024840152604483018b9052606483018a905260ff8916608484015260a4830188905260c4830187905292516001600160a01b039093169263d505accf9260e480820193929182900301818387803b158015610cd257600080fd5b505af1158015610ce6573d6000803e3d6000fd5b5050600354610d0992506001600160a01b0316905033308a63ffffffff610f7a16565b60408051888152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506001548114610d84576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b505050505050565b600082821115610de3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082610df85750600061039d565b82820282848281610e0557fe5b0414610e425760405162461bcd60e51b81526004018080602001828103825260218152602001806111b96021913960400191505060405180910390fd5b9392505050565b6000808211610e9f576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610eaa57fe5b04949350505050565b600082820183811015610e42576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f5f908490610fda565b505050565b6000818310610f735781610e42565b5090919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fd4908590610fda565b50505050565b610fec826001600160a01b0316611192565b61103d576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061107b5780518252601f19909201916020918201910161105c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146110dd576040519150601f19603f3d011682016040523d82523d6000602084013e6110e2565b606091505b509150915081611139576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610fd45780806020019051602081101561115557600080fd5b5051610fd45760405162461bcd60e51b815260040180806020018281038252602a815260200180611204602a913960400191505060405180910390fd5b3b15159056fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x2D5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2A5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x24A JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x569 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x56F JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x16C PUSH2 0x91D JUMP JUMPDEST PUSH2 0x16C PUSH2 0x923 JUMP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xACC JUMP JUMPDEST PUSH2 0x16C PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x391 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x385 SWAP1 PUSH2 0x360 SWAP1 PUSH2 0x354 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x3ED PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x3F8 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x43F JUMPI PUSH2 0x413 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x488 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x49B SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4BE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x4EA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11DA PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C2 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x5CD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x614 JUMPI PUSH2 0x5E8 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x639 JUMPI PUSH1 0x6 SLOAD PUSH2 0x631 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x688 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x64F SWAP1 TIMESTAMP PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x668 PUSH1 0x5 SLOAD DUP4 PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x682 SWAP1 PUSH2 0x385 DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x716 SWAP1 DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x76C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x785 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x7D3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x7DE PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x825 JUMPI PUSH2 0x7F9 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x89B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x864 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x956 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x961 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x97C DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x9EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xA01 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA24 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xA51 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0xB1D PUSH1 0xB SLOAD PUSH2 0x385 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB11 PUSH1 0x5 SLOAD PUSH2 0xB11 PUSH1 0x7 SLOAD PUSH2 0x354 PUSH2 0x923 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB5A SWAP1 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0xB62 PUSH2 0x7C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0xB7D PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xB88 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBA3 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0xC15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xC28 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC4B SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC4 DUP4 ADD DUP8 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xD505ACCF SWAP3 PUSH1 0xE4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xD09 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP11 PUSH4 0xFFFFFFFF PUSH2 0xF7A AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDF8 JUMPI POP PUSH1 0x0 PUSH2 0x39D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xE05 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11B9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xEAA JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF5F SWAP1 DUP5 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xF73 JUMPI DUP2 PUSH2 0xE42 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xFD4 SWAP1 DUP6 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFEC DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x103D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x107B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x105C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1139 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xFD4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1204 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0053 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A7231582017C4023055 0xE3 0xC 0x2E 0x5D 0xBE PUSH14 0xAE37C15ABB0BDAA558D6077D65BF 0xAC 0xAD PUSH27 0xC615FD564736F6C63430005100032000000000000000000000000 ",
							"sourceMap": "732:5669:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;732:5669:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:198;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2497:198:9;-1:-1:-1;;;;;2497:198:9;;:::i;:::-;;;;;;;;;;;;;;;;1279:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1279:42:9;-1:-1:-1;;;;;1279:42:9;;:::i;1799:93::-;;;:::i;2703:121::-;;;:::i;3829:357::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3829:357:9;;:::i;:::-;;1088:40;;;:::i;4670:1083::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4670:1083:9;;:::i;4194:307::-;;;:::i;73:34:8:-;;;:::i;:::-;;;;-1:-1:-1;;;;;73:34:8;;;;;;;;;;;;;;1900:112:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1900:112:9;-1:-1:-1;;;;;1900:112:9;;:::i;981:26::-;;;:::i;1052:29::-;;;:::i;2020:131::-;;;:::i;1215:57::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1215:57:9;-1:-1:-1;;;;;1215:57:9;;:::i;3452:369::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3452:369:9;;:::i;1135:29::-;;;:::i;2159:330::-;;;:::i;948:26::-;;;:::i;1171:35::-;;;:::i;4509:97::-;;;:::i;1014:31::-;;;:::i;2886:558::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;2886:558:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;2497:198::-;-1:-1:-1;;;;;2670:16:9;;2551:7;2670:16;;;:7;:16;;;;;;;;;2622:22;:31;;;;;;2578:109;;2670:16;2578:87;;2660:4;;2578:77;;2601:53;;:16;:14;:16::i;:::-;:20;:53;:20;:53;:::i;:::-;-1:-1:-1;;;;;2578:18:9;;;;;;:9;:18;;;;;;;:22;:77::i;:::-;:81;:87;:81;:87;:::i;:::-;:91;:109;:91;:109;:::i;:::-;2571:116;2497:198;-1:-1:-1;;2497:198:9:o;1279:42::-;;;;;;;;;;;;;:::o;1799:93::-;1872:12;;1799:93;;:::o;2703:121::-;2758:7;2785:31;2800:15;;2785:10;;:14;;:31;;;;:::i;:::-;2778:38;;2703:121;:::o;3829:357::-;1318:1:7;1301:18;;;;;;;;3896:10:9;5879:16;:14;:16::i;:::-;5856:20;:39;5923:26;:24;:26::i;:::-;5906:14;:43;-1:-1:-1;;;;;5964:21:9;;;5960:157;;6021:15;6028:7;6021:6;:15::i;:::-;-1:-1:-1;;;;;6002:16:9;;;;;;:7;:16;;;;;;;;:34;;;;6085:20;;6051:22;:31;;;;;;:54;5960:157;3936:1;3927:6;:10;3919:40;;;;;-1:-1:-1;;;3919:40:9;;;;;;;;;;;;-1:-1:-1;;;3919:40:9;;;;;;;;;;;;;;;3985:12;;:24;;4002:6;3985:24;:16;:24;:::i;:::-;3970:12;:39;4054:10;4044:21;;;;:9;:21;;;;;;:33;;4070:6;4044:33;:25;:33;:::i;:::-;4030:10;4020:21;;;;:9;:21;;;;;:57;;;;4088:12;;:45;;-1:-1:-1;;;;;4088:12:9;;;;4126:6;4088:25;:45::i;:::-;4149:29;;;;;;;;4159:10;;4149:29;;;;;;;;;;1375:1:7;1410:13;;1394:12;:29;1386:73;;;;;-1:-1:-1;;;1386:73:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1386:73:7;;;;;;;;;;;;;;;3829:357:9;;:::o;1088:40::-;;;;:::o;4670:1083::-;245:19:8;;-1:-1:-1;;;;;245:19:8;231:10;:33;223:88;;;;-1:-1:-1;;;223:88:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4768:1:9;5879:16;:14;:16::i;:::-;5856:20;:39;5923:26;:24;:26::i;:::-;5906:14;:43;-1:-1:-1;;;;;5964:21:9;;;5960:157;;6021:15;6028:7;6021:6;:15::i;:::-;-1:-1:-1;;;;;6002:16:9;;;;;;:7;:16;;;;;;;;:34;;;;6085:20;;6051:22;:31;;;;;;:54;5960:157;4806:12;;4787:15;:31;4783:318;;4859:15;;4848:27;;:6;;:27;:10;:27;:::i;:::-;4835:10;:40;4783:318;;;4928:12;;4908:17;;4928:33;;4945:15;4928:33;:16;:33;:::i;:::-;4908:53;;4976:16;4995:25;5009:10;;4995:9;:13;;:25;;;;:::i;:::-;5073:15;;4976:44;;-1:-1:-1;5048:41:9;;:20;:6;4976:44;5048:20;:10;:20;:::i;:41::-;5035:10;:54;-1:-1:-1;;4783:318:9;5476:12;;:37;;;-1:-1:-1;;;5476:37:9;;5507:4;5476:37;;;;;;-1:-1:-1;;;;;;;5476:12:9;;-1:-1:-1;;5476:37:9;;;;;;;;;;;;;;:12;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;5476:37:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5476:37:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5476:37:9;5558:15;;5476:37;;-1:-1:-1;5546:28:9;;5476:37;;5546:28;:11;:28;:::i;:::-;5532:10;;:42;;5524:79;;;;;-1:-1:-1;;;5524:79:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;5633:15;5616:14;:32;;;5694:15;;5674:36;;5633:15;5674:36;:19;:36;:::i;:::-;5659:12;:51;5726:19;;;;;;;;;;;;;;;;;6127:1;322::8;4670:1083:9;:::o;4194:307::-;1318:1:7;1301:18;;;;;;;;4248:10:9;5879:16;:14;:16::i;:::-;5856:20;:39;5923:26;:24;:26::i;:::-;5906:14;:43;-1:-1:-1;;;;;5964:21:9;;;5960:157;;6021:15;6028:7;6021:6;:15::i;:::-;-1:-1:-1;;;;;6002:16:9;;;;;;:7;:16;;;;;;;;:34;;;;6085:20;;6051:22;:31;;;;;;:54;5960:157;4296:10;4271:14;4288:19;;;:7;:19;;;;;;4322:10;;4318:176;;4357:10;4371:1;4349:19;;;:7;:19;;;;;:23;4387:12;;:45;;-1:-1:-1;;;;;4387:12:9;;;;4425:6;4387:25;:45::i;:::-;4452:30;;;;;;;;4463:10;;4452:30;;;;;;;;;;4318:176;6127:1;1375::7;1410:13;;1394:12;:29;1386:73;;;;;-1:-1:-1;;;1386:73:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1386:73:7;;;;;;;;;;;;;;;4194:307:9;:::o;73:34:8:-;;;-1:-1:-1;;;;;73:34:8;;:::o;1900:112:9:-;-1:-1:-1;;;;;1986:18:9;1959:7;1986:18;;;:9;:18;;;;;;;1900:112::o;981:26::-;;;-1:-1:-1;;;;;981:26:9;;:::o;1052:29::-;;;;:::o;2020:131::-;2077:7;2104:39;2113:15;2130:12;;2104:8;:39::i;1215:57::-;;;;;;;;;;;;;:::o;3452:369::-;1318:1:7;1301:18;;;;;;;;3518:10:9;5879:16;:14;:16::i;:::-;5856:20;:39;5923:26;:24;:26::i;:::-;5906:14;:43;-1:-1:-1;;;;;5964:21:9;;;5960:157;;6021:15;6028:7;6021:6;:15::i;:::-;-1:-1:-1;;;;;6002:16:9;;;;;;:7;:16;;;;;;;;:34;;;;6085:20;;6051:22;:31;;;;;;:54;5960:157;3558:1;3549:6;:10;3541:37;;;;;-1:-1:-1;;;3541:37:9;;;;;;;;;;;;-1:-1:-1;;;3541:37:9;;;;;;;;;;;;;;;3604:12;;:24;;3621:6;3604:24;:16;:24;:::i;:::-;3589:12;:39;3673:10;3663:21;;;;:9;:21;;;;;;:33;;3689:6;3663:33;:25;:33;:::i;:::-;3649:10;3639:21;;;;:9;:21;;;;;:57;;;;3707:12;;:64;;-1:-1:-1;;;;;3707:12:9;;;;3757:4;3764:6;3707:29;:64::i;:::-;3787:26;;;;;;;;3794:10;;3787:26;;;;;;;;;;1375:1:7;1410:13;;1394:12;:29;1386:73;;;;;-1:-1:-1;;;1386:73:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1386:73:7;;;;;;;;;;;;;;1135:29:9;;;;:::o;2159:330::-;2206:7;2230:12;;2246:1;2230:17;2226:77;;;-1:-1:-1;2271:20:9;;2264:27;;2226:77;2333:148;2376:90;2453:12;;2376:72;2443:4;2376:62;2427:10;;2376:46;2407:14;;2376:26;:24;:26::i;:46::-;:50;:62;:50;:62;:::i;:90::-;2333:20;;;:148;:24;:148;:::i;948:26::-;;;-1:-1:-1;;;;;948:26:9;;:::o;1171:35::-;;;;:::o;4509:97::-;4564:10;4554:21;;;;:9;:21;;;;;;4545:31;;:8;:31::i;:::-;4587:11;:9;:11::i;:::-;4509:97::o;1014:31::-;;;;:::o;2886:558::-;1318:1:7;1301:18;;;;;;;;3008:10:9;5879:16;:14;:16::i;:::-;5856:20;:39;5923:26;:24;:26::i;:::-;5906:14;:43;-1:-1:-1;;;;;5964:21:9;;;5960:157;;6021:15;6028:7;6021:6;:15::i;:::-;-1:-1:-1;;;;;6002:16:9;;;;;;:7;:16;;;;;;;;:34;;;;6085:20;;6051:22;:31;;;;;;:54;5960:157;3048:1;3039:6;:10;3031:37;;;;;-1:-1:-1;;;3031:37:9;;;;;;;;;;;;-1:-1:-1;;;3031:37:9;;;;;;;;;;;;;;;3094:12;;:24;;3111:6;3094:24;:16;:24;:::i;:::-;3079:12;:39;3163:10;3153:21;;;;:9;:21;;;;;;:33;;3179:6;3153:33;:25;:33;:::i;:::-;3139:10;3129:21;;;;:9;:21;;;;;;:57;;;;3242:12;;3218:99;;-1:-1:-1;;;3218:99:9;;;;;;;;;3284:4;3218:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3242:12:9;;;;-1:-1:-1;;3218:99:9;;;;;3129:21;3218:99;;;;;;3129:21;3242:12;3218:99;;;5:2:-1;;;;30:1;27;20:12;5:2;3218:99:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3330:12:9;;:64;;-1:-1:-1;;;;;;3330:12:9;;-1:-1:-1;3360:10:9;3380:4;3387:6;3330:29;:64::i;:::-;3410:26;;;;;;;;3417:10;;3410:26;;;;;;;;;;1375:1:7;1410:13;;1394:12;:29;1386:73;;;;;-1:-1:-1;;;1386:73:7;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1386:73:7;;;;;;;;;;;;;;;2886:558:9;;;;;;:::o;1274:179:1:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:1;;;1274:179::o;1693:459::-;1751:7;1992:6;1988:45;;-1:-1:-1;2021:1:1;2014:8;;1988:45;2055:5;;;2059:1;2055;:5;:1;2078:5;;;;;:10;2070:56;;;;-1:-1:-1;;;2070:56:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2144:1;1693:459;-1:-1:-1;;;1693:459:1:o;2607:326::-;2665:7;2762:1;2758;:5;2750:44;;;;;-1:-1:-1;;;2750:44:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2804:9;2820:1;2816;:5;;;;;;;2607:326;-1:-1:-1;;;;2607:326:1:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;662:174:5;770:58;;;-1:-1:-1;;;;;770:58:5;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;770:58:5;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;744:85:5;;763:5;;744:18;:85::i;:::-;662:174;;;:::o;358:104:0:-;416:7;446:1;442;:5;:13;;454:1;442:13;;;-1:-1:-1;450:1:0;;435:20;-1:-1:-1;358:104:0:o;842:202:5:-;968:68;;;-1:-1:-1;;;;;968:68:5;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;968:68:5;;;;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;942:95:5;;961:5;;942:18;:95::i;:::-;842:202;;;;:::o;2621:1095::-;3216:27;-1:-1:-1;;;;;3216:25:5;;;:27::i;:::-;3208:71;;;;;-1:-1:-1;;;3208:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;3350:12;3364:23;3399:5;-1:-1:-1;;;;;3391:19:5;3411:4;3391:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3391:25:5;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3349:67:5;;;;3434:7;3426:52;;;;;-1:-1:-1;;;3426:52:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3493:17;;:21;3489:221;;3633:10;3622:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3622:30:5;3614:85;;;;-1:-1:-1;;;3614:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;542:413:6;902:20;940:8;;;542:413::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "941200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1253",
								"earned(address)": "infinite",
								"exit()": "infinite",
								"getReward()": "infinite",
								"getRewardForDuration()": "infinite",
								"lastTimeRewardApplicable()": "1129",
								"lastUpdateTime()": "1109",
								"notifyRewardAmount(uint256)": "infinite",
								"periodFinish()": "1108",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "1064",
								"rewardRate()": "1021",
								"rewards(address)": "1170",
								"rewardsDistribution()": "1126",
								"rewardsDuration()": "1021",
								"rewardsToken()": "1081",
								"stake(uint256)": "infinite",
								"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"stakingToken()": "1170",
								"totalSupply()": "1067",
								"userRewardPerTokenPaid(address)": "1191",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 732,
									"end": 6401,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "MSTORE"
								},
								{
									"begin": 1044,
									"end": 1045,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1014,
									"end": 1045,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1014,
									"end": 1045,
									"name": "SSTORE"
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1052,
									"end": 1081,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 1052,
									"end": 1081,
									"name": "SSTORE"
								},
								{
									"begin": 1121,
									"end": 1128,
									"name": "PUSH",
									"value": "278D00"
								},
								{
									"begin": 1088,
									"end": 1128,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1088,
									"end": 1128,
									"name": "SSTORE"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "POP"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "MLOAD"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "CODESIZE"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "SUB"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "DUP1"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "PUSHSIZE"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "DUP4"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "CODECOPY"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "DUP2"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "DUP2"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "ADD"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "DUP1"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "MLOAD"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "DUP3"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "ADD"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "MLOAD"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "SWAP1"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "SWAP3"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "ADD"
								},
								{
									"begin": 1466,
									"end": 1750,
									"name": "MLOAD"
								},
								{
									"begin": 884,
									"end": 885,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 868,
									"end": 885,
									"name": "DUP1"
								},
								{
									"begin": 868,
									"end": 885,
									"name": "SSTORE"
								},
								{
									"begin": 1606,
									"end": 1618,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "DUP1"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "SWAP1"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "DUP2"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "SWAP6"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "DUP7"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "AND"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "OR"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "SWAP1"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "SWAP2"
								},
								{
									"begin": 1606,
									"end": 1642,
									"name": "SSTORE"
								},
								{
									"begin": 1653,
									"end": 1665,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "DUP1"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SLOAD"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "DUP3"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "AND"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SWAP3"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "DUP6"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "AND"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SWAP3"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SWAP1"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SWAP3"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "OR"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SWAP1"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SWAP2"
								},
								{
									"begin": 1653,
									"end": 1689,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "DUP1"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SLOAD"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP1"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP2"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "AND"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP3"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP1"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP2"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "AND"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP2"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP1"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SWAP2"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "OR"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "DUP2"
								},
								{
									"begin": 1700,
									"end": 1742,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1262"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP1"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "SWAP1"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "CODECOPY"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 732,
									"end": 6401,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c63430005100032",
									".code": [
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "MSTORE"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "POP"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "LT"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "SHR"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "7B0A47EE"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "GT"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "CD3DAF9D"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "GT"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "CD3DAF9D"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "DF136D65"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "E9FAD8EE"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "EBE2B12B"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "ECD9BA82"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMP"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "7B0A47EE"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "80FAA57D"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "8B876347"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "A694FC3A"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "C8F33C91"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMP"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "386A9525"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "GT"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "386A9525"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "3D18B912"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "3FC6DF6E"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "72F702F3"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMP"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "8CC262"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "700037D"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "1C1F78EB"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "EQ"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPI"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "JUMPDEST"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "DUP1"
										},
										{
											"begin": 732,
											"end": 6401,
											"name": "REVERT"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "DUP1"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "AND"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "JUMPDEST"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "DUP1"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "MLOAD"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SWAP2"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "DUP3"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "MSTORE"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "MLOAD"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "DUP2"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SUB"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "ADD"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SWAP1"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "RETURN"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "JUMPDEST"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "DUP1"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "AND"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "JUMPDEST"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "JUMPDEST"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "JUMPDEST"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "DUP1"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "JUMPDEST"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "STOP"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "JUMPDEST"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "DUP1"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "JUMPDEST"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP3"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP3"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "ADD"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "RETURN"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "JUMPDEST"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "DUP1"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "AND"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "JUMPDEST"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "AND"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "JUMPDEST"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "DUP1"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "JUMPDEST"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "JUMPDEST"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "JUMPDEST"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "JUMPDEST"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "JUMPDEST"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "DUP1"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "DUP1"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "SWAP1"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "DUP2"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "ADD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "SWAP1"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "DUP3"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "ADD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "AND"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "SWAP1"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "DUP2"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "ADD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "SWAP1"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "ADD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "DUP2"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "AND"
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "SWAP1"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "DUP2"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "MSTORE"
										},
										{
											"begin": 2670,
											"end": 2677,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "SWAP1"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "DUP2"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "MSTORE"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "DUP1"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "DUP4"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "KECCAK256"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "SLOAD"
										},
										{
											"begin": 2622,
											"end": 2644,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 2622,
											"end": 2653,
											"name": "SWAP1"
										},
										{
											"begin": 2622,
											"end": 2653,
											"name": "SWAP3"
										},
										{
											"begin": 2622,
											"end": 2653,
											"name": "MSTORE"
										},
										{
											"begin": 2622,
											"end": 2653,
											"name": "DUP3"
										},
										{
											"begin": 2622,
											"end": 2653,
											"name": "KECCAK256"
										},
										{
											"begin": 2622,
											"end": 2653,
											"name": "SLOAD"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "SWAP2"
										},
										{
											"begin": 2670,
											"end": 2686,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "SWAP1"
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2655,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2655,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2601,
											"end": 2615,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 2601,
											"end": 2617,
											"name": "JUMPDEST"
										},
										{
											"begin": 2601,
											"end": 2621,
											"name": "SWAP1"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2621,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "AND"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2601,
											"end": 2654,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "DUP9"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "AND"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "DUP2"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "MSTORE"
										},
										{
											"begin": 2578,
											"end": 2587,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "MSTORE"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "KECCAK256"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "SLOAD"
										},
										{
											"begin": 2578,
											"end": 2596,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2578,
											"end": 2655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2655,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2578,
											"end": 2655,
											"name": "JUMPDEST"
										},
										{
											"begin": 2578,
											"end": 2659,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2578,
											"end": 2659,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "AND"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2578,
											"end": 2665,
											"name": "JUMPDEST"
										},
										{
											"begin": 2578,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2578,
											"end": 2669,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "AND"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2578,
											"end": 2687,
											"name": "JUMPDEST"
										},
										{
											"begin": 2571,
											"end": 2687,
											"name": "SWAP3"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2497,
											"end": 2695,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "JUMPDEST"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "MSTORE"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "DUP2"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "MSTORE"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "KECCAK256"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "SLOAD"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "DUP2"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "JUMPDEST"
										},
										{
											"begin": 1872,
											"end": 1884,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 1872,
											"end": 1884,
											"name": "SLOAD"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "JUMPDEST"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "SWAP1"
										},
										{
											"begin": 1799,
											"end": 1892,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "JUMPDEST"
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2800,
											"end": 2815,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2800,
											"end": 2815,
											"name": "SLOAD"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2785,
											"end": 2795,
											"name": "SLOAD"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "SWAP2"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "SWAP1"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "AND"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2785,
											"end": 2816,
											"name": "JUMPDEST"
										},
										{
											"begin": 2778,
											"end": 2816,
											"name": "SWAP1"
										},
										{
											"begin": 2778,
											"end": 2816,
											"name": "POP"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "SWAP1"
										},
										{
											"begin": 2703,
											"end": 2824,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 3896,
											"end": 3906,
											"name": "CALLER"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 5879,
											"end": 5893,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMPDEST"
										},
										{
											"begin": 5856,
											"end": 5876,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5856,
											"end": 5895,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "DUP2"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "AND"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPI"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP3"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "AND"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP4"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "KECCAK256"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SSTORE"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "SLOAD"
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "KECCAK256"
										},
										{
											"begin": 6051,
											"end": 6105,
											"name": "SSTORE"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP4"
										},
										{
											"begin": 3927,
											"end": 3937,
											"name": "GT"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "JUMPI"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "DUP1"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "43616E6E6F74207769746864726177203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "7C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "DUP3"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "MSTORE"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "MLOAD"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "DUP2"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "SUB"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "ADD"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "SWAP1"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "REVERT"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 3919,
											"end": 3959,
											"name": "JUMPDEST"
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "SLOAD"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "SWAP1"
										},
										{
											"begin": 4002,
											"end": 4008,
											"name": "DUP5"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3985,
											"end": 4001,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "AND"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3985,
											"end": 4009,
											"name": "JUMPDEST"
										},
										{
											"begin": 3970,
											"end": 3982,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3970,
											"end": 4009,
											"name": "SSTORE"
										},
										{
											"begin": 4054,
											"end": 4064,
											"name": "CALLER"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "DUP2"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "MSTORE"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "SWAP1"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "KECCAK256"
										},
										{
											"begin": 4044,
											"end": 4065,
											"name": "SLOAD"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "SWAP1"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP5"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4044,
											"end": 4069,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "AND"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 4044,
											"end": 4077,
											"name": "JUMPDEST"
										},
										{
											"begin": 4030,
											"end": 4040,
											"name": "CALLER"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "DUP2"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "DUP2"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "MSTORE"
										},
										{
											"begin": 4020,
											"end": 4029,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "MSTORE"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP1"
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "KECCAK256"
										},
										{
											"begin": 4020,
											"end": 4077,
											"name": "SWAP2"
										},
										{
											"begin": 4020,
											"end": 4077,
											"name": "SWAP1"
										},
										{
											"begin": 4020,
											"end": 4077,
											"name": "SWAP2"
										},
										{
											"begin": 4020,
											"end": 4077,
											"name": "SSTORE"
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "SLOAD"
										},
										{
											"begin": 4088,
											"end": 4133,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 4088,
											"end": 4133,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "SWAP1"
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "SWAP2"
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "AND"
										},
										{
											"begin": 4088,
											"end": 4100,
											"name": "SWAP1"
										},
										{
											"begin": 4126,
											"end": 4132,
											"name": "DUP6"
										},
										{
											"begin": 4088,
											"end": 4113,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4088,
											"end": 4133,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4088,
											"end": 4133,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 4088,
											"end": 4133,
											"name": "JUMPDEST"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP1"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "MLOAD"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP5"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "MSTORE"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "MLOAD"
										},
										{
											"begin": 4159,
											"end": 4169,
											"name": "CALLER"
										},
										{
											"begin": 4159,
											"end": 4169,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "PUSH",
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP2"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "DUP2"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SUB"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "ADD"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP1"
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "LOG2"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "POP"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "POP"
										},
										{
											"begin": 3829,
											"end": 4186,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "SLOAD"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "DUP2"
										},
										{
											"begin": 1088,
											"end": 1128,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "JUMPDEST"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 245,
											"end": 264,
											"name": "AND"
										},
										{
											"begin": 231,
											"end": 241,
											"name": "CALLER"
										},
										{
											"begin": 231,
											"end": 264,
											"name": "EQ"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH data",
											"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "CODECOPY"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "REVERT"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 223,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 4768,
											"end": 4769,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 5879,
											"end": 5893,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMPDEST"
										},
										{
											"begin": 5856,
											"end": 5876,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5856,
											"end": 5895,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "DUP2"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "AND"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPI"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP3"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "AND"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP4"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "KECCAK256"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SSTORE"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "SLOAD"
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "KECCAK256"
										},
										{
											"begin": 6051,
											"end": 6105,
											"name": "SSTORE"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 4806,
											"end": 4818,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4806,
											"end": 4818,
											"name": "SLOAD"
										},
										{
											"begin": 4787,
											"end": 4802,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4787,
											"end": 4818,
											"name": "LT"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "JUMPI"
										},
										{
											"begin": 4859,
											"end": 4874,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 4859,
											"end": 4874,
											"name": "SLOAD"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "SWAP1"
										},
										{
											"begin": 4848,
											"end": 4854,
											"name": "DUP4"
										},
										{
											"begin": 4848,
											"end": 4854,
											"name": "SWAP1"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4858,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "AND"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 4848,
											"end": 4875,
											"name": "JUMPDEST"
										},
										{
											"begin": 4835,
											"end": 4845,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 4835,
											"end": 4875,
											"name": "SSTORE"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "JUMP"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "JUMPDEST"
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "SLOAD"
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4925,
											"name": "SWAP1"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "SWAP1"
										},
										{
											"begin": 4945,
											"end": 4960,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4928,
											"end": 4944,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "AND"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 4928,
											"end": 4961,
											"name": "JUMPDEST"
										},
										{
											"begin": 4908,
											"end": 4961,
											"name": "SWAP1"
										},
										{
											"begin": 4908,
											"end": 4961,
											"name": "POP"
										},
										{
											"begin": 4976,
											"end": 4992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "SLOAD"
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "DUP4"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 4995,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "SWAP2"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "AND"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 4995,
											"end": 5020,
											"name": "JUMPDEST"
										},
										{
											"begin": 5073,
											"end": 5088,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5073,
											"end": 5088,
											"name": "SLOAD"
										},
										{
											"begin": 4976,
											"end": 5020,
											"name": "SWAP1"
										},
										{
											"begin": 4976,
											"end": 5020,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5048,
											"end": 5089,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 5048,
											"end": 5089,
											"name": "SWAP1"
										},
										{
											"begin": 5048,
											"end": 5068,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5048,
											"end": 5054,
											"name": "DUP7"
										},
										{
											"begin": 4976,
											"end": 5020,
											"name": "DUP5"
										},
										{
											"begin": 5048,
											"end": 5068,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5048,
											"end": 5058,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5048,
											"end": 5068,
											"name": "AND"
										},
										{
											"begin": 5048,
											"end": 5068,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5048,
											"end": 5089,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 5048,
											"end": 5089,
											"name": "JUMPDEST"
										},
										{
											"begin": 5035,
											"end": 5045,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5035,
											"end": 5089,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 4783,
											"end": 5101,
											"name": "JUMPDEST"
										},
										{
											"begin": 5476,
											"end": 5488,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5476,
											"end": 5488,
											"name": "SLOAD"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP2"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "MSTORE"
										},
										{
											"begin": 5507,
											"end": 5511,
											"name": "ADDRESS"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP3"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "ADD"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "MSTORE"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5476,
											"end": 5488,
											"name": "AND"
										},
										{
											"begin": 5476,
											"end": 5488,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP4"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "ADD"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP3"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP3"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP2"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP3"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SUB"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "ADD"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP2"
										},
										{
											"begin": 5476,
											"end": 5488,
											"name": "DUP7"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "GAS"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "STATICCALL"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "MLOAD"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "MLOAD"
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5558,
											"end": 5573,
											"name": "SLOAD"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "SWAP1"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "DUP3"
										},
										{
											"begin": 5476,
											"end": 5513,
											"name": "SWAP1"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5546,
											"end": 5557,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "AND"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 5546,
											"end": 5574,
											"name": "JUMPDEST"
										},
										{
											"begin": 5532,
											"end": 5542,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 5532,
											"end": 5542,
											"name": "SLOAD"
										},
										{
											"begin": 5532,
											"end": 5574,
											"name": "GT"
										},
										{
											"begin": 5532,
											"end": 5574,
											"name": "ISZERO"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "JUMPI"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP1"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP3"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "ADD"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP3"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "ADD"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP3"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "ADD"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "MSTORE"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "MLOAD"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "DUP2"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "SUB"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "ADD"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "SWAP1"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "REVERT"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 5524,
											"end": 5603,
											"name": "JUMPDEST"
										},
										{
											"begin": 5633,
											"end": 5648,
											"name": "TIMESTAMP"
										},
										{
											"begin": 5616,
											"end": 5630,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "DUP2"
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "SWAP1"
										},
										{
											"begin": 5616,
											"end": 5648,
											"name": "SSTORE"
										},
										{
											"begin": 5694,
											"end": 5709,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 5694,
											"end": 5709,
											"name": "SLOAD"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "SWAP2"
										},
										{
											"begin": 5633,
											"end": 5648,
											"name": "SWAP1"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5674,
											"end": 5693,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "AND"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "JUMPDEST"
										},
										{
											"begin": 5659,
											"end": 5671,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5659,
											"end": 5710,
											"name": "SSTORE"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "DUP1"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "MLOAD"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "DUP5"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "DUP2"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "MSTORE"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "SWAP1"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "MLOAD"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "PUSH",
											"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "SWAP2"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "DUP2"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "SWAP1"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "SUB"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "ADD"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "SWAP1"
										},
										{
											"begin": 5726,
											"end": 5745,
											"name": "LOG1"
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 322,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "POP"
										},
										{
											"begin": 4670,
											"end": 5753,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 4248,
											"end": 4258,
											"name": "CALLER"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 5879,
											"end": 5893,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMPDEST"
										},
										{
											"begin": 5856,
											"end": 5876,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5856,
											"end": 5895,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "DUP2"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "AND"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPI"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP3"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "AND"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP4"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "KECCAK256"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SSTORE"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "SLOAD"
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "KECCAK256"
										},
										{
											"begin": 6051,
											"end": 6105,
											"name": "SSTORE"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 4296,
											"end": 4306,
											"name": "CALLER"
										},
										{
											"begin": 4271,
											"end": 4285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "SWAP1"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "DUP2"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "MSTORE"
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "MSTORE"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "SWAP1"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "KECCAK256"
										},
										{
											"begin": 4288,
											"end": 4307,
											"name": "SLOAD"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "DUP1"
										},
										{
											"begin": 4322,
											"end": 4332,
											"name": "ISZERO"
										},
										{
											"begin": 4318,
											"end": 4494,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 4318,
											"end": 4494,
											"name": "JUMPI"
										},
										{
											"begin": 4357,
											"end": 4367,
											"name": "CALLER"
										},
										{
											"begin": 4371,
											"end": 4372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "DUP2"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "DUP2"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "MSTORE"
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "MSTORE"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "DUP2"
										},
										{
											"begin": 4349,
											"end": 4368,
											"name": "KECCAK256"
										},
										{
											"begin": 4349,
											"end": 4372,
											"name": "SSTORE"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "SLOAD"
										},
										{
											"begin": 4387,
											"end": 4432,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 4387,
											"end": 4432,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "SWAP1"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "SWAP2"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "AND"
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "SWAP1"
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "DUP4"
										},
										{
											"begin": 4387,
											"end": 4412,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 4387,
											"end": 4432,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4432,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 4387,
											"end": 4432,
											"name": "JUMPDEST"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "DUP1"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "MLOAD"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "DUP3"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "DUP2"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "MSTORE"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "SWAP1"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "MLOAD"
										},
										{
											"begin": 4463,
											"end": 4473,
											"name": "CALLER"
										},
										{
											"begin": 4463,
											"end": 4473,
											"name": "SWAP2"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "PUSH",
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "SWAP2"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "SWAP1"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "DUP2"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "SWAP1"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "SUB"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "ADD"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "SWAP1"
										},
										{
											"begin": 4452,
											"end": 4482,
											"name": "LOG2"
										},
										{
											"begin": 4318,
											"end": 4494,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 4318,
											"end": 4494,
											"name": "JUMPDEST"
										},
										{
											"begin": 6127,
											"end": 6128,
											"name": "POP"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "POP"
										},
										{
											"begin": 4194,
											"end": 4501,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 107,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "AND"
										},
										{
											"begin": 1959,
											"end": 1966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "SWAP1"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "DUP2"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "MSTORE"
										},
										{
											"begin": 1986,
											"end": 1995,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "MSTORE"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "SWAP1"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "KECCAK256"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "SLOAD"
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "SWAP1"
										},
										{
											"begin": 1900,
											"end": 2012,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMPDEST"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "AND"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP2"
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "SLOAD"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1081,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2020,
											"end": 2151,
											"name": "JUMPDEST"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2104,
											"end": 2143,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2113,
											"end": 2128,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2130,
											"end": 2142,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2130,
											"end": 2142,
											"name": "SLOAD"
										},
										{
											"begin": 2104,
											"end": 2112,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 2104,
											"end": 2143,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "MSTORE"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "MSTORE"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "KECCAK256"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "SLOAD"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1272,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 3452,
											"end": 3821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 3518,
											"end": 3528,
											"name": "CALLER"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5879,
											"end": 5893,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMPDEST"
										},
										{
											"begin": 5856,
											"end": 5876,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5856,
											"end": 5895,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "DUP2"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "AND"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPI"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP3"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "AND"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP4"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "KECCAK256"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SSTORE"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "SLOAD"
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "KECCAK256"
										},
										{
											"begin": 6051,
											"end": 6105,
											"name": "SSTORE"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3555,
											"name": "DUP4"
										},
										{
											"begin": 3549,
											"end": 3559,
											"name": "GT"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "JUMPI"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "DUP1"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "DUP2"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MSTORE"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MSTORE"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "43616E6E6F74207374616B65203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "DUP3"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MSTORE"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "MLOAD"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "DUP2"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "SUB"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "ADD"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "SWAP1"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "REVERT"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 3541,
											"end": 3578,
											"name": "JUMPDEST"
										},
										{
											"begin": 3604,
											"end": 3616,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3604,
											"end": 3616,
											"name": "SLOAD"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "SWAP1"
										},
										{
											"begin": 3621,
											"end": 3627,
											"name": "DUP5"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "AND"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 3604,
											"end": 3628,
											"name": "JUMPDEST"
										},
										{
											"begin": 3589,
											"end": 3601,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3589,
											"end": 3628,
											"name": "SSTORE"
										},
										{
											"begin": 3673,
											"end": 3683,
											"name": "CALLER"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "DUP2"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "MSTORE"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "SWAP1"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "KECCAK256"
										},
										{
											"begin": 3663,
											"end": 3684,
											"name": "SLOAD"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "SWAP1"
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "DUP5"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "AND"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 3663,
											"end": 3696,
											"name": "JUMPDEST"
										},
										{
											"begin": 3649,
											"end": 3659,
											"name": "CALLER"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "DUP2"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "DUP2"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3648,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "MSTORE"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3660,
											"name": "KECCAK256"
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "SWAP2"
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "SWAP1"
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "SWAP2"
										},
										{
											"begin": 3639,
											"end": 3696,
											"name": "SSTORE"
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "SLOAD"
										},
										{
											"begin": 3707,
											"end": 3771,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 3707,
											"end": 3771,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "SWAP1"
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "SWAP2"
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "AND"
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "SWAP1"
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "ADDRESS"
										},
										{
											"begin": 3764,
											"end": 3770,
											"name": "DUP7"
										},
										{
											"begin": 3707,
											"end": 3736,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 3707,
											"end": 3771,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3771,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 3707,
											"end": 3771,
											"name": "JUMPDEST"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "DUP1"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "DUP5"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "MSTORE"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "MLOAD"
										},
										{
											"begin": 3794,
											"end": 3804,
											"name": "CALLER"
										},
										{
											"begin": 3794,
											"end": 3804,
											"name": "SWAP2"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "PUSH",
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "SWAP2"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "DUP2"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "SUB"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "ADD"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "SWAP1"
										},
										{
											"begin": 3787,
											"end": 3813,
											"name": "LOG2"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "JUMPDEST"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "DUP2"
										},
										{
											"begin": 1135,
											"end": 1164,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2159,
											"end": 2489,
											"name": "JUMPDEST"
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SLOAD"
										},
										{
											"begin": 2246,
											"end": 2247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2247,
											"name": "EQ"
										},
										{
											"begin": 2226,
											"end": 2303,
											"name": "ISZERO"
										},
										{
											"begin": 2226,
											"end": 2303,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 2226,
											"end": 2303,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2271,
											"end": 2291,
											"name": "SLOAD"
										},
										{
											"begin": 2264,
											"end": 2291,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2264,
											"end": 2291,
											"name": "JUMP"
										},
										{
											"begin": 2226,
											"end": 2303,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 2226,
											"end": 2303,
											"name": "JUMPDEST"
										},
										{
											"begin": 2333,
											"end": 2481,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2376,
											"end": 2466,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 2453,
											"end": 2465,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 2453,
											"end": 2465,
											"name": "SLOAD"
										},
										{
											"begin": 2376,
											"end": 2448,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2443,
											"end": 2447,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2376,
											"end": 2438,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2427,
											"end": 2437,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2427,
											"end": 2437,
											"name": "SLOAD"
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 2407,
											"end": 2421,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2407,
											"end": 2421,
											"name": "SLOAD"
										},
										{
											"begin": 2376,
											"end": 2402,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2376,
											"end": 2400,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2376,
											"end": 2402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "JUMPDEST"
										},
										{
											"begin": 2376,
											"end": 2426,
											"name": "SWAP1"
										},
										{
											"begin": 2376,
											"end": 2438,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2376,
											"end": 2426,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2376,
											"end": 2438,
											"name": "AND"
										},
										{
											"begin": 2376,
											"end": 2438,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2376,
											"end": 2466,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 2376,
											"end": 2466,
											"name": "JUMPDEST"
										},
										{
											"begin": 2333,
											"end": 2353,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2333,
											"end": 2353,
											"name": "SLOAD"
										},
										{
											"begin": 2333,
											"end": 2353,
											"name": "SWAP1"
										},
										{
											"begin": 2333,
											"end": 2481,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2333,
											"end": 2357,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2333,
											"end": 2481,
											"name": "AND"
										},
										{
											"begin": 2333,
											"end": 2481,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMPDEST"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 974,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "JUMPDEST"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "SLOAD"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "DUP2"
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "JUMPDEST"
										},
										{
											"begin": 4564,
											"end": 4574,
											"name": "CALLER"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "SWAP1"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "DUP2"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "MSTORE"
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "MSTORE"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "SWAP1"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "KECCAK256"
										},
										{
											"begin": 4554,
											"end": 4575,
											"name": "SLOAD"
										},
										{
											"begin": 4545,
											"end": 4576,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 4545,
											"end": 4576,
											"name": "SWAP1"
										},
										{
											"begin": 4545,
											"end": 4553,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 4576,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4545,
											"end": 4576,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 4545,
											"end": 4576,
											"name": "JUMPDEST"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 4587,
											"end": 4596,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 4587,
											"end": 4598,
											"name": "JUMPDEST"
										},
										{
											"begin": 4509,
											"end": 4606,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "SLOAD"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "DUP2"
										},
										{
											"begin": 1014,
											"end": 1045,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "JUMPDEST"
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SLOAD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "ADD"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "DUP2"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SWAP1"
										},
										{
											"begin": 1301,
											"end": 1319,
											"name": "SSTORE"
										},
										{
											"begin": 3008,
											"end": 3018,
											"name": "CALLER"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 5879,
											"end": 5893,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 5879,
											"end": 5895,
											"name": "JUMPDEST"
										},
										{
											"begin": 5856,
											"end": 5876,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 5856,
											"end": 5895,
											"name": "SSTORE"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 5923,
											"end": 5947,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 5923,
											"end": 5949,
											"name": "JUMPDEST"
										},
										{
											"begin": 5906,
											"end": 5920,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 5906,
											"end": 5949,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "DUP2"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "AND"
										},
										{
											"begin": 5964,
											"end": 5985,
											"name": "ISZERO"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPI"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 6028,
											"end": 6035,
											"name": "DUP2"
										},
										{
											"begin": 6021,
											"end": 6027,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP3"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "AND"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP2"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "MSTORE"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP1"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "DUP4"
										},
										{
											"begin": 6002,
											"end": 6018,
											"name": "KECCAK256"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP1"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SWAP4"
										},
										{
											"begin": 6002,
											"end": 6036,
											"name": "SSTORE"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 6085,
											"end": 6105,
											"name": "SLOAD"
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "MSTORE"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP2"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "SWAP1"
										},
										{
											"begin": 6051,
											"end": 6082,
											"name": "KECCAK256"
										},
										{
											"begin": 6051,
											"end": 6105,
											"name": "SSTORE"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5960,
											"end": 6117,
											"name": "JUMPDEST"
										},
										{
											"begin": 3048,
											"end": 3049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "DUP8"
										},
										{
											"begin": 3039,
											"end": 3049,
											"name": "GT"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "JUMPI"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "DUP1"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "MSTORE"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "DUP3"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "ADD"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "MSTORE"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "DUP3"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "ADD"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "43616E6E6F74207374616B65203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "DUP3"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "ADD"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "MSTORE"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "MLOAD"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "DUP2"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "SUB"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "ADD"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "SWAP1"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "REVERT"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 3031,
											"end": 3068,
											"name": "JUMPDEST"
										},
										{
											"begin": 3094,
											"end": 3106,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3094,
											"end": 3106,
											"name": "SLOAD"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "SWAP1"
										},
										{
											"begin": 3111,
											"end": 3117,
											"name": "DUP9"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3110,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "AND"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "JUMPDEST"
										},
										{
											"begin": 3079,
											"end": 3091,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 3079,
											"end": 3118,
											"name": "SSTORE"
										},
										{
											"begin": 3163,
											"end": 3173,
											"name": "CALLER"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "DUP2"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "MSTORE"
										},
										{
											"begin": 3153,
											"end": 3162,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "MSTORE"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "SWAP1"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "KECCAK256"
										},
										{
											"begin": 3153,
											"end": 3174,
											"name": "SLOAD"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "SWAP1"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "DUP9"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3153,
											"end": 3178,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "AND"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 3153,
											"end": 3186,
											"name": "JUMPDEST"
										},
										{
											"begin": 3139,
											"end": 3149,
											"name": "CALLER"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "DUP2"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "DUP2"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "MSTORE"
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "MSTORE"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "DUP1"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "DUP3"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "KECCAK256"
										},
										{
											"begin": 3129,
											"end": 3186,
											"name": "SWAP4"
										},
										{
											"begin": 3129,
											"end": 3186,
											"name": "SWAP1"
										},
										{
											"begin": 3129,
											"end": 3186,
											"name": "SWAP4"
										},
										{
											"begin": 3129,
											"end": 3186,
											"name": "SSTORE"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "SLOAD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP2"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP2"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3284,
											"end": 3288,
											"name": "ADDRESS"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP5"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP12"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP11"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP10"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "AND"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP5"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "A4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP9"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "C4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP8"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MSTORE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP3"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "SWAP1"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "SWAP4"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "AND"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "PUSH",
											"value": "E4"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP3"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP4"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "SWAP3"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP2"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP3"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SWAP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "SUB"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ADD"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP2"
										},
										{
											"begin": 3129,
											"end": 3150,
											"name": "DUP4"
										},
										{
											"begin": 3242,
											"end": 3254,
											"name": "DUP8"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "DUP1"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "POP"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "GAS"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "CALL"
										},
										{
											"begin": 3218,
											"end": 3317,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "SLOAD"
										},
										{
											"begin": 3330,
											"end": 3394,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 3330,
											"end": 3394,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "AND"
										},
										{
											"begin": 3330,
											"end": 3342,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3360,
											"end": 3370,
											"name": "CALLER"
										},
										{
											"begin": 3380,
											"end": 3384,
											"name": "ADDRESS"
										},
										{
											"begin": 3387,
											"end": 3393,
											"name": "DUP11"
										},
										{
											"begin": 3330,
											"end": 3359,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 3330,
											"end": 3394,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3330,
											"end": 3394,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 3330,
											"end": 3394,
											"name": "JUMPDEST"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "DUP1"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "MLOAD"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "DUP9"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "MSTORE"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "MLOAD"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "CALLER"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "SWAP2"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "PUSH",
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SWAP2"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "DUP2"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SUB"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "ADD"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "SWAP1"
										},
										{
											"begin": 3410,
											"end": 3436,
											"name": "LOG2"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "POP"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1423,
											"name": "SLOAD"
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "DUP2"
										},
										{
											"begin": 1394,
											"end": 1423,
											"name": "EQ"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPI"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP3"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MSTORE"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "MLOAD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "DUP2"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SUB"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "ADD"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "SWAP1"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "REVERT"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 1386,
											"end": 1459,
											"name": "JUMPDEST"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "POP"
										},
										{
											"begin": 2886,
											"end": 3444,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1360,
											"name": "DUP3"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "REVERT"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 1351,
											"end": 1400,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SUB"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "SWAP1"
										},
										{
											"begin": 1274,
											"end": 1453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "JUMPDEST"
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "DUP3"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "JUMP"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 1988,
											"end": 2033,
											"name": "JUMPDEST"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "MUL"
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP5"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "DUP3"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP2"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "JUMPI"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "INVALID"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "JUMPDEST"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DIV"
										},
										{
											"begin": 2078,
											"end": 2088,
											"name": "EQ"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "JUMPI"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MSTORE"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP3"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SUB"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP3"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MSTORE"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MSTORE"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "CODECOPY"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "ADD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "POP"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "POP"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "MLOAD"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "DUP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP2"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SUB"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "SWAP1"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "REVERT"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 2070,
											"end": 2126,
											"name": "JUMPDEST"
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "SWAP4"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1693,
											"end": 2152,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "JUMPDEST"
										},
										{
											"begin": 2665,
											"end": 2672,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP3"
										},
										{
											"begin": 2758,
											"end": 2763,
											"name": "GT"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "JUMPI"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP3"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP3"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP3"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MSTORE"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "MLOAD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SUB"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "ADD"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "SWAP1"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "REVERT"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 2750,
											"end": 2794,
											"name": "JUMPDEST"
										},
										{
											"begin": 2804,
											"end": 2813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "DUP3"
										},
										{
											"begin": 2816,
											"end": 2817,
											"name": "DUP5"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP2"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "JUMPI"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "INVALID"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "JUMPDEST"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DIV"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "SWAP5"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2607,
											"end": 2933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "SWAP1"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP5"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "SWAP1"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "JUMPDEST"
										},
										{
											"begin": 416,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 443,
											"name": "DUP4"
										},
										{
											"begin": 442,
											"end": 447,
											"name": "LT"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMPI"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMP"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 442,
											"end": 455,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "SWAP1"
										},
										{
											"begin": 450,
											"end": 451,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 358,
											"end": 462,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "JUMPDEST"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP6"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP4"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP5"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP5"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "84"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "SWAP1"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "SWAP1"
										},
										{
											"begin": 961,
											"end": 966,
											"name": "DUP6"
										},
										{
											"begin": 961,
											"end": 966,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 2621,
											"end": 3716,
											"name": "JUMPDEST"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3216,
											"end": 3241,
											"name": "DUP4"
										},
										{
											"begin": 3216,
											"end": 3241,
											"name": "AND"
										},
										{
											"begin": 3216,
											"end": 3241,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 3216,
											"end": 3243,
											"name": "JUMPDEST"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "JUMPI"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP3"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP3"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP3"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MSTORE"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "MLOAD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "DUP2"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SUB"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "ADD"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "SWAP1"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "REVERT"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 3208,
											"end": 3279,
											"name": "JUMPDEST"
										},
										{
											"begin": 3350,
											"end": 3362,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3387,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3399,
											"end": 3404,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3391,
											"end": 3410,
											"name": "AND"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "MLOAD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP3"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "MLOAD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "ADD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "ADD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "MLOAD"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP1"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP4"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SUB"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP2"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "DUP7"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "GAS"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "CALL"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3391,
											"end": 3416,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "SWAP2"
										},
										{
											"begin": 3349,
											"end": 3416,
											"name": "POP"
										},
										{
											"begin": 3434,
											"end": 3441,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "JUMPI"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP3"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP3"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP3"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MSTORE"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "MLOAD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "DUP2"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SUB"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "ADD"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "SWAP1"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "REVERT"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 3426,
											"end": 3478,
											"name": "JUMPDEST"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "DUP1"
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3514,
											"name": "ISZERO"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 3489,
											"end": 3710,
											"name": "JUMPI"
										},
										{
											"begin": 3633,
											"end": 3643,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "MLOAD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "JUMPI"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SUB"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "CODECOPY"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "POP"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "POP"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "MLOAD"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP2"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SUB"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3614,
											"end": 3699,
											"name": "REVERT"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "JUMPDEST"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 940,
											"end": 948,
											"name": "ISZERO"
										},
										{
											"begin": 940,
											"end": 948,
											"name": "ISZERO"
										},
										{
											"begin": 940,
											"end": 948,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 955,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
										"D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c00",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"notifyRewardAmount(uint256)": "3c6b16ab",
							"periodFinish()": "ebe2b12b",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDistribution()": "3fc6df6e",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"stakeWithPermit(uint256,uint256,uint8,bytes32,bytes32)": "ecd9ba82",
							"stakingToken()": "72f702f3",
							"totalSupply()": "18160ddd",
							"userRewardPerTokenPaid(address)": "8b876347",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsDistribution\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDistribution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"stakeWithPermit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/StakingRewards.sol\":\"StakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]},\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]},\"liquidity-staker/StakingRewards.sol\":{\"keccak256\":\"0xd6e38b2ef65232cf59a7431cc1fb7d26c8b0b4f3cebb01d3e2d7e915a2a05a2a\",\"urls\":[\"bzz-raw://45aa9805f15bf19d520dead2bf9b2ec2cba0fce1fa690e9eba6487c917ae75da\",\"dweb:/ipfs/QmcieAaUBNTVdfuBFN4Ys2sr2fhoFqC5goAJp4ZKVE5S2x\"]},\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 713,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardsDistribution",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 681,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "_guardCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 754,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)439"
							},
							{
								"astId": 756,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "stakingToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)439"
							},
							{
								"astId": 759,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "periodFinish",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 762,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardRate",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 765,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 767,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 769,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 773,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 777,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 779,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 783,
								"contract": "liquidity-staker/StakingRewards.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)439": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"liquidity-staker/StakingRewardsFactory.sol": {
				"StakingRewardsFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardsToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardsGenesis",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "deploy",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "notifyRewardAmounts",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stakingRewardsGenesis",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingRewardsInfoByStakingToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "stakingRewards",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakingTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n  pop\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:663  _owner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:676  _owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":666:676  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:676  _owner = msg.sender */\n  or\n  dup1\n  dup3\n  sstore\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":846:1175  constructor(\r... */\n  0x40\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":691:731  OwnershipTransferred(address(0), _owner) */\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":724:730  _owner */\n  swap2\n  swap1\n  swap2\n  and\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:663  _owner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":691:731  OwnershipTransferred(address(0), _owner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":657:663  _owner */\n  dup3\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":691:731  OwnershipTransferred(address(0), _owner) */\n  log3\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":997:1012  block.timestamp */\n  timestamp\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":971:993  _stakingRewardsGenesis */\n  dup2\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":971:1012  _stakingRewardsGenesis >= block.timestamp */\n  lt\n  iszero\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":963:1069  require(_stakingRewardsGenesis >= block.timestamp, 'StakingRewardsFactory::constructor: genesis too soon') */\n  tag_7\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x34\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515\n  0x34\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1082:1094  rewardsToken */\n  0x01\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1082:1110  rewardsToken = _rewardsToken */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1121:1142  stakingRewardsGenesis */\n  0x02\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":1121:1167  stakingRewardsGenesis = _stakingRewardsGenesis */\n  sstore\n    /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515 5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e\n\nsub_0: assembly {\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa0928c11\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xae741d8d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x344e5e34\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4956eaf0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6cf8caf8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x81e16298\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":521:551  address[] public stakingTokens */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":521:551  address[] public stakingTokens */\n      calldataload\n      tag_17\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_20\n      jump\t// in\n    tag_18:\n      stop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":759:837  mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":759:837  mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1599:1736  function renounceOwnership() public onlyOwner {... */\n    tag_6:\n      tag_18\n      tag_25\n      jump\t// in\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n    tag_7:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_27:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_28\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":814:891  function owner() public view returns (address) {... */\n    tag_8:\n      tag_15\n      tag_30\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1165:1255  function isOwner() public view returns (bool) {... */\n    tag_9:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":403:436  uint public stakingRewardsGenesis */\n    tag_10:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2004:2288  function notifyRewardAmounts() public {\r... */\n    tag_11:\n      tag_18\n      tag_36\n      jump\t// in\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":369:396  address public rewardsToken */\n    tag_12:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_13:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_40:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":521:551  address[] public stakingTokens */\n    tag_17:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      tag_45\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1025  isOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      jump\t// in\n    tag_45:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1010:1064  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_46\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1573  stakingRewardsInfoByStakingToken[stakingToken] */\n      dup1\n      dup4\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1493:1524  StakingRewardsInfo storage info */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1573  stakingRewardsInfoByStakingToken[stakingToken] */\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1559  stakingRewardsInfoByStakingToken */\n      0x04\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1573  stakingRewardsInfoByStakingToken[stakingToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1611  info.stakingRewards */\n      dup1\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1527:1573  stakingRewardsInfoByStakingToken[stakingToken] */\n      swap1\n      swap2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1611  info.stakingRewards */\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1592:1625  info.stakingRewards == address(0) */\n      iszero\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1584:1677  require(info.stakingRewards == address(0), 'StakingRewardsFactory::deploy: already deployed') */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a\n      0x2f\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1780:1792  rewardsToken */\n      sload(0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1720:1807  new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken) */\n      mload(0x40)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1773:1777  this */\n      address\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1780:1792  rewardsToken */\n      and\n      swap1\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1794:1806  stakingToken */\n      dup6\n      swap1\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1720:1807  new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken) */\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n      swap2\n      dup4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      swap1\n      swap2\n      and\n      0x40\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x60\n      add\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1690:1808  info.stakingRewards = address(new StakingRewards(/*_rewardsDistribution=*/ address(this), rewardsToken, stakingToken)) */\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      or\n      dup4\n      sstore\n      0x01\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1819:1836  info.rewardAmount */\n      swap3\n      dup4\n      add\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1819:1851  info.rewardAmount = rewardAmount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1862:1875  stakingTokens */\n      0x03\n        /* \"--CODEGEN--\":27:37   */\n      dup1\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      swap3\n      dup4\n      add\n        /* \"--CODEGEN--\":45:68   */\n      dup2\n      sstore\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1862:1894  stakingTokens.push(stakingToken) */\n      mstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":1408:1902  function deploy(address stakingToken, uint rewardAmount) public onlyOwner {\r... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":759:837  mapping(address => StakingRewardsInfo) public stakingRewardsInfoByStakingToken */\n    tag_23:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1599:1736  function renounceOwnership() public onlyOwner {... */\n    tag_25:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1025  isOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      jump\t// in\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1010:1064  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1697:1698  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1681:1687  _owner */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1660:1700  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1681:1687  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1660:1700  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1697:1698  0 */\n      dup4\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1660:1700  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1727:1728  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1710:1729  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1599:1736  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n    tag_28:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2557:2578  stakingRewardsGenesis */\n      sload(0x02)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2538:2553  block.timestamp */\n      timestamp\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2538:2578  block.timestamp >= stakingRewardsGenesis */\n      lt\n      iszero\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2530:2635  require(block.timestamp >= stakingRewardsGenesis, 'StakingRewardsFactory::notifyRewardAmount: not ready') */\n      tag_58\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x34\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf\n      0x34\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2728  stakingRewardsInfoByStakingToken[stakingToken] */\n      dup1\n      dup3\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2648:2679  StakingRewardsInfo storage info */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2728  stakingRewardsInfoByStakingToken[stakingToken] */\n      swap1\n      dup2\n      mstore\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2714  stakingRewardsInfoByStakingToken */\n      0x04\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2728  stakingRewardsInfoByStakingToken[stakingToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2747:2766  info.stakingRewards */\n      dup1\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2682:2728  stakingRewardsInfoByStakingToken[stakingToken] */\n      swap1\n      swap2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2747:2766  info.stakingRewards */\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2739:2840  require(info.stakingRewards != address(0), 'StakingRewardsFactory::notifyRewardAmount: not deployed') */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x37\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427\n      0x37\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2857:2874  info.rewardAmount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2857:2878  info.rewardAmount > 0 */\n      iszero\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2853:3264  if (info.rewardAmount > 0) {\r... */\n      tag_60\n      jumpi\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2915:2932  info.rewardAmount */\n      0x01\n      dup1\n      dup3\n      add\n      dup1\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2895:2912  uint rewardAmount */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2947:2968  info.rewardAmount = 0 */\n      swap2\n      dup3\n      swap1\n      sstore\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3018:3030  rewardsToken */\n      swap2\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3041:3060  info.stakingRewards */\n      dup4\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3041:3060  info.stakingRewards */\n      swap3\n      dup4\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup7\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3018:3030  rewardsToken */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3040  IERC20(rewardsToken).transfer */\n      0xa9059cbb\n      swap3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      0x44\n      dup1\n      dup3\n      add\n      swap4\n      0x20\n      swap4\n      swap1\n      swap3\n      dup4\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup3\n      swap1\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3018:3030  rewardsToken */\n      dup8\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_61\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_61:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_62\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_62:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3011:3075  IERC20(rewardsToken).transfer(info.stakingRewards, rewardAmount) */\n      mload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2985:3169  require(\r... */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089\n      0x3a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3199:3218  info.stakingRewards */\n      dup2\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x3c6b16ab)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3199:3218  info.stakingRewards */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3238  StakingRewards(info.stakingRewards).notifyRewardAmount */\n      0x3c6b16ab\n      swap2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3199:3218  info.stakingRewards */\n      0x00\n      swap3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3199:3218  info.stakingRewards */\n      dup4\n      dup8\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:7   */\n      dup1\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_65:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_66:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":3184:3252  StakingRewards(info.stakingRewards).notifyRewardAmount(rewardAmount) */\n      pop\n      pop\n      pop\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2853:3264  if (info.rewardAmount > 0) {\r... */\n      pop\n    tag_60:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2462:3271  function notifyRewardAmount(address stakingToken) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":814:891  function owner() public view returns (address) {... */\n    tag_30:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":852:859  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":878:884  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":814:891  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1165:1255  function isOwner() public view returns (bool) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1205:1209  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1242:1248  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1228:1238  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1228:1248  msg.sender == _owner */\n      eq\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1165:1255  function isOwner() public view returns (bool) {... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":403:436  uint public stakingRewardsGenesis */\n    tag_34:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2004:2288  function notifyRewardAmounts() public {\r... */\n    tag_36:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2061:2074  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2061:2081  stakingTokens.length */\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2053:2159  require(stakingTokens.length > 0, 'StakingRewardsFactory::notifyRewardAmounts: called before any deploys') */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x45\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb\n      0x45\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2175:2181  uint i */\n      0x00\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2170:2281  for (uint i = 0; i < stakingTokens.length; i++) {\r... */\n    tag_71:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2191:2204  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2191:2211  stakingTokens.length */\n      sload\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2187:2211  i < stakingTokens.length */\n      dup2\n      lt\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2170:2281  for (uint i = 0; i < stakingTokens.length; i++) {\r... */\n      iszero\n      tag_72\n      jumpi\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2233:2269  notifyRewardAmount(stakingTokens[i]) */\n      tag_74\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2252:2265  stakingTokens */\n      0x03\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2266:2267  i */\n      dup3\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2252:2268  stakingTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_75\n      jumpi\n      invalid\n    tag_75:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2233:2251  notifyRewardAmount */\n      tag_28\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2233:2269  notifyRewardAmount(stakingTokens[i]) */\n      jump\t// in\n    tag_74:\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2213:2216  i++ */\n      0x01\n      add\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2170:2281  for (uint i = 0; i < stakingTokens.length; i++) {\r... */\n      jump(tag_71)\n    tag_72:\n      pop\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":2004:2288  function notifyRewardAmounts() public {\r... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":369:396  address public rewardsToken */\n    tag_38:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1885:1992  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1025  isOwner */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1018:1027  isOwner() */\n      jump\t// in\n    tag_78:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1010:1064  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1957:1985  _transferOwnership(newOwner) */\n      tag_72\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":1976:1984  newOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2166:2188  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2158:2231  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2267:2273  _owner */\n      0x00\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2246:2284  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2267:2273  _owner */\n      swap3\n      and\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2246:2284  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2294:2300  _owner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2294:2311  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":2093:2318  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"liquidity-staker/StakingRewardsFactory.sol\":301:3274  contract StakingRewardsFactory is Ownable {\r... */\n    tag_50:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a 5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564\n    data_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973\n    data_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c6564\n    data_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74207265616479\n    data_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427 5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564\n\n    sub_0: assembly {\n            /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n          mstore(0x40, 0x80)\n            /* \"liquidity-staker/StakingRewards.sol\":1044:1045  0 */\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n          0x04\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1080:1081  0 */\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n          0x05\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1121:1128  30 days */\n          0x278d00\n            /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n          0x06\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1466:1750  constructor(\r... */\n          callvalue\n            /* \"--CODEGEN--\":8:17   */\n          dup1\n            /* \"--CODEGEN--\":5:7   */\n          iszero\n          tag_1\n          jumpi\n            /* \"--CODEGEN--\":30:31   */\n          0x00\n            /* \"--CODEGEN--\":27:28   */\n          dup1\n            /* \"--CODEGEN--\":20:32   */\n          revert\n            /* \"--CODEGEN--\":5:7   */\n        tag_1:\n            /* \"liquidity-staker/StakingRewards.sol\":1466:1750  constructor(\r... */\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          dup2\n          add\n          0x40\n          mstore\n            /* \"--CODEGEN--\":13:15   */\n          0x60\n            /* \"--CODEGEN--\":8:11   */\n          dup2\n            /* \"--CODEGEN--\":5:16   */\n          lt\n            /* \"--CODEGEN--\":2:4   */\n          iszero\n          tag_2\n          jumpi\n            /* \"--CODEGEN--\":29:30   */\n          0x00\n            /* \"--CODEGEN--\":26:27   */\n          dup1\n            /* \"--CODEGEN--\":19:31   */\n          revert\n            /* \"--CODEGEN--\":2:4   */\n        tag_2:\n          pop\n            /* \"liquidity-staker/StakingRewards.sol\":1466:1750  constructor(\r... */\n          dup1\n          mload\n          0x20\n          dup3\n          add\n          mload\n          0x40\n          swap1\n          swap3\n          add\n          mload\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":884:885  1 */\n          0x01\n            /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":868:885  _guardCounter = 1 */\n          dup1\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1606:1618  rewardsToken */\n          0x02\n            /* \"liquidity-staker/StakingRewards.sol\":1606:1642  rewardsToken = IERC20(_rewardsToken) */\n          dup1\n          sload\n          not(sub(shl(0xa0, 0x01), 0x01))\n          swap1\n          dup2\n          and\n          sub(shl(0xa0, 0x01), 0x01)\n          swap6\n          dup7\n          and\n          or\n          swap1\n          swap2\n          sstore\n            /* \"liquidity-staker/StakingRewards.sol\":1653:1665  stakingToken */\n          0x03\n            /* \"liquidity-staker/StakingRewards.sol\":1653:1689  stakingToken = IERC20(_stakingToken) */\n          dup1\n          sload\n          dup3\n          and\n          swap3\n          dup6\n          and\n          swap3\n          swap1\n          swap3\n          or\n          swap1\n          swap2\n          sstore\n          0x00\n            /* \"liquidity-staker/StakingRewards.sol\":1700:1742  rewardsDistribution = _rewardsDistribution */\n          dup1\n          sload\n          swap1\n          swap2\n          and\n          swap3\n          swap1\n          swap2\n          and\n          swap2\n          swap1\n          swap2\n          or\n          dup2\n          sstore\n          0x1262\n          swap1\n          dup2\n          swap1\n            /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n          dataOffset(sub_0)\n          swap1\n          codecopy\n          0x00\n          return\n        stop\n\n        sub_0: assembly {\n                /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n              mstore(0x40, 0x80)\n              callvalue\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_1\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_1:\n                /* \"liquidity-staker/StakingRewards.sol\":732:6401  contract StakingRewards is IStakingRewards, RewardsDistributionRecipient, ReentrancyGuard {\r... */\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x7b0a47ee\n              gt\n              tag_25\n              jumpi\n              dup1\n              0xcd3daf9d\n              gt\n              tag_26\n              jumpi\n              dup1\n              0xcd3daf9d\n              eq\n              tag_19\n              jumpi\n              dup1\n              0xd1af0c7d\n              eq\n              tag_20\n              jumpi\n              dup1\n              0xdf136d65\n              eq\n              tag_21\n              jumpi\n              dup1\n              0xe9fad8ee\n              eq\n              tag_22\n              jumpi\n              dup1\n              0xebe2b12b\n              eq\n              tag_23\n              jumpi\n              dup1\n              0xecd9ba82\n              eq\n              tag_24\n              jumpi\n              jump(tag_2)\n            tag_26:\n              dup1\n              0x7b0a47ee\n              eq\n              tag_14\n              jumpi\n              dup1\n              0x80faa57d\n              eq\n              tag_15\n              jumpi\n              dup1\n              0x8b876347\n              eq\n              tag_16\n              jumpi\n              dup1\n              0xa694fc3a\n              eq\n              tag_17\n              jumpi\n              dup1\n              0xc8f33c91\n              eq\n              tag_18\n              jumpi\n              jump(tag_2)\n            tag_25:\n              dup1\n              0x386a9525\n              gt\n              tag_27\n              jumpi\n              dup1\n              0x386a9525\n              eq\n              tag_8\n              jumpi\n              dup1\n              0x3c6b16ab\n              eq\n              tag_9\n              jumpi\n              dup1\n              0x3d18b912\n              eq\n              tag_10\n              jumpi\n              dup1\n              0x3fc6df6e\n              eq\n              tag_11\n              jumpi\n              dup1\n              0x70a08231\n              eq\n              tag_12\n              jumpi\n              dup1\n              0x72f702f3\n              eq\n              tag_13\n              jumpi\n              jump(tag_2)\n            tag_27:\n              dup1\n              0x8cc262\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x0700037d\n              eq\n              tag_4\n              jumpi\n              dup1\n              0x18160ddd\n              eq\n              tag_5\n              jumpi\n              dup1\n              0x1c1f78eb\n              eq\n              tag_6\n              jumpi\n              dup1\n              0x2e1a7d4d\n              eq\n              tag_7\n              jumpi\n            tag_2:\n              0x00\n              dup1\n              revert\n                /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n            tag_3:\n              tag_28\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_29\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_29:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n              calldataload\n              sub(shl(0xa0, 0x01), 0x01)\n              and\n              tag_30\n              jump\t// in\n            tag_28:\n              0x40\n              dup1\n              mload\n              swap2\n              dup3\n              mstore\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1279:1321  mapping(address => uint256) public rewards */\n            tag_4:\n              tag_28\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_32\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_32:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":1279:1321  mapping(address => uint256) public rewards */\n              calldataload\n              sub(shl(0xa0, 0x01), 0x01)\n              and\n              tag_33\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1799:1892  function totalSupply() external view returns (uint256) {\r... */\n            tag_5:\n              tag_28\n              tag_35\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2703:2824  function getRewardForDuration() external view returns (uint256) {\r... */\n            tag_6:\n              tag_28\n              tag_37\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n            tag_7:\n              tag_38\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_39\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_39:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n              calldataload\n              tag_40\n              jump\t// in\n            tag_38:\n              stop\n                /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n            tag_8:\n              tag_28\n              tag_42\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n            tag_9:\n              tag_38\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_44\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_44:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n              calldataload\n              tag_45\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":4194:4501  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n            tag_10:\n              tag_38\n              tag_47\n              jump\t// in\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n            tag_11:\n              tag_48\n              tag_49\n              jump\t// in\n            tag_48:\n              0x40\n              dup1\n              mload\n              0x01\n              dup1\n              0xa0\n              shl\n              sub\n              swap1\n              swap3\n              and\n              dup3\n              mstore\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              return\n                /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n            tag_12:\n              tag_28\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_51\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_51:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n              calldataload\n              sub(shl(0xa0, 0x01), 0x01)\n              and\n              tag_52\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n            tag_13:\n              tag_48\n              tag_54\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n            tag_14:\n              tag_28\n              tag_56\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2020:2151  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n            tag_15:\n              tag_28\n              tag_58\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1215:1272  mapping(address => uint256) public userRewardPerTokenPaid */\n            tag_16:\n              tag_28\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_60\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_60:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":1215:1272  mapping(address => uint256) public userRewardPerTokenPaid */\n              calldataload\n              sub(shl(0xa0, 0x01), 0x01)\n              and\n              tag_61\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":3452:3821  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_17:\n              tag_38\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_63\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_63:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3452:3821  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n              calldataload\n              tag_64\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1135:1164  uint256 public lastUpdateTime */\n            tag_18:\n              tag_28\n              tag_66\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2159:2489  function rewardPerToken() public view returns (uint256) {\r... */\n            tag_19:\n              tag_28\n              tag_68\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n            tag_20:\n              tag_48\n              tag_70\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1171:1206  uint256 public rewardPerTokenStored */\n            tag_21:\n              tag_28\n              tag_72\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":4509:4606  function exit() external {\r... */\n            tag_22:\n              tag_38\n              tag_74\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n            tag_23:\n              tag_28\n              tag_76\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_24:\n              tag_38\n              0x04\n              dup1\n              calldatasize\n              sub\n                /* \"--CODEGEN--\":13:16   */\n              0xa0\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:17   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_78\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_78:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n              dup1\n              calldataload\n              swap1\n              0x20\n              dup2\n              add\n              calldataload\n              swap1\n              0xff\n              0x40\n              dup3\n              add\n              calldataload\n              and\n              swap1\n              0x60\n              dup2\n              add\n              calldataload\n              swap1\n              0x80\n              add\n              calldataload\n              tag_79\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n            tag_30:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n              dup2\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":2551:2558  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":2670:2677  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":2622:2644  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":2622:2653  userRewardPerTokenPaid[account] */\n              swap1\n              swap3\n              mstore\n              dup3\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2687  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              tag_81\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":2670:2686  rewards[account] */\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2665  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n              tag_82\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2660:2664  1e18 */\n              0x0de0b6b3a7640000\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2655  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n              tag_83\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2654  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n              tag_84\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2617  rewardPerToken() */\n              tag_85\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2615  rewardPerToken */\n              tag_68\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2617  rewardPerToken() */\n              jump\t// in\n            tag_85:\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2621  rewardPerToken().sub */\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2654  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2621  rewardPerToken().sub */\n              tag_86\n                /* \"liquidity-staker/StakingRewards.sol\":2601:2654  rewardPerToken().sub(userRewardPerTokenPaid[account]) */\n              and\n              jump\t// in\n            tag_84:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2596  _balances[account] */\n              dup9\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2587  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2596  _balances[account] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2600  _balances[account].mul */\n              tag_87\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2655  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])) */\n              jump\t// in\n            tag_83:\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2659  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2665  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2659  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div */\n              tag_88\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2665  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18) */\n              and\n              jump\t// in\n            tag_82:\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2669  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2687  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2669  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":2578:2687  _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              and\n              jump\t// in\n            tag_81:\n                /* \"liquidity-staker/StakingRewards.sol\":2571:2687  return _balances[account].mul(rewardPerToken().sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n              swap3\n                /* \"liquidity-staker/StakingRewards.sol\":2497:2695  function earned(address account) public view returns (uint256) {\r... */\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1279:1321  mapping(address => uint256) public rewards */\n            tag_33:\n              mstore(0x20, 0x0a)\n              0x00\n              swap1\n              dup2\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1799:1892  function totalSupply() external view returns (uint256) {\r... */\n            tag_35:\n                /* \"liquidity-staker/StakingRewards.sol\":1872:1884  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":1799:1892  function totalSupply() external view returns (uint256) {\r... */\n            tag_90:\n              swap1\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2703:2824  function getRewardForDuration() external view returns (uint256) {\r... */\n            tag_37:\n                /* \"liquidity-staker/StakingRewards.sol\":2758:2765  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2785:2816  rewardRate.mul(rewardsDuration) */\n              tag_92\n                /* \"liquidity-staker/StakingRewards.sol\":2800:2815  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":2785:2795  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":2785:2799  rewardRate.mul */\n              tag_87\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2785:2816  rewardRate.mul(rewardsDuration) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_92:\n                /* \"liquidity-staker/StakingRewards.sol\":2778:2816  return rewardRate.mul(rewardsDuration) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2703:2824  function getRewardForDuration() external view returns (uint256) {\r... */\n              swap1\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n            tag_40:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup1\n              sload\n              dup2\n              add\n              swap1\n              dup2\n              swap1\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3896:3906  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              tag_95\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n              tag_68\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              jump\t// in\n            tag_95:\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              tag_96\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n              tag_58\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_96:\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n              sstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n              dup2\n              and\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n              tag_97\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              tag_98\n                /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n              tag_30\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              jump\t// in\n            tag_98:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              dup3\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n              swap4\n              swap1\n              swap4\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n              swap1\n              swap2\n              mstore\n              swap2\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n            tag_97:\n                /* \"liquidity-staker/StakingRewards.sol\":3936:3937  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3927:3933  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3927:3937  amount > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":3919:3959  require(amount > 0, \"Cannot withdraw 0\") */\n              tag_100\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x11\n              0x24\n              dup3\n              add\n              mstore\n              shl(0x7c, 0x043616e6e6f74207769746864726177203)\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_100:\n                /* \"liquidity-staker/StakingRewards.sol\":3985:3997  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":3985:4009  _totalSupply.sub(amount) */\n              tag_101\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4002:4008  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":3985:4009  _totalSupply.sub(amount) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":3985:4001  _totalSupply.sub */\n              tag_86\n                /* \"liquidity-staker/StakingRewards.sol\":3985:4009  _totalSupply.sub(amount) */\n              and\n              jump\t// in\n            tag_101:\n                /* \"liquidity-staker/StakingRewards.sol\":3970:3982  _totalSupply */\n              0x0b\n                /* \"liquidity-staker/StakingRewards.sol\":3970:4009  _totalSupply = _totalSupply.sub(amount) */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":4054:4064  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4065  _balances[msg.sender] */\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4053  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4065  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4077  _balances[msg.sender].sub(amount) */\n              tag_102\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4070:4076  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4077  _balances[msg.sender].sub(amount) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4069  _balances[msg.sender].sub */\n              tag_86\n                /* \"liquidity-staker/StakingRewards.sol\":4044:4077  _balances[msg.sender].sub(amount) */\n              and\n              jump\t// in\n            tag_102:\n                /* \"liquidity-staker/StakingRewards.sol\":4030:4040  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4020:4041  _balances[msg.sender] */\n              0x00\n              dup2\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":4020:4029  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":4020:4041  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":4020:4077  _balances[msg.sender] = _balances[msg.sender].sub(amount) */\n              swap2\n              swap1\n              swap2\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":4088:4100  stakingToken */\n              sload(0x03)\n                /* \"liquidity-staker/StakingRewards.sol\":4088:4133  stakingToken.safeTransfer(msg.sender, amount) */\n              tag_103\n              swap2\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":4088:4100  stakingToken */\n              swap1\n              swap2\n              and\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4126:4132  amount */\n              dup6\n                /* \"liquidity-staker/StakingRewards.sol\":4088:4113  stakingToken.safeTransfer */\n              tag_104\n                /* \"liquidity-staker/StakingRewards.sol\":4088:4133  stakingToken.safeTransfer(msg.sender, amount) */\n              jump\t// in\n            tag_103:\n                /* \"liquidity-staker/StakingRewards.sol\":4149:4178  Withdrawn(msg.sender, amount) */\n              0x40\n              dup1\n              mload\n              dup5\n              dup2\n              mstore\n              swap1\n              mload\n                /* \"liquidity-staker/StakingRewards.sol\":4159:4169  msg.sender */\n              caller\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":4149:4178  Withdrawn(msg.sender, amount) */\n              0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n              swap2\n              swap1\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              log2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_105\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1f\n              0x24\n              dup3\n              add\n              mstore\n              0x00\n              dup1\n              mload\n              0x20\n              data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n              dup4\n              codecopy\n              dup2\n              mload\n              swap2\n              mstore\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_105:\n                /* \"liquidity-staker/StakingRewards.sol\":3829:4186  function withdraw(uint256 amount) public nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1088:1128  uint256 public rewardsDuration = 30 days */\n            tag_42:\n              sload(0x06)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n            tag_45:\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":245:264  rewardsDistribution */\n              and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:241  msg.sender */\n              caller\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":231:264  msg.sender == rewardsDistribution */\n              eq\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":223:311  require(msg.sender == rewardsDistribution, \"Caller is not RewardsDistribution contract\") */\n              tag_107\n              jumpi\n              mload(0x40)\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x2a\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de\n              0x2a\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_107:\n                /* \"liquidity-staker/StakingRewards.sol\":4768:4769  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              tag_109\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n              tag_68\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              jump\t// in\n            tag_109:\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              tag_110\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n              tag_58\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_110:\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n              sstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n              dup2\n              and\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n              tag_111\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              tag_112\n                /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n              tag_30\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              jump\t// in\n            tag_112:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              dup3\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n              swap4\n              swap1\n              swap4\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n              swap1\n              swap2\n              mstore\n              swap2\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n            tag_111:\n                /* \"liquidity-staker/StakingRewards.sol\":4806:4818  periodFinish */\n              sload(0x04)\n                /* \"liquidity-staker/StakingRewards.sol\":4787:4802  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":4787:4818  block.timestamp >= periodFinish */\n              lt\n                /* \"liquidity-staker/StakingRewards.sol\":4783:5101  if (block.timestamp >= periodFinish) {\r... */\n              tag_114\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":4859:4874  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":4848:4875  reward.div(rewardsDuration) */\n              tag_115\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4848:4854  reward */\n              dup4\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4848:4875  reward.div(rewardsDuration) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":4848:4858  reward.div */\n              tag_88\n                /* \"liquidity-staker/StakingRewards.sol\":4848:4875  reward.div(rewardsDuration) */\n              and\n              jump\t// in\n            tag_115:\n                /* \"liquidity-staker/StakingRewards.sol\":4835:4845  rewardRate */\n              0x05\n                /* \"liquidity-staker/StakingRewards.sol\":4835:4875  rewardRate = reward.div(rewardsDuration) */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":4783:5101  if (block.timestamp >= periodFinish) {\r... */\n              jump(tag_116)\n            tag_114:\n                /* \"liquidity-staker/StakingRewards.sol\":4928:4940  periodFinish */\n              sload(0x04)\n                /* \"liquidity-staker/StakingRewards.sol\":4908:4925  uint256 remaining */\n              0x00\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4928:4961  periodFinish.sub(block.timestamp) */\n              tag_117\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4945:4960  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":4928:4961  periodFinish.sub(block.timestamp) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":4928:4944  periodFinish.sub */\n              tag_86\n                /* \"liquidity-staker/StakingRewards.sol\":4928:4961  periodFinish.sub(block.timestamp) */\n              and\n              jump\t// in\n            tag_117:\n                /* \"liquidity-staker/StakingRewards.sol\":4908:4961  uint256 remaining = periodFinish.sub(block.timestamp) */\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4976:4992  uint256 leftover */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4995:5020  remaining.mul(rewardRate) */\n              tag_118\n                /* \"liquidity-staker/StakingRewards.sol\":5009:5019  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":4995:5004  remaining */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":4995:5008  remaining.mul */\n              tag_87\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4995:5020  remaining.mul(rewardRate) */\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_118:\n                /* \"liquidity-staker/StakingRewards.sol\":5073:5088  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":4976:5020  uint256 leftover = remaining.mul(rewardRate) */\n              swap1\n              swap2\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5089  reward.add(leftover).div(rewardsDuration) */\n              tag_119\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5068  reward.add(leftover) */\n              tag_83\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5054  reward */\n              dup7\n                /* \"liquidity-staker/StakingRewards.sol\":4976:5020  uint256 leftover = remaining.mul(rewardRate) */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5068  reward.add(leftover) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5058  reward.add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5068  reward.add(leftover) */\n              and\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":5048:5089  reward.add(leftover).div(rewardsDuration) */\n            tag_119:\n                /* \"liquidity-staker/StakingRewards.sol\":5035:5045  rewardRate */\n              0x05\n                /* \"liquidity-staker/StakingRewards.sol\":5035:5089  rewardRate = reward.add(leftover).div(rewardsDuration) */\n              sstore\n              pop\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4783:5101  if (block.timestamp >= periodFinish) {\r... */\n            tag_116:\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5488  rewardsToken */\n              sload(0x02)\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              0x40\n              dup1\n              mload\n              shl(0xe0, 0x70a08231)\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":5507:5511  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              0x04\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              0x00\n              swap3\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5488  rewardsToken */\n              and\n              swap2\n              0x70a08231\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              0x24\n              dup1\n              dup4\n              add\n              swap3\n              0x20\n              swap3\n              swap2\n              swap1\n              dup3\n              swap1\n              sub\n              add\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5488  rewardsToken */\n              dup7\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              dup1\n              extcodesize\n              iszero\n                /* \"--CODEGEN--\":5:7   */\n              dup1\n              iszero\n              tag_121\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_121:\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              pop\n              gas\n              staticcall\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_122\n              jumpi\n                /* \"--CODEGEN--\":45:61   */\n              returndatasize\n                /* \"--CODEGEN--\":42:43   */\n              0x00\n                /* \"--CODEGEN--\":39:40   */\n              dup1\n                /* \"--CODEGEN--\":24:62   */\n              returndatacopy\n                /* \"--CODEGEN--\":77:93   */\n              returndatasize\n                /* \"--CODEGEN--\":74:75   */\n              0x00\n                /* \"--CODEGEN--\":67:94   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_122:\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              pop\n              pop\n              pop\n              pop\n              mload(0x40)\n              returndatasize\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_123\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_123:\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              mload\n                /* \"liquidity-staker/StakingRewards.sol\":5558:5573  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              swap1\n              swap2\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":5546:5574  balance.div(rewardsDuration) */\n              tag_124\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5476:5513  rewardsToken.balanceOf(address(this)) */\n              dup3\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5546:5574  balance.div(rewardsDuration) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":5546:5557  balance.div */\n              tag_88\n                /* \"liquidity-staker/StakingRewards.sol\":5546:5574  balance.div(rewardsDuration) */\n              and\n              jump\t// in\n            tag_124:\n                /* \"liquidity-staker/StakingRewards.sol\":5532:5542  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":5532:5574  rewardRate <= balance.div(rewardsDuration) */\n              gt\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5524:5603  require(rewardRate <= balance.div(rewardsDuration), \"Provided reward too high\") */\n              tag_125\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x18\n              0x24\n              dup3\n              add\n              mstore\n              0x50726f76696465642072657761726420746f6f20686967680000000000000000\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_125:\n                /* \"liquidity-staker/StakingRewards.sol\":5633:5648  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":5616:5630  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5616:5648  lastUpdateTime = block.timestamp */\n              dup2\n              swap1\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5694:5709  rewardsDuration */\n              sload(0x06)\n                /* \"liquidity-staker/StakingRewards.sol\":5674:5710  block.timestamp.add(rewardsDuration) */\n              tag_126\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":5633:5648  block.timestamp */\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":5674:5710  block.timestamp.add(rewardsDuration) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":5674:5693  block.timestamp.add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":5674:5710  block.timestamp.add(rewardsDuration) */\n              and\n              jump\t// in\n            tag_126:\n                /* \"liquidity-staker/StakingRewards.sol\":5659:5671  periodFinish */\n              0x04\n                /* \"liquidity-staker/StakingRewards.sol\":5659:5710  periodFinish = block.timestamp.add(rewardsDuration) */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5726:5745  RewardAdded(reward) */\n              0x40\n              dup1\n              mload\n              dup5\n              dup2\n              mstore\n              swap1\n              mload\n              0xde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d\n              swap2\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              log1\n                /* \"liquidity-staker/StakingRewards.sol\":6127:6128  _ */\n              pop\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":322:323  _ */\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":4670:5753  function notifyRewardAmount(uint256 reward) external onlyRewardsDistribution updateReward(address(0)) {\r... */\n              pop\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":4194:4501  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n            tag_47:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup1\n              sload\n              dup2\n              add\n              swap1\n              dup2\n              swap1\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":4248:4258  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              tag_129\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n              tag_68\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              jump\t// in\n            tag_129:\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              tag_130\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n              tag_58\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_130:\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n              sstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n              dup2\n              and\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n              tag_131\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              tag_132\n                /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n              tag_30\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              jump\t// in\n            tag_132:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              dup3\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n              swap4\n              swap1\n              swap4\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n              swap1\n              swap2\n              mstore\n              swap2\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n            tag_131:\n                /* \"liquidity-staker/StakingRewards.sol\":4296:4306  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4271:4285  uint256 reward */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4288:4307  rewards[msg.sender] */\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":4288:4295  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":4288:4307  rewards[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":4322:4332  reward > 0 */\n              dup1\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":4318:4494  if (reward > 0) {\r... */\n              tag_134\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":4357:4367  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4371:4372  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":4349:4368  rewards[msg.sender] */\n              dup2\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":4349:4356  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":4349:4368  rewards[msg.sender] */\n              0x20\n              mstore\n              0x40\n              dup2\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":4349:4372  rewards[msg.sender] = 0 */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":4387:4399  rewardsToken */\n              sload(0x02)\n                /* \"liquidity-staker/StakingRewards.sol\":4387:4432  rewardsToken.safeTransfer(msg.sender, reward) */\n              tag_135\n              swap2\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":4387:4399  rewardsToken */\n              swap1\n              swap2\n              and\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4425:4431  reward */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":4387:4412  rewardsToken.safeTransfer */\n              tag_104\n                /* \"liquidity-staker/StakingRewards.sol\":4387:4432  rewardsToken.safeTransfer(msg.sender, reward) */\n              jump\t// in\n            tag_135:\n                /* \"liquidity-staker/StakingRewards.sol\":4452:4482  RewardPaid(msg.sender, reward) */\n              0x40\n              dup1\n              mload\n              dup3\n              dup2\n              mstore\n              swap1\n              mload\n                /* \"liquidity-staker/StakingRewards.sol\":4463:4473  msg.sender */\n              caller\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":4452:4482  RewardPaid(msg.sender, reward) */\n              0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n              swap2\n              swap1\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              log2\n                /* \"liquidity-staker/StakingRewards.sol\":4318:4494  if (reward > 0) {\r... */\n            tag_134:\n                /* \"liquidity-staker/StakingRewards.sol\":6127:6128  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_136\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1f\n              0x24\n              dup3\n              add\n              mstore\n              0x00\n              dup1\n              mload\n              0x20\n              data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n              dup4\n              codecopy\n              dup2\n              mload\n              swap2\n              mstore\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_136:\n                /* \"liquidity-staker/StakingRewards.sol\":4194:4501  function getReward() public nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              jump\t// out\n                /* \"liquidity-staker/RewardsDistributionRecipient.sol\":73:107  address public rewardsDistribution */\n            tag_49:\n              and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n            tag_52:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":1986:2004  _balances[account] */\n              and\n                /* \"liquidity-staker/StakingRewards.sol\":1959:1966  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":1986:2004  _balances[account] */\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":1986:1995  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":1986:2004  _balances[account] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":1900:2012  function balanceOf(address account) external view returns (uint256) {\r... */\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":981:1007  IERC20 public stakingToken */\n            tag_54:\n              and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1052:1081  uint256 public rewardRate = 0 */\n            tag_56:\n              sload(0x05)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2020:2151  function lastTimeRewardApplicable() public view returns (uint256) {\r... */\n            tag_58:\n                /* \"liquidity-staker/StakingRewards.sol\":2077:2084  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2104:2143  Math.min(block.timestamp, periodFinish) */\n              tag_92\n                /* \"liquidity-staker/StakingRewards.sol\":2113:2128  block.timestamp */\n              timestamp\n                /* \"liquidity-staker/StakingRewards.sol\":2130:2142  periodFinish */\n              sload(0x04)\n                /* \"liquidity-staker/StakingRewards.sol\":2104:2112  Math.min */\n              tag_140\n                /* \"liquidity-staker/StakingRewards.sol\":2104:2143  Math.min(block.timestamp, periodFinish) */\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":1215:1272  mapping(address => uint256) public userRewardPerTokenPaid */\n            tag_61:\n              mstore(0x20, 0x09)\n              0x00\n              swap1\n              dup2\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":3452:3821  function stake(uint256 amount) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_64:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup1\n              sload\n              dup2\n              add\n              swap1\n              dup2\n              swap1\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3518:3528  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              tag_143\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n              tag_68\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              jump\t// in\n            tag_143:\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              tag_144\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n              tag_58\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_144:\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n              sstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n              dup2\n              and\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n              tag_145\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              tag_146\n                /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n              tag_30\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              jump\t// in\n            tag_146:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              dup3\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n              swap4\n              swap1\n              swap4\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n              swap1\n              swap2\n              mstore\n              swap2\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n            tag_145:\n                /* \"liquidity-staker/StakingRewards.sol\":3558:3559  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3549:3555  amount */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3549:3559  amount > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":3541:3578  require(amount > 0, \"Cannot stake 0\") */\n              tag_148\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x0e\n              0x24\n              dup3\n              add\n              mstore\n              shl(0x94, 0x043616e6e6f74207374616b65203)\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_148:\n                /* \"liquidity-staker/StakingRewards.sol\":3604:3616  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":3604:3628  _totalSupply.add(amount) */\n              tag_149\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3621:3627  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":3604:3628  _totalSupply.add(amount) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":3604:3620  _totalSupply.add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":3604:3628  _totalSupply.add(amount) */\n              and\n              jump\t// in\n            tag_149:\n                /* \"liquidity-staker/StakingRewards.sol\":3589:3601  _totalSupply */\n              0x0b\n                /* \"liquidity-staker/StakingRewards.sol\":3589:3628  _totalSupply = _totalSupply.add(amount) */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3673:3683  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3684  _balances[msg.sender] */\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3672  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3684  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3696  _balances[msg.sender].add(amount) */\n              tag_150\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3689:3695  amount */\n              dup5\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3696  _balances[msg.sender].add(amount) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3688  _balances[msg.sender].add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":3663:3696  _balances[msg.sender].add(amount) */\n              and\n              jump\t// in\n            tag_150:\n                /* \"liquidity-staker/StakingRewards.sol\":3649:3659  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3639:3660  _balances[msg.sender] */\n              0x00\n              dup2\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":3639:3648  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3639:3660  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":3639:3696  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n              swap2\n              swap1\n              swap2\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3707:3719  stakingToken */\n              sload(0x03)\n                /* \"liquidity-staker/StakingRewards.sol\":3707:3771  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              tag_151\n              swap2\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":3707:3719  stakingToken */\n              swap1\n              swap2\n              and\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3757:3761  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":3764:3770  amount */\n              dup7\n                /* \"liquidity-staker/StakingRewards.sol\":3707:3736  stakingToken.safeTransferFrom */\n              tag_152\n                /* \"liquidity-staker/StakingRewards.sol\":3707:3771  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              jump\t// in\n            tag_151:\n                /* \"liquidity-staker/StakingRewards.sol\":3787:3813  Staked(msg.sender, amount) */\n              0x40\n              dup1\n              mload\n              dup5\n              dup2\n              mstore\n              swap1\n              mload\n                /* \"liquidity-staker/StakingRewards.sol\":3794:3804  msg.sender */\n              caller\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":3787:3813  Staked(msg.sender, amount) */\n              0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n              swap2\n              swap1\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              log2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_105\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1f\n              0x24\n              dup3\n              add\n              mstore\n              0x00\n              dup1\n              mload\n              0x20\n              data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n              dup4\n              codecopy\n              dup2\n              mload\n              swap2\n              mstore\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n                /* \"liquidity-staker/StakingRewards.sol\":1135:1164  uint256 public lastUpdateTime */\n            tag_66:\n              sload(0x07)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2159:2489  function rewardPerToken() public view returns (uint256) {\r... */\n            tag_68:\n                /* \"liquidity-staker/StakingRewards.sol\":2206:2213  uint256 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2230:2242  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":2246:2247  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":2230:2247  _totalSupply == 0 */\n              eq\n                /* \"liquidity-staker/StakingRewards.sol\":2226:2303  if (_totalSupply == 0) {\r... */\n              iszero\n              tag_155\n              jumpi\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":2271:2291  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":2264:2291  return rewardPerTokenStored */\n              jump(tag_90)\n                /* \"liquidity-staker/StakingRewards.sol\":2226:2303  if (_totalSupply == 0) {\r... */\n            tag_155:\n                /* \"liquidity-staker/StakingRewards.sol\":2333:2481  rewardPerTokenStored.add(\r... */\n              tag_92\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2466  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n              tag_157\n                /* \"liquidity-staker/StakingRewards.sol\":2453:2465  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2448  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n              tag_83\n                /* \"liquidity-staker/StakingRewards.sol\":2443:2447  1e18 */\n              0x0de0b6b3a7640000\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2438  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n              tag_160\n                /* \"liquidity-staker/StakingRewards.sol\":2427:2437  rewardRate */\n              sload(0x05)\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2422  lastTimeRewardApplicable().sub(lastUpdateTime) */\n              tag_160\n                /* \"liquidity-staker/StakingRewards.sol\":2407:2421  lastUpdateTime */\n              sload(0x07)\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2402  lastTimeRewardApplicable() */\n              tag_85\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2400  lastTimeRewardApplicable */\n              tag_58\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2402  lastTimeRewardApplicable() */\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2422  lastTimeRewardApplicable().sub(lastUpdateTime) */\n            tag_160:\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2426  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2438  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2426  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n              tag_87\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2438  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n              and\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":2376:2466  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalSupply) */\n            tag_157:\n                /* \"liquidity-staker/StakingRewards.sol\":2333:2353  rewardPerTokenStored */\n              sload(0x08)\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":2333:2481  rewardPerTokenStored.add(\r... */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":2333:2357  rewardPerTokenStored.add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":2333:2481  rewardPerTokenStored.add(\r... */\n              and\n              jump\t// in\n                /* \"liquidity-staker/StakingRewards.sol\":948:974  IERC20 public rewardsToken */\n            tag_70:\n              and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1171:1206  uint256 public rewardPerTokenStored */\n            tag_72:\n              sload(0x08)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":4509:4606  function exit() external {\r... */\n            tag_74:\n                /* \"liquidity-staker/StakingRewards.sol\":4564:4574  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":4554:4575  _balances[msg.sender] */\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":4554:4563  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":4554:4575  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":4545:4576  withdraw(_balances[msg.sender]) */\n              tag_163\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":4545:4553  withdraw */\n              tag_40\n                /* \"liquidity-staker/StakingRewards.sol\":4545:4576  withdraw(_balances[msg.sender]) */\n              jump\t// in\n            tag_163:\n                /* \"liquidity-staker/StakingRewards.sol\":4587:4598  getReward() */\n              tag_164\n                /* \"liquidity-staker/StakingRewards.sol\":4587:4596  getReward */\n              tag_47\n                /* \"liquidity-staker/StakingRewards.sol\":4587:4598  getReward() */\n              jump\t// in\n            tag_164:\n                /* \"liquidity-staker/StakingRewards.sol\":4509:4606  function exit() external {\r... */\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":1014:1045  uint256 public periodFinish = 0 */\n            tag_76:\n              sload(0x04)\n              dup2\n              jump\t// out\n                /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n            tag_79:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1318:1319  1 */\n              0x01\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1301:1319  _guardCounter += 1 */\n              dup1\n              sload\n              dup2\n              add\n              swap1\n              dup2\n              swap1\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3008:3018  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              tag_167\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5893  rewardPerToken */\n              tag_68\n                /* \"liquidity-staker/StakingRewards.sol\":5879:5895  rewardPerToken() */\n              jump\t// in\n            tag_167:\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5876  rewardPerTokenStored */\n              0x08\n                /* \"liquidity-staker/StakingRewards.sol\":5856:5895  rewardPerTokenStored = rewardPerToken() */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              tag_168\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5947  lastTimeRewardApplicable */\n              tag_58\n                /* \"liquidity-staker/StakingRewards.sol\":5923:5949  lastTimeRewardApplicable() */\n              jump\t// in\n            tag_168:\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5920  lastUpdateTime */\n              0x07\n                /* \"liquidity-staker/StakingRewards.sol\":5906:5949  lastUpdateTime = lastTimeRewardApplicable() */\n              sstore\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":5964:5985  account != address(0) */\n              dup2\n              and\n              iszero\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n              tag_169\n              jumpi\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              tag_170\n                /* \"liquidity-staker/StakingRewards.sol\":6028:6035  account */\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6027  earned */\n              tag_30\n                /* \"liquidity-staker/StakingRewards.sol\":6021:6036  earned(account) */\n              jump\t// in\n            tag_170:\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              dup3\n              and\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6009  rewards */\n              0x0a\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6018  rewards[account] */\n              0x20\n              swap1\n              dup2\n              mstore\n              0x40\n              dup1\n              dup4\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6002:6036  rewards[account] = earned(account) */\n              swap4\n              swap1\n              swap4\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":6085:6105  rewardPerTokenStored */\n              sload(0x08)\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6073  userRewardPerTokenPaid */\n              0x09\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6082  userRewardPerTokenPaid[account] */\n              swap1\n              swap2\n              mstore\n              swap2\n              swap1\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":6051:6105  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":5960:6117  if (account != address(0)) {\r... */\n            tag_169:\n                /* \"liquidity-staker/StakingRewards.sol\":3048:3049  0 */\n              0x00\n                /* \"liquidity-staker/StakingRewards.sol\":3039:3045  amount */\n              dup8\n                /* \"liquidity-staker/StakingRewards.sol\":3039:3049  amount > 0 */\n              gt\n                /* \"liquidity-staker/StakingRewards.sol\":3031:3068  require(amount > 0, \"Cannot stake 0\") */\n              tag_172\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x0e\n              0x24\n              dup3\n              add\n              mstore\n              shl(0x94, 0x043616e6e6f74207374616b65203)\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_172:\n                /* \"liquidity-staker/StakingRewards.sol\":3094:3106  _totalSupply */\n              sload(0x0b)\n                /* \"liquidity-staker/StakingRewards.sol\":3094:3118  _totalSupply.add(amount) */\n              tag_173\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3111:3117  amount */\n              dup9\n                /* \"liquidity-staker/StakingRewards.sol\":3094:3118  _totalSupply.add(amount) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":3094:3110  _totalSupply.add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":3094:3118  _totalSupply.add(amount) */\n              and\n              jump\t// in\n            tag_173:\n                /* \"liquidity-staker/StakingRewards.sol\":3079:3091  _totalSupply */\n              0x0b\n                /* \"liquidity-staker/StakingRewards.sol\":3079:3118  _totalSupply = _totalSupply.add(amount) */\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3163:3173  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3174  _balances[msg.sender] */\n              0x00\n              swap1\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3162  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3174  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              swap1\n              keccak256\n              sload\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3186  _balances[msg.sender].add(amount) */\n              tag_174\n              swap1\n                /* \"liquidity-staker/StakingRewards.sol\":3179:3185  amount */\n              dup9\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3186  _balances[msg.sender].add(amount) */\n              0xffffffff\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3178  _balances[msg.sender].add */\n              tag_89\n                /* \"liquidity-staker/StakingRewards.sol\":3153:3186  _balances[msg.sender].add(amount) */\n              and\n              jump\t// in\n            tag_174:\n                /* \"liquidity-staker/StakingRewards.sol\":3139:3149  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n              0x00\n              dup2\n              dup2\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":3129:3138  _balances */\n              0x0c\n                /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n              0x20\n              mstore\n              0x40\n              dup1\n              dup3\n              keccak256\n                /* \"liquidity-staker/StakingRewards.sol\":3129:3186  _balances[msg.sender] = _balances[msg.sender].add(amount) */\n              swap4\n              swap1\n              swap4\n              sstore\n                /* \"liquidity-staker/StakingRewards.sol\":3242:3254  stakingToken */\n              sload(0x03)\n                /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              dup4\n              mload\n              shl(0xe0, 0xd505accf)\n              dup2\n              mstore\n              0x04\n              dup2\n              add\n              swap4\n              swap1\n              swap4\n              mstore\n                /* \"liquidity-staker/StakingRewards.sol\":3284:3288  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              0x24\n              dup5\n              add\n              mstore\n              0x44\n              dup4\n              add\n              dup12\n              swap1\n              mstore\n              0x64\n              dup4\n              add\n              dup11\n              swap1\n              mstore\n              0xff\n              dup10\n              and\n              0x84\n              dup5\n              add\n              mstore\n              0xa4\n              dup4\n              add\n              dup9\n              swap1\n              mstore\n              0xc4\n              dup4\n              add\n              dup8\n              swap1\n              mstore\n              swap3\n              mload\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":3242:3254  stakingToken */\n              swap1\n              swap4\n              and\n              swap3\n              0xd505accf\n              swap3\n                /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              0xe4\n              dup1\n              dup3\n              add\n              swap4\n                /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n              swap3\n                /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              swap2\n              dup3\n              swap1\n              sub\n              add\n              dup2\n                /* \"liquidity-staker/StakingRewards.sol\":3129:3150  _balances[msg.sender] */\n              dup4\n                /* \"liquidity-staker/StakingRewards.sol\":3242:3254  stakingToken */\n              dup8\n                /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              dup1\n              extcodesize\n              iszero\n                /* \"--CODEGEN--\":5:7   */\n              dup1\n              iszero\n              tag_175\n              jumpi\n                /* \"--CODEGEN--\":30:31   */\n              0x00\n                /* \"--CODEGEN--\":27:28   */\n              dup1\n                /* \"--CODEGEN--\":20:32   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_175:\n                /* \"liquidity-staker/StakingRewards.sol\":3218:3317  IUniswapV2ERC20(address(stakingToken)).permit(msg.sender, address(this), amount, deadline, v, r, s) */\n              pop\n              gas\n              call\n              iszero\n                /* \"--CODEGEN--\":8:17   */\n              dup1\n                /* \"--CODEGEN--\":5:7   */\n              iszero\n              tag_176\n              jumpi\n                /* \"--CODEGEN--\":45:61   */\n              returndatasize\n                /* \"--CODEGEN--\":42:43   */\n              0x00\n                /* \"--CODEGEN--\":39:40   */\n              dup1\n                /* \"--CODEGEN--\":24:62   */\n              returndatacopy\n                /* \"--CODEGEN--\":77:93   */\n              returndatasize\n                /* \"--CODEGEN--\":74:75   */\n              0x00\n                /* \"--CODEGEN--\":67:94   */\n              revert\n                /* \"--CODEGEN--\":5:7   */\n            tag_176:\n              pop\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3330:3342  stakingToken */\n              sload(0x03)\n                /* \"liquidity-staker/StakingRewards.sol\":3330:3394  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              tag_177\n              swap3\n              pop\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"liquidity-staker/StakingRewards.sol\":3330:3342  stakingToken */\n              and\n              swap1\n              pop\n                /* \"liquidity-staker/StakingRewards.sol\":3360:3370  msg.sender */\n              caller\n                /* \"liquidity-staker/StakingRewards.sol\":3380:3384  this */\n              address\n                /* \"liquidity-staker/StakingRewards.sol\":3387:3393  amount */\n              dup11\n                /* \"liquidity-staker/StakingRewards.sol\":3330:3359  stakingToken.safeTransferFrom */\n              tag_152\n                /* \"liquidity-staker/StakingRewards.sol\":3330:3394  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n              jump\t// in\n            tag_177:\n                /* \"liquidity-staker/StakingRewards.sol\":3410:3436  Staked(msg.sender, amount) */\n              0x40\n              dup1\n              mload\n              dup9\n              dup2\n              mstore\n              swap1\n              mload\n                /* \"liquidity-staker/StakingRewards.sol\":3417:3427  msg.sender */\n              caller\n              swap2\n                /* \"liquidity-staker/StakingRewards.sol\":3410:3436  Staked(msg.sender, amount) */\n              0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n              swap2\n              swap1\n              dup2\n              swap1\n              sub\n              0x20\n              add\n              swap1\n              log2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1375:1376  _ */\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1410:1423  _guardCounter */\n              sload(0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1406  localCounter */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1394:1423  localCounter == _guardCounter */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":1386:1459  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n              tag_178\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1f\n              0x24\n              dup3\n              add\n              mstore\n              0x00\n              dup1\n              mload\n              0x20\n              data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c\n              dup4\n              codecopy\n              dup2\n              mload\n              swap2\n              mstore\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_178:\n                /* \"liquidity-staker/StakingRewards.sol\":2886:3444  function stakeWithPermit(uint256 amount, uint deadline, uint8 v, bytes32 r, bytes32 s) external nonReentrant updateReward(msg.sender) {\r... */\n              pop\n              pop\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_86:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1364:1365  a */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1360  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1359:1365  b <= a */\n              gt\n              iszero\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1351:1400  require(b <= a, \"SafeMath: subtraction overflow\") */\n              tag_180\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1e\n              0x24\n              dup3\n              add\n              mstore\n              0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_180:\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1422:1427  a - b */\n              swap1\n              sub\n              swap1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1274:1453  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_87:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1751:1758  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1992:1998  a == 0 */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n              tag_182\n              jumpi\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2021:2022  0 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2014:2022  return 0 */\n              jump(tag_81)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1988:2033  if (a == 0) {... */\n            tag_182:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2060  a * b */\n              dup3\n              dup3\n              mul\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2059:2060  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2056  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2060  a * b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2055:2056  a */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2083  c / a */\n              tag_183\n              jumpi\n              invalid\n            tag_183:\n              div\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2078:2088  c / a == b */\n              eq\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2070:2126  require(c / a == b, \"SafeMath: multiplication overflow\") */\n              tag_184\n              jumpi\n              mload(0x40)\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x21\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n              0x21\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n            tag_184:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2144:2145  c */\n              swap4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":1693:2152  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              swap3\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_88:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2665:2672  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2762:2763  0 */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2759  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2758:2763  b > 0 */\n              gt\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2750:2794  require(b > 0, \"SafeMath: division by zero\") */\n              tag_186\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1a\n              0x24\n              dup3\n              add\n              mstore\n              0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_186:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2804:2813  uint256 c */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2820:2821  b */\n              dup3\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2817  a */\n              dup5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2816:2821  a / b */\n              dup2\n              tag_187\n              jumpi\n              invalid\n            tag_187:\n              div\n              swap5\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":2607:2933  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              swap4\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_89:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":923:928  a + b */\n              dup3\n              dup3\n              add\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n              dup4\n              dup2\n              lt\n              iszero\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n              tag_184\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1b\n              0x24\n              dup3\n              add\n              mstore\n              0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n            tag_104:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n              0x40\n              dup1\n              mload\n              sub(shl(0xa0, 0x01), 0x01)\n              dup5\n              and\n              0x24\n              dup3\n              add\n              mstore\n              0x44\n              dup1\n              dup3\n              add\n              dup5\n              swap1\n              mstore\n              dup3\n              mload\n                /* \"--CODEGEN--\":26:47   */\n              dup1\n              dup4\n              sub\n                /* \"--CODEGEN--\":22:54   */\n              swap1\n              swap2\n              add\n                /* \"--CODEGEN--\":6:55   */\n              dup2\n              mstore\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n              0x64\n              swap1\n              swap2\n              add\n              swap1\n              swap2\n              mstore\n              0x20\n                /* \"--CODEGEN--\":25:43   */\n              dup2\n              add\n                /* \"--CODEGEN--\":61:78   */\n              dup1\n              mload\n              sub(shl(0xe0, 0x01), 0x01)\n                /* \"--CODEGEN--\":182:197   */\n              and\n              shl(0xe0, 0xa9059cbb)\n                /* \"--CODEGEN--\":179:208   */\n              or\n                /* \"--CODEGEN--\":160:209   */\n              swap1\n              mstore\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n              tag_191\n              swap1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n              dup5\n              swap1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n              tag_192\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n              jump\t// in\n            tag_191:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n            tag_140:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":416:423  uint256 */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":446:447  b */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:443  a */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:447  a < b */\n              lt\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n              tag_194\n              jumpi\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":454:455  b */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":442:455  a < b ? a : b */\n              jump(tag_184)\n            tag_194:\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":450:451  a */\n              swap1\n              swap2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":435:455  return a < b ? a : b */\n              swap1\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":358:462  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n            tag_152:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n              0x40\n              dup1\n              mload\n              sub(shl(0xa0, 0x01), 0x01)\n              dup6\n              dup2\n              and\n              0x24\n              dup4\n              add\n              mstore\n              dup5\n              and\n              0x44\n              dup3\n              add\n              mstore\n              0x64\n              dup1\n              dup3\n              add\n              dup5\n              swap1\n              mstore\n              dup3\n              mload\n                /* \"--CODEGEN--\":26:47   */\n              dup1\n              dup4\n              sub\n                /* \"--CODEGEN--\":22:54   */\n              swap1\n              swap2\n              add\n                /* \"--CODEGEN--\":6:55   */\n              dup2\n              mstore\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n              0x84\n              swap1\n              swap2\n              add\n              swap1\n              swap2\n              mstore\n              0x20\n                /* \"--CODEGEN--\":25:43   */\n              dup2\n              add\n                /* \"--CODEGEN--\":61:78   */\n              dup1\n              mload\n              sub(shl(0xe0, 0x01), 0x01)\n                /* \"--CODEGEN--\":182:197   */\n              and\n              shl(0xe0, 0x23b872dd)\n                /* \"--CODEGEN--\":179:208   */\n              or\n                /* \"--CODEGEN--\":160:209   */\n              swap1\n              mstore\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n              tag_197\n              swap1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":961:966  token */\n              dup6\n              swap1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:960  callOptionalReturn */\n              tag_192\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n              jump\t// in\n            tag_197:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":2621:3716  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n            tag_192:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n              tag_199\n              sub(shl(0xa0, 0x01), 0x01)\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3241  address(token).isContract */\n              dup4\n              and\n              tag_200\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3216:3243  address(token).isContract() */\n              jump\t// in\n            tag_199:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3208:3279  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n              tag_201\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              mstore\n              0x1f\n              0x24\n              dup3\n              add\n              mstore\n              0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_201:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3350:3362  bool success */\n              0x00\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3364:3387  bytes memory returndata */\n              0x60\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3399:3404  token */\n              dup4\n              0x01\n              dup1\n              0xa0\n              shl\n              sub\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3410  address(token).call */\n              and\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3411:3415  data */\n              dup4\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n              mload(0x40)\n              dup1\n              dup3\n              dup1\n              mload\n              swap1\n              0x20\n              add\n              swap1\n              dup1\n              dup4\n              dup4\n                /* \"--CODEGEN--\":36:189   */\n            tag_202:\n                /* \"--CODEGEN--\":66:68   */\n              0x20\n                /* \"--CODEGEN--\":61:64   */\n              dup4\n                /* \"--CODEGEN--\":58:69   */\n              lt\n                /* \"--CODEGEN--\":36:189   */\n              tag_204\n              jumpi\n                /* \"--CODEGEN--\":176:186   */\n              dup1\n              mload\n                /* \"--CODEGEN--\":164:187   */\n              dup3\n              mstore\n              not(0x1f)\n                /* \"--CODEGEN--\":139:151   */\n              swap1\n              swap3\n              add\n              swap2\n                /* \"--CODEGEN--\":98:100   */\n              0x20\n                /* \"--CODEGEN--\":89:101   */\n              swap2\n              dup3\n              add\n              swap2\n                /* \"--CODEGEN--\":114:126   */\n              add\n                /* \"--CODEGEN--\":36:189   */\n              jump(tag_202)\n            tag_204:\n                /* \"--CODEGEN--\":274:275   */\n              0x01\n                /* \"--CODEGEN--\":267:270   */\n              dup4\n                /* \"--CODEGEN--\":263:265   */\n              0x20\n                /* \"--CODEGEN--\":259:271   */\n              sub\n                /* \"--CODEGEN--\":254:257   */\n              0x0100\n                /* \"--CODEGEN--\":250:272   */\n              exp\n                /* \"--CODEGEN--\":246:276   */\n              sub\n                /* \"--CODEGEN--\":315:319   */\n              dup1\n                /* \"--CODEGEN--\":311:320   */\n              not\n                /* \"--CODEGEN--\":305:308   */\n              dup3\n                /* \"--CODEGEN--\":299:309   */\n              mload\n                /* \"--CODEGEN--\":295:321   */\n              and\n                /* \"--CODEGEN--\":356:360   */\n              dup2\n                /* \"--CODEGEN--\":350:353   */\n              dup5\n                /* \"--CODEGEN--\":344:354   */\n              mload\n                /* \"--CODEGEN--\":340:361   */\n              and\n                /* \"--CODEGEN--\":389:396   */\n              dup1\n                /* \"--CODEGEN--\":380:387   */\n              dup3\n                /* \"--CODEGEN--\":377:397   */\n              or\n                /* \"--CODEGEN--\":372:375   */\n              dup6\n                /* \"--CODEGEN--\":365:398   */\n              mstore\n                /* \"--CODEGEN--\":3:402   */\n              pop\n              pop\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3391:3416  address(token).call(data) */\n              pop\n              pop\n              pop\n              swap1\n              pop\n              add\n              swap2\n              pop\n              pop\n              0x00\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              0x00\n              dup7\n              gas\n              call\n              swap2\n              pop\n              pop\n              returndatasize\n                /* \"--CODEGEN--\":14:15   */\n              dup1\n                /* \"--CODEGEN--\":21:22   */\n              0x00\n                /* \"--CODEGEN--\":16:47   */\n              dup2\n              eq\n              tag_206\n              jumpi\n                /* \"--CODEGEN--\":75:79   */\n              0x40\n                /* \"--CODEGEN--\":69:80   */\n              mload\n                /* \"--CODEGEN--\":64:80   */\n              swap2\n              pop\n                /* \"--CODEGEN--\":144:148   */\n              0x1f\n                /* \"--CODEGEN--\":140:149   */\n              not\n                /* \"--CODEGEN--\":133:137   */\n              0x3f\n                /* \"--CODEGEN--\":115:131   */\n              returndatasize\n                /* \"--CODEGEN--\":111:138   */\n              add\n                /* \"--CODEGEN--\":107:150   */\n              and\n                /* \"--CODEGEN--\":104:105   */\n              dup3\n                /* \"--CODEGEN--\":100:151   */\n              add\n                /* \"--CODEGEN--\":94:98   */\n              0x40\n                /* \"--CODEGEN--\":87:152   */\n              mstore\n                /* \"--CODEGEN--\":169:185   */\n              returndatasize\n                /* \"--CODEGEN--\":166:167   */\n              dup3\n                /* \"--CODEGEN--\":159:186   */\n              mstore\n                /* \"--CODEGEN--\":225:241   */\n              returndatasize\n                /* \"--CODEGEN--\":222:223   */\n              0x00\n                /* \"--CODEGEN--\":215:219   */\n              0x20\n                /* \"--CODEGEN--\":212:213   */\n              dup5\n                /* \"--CODEGEN--\":208:220   */\n              add\n                /* \"--CODEGEN--\":193:242   */\n              returndatacopy\n                /* \"--CODEGEN--\":7:249   */\n              jump(tag_205)\n                /* \"--CODEGEN--\":16:47   */\n            tag_206:\n                /* \"--CODEGEN--\":36:40   */\n              0x60\n                /* \"--CODEGEN--\":31:40   */\n              swap2\n              pop\n                /* \"--CODEGEN--\":7:249   */\n            tag_205:\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3349:3416  (bool success, bytes memory returndata) = address(token).call(data) */\n              swap2\n              pop\n              swap2\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3434:3441  success */\n              dup2\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3426:3478  require(success, \"SafeERC20: low-level call failed\") */\n              tag_207\n              jumpi\n              0x40\n              dup1\n              mload\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x20\n              0x04\n              dup3\n              add\n              dup2\n              swap1\n              mstore\n              0x24\n              dup3\n              add\n              mstore\n              0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n              0x44\n              dup3\n              add\n              mstore\n              swap1\n              mload\n              swap1\n              dup2\n              swap1\n              sub\n              0x64\n              add\n              swap1\n              revert\n            tag_207:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3510  returndata.length */\n              dup1\n              mload\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3493:3514  returndata.length > 0 */\n              iszero\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3489:3710  if (returndata.length > 0) { // Return data is optional... */\n              tag_197\n              jumpi\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3633:3643  returndata */\n              dup1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n              dup1\n              0x20\n              add\n              swap1\n              mload\n                /* \"--CODEGEN--\":13:15   */\n              0x20\n                /* \"--CODEGEN--\":8:11   */\n              dup2\n                /* \"--CODEGEN--\":5:16   */\n              lt\n                /* \"--CODEGEN--\":2:4   */\n              iszero\n              tag_209\n              jumpi\n                /* \"--CODEGEN--\":29:30   */\n              0x00\n                /* \"--CODEGEN--\":26:27   */\n              dup1\n                /* \"--CODEGEN--\":19:31   */\n              revert\n                /* \"--CODEGEN--\":2:4   */\n            tag_209:\n              pop\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3622:3652  abi.decode(returndata, (bool)) */\n              mload\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":3614:3699  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n              tag_197\n              jumpi\n              mload(0x40)\n              shl(0xe5, 0x461bcd)\n              dup2\n              mstore\n              0x04\n              add\n              dup1\n              dup1\n              0x20\n              add\n              dup3\n              dup2\n              sub\n              dup3\n              mstore\n              0x2a\n              dup2\n              mstore\n              0x20\n              add\n              dup1\n              data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n              0x2a\n              swap2\n              codecopy\n              0x40\n              add\n              swap2\n              pop\n              pop\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n            tag_200:\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":902:922  extcodesize(account) */\n              extcodesize\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":940:948  size > 0 */\n              iszero\n              iszero\n              swap1\n                /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":542:955  function isContract(address account) internal view returns (bool) {... */\n              jump\t// out\n            stop\n            data_0d74825aecb0211bbe1f02ccfb998d9e49771bedb2c6414e20fd8978a2e0f54c 5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n            data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n            data_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de 43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374\n            data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n            auxdata: 0xa265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c63430005100032\n        }\n    }\n\n    auxdata: 0xa265627a7a723158209b6e1592af94b3a1103218c20dd39f9994835ecb53b38a65b3eee8091d7a14ad64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051611da3380380611da38339818101604052604081101561003357600080fd5b508051602090910151600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3428110156100c45760405162461bcd60e51b8152600401808060200182810382526034815260200180611d6f6034913960400191505060405180910390fd5b600180546001600160a01b0319166001600160a01b039390931692909217909155600255611c78806100f76000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461018c5780638f32d59b14610194578063a0928c11146101b0578063ae741d8d146101ca578063d1af0c7d146101d2578063f2fde38b146101da576100a9565b8063344e5e34146100ae5780634956eaf0146100e75780636cf8caf814610115578063715018a61461015e57806381e1629814610166575b600080fd5b6100cb600480360360208110156100c457600080fd5b5035610200565b604080516001600160a01b039092168252519081900360200190f35b610113600480360360408110156100fd57600080fd5b506001600160a01b038135169060200135610227565b005b61013b6004803603602081101561012b57600080fd5b50356001600160a01b031661039b565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6101136103c0565b6101136004803603602081101561017c57600080fd5b50356001600160a01b0316610463565b6100cb61063e565b61019c61064d565b604080519115158252519081900360200190f35b6101b861065e565b60408051918252519081900360200190f35b610113610664565b6100cb6106e4565b610113600480360360208110156101f057600080fd5b50356001600160a01b03166106f3565b6003818154811061020d57fe5b6000918252602090912001546001600160a01b0316905081565b61022f61064d565b610280576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0380831660009081526004602052604090208054909116156102da5760405162461bcd60e51b815260040180806020018281038252602f815260200180611b2b602f913960400191505060405180910390fd5b60015460405130916001600160a01b03169085906102f7906107f0565b6001600160a01b03938416815291831660208301529091166040808301919091525190819003606001906000f080158015610336573d6000803e3d6000fd5b5081546001600160a01b03199081166001600160a01b039283161783556001928301939093556003805492830181556000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180549092169216919091179055565b600460205260009081526040902080546001909101546001600160a01b039091169082565b6103c861064d565b610419576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002544210156104a45760405162461bcd60e51b8152600401808060200182810382526034815260200180611bd96034913960400191505060405180910390fd5b6001600160a01b03808216600090815260046020526040902080549091166104fd5760405162461bcd60e51b8152600401808060200182810382526037815260200180611c0d6037913960400191505060405180910390fd5b60018101541561063a5760018082018054600091829055915483546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018690529051919092169263a9059cbb92604480820193602093909283900390910190829087803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b505050506040513d602081101561059757600080fd5b50516105d45760405162461bcd60e51b815260040180806020018281038252603a815260200180611b9f603a913960400191505060405180910390fd5b815460408051633c6b16ab60e01b81526004810184905290516001600160a01b0390921691633c6b16ab9160248082019260009290919082900301818387803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b50505050505b5050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60025481565b6003546106a25760405162461bcd60e51b8152600401808060200182810382526045815260200180611b5a6045913960600191505060405180910390fd5b60005b6003548110156106e1576106d9600382815481106106bf57fe5b6000918252602090912001546001600160a01b0316610463565b6001016106a5565b50565b6001546001600160a01b031681565b6106fb61064d565b61074c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106e1816001600160a01b0381166107955760405162461bcd60e51b8152600401808060200182810382526026815260200180611b056026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611307806107fe8339019056fe60806040526000600455600060055562278d0060065534801561002157600080fd5b506040516113073803806113078339818101604052606081101561004457600080fd5b508051602082015160409092015160018055600280546001600160a01b039485166001600160a01b031991821617909155600380549285169282169290921790915560008054939092169216919091179055611262806100a56000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80637b0a47ee116100b8578063cd3daf9d1161007c578063cd3daf9d146102ad578063d1af0c7d146102b5578063df136d65146102bd578063e9fad8ee146102c5578063ebe2b12b146102cd578063ecd9ba82146102d557610141565b80637b0a47ee1461025257806380faa57d1461025a5780638b87634714610262578063a694fc3a14610288578063c8f33c91146102a557610141565b8063386a95251161010a578063386a9525146101d35780633c6b16ab146101db5780633d18b912146101f85780633fc6df6e1461020057806370a082311461022457806372f702f31461024a57610141565b80628cc262146101465780630700037d1461017e57806318160ddd146101a45780631c1f78eb146101ac5780632e1a7d4d146101b4575b600080fd5b61016c6004803603602081101561015c57600080fd5b50356001600160a01b031661030d565b60408051918252519081900360200190f35b61016c6004803603602081101561019457600080fd5b50356001600160a01b03166103a3565b61016c6103b5565b61016c6103bc565b6101d1600480360360208110156101ca57600080fd5b50356103da565b005b61016c610569565b6101d1600480360360208110156101f157600080fd5b503561056f565b6101d16107c0565b6102086108e4565b604080516001600160a01b039092168252519081900360200190f35b61016c6004803603602081101561023a57600080fd5b50356001600160a01b03166108f3565b61020861090e565b61016c61091d565b61016c610923565b61016c6004803603602081101561027857600080fd5b50356001600160a01b0316610931565b6101d16004803603602081101561029e57600080fd5b5035610943565b61016c610acc565b61016c610ad2565b610208610b2c565b61016c610b3b565b6101d1610b41565b61016c610b64565b6101d1600480360360a08110156102eb57600080fd5b5080359060208101359060ff6040820135169060608101359060800135610b6a565b6001600160a01b0381166000908152600a6020908152604080832054600990925282205461039d919061039190670de0b6b3a7640000906103859061036090610354610ad2565b9063ffffffff610d8c16565b6001600160a01b0388166000908152600c60205260409020549063ffffffff610de916565b9063ffffffff610e4916565b9063ffffffff610eb316565b92915050565b600a6020526000908152604090205481565b600b545b90565b60006103d5600654600554610de990919063ffffffff16565b905090565b60018054810190819055336103ed610ad2565b6008556103f8610923565b6007556001600160a01b0381161561043f576104138161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008311610488576040805162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015290519081900360640190fd5b600b5461049b908463ffffffff610d8c16565b600b55336000908152600c60205260409020546104be908463ffffffff610d8c16565b336000818152600c60205260409020919091556003546104ea916001600160a01b039091169085610f0d565b60408051848152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a2506001548114610565576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b5050565b60065481565b6000546001600160a01b031633146105b85760405162461bcd60e51b815260040180806020018281038252602a8152602001806111da602a913960400191505060405180910390fd5b60006105c2610ad2565b6008556105cd610923565b6007556001600160a01b03811615610614576105e88161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60045442106106395760065461063190839063ffffffff610e4916565b600555610688565b60045460009061064f904263ffffffff610d8c16565b9050600061066860055483610de990919063ffffffff16565b60065490915061068290610385868463ffffffff610eb316565b60055550505b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156106d357600080fd5b505afa1580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b505160065490915061071690829063ffffffff610e4916565b600554111561076c576040805162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015290519081900360640190fd5b426007819055600654610785919063ffffffff610eb316565b6004556040805184815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a1505050565b60018054810190819055336107d3610ad2565b6008556107de610923565b6007556001600160a01b03811615610825576107f98161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b336000908152600a6020526040902054801561089b57336000818152600a6020526040812055600254610864916001600160a01b039091169083610f0d565b60408051828152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505060015481146108e1576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b50565b6000546001600160a01b031681565b6001600160a01b03166000908152600c602052604090205490565b6003546001600160a01b031681565b60055481565b60006103d542600454610f64565b60096020526000908152604090205481565b6001805481019081905533610956610ad2565b600855610961610923565b6007556001600160a01b038116156109a85761097c8161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b600083116109ee576040805162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015290519081900360640190fd5b600b54610a01908463ffffffff610eb316565b600b55336000908152600c6020526040902054610a24908463ffffffff610eb316565b336000818152600c6020526040902091909155600354610a51916001600160a01b03909116903086610f7a565b60408051848152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506001548114610565576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b60075481565b6000600b5460001415610ae857506008546103b9565b6103d5610b1d600b54610385670de0b6b3a7640000610b11600554610b11600754610354610923565b9063ffffffff610de916565b6008549063ffffffff610eb316565b6002546001600160a01b031681565b60085481565b336000908152600c6020526040902054610b5a906103da565b610b626107c0565b565b60045481565b6001805481019081905533610b7d610ad2565b600855610b88610923565b6007556001600160a01b03811615610bcf57610ba38161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008711610c15576040805162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015290519081900360640190fd5b600b54610c28908863ffffffff610eb316565b600b55336000908152600c6020526040902054610c4b908863ffffffff610eb316565b336000818152600c602052604080822093909355600354835163d505accf60e01b81526004810193909352306024840152604483018b9052606483018a905260ff8916608484015260a4830188905260c4830187905292516001600160a01b039093169263d505accf9260e480820193929182900301818387803b158015610cd257600080fd5b505af1158015610ce6573d6000803e3d6000fd5b5050600354610d0992506001600160a01b0316905033308a63ffffffff610f7a16565b60408051888152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506001548114610d84576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b505050505050565b600082821115610de3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082610df85750600061039d565b82820282848281610e0557fe5b0414610e425760405162461bcd60e51b81526004018080602001828103825260218152602001806111b96021913960400191505060405180910390fd5b9392505050565b6000808211610e9f576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610eaa57fe5b04949350505050565b600082820183811015610e42576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f5f908490610fda565b505050565b6000818310610f735781610e42565b5090919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fd4908590610fda565b50505050565b610fec826001600160a01b0316611192565b61103d576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061107b5780518252601f19909201916020918201910161105c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146110dd576040519150601f19603f3d011682016040523d82523d6000602084013e6110e2565b606091505b509150915081611139576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610fd45780806020019051602081101561115557600080fd5b5051610fd45760405162461bcd60e51b815260040180806020018281038252602a815260200180611204602a913960400191505060405180910390fd5b3b15159056fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c634300051000324f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f7965645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f79735374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c65645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f742072656164795374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564a265627a7a723158209b6e1592af94b3a1103218c20dd39f9994835ecb53b38a65b3eee8091d7a14ad64736f6c634300051000325374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1DA3 CODESIZE SUB DUP1 PUSH2 0x1DA3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP1 DUP3 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 TIMESTAMP DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D6F PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE PUSH2 0x1C78 DUP1 PUSH2 0xF7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA0928C11 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xAE741D8D EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DA JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x344E5E34 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4956EAF0 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x6CF8CAF8 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81E16298 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x463 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x63E JUMP JUMPDEST PUSH2 0x19C PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x664 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x64D JUMP JUMPDEST PUSH2 0x280 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x2DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B2B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 SWAP1 PUSH2 0x2F7 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x419 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BD9 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C0D PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x63A JUMPI PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE SWAP2 SLOAD DUP4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B9F PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3C6B16AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x3C6B16AB SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B5A PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6E1 JUMPI PUSH2 0x6D9 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6BF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x6FB PUSH2 0x64D JUMP JUMPDEST PUSH2 0x74C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6E1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B05 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1307 DUP1 PUSH2 0x7FE DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x278D00 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1307 CODESIZE SUB DUP1 PUSH2 0x1307 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1262 DUP1 PUSH2 0xA5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x2D5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2A5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x24A JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x569 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x56F JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x16C PUSH2 0x91D JUMP JUMPDEST PUSH2 0x16C PUSH2 0x923 JUMP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xACC JUMP JUMPDEST PUSH2 0x16C PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x391 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x385 SWAP1 PUSH2 0x360 SWAP1 PUSH2 0x354 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x3ED PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x3F8 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x43F JUMPI PUSH2 0x413 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x488 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x49B SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4BE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x4EA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11DA PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C2 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x5CD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x614 JUMPI PUSH2 0x5E8 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x639 JUMPI PUSH1 0x6 SLOAD PUSH2 0x631 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x688 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x64F SWAP1 TIMESTAMP PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x668 PUSH1 0x5 SLOAD DUP4 PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x682 SWAP1 PUSH2 0x385 DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x716 SWAP1 DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x76C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x785 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x7D3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x7DE PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x825 JUMPI PUSH2 0x7F9 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x89B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x864 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x956 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x961 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x97C DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x9EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xA01 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA24 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xA51 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0xB1D PUSH1 0xB SLOAD PUSH2 0x385 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB11 PUSH1 0x5 SLOAD PUSH2 0xB11 PUSH1 0x7 SLOAD PUSH2 0x354 PUSH2 0x923 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB5A SWAP1 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0xB62 PUSH2 0x7C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0xB7D PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xB88 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBA3 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0xC15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xC28 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC4B SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC4 DUP4 ADD DUP8 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xD505ACCF SWAP3 PUSH1 0xE4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xD09 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP11 PUSH4 0xFFFFFFFF PUSH2 0xF7A AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDF8 JUMPI POP PUSH1 0x0 PUSH2 0x39D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xE05 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11B9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xEAA JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF5F SWAP1 DUP5 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xF73 JUMPI DUP2 PUSH2 0xE42 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xFD4 SWAP1 DUP6 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFEC DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x103D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x107B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x105C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1139 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xFD4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1204 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0053 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A7231582017C4023055 0xE3 0xC 0x2E 0x5D 0xBE PUSH14 0xAE37C15ABB0BDAA558D6077D65BF 0xAC 0xAD PUSH27 0xC615FD564736F6C634300051000324F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573735374616B696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH5 0x65706C6F79 GASPRICE KECCAK256 PUSH2 0x6C72 PUSH6 0x616479206465 PUSH17 0x6C6F7965645374616B696E675265776172 PUSH5 0x7346616374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E74733A2063616C6C656420 PUSH3 0x65666F PUSH19 0x6520616E79206465706C6F79735374616B696E PUSH8 0x5265776172647346 PUSH2 0x6374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E743A207472616E73666572 KECCAK256 PUSH7 0x61696C65645374 PUSH2 0x6B69 PUSH15 0x6752657761726473466163746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74207265616479537461 PUSH12 0x696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74206465706C6F796564 LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP12 PUSH15 0x1592AF94B3A1103218C20DD39F9994 DUP4 0x5E 0xCB MSTORE8 0xB3 DUP11 PUSH6 0xB3EEE8091D7A EQ 0xAD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN MSTORE8 PUSH21 0x616B696E6752657761726473466163746F72793A3A PUSH4 0x6F6E7374 PUSH19 0x7563746F723A2067656E6573697320746F6F20 PUSH20 0x6F6F6E0000000000000000000000000000000000 ",
							"sourceMap": "301:2973:10:-;;;846:329;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:329:10;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;846:329:10;;;;;;;657:6:2;:19;;-1:-1:-1;;;;;;657:19:2;666:10;657:19;;;;846:329:10;691:40:2;-1:-1:-1;;;;;724:6:2;;;;;657;691:40;;657:6;;691:40;997:15:10;971:22;:41;;963:106;;;;-1:-1:-1;;;963:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:12;:28;;-1:-1:-1;;;;;;1082:28:10;-1:-1:-1;;;;;1082:28:10;;;;;;;;;;;1121:21;:46;301:2973;;;-1:-1:-1;301:2973:10;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461018c5780638f32d59b14610194578063a0928c11146101b0578063ae741d8d146101ca578063d1af0c7d146101d2578063f2fde38b146101da576100a9565b8063344e5e34146100ae5780634956eaf0146100e75780636cf8caf814610115578063715018a61461015e57806381e1629814610166575b600080fd5b6100cb600480360360208110156100c457600080fd5b5035610200565b604080516001600160a01b039092168252519081900360200190f35b610113600480360360408110156100fd57600080fd5b506001600160a01b038135169060200135610227565b005b61013b6004803603602081101561012b57600080fd5b50356001600160a01b031661039b565b604080516001600160a01b03909316835260208301919091528051918290030190f35b6101136103c0565b6101136004803603602081101561017c57600080fd5b50356001600160a01b0316610463565b6100cb61063e565b61019c61064d565b604080519115158252519081900360200190f35b6101b861065e565b60408051918252519081900360200190f35b610113610664565b6100cb6106e4565b610113600480360360208110156101f057600080fd5b50356001600160a01b03166106f3565b6003818154811061020d57fe5b6000918252602090912001546001600160a01b0316905081565b61022f61064d565b610280576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0380831660009081526004602052604090208054909116156102da5760405162461bcd60e51b815260040180806020018281038252602f815260200180611b2b602f913960400191505060405180910390fd5b60015460405130916001600160a01b03169085906102f7906107f0565b6001600160a01b03938416815291831660208301529091166040808301919091525190819003606001906000f080158015610336573d6000803e3d6000fd5b5081546001600160a01b03199081166001600160a01b039283161783556001928301939093556003805492830181556000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90910180549092169216919091179055565b600460205260009081526040902080546001909101546001600160a01b039091169082565b6103c861064d565b610419576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6002544210156104a45760405162461bcd60e51b8152600401808060200182810382526034815260200180611bd96034913960400191505060405180910390fd5b6001600160a01b03808216600090815260046020526040902080549091166104fd5760405162461bcd60e51b8152600401808060200182810382526037815260200180611c0d6037913960400191505060405180910390fd5b60018101541561063a5760018082018054600091829055915483546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018690529051919092169263a9059cbb92604480820193602093909283900390910190829087803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b505050506040513d602081101561059757600080fd5b50516105d45760405162461bcd60e51b815260040180806020018281038252603a815260200180611b9f603a913960400191505060405180910390fd5b815460408051633c6b16ab60e01b81526004810184905290516001600160a01b0390921691633c6b16ab9160248082019260009290919082900301818387803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b50505050505b5050565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60025481565b6003546106a25760405162461bcd60e51b8152600401808060200182810382526045815260200180611b5a6045913960600191505060405180910390fd5b60005b6003548110156106e1576106d9600382815481106106bf57fe5b6000918252602090912001546001600160a01b0316610463565b6001016106a5565b50565b6001546001600160a01b031681565b6106fb61064d565b61074c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106e1816001600160a01b0381166107955760405162461bcd60e51b8152600401808060200182810382526026815260200180611b056026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b611307806107fe8339019056fe60806040526000600455600060055562278d0060065534801561002157600080fd5b506040516113073803806113078339818101604052606081101561004457600080fd5b508051602082015160409092015160018055600280546001600160a01b039485166001600160a01b031991821617909155600380549285169282169290921790915560008054939092169216919091179055611262806100a56000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80637b0a47ee116100b8578063cd3daf9d1161007c578063cd3daf9d146102ad578063d1af0c7d146102b5578063df136d65146102bd578063e9fad8ee146102c5578063ebe2b12b146102cd578063ecd9ba82146102d557610141565b80637b0a47ee1461025257806380faa57d1461025a5780638b87634714610262578063a694fc3a14610288578063c8f33c91146102a557610141565b8063386a95251161010a578063386a9525146101d35780633c6b16ab146101db5780633d18b912146101f85780633fc6df6e1461020057806370a082311461022457806372f702f31461024a57610141565b80628cc262146101465780630700037d1461017e57806318160ddd146101a45780631c1f78eb146101ac5780632e1a7d4d146101b4575b600080fd5b61016c6004803603602081101561015c57600080fd5b50356001600160a01b031661030d565b60408051918252519081900360200190f35b61016c6004803603602081101561019457600080fd5b50356001600160a01b03166103a3565b61016c6103b5565b61016c6103bc565b6101d1600480360360208110156101ca57600080fd5b50356103da565b005b61016c610569565b6101d1600480360360208110156101f157600080fd5b503561056f565b6101d16107c0565b6102086108e4565b604080516001600160a01b039092168252519081900360200190f35b61016c6004803603602081101561023a57600080fd5b50356001600160a01b03166108f3565b61020861090e565b61016c61091d565b61016c610923565b61016c6004803603602081101561027857600080fd5b50356001600160a01b0316610931565b6101d16004803603602081101561029e57600080fd5b5035610943565b61016c610acc565b61016c610ad2565b610208610b2c565b61016c610b3b565b6101d1610b41565b61016c610b64565b6101d1600480360360a08110156102eb57600080fd5b5080359060208101359060ff6040820135169060608101359060800135610b6a565b6001600160a01b0381166000908152600a6020908152604080832054600990925282205461039d919061039190670de0b6b3a7640000906103859061036090610354610ad2565b9063ffffffff610d8c16565b6001600160a01b0388166000908152600c60205260409020549063ffffffff610de916565b9063ffffffff610e4916565b9063ffffffff610eb316565b92915050565b600a6020526000908152604090205481565b600b545b90565b60006103d5600654600554610de990919063ffffffff16565b905090565b60018054810190819055336103ed610ad2565b6008556103f8610923565b6007556001600160a01b0381161561043f576104138161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008311610488576040805162461bcd60e51b8152602060048201526011602482015270043616e6e6f74207769746864726177203607c1b604482015290519081900360640190fd5b600b5461049b908463ffffffff610d8c16565b600b55336000908152600c60205260409020546104be908463ffffffff610d8c16565b336000818152600c60205260409020919091556003546104ea916001600160a01b039091169085610f0d565b60408051848152905133917f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5919081900360200190a2506001548114610565576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b5050565b60065481565b6000546001600160a01b031633146105b85760405162461bcd60e51b815260040180806020018281038252602a8152602001806111da602a913960400191505060405180910390fd5b60006105c2610ad2565b6008556105cd610923565b6007556001600160a01b03811615610614576105e88161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60045442106106395760065461063190839063ffffffff610e4916565b600555610688565b60045460009061064f904263ffffffff610d8c16565b9050600061066860055483610de990919063ffffffff16565b60065490915061068290610385868463ffffffff610eb316565b60055550505b600254604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156106d357600080fd5b505afa1580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b505160065490915061071690829063ffffffff610e4916565b600554111561076c576040805162461bcd60e51b815260206004820152601860248201527f50726f76696465642072657761726420746f6f20686967680000000000000000604482015290519081900360640190fd5b426007819055600654610785919063ffffffff610eb316565b6004556040805184815290517fde88a922e0d3b88b24e9623efeb464919c6bf9f66857a65e2bfcf2ce87a9433d9181900360200190a1505050565b60018054810190819055336107d3610ad2565b6008556107de610923565b6007556001600160a01b03811615610825576107f98161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b336000908152600a6020526040902054801561089b57336000818152600a6020526040812055600254610864916001600160a01b039091169083610f0d565b60408051828152905133917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505060015481146108e1576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b50565b6000546001600160a01b031681565b6001600160a01b03166000908152600c602052604090205490565b6003546001600160a01b031681565b60055481565b60006103d542600454610f64565b60096020526000908152604090205481565b6001805481019081905533610956610ad2565b600855610961610923565b6007556001600160a01b038116156109a85761097c8161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b600083116109ee576040805162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015290519081900360640190fd5b600b54610a01908463ffffffff610eb316565b600b55336000908152600c6020526040902054610a24908463ffffffff610eb316565b336000818152600c6020526040902091909155600354610a51916001600160a01b03909116903086610f7a565b60408051848152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506001548114610565576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b60075481565b6000600b5460001415610ae857506008546103b9565b6103d5610b1d600b54610385670de0b6b3a7640000610b11600554610b11600754610354610923565b9063ffffffff610de916565b6008549063ffffffff610eb316565b6002546001600160a01b031681565b60085481565b336000908152600c6020526040902054610b5a906103da565b610b626107c0565b565b60045481565b6001805481019081905533610b7d610ad2565b600855610b88610923565b6007556001600160a01b03811615610bcf57610ba38161030d565b6001600160a01b0382166000908152600a60209081526040808320939093556008546009909152919020555b60008711610c15576040805162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b604482015290519081900360640190fd5b600b54610c28908863ffffffff610eb316565b600b55336000908152600c6020526040902054610c4b908863ffffffff610eb316565b336000818152600c602052604080822093909355600354835163d505accf60e01b81526004810193909352306024840152604483018b9052606483018a905260ff8916608484015260a4830188905260c4830187905292516001600160a01b039093169263d505accf9260e480820193929182900301818387803b158015610cd257600080fd5b505af1158015610ce6573d6000803e3d6000fd5b5050600354610d0992506001600160a01b0316905033308a63ffffffff610f7a16565b60408051888152905133917f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d919081900360200190a2506001548114610d84576040805162461bcd60e51b815260206004820152601f6024820152600080516020611199833981519152604482015290519081900360640190fd5b505050505050565b600082821115610de3576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082610df85750600061039d565b82820282848281610e0557fe5b0414610e425760405162461bcd60e51b81526004018080602001828103825260218152602001806111b96021913960400191505060405180910390fd5b9392505050565b6000808211610e9f576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b6000828481610eaa57fe5b04949350505050565b600082820183811015610e42576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610f5f908490610fda565b505050565b6000818310610f735781610e42565b5090919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610fd4908590610fda565b50505050565b610fec826001600160a01b0316611192565b61103d576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b6020831061107b5780518252601f19909201916020918201910161105c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146110dd576040519150601f19603f3d011682016040523d82523d6000602084013e6110e2565b606091505b509150915081611139576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b805115610fd45780806020019051602081101561115557600080fd5b5051610fd45760405162461bcd60e51b815260040180806020018281038252602a815260200180611204602a913960400191505060405180910390fd5b3b15159056fe5265656e7472616e637947756172643a207265656e7472616e742063616c6c00536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e74726163745361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c634300051000324f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f7965645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f79735374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c65645374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f742072656164795374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564a265627a7a723158209b6e1592af94b3a1103218c20dd39f9994835ecb53b38a65b3eee8091d7a14ad64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0xA0928C11 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0xAE741D8D EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1DA JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x344E5E34 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x4956EAF0 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0x6CF8CAF8 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81E16298 EQ PUSH2 0x166 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x463 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x63E JUMP JUMPDEST PUSH2 0x19C PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x664 JUMP JUMPDEST PUSH2 0xCB PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x113 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x20D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x64D JUMP JUMPDEST PUSH2 0x280 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x2DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B2B PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 SWAP1 PUSH2 0x2F7 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x336 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 SWAP3 DUP4 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH2 0x3C8 PUSH2 0x64D JUMP JUMPDEST PUSH2 0x419 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BD9 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x37 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C0D PUSH1 0x37 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD ISZERO PUSH2 0x63A JUMPI PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE SWAP2 SLOAD DUP4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP3 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B9F PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3C6B16AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x3C6B16AB SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x45 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B5A PUSH1 0x45 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6E1 JUMPI PUSH2 0x6D9 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6BF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x463 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x6A5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x6FB PUSH2 0x64D JUMP JUMPDEST PUSH2 0x74C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6E1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x795 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B05 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1307 DUP1 PUSH2 0x7FE DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH3 0x278D00 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1307 CODESIZE SUB DUP1 PUSH2 0x1307 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP1 SWAP3 ADD MLOAD PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 DUP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP4 SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1262 DUP1 PUSH2 0xA5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7B0A47EE GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xCD3DAF9D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xECD9BA82 EQ PUSH2 0x2D5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2A5 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x386A9525 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x3C6B16AB EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x3FC6DF6E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x24A JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1B4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x30D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x3DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16C PUSH2 0x569 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x56F JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x8E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8F3 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x90E JUMP JUMPDEST PUSH2 0x16C PUSH2 0x91D JUMP JUMPDEST PUSH2 0x16C PUSH2 0x923 JUMP JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x931 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xACC JUMP JUMPDEST PUSH2 0x16C PUSH2 0xAD2 JUMP JUMPDEST PUSH2 0x208 PUSH2 0xB2C JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xB41 JUMP JUMPDEST PUSH2 0x16C PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x80 ADD CALLDATALOAD PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x391 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x385 SWAP1 PUSH2 0x360 SWAP1 PUSH2 0x354 PUSH2 0xAD2 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x3ED PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x3F8 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x43F JUMPI PUSH2 0x413 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x488 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0x49B SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x4BE SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0x4EA SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11DA PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5C2 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x5CD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x614 JUMPI PUSH2 0x5E8 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x639 JUMPI PUSH1 0x6 SLOAD PUSH2 0x631 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x688 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x64F SWAP1 TIMESTAMP PUSH4 0xFFFFFFFF PUSH2 0xD8C AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x668 PUSH1 0x5 SLOAD DUP4 PUSH2 0xDE9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x682 SWAP1 PUSH2 0x385 DUP7 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 SLOAD SWAP1 SWAP2 POP PUSH2 0x716 SWAP1 DUP3 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xE49 AND JUMP JUMPDEST PUSH1 0x5 SLOAD GT ISZERO PUSH2 0x76C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726F76696465642072657761726420746F6F20686967680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH2 0x785 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD PUSH32 0xDE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x7D3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x7DE PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x825 JUMPI PUSH2 0x7F9 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x89B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH2 0x864 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0xF0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x8E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D5 TIMESTAMP PUSH1 0x4 SLOAD PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0x956 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0x961 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x9A8 JUMPI PUSH2 0x97C DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x9EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xA01 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA24 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD PUSH2 0xA51 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 ADDRESS DUP7 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0x565 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x8 SLOAD PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x3D5 PUSH2 0xB1D PUSH1 0xB SLOAD PUSH2 0x385 PUSH8 0xDE0B6B3A7640000 PUSH2 0xB11 PUSH1 0x5 SLOAD PUSH2 0xB11 PUSH1 0x7 SLOAD PUSH2 0x354 PUSH2 0x923 JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xDE9 AND JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB5A SWAP1 PUSH2 0x3DA JUMP JUMPDEST PUSH2 0xB62 PUSH2 0x7C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP2 ADD SWAP1 DUP2 SWAP1 SSTORE CALLER PUSH2 0xB7D PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH2 0xB88 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBA3 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x8 SLOAD PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP8 GT PUSH2 0xC15 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xC28 SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST PUSH1 0xB SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC4B SWAP1 DUP9 PUSH4 0xFFFFFFFF PUSH2 0xEB3 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x3 SLOAD DUP4 MLOAD PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0xC4 DUP4 ADD DUP8 SWAP1 MSTORE SWAP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xD505ACCF SWAP3 PUSH1 0xE4 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCE6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH2 0xD09 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP CALLER ADDRESS DUP11 PUSH4 0xFFFFFFFF PUSH2 0xF7A AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE SWAP1 MLOAD CALLER SWAP2 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x1 SLOAD DUP2 EQ PUSH2 0xD84 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1199 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xDE3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDF8 JUMPI POP PUSH1 0x0 PUSH2 0x39D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xE05 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xE42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x11B9 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0xE9F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0xEAA JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xF5F SWAP1 DUP5 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xF73 JUMPI DUP2 PUSH2 0xE42 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xFD4 SWAP1 DUP6 SWAP1 PUSH2 0xFDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFEC DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x103D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x107B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x105C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1139 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xFD4 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xFD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1204 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C0053 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7743616C6C6572206973 KECCAK256 PUSH15 0x6F7420526577617264734469737472 PUSH10 0x627574696F6E20636F6E PUSH21 0x726163745361666545524332303A20455243323020 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A265627A7A7231582017C4023055 0xE3 0xC 0x2E 0x5D 0xBE PUSH14 0xAE37C15ABB0BDAA558D6077D65BF 0xAC 0xAD PUSH27 0xC615FD564736F6C634300051000324F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x6573735374616B696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH5 0x65706C6F79 GASPRICE KECCAK256 PUSH2 0x6C72 PUSH6 0x616479206465 PUSH17 0x6C6F7965645374616B696E675265776172 PUSH5 0x7346616374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E74733A2063616C6C656420 PUSH3 0x65666F PUSH19 0x6520616E79206465706C6F79735374616B696E PUSH8 0x5265776172647346 PUSH2 0x6374 PUSH16 0x72793A3A6E6F74696679526577617264 COINBASE PUSH14 0x6F756E743A207472616E73666572 KECCAK256 PUSH7 0x61696C65645374 PUSH2 0x6B69 PUSH15 0x6752657761726473466163746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74207265616479537461 PUSH12 0x696E67526577617264734661 PUSH4 0x746F7279 GASPRICE GASPRICE PUSH15 0x6F74696679526577617264416D6F75 PUSH15 0x743A206E6F74206465706C6F796564 LOG2 PUSH6 0x627A7A723158 KECCAK256 SWAP12 PUSH15 0x1592AF94B3A1103218C20DD39F9994 DUP4 0x5E 0xCB MSTORE8 0xB3 DUP11 PUSH6 0xB3EEE8091D7A EQ 0xAD PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "301:2973:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;301:2973:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;521:30;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;521:30:10;;:::i;:::-;;;;-1:-1:-1;;;;;521:30:10;;;;;;;;;;;;;;1408:494;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1408:494:10;;;;;;;;:::i;:::-;;759:78;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;759:78:10;-1:-1:-1;;;;;759:78:10;;:::i;:::-;;;;-1:-1:-1;;;;;759:78:10;;;;;;;;;;;;;;;;;;;;;1599:137:2;;;:::i;2462:809:10:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2462:809:10;-1:-1:-1;;;;;2462:809:10;;:::i;814:77:2:-;;;:::i;1165:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;403:33:10;;;:::i;:::-;;;;;;;;;;;;;;;;2004:284;;;:::i;369:27::-;;;:::i;1885:107:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1885:107:2;-1:-1:-1;;;;;1885:107:2;;:::i;521:30:10:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;521:30:10;;-1:-1:-1;521:30:10;:::o;1408:494::-;1018:9:2;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1527:46:10;;;1493:31;1527:46;;;:32;:46;;;;;1592:19;;1527:46;;1592:19;:33;1584:93;;;;-1:-1:-1;;;1584:93:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:12;;1720:87;;1773:4;;-1:-1:-1;;;;;1780:12:10;;1794;;1720:87;;;:::i;:::-;-1:-1:-1;;;;;1720:87:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1720:87:10;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1690:118:10;;-1:-1:-1;;;;;;1690:118:10;;;-1:-1:-1;;;;;1690:118:10;;;;;;-1:-1:-1;1819:17:10;;;:32;;;;1862:13;27:10:-1;;23:18;;;45:23;;-1:-1;1862:32:10;;;;;;;;;;;;;;;;;;1408:494::o;759:78::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;759:78:10;;;;;:::o;1599:137:2:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1681:6;;1660:40;;-1:-1:-1;;;;;1681:6:2;;;;1660:40;;1697:1;;1660:40;1727:1;1710:19;;-1:-1:-1;;;;;;1710:19:2;;;1599:137::o;2462:809:10:-;2557:21;;2538:15;:40;;2530:105;;;;-1:-1:-1;;;2530:105:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2682:46:10;;;2648:31;2682:46;;;:32;:46;;;;;2747:19;;2682:46;;2747:19;2739:101;;;;-1:-1:-1;;;2739:101:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:17;;;;:21;2853:411;;2915:17;;;;;;2895;2947:21;;;;3018:12;;3041:19;;3011:64;;;-1:-1:-1;;;3011:64:10;;-1:-1:-1;;;;;3041:19:10;;;3011:64;;;;;;;;;;;;3018:12;;;;;3011:29;;:64;;;;;;;;;;;;;;;;;;3018:12;3011:64;;;5:2:-1;;;;30:1;27;20:12;5:2;3011:64:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3011:64:10;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3011:64:10;2985:184;;;;-1:-1:-1;;;2985:184:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:19;;3184:68;;;-1:-1:-1;;;3184:68:10;;;;;;;;;;-1:-1:-1;;;;;3199:19:10;;;;3184:54;;:68;;;;;3199:19;;3184:68;;;;;;;;3199:19;;3184:68;;;5:2:-1;;;;30:1;27;20:12;5:2;3184:68:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3184:68:10;;;;2853:411;;2462:809;;:::o;814:77:2:-;852:7;878:6;-1:-1:-1;;;;;878:6:2;814:77;:::o;1165:90::-;1205:4;1242:6;-1:-1:-1;;;;;1242:6:2;1228:10;:20;;1165:90::o;403:33:10:-;;;;:::o;2004:284::-;2061:13;:20;2053:106;;;;-1:-1:-1;;;2053:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2175:6;2170:111;2191:13;:20;2187:24;;2170:111;;;2233:36;2252:13;2266:1;2252:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2252:16:10;2233:18;:36::i;:::-;2213:3;;2170:111;;;;2004:284::o;369:27::-;;;-1:-1:-1;;;;;369:27:10;;:::o;1885:107:2:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;-1:-1:-1;;;;;2166:22:2;;2158:73;;;;-1:-1:-1;;;2158:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:6;;;2246:38;;-1:-1:-1;;;;;2246:38:2;;;;2267:6;;;2246:38;;;2294:6;:17;;-1:-1:-1;;;;;;2294:17:2;-1:-1:-1;;;;;2294:17:2;;;;;;;;;;2093:225::o;301:2973:10:-;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1457600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"deploy(address,uint256)": "infinite",
								"isOwner()": "1049",
								"notifyRewardAmount(address)": "infinite",
								"notifyRewardAmounts()": "infinite",
								"owner()": "1037",
								"renounceOwnership()": "24259",
								"rewardsToken()": "1125",
								"stakingRewardsGenesis()": "1042",
								"stakingRewardsInfoByStakingToken(address)": "2056",
								"stakingTokens(uint256)": "1971",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "MSTORE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MLOAD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSHSIZE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "CODESIZE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SUB"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSHSIZE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP4"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "CODECOPY"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "ADD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "DUP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MLOAD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP1"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "SWAP2"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "ADD"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "MLOAD"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "DUP1"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "AND"
								},
								{
									"begin": 666,
									"end": 676,
									"name": "CALLER"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "OR"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "DUP1"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "DUP3"
								},
								{
									"begin": 657,
									"end": 676,
									"name": "SSTORE"
								},
								{
									"begin": 846,
									"end": 1175,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP2"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP2"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "AND"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "SWAP2"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "SWAP1"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "DUP3"
								},
								{
									"begin": 657,
									"end": 663,
									"name": "SWAP1"
								},
								{
									"begin": 691,
									"end": 731,
									"name": "LOG3"
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "TIMESTAMP"
								},
								{
									"begin": 971,
									"end": 993,
									"name": "DUP2"
								},
								{
									"begin": 971,
									"end": 1012,
									"name": "LT"
								},
								{
									"begin": 971,
									"end": 1012,
									"name": "ISZERO"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "JUMPI"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP3"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SUB"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP3"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "34"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MSTORE"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH data",
									"value": "F22E14100106EB9F2180E576EDA6E762FDCBD26E14106A6823275A3B8FDEA515"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "34"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "CODECOPY"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "ADD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "POP"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "POP"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "MLOAD"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "DUP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP2"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SUB"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "SWAP1"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "REVERT"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 963,
									"end": 1069,
									"name": "JUMPDEST"
								},
								{
									"begin": 1082,
									"end": 1094,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "DUP1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP4"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP4"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "AND"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP3"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP3"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "OR"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP1"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SWAP2"
								},
								{
									"begin": 1082,
									"end": 1110,
									"name": "SSTORE"
								},
								{
									"begin": 1121,
									"end": 1142,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1121,
									"end": 1167,
									"name": "SSTORE"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "DUP1"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "CODECOPY"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 301,
									"end": 3274,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158209b6e1592af94b3a1103218c20dd39f9994835ecb53b38a65b3eee8091d7a14ad64736f6c63430005100032",
									".code": [
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "MSTORE"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "POP"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "LT"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "SHR"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "GT"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "A0928C11"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "AE741D8D"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "D1AF0C7D"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMP"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "344E5E34"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "4956EAF0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "6CF8CAF8"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "81E16298"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "EQ"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPI"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "REVERT"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MSTORE"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MLOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SUB"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "RETURN"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "DUP2"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "AND"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "STOP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MLOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP3"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "RETURN"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMPDEST"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "DUP1"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "AND"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMPDEST"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMPDEST"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "MLOAD"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP2"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ISZERO"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP3"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "MSTORE"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "MLOAD"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "DUP2"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SUB"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "RETURN"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP3"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MSTORE"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "MLOAD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SUB"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "ADD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SWAP1"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "RETURN"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMPDEST"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "DUP1"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "AND"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SLOAD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "LT"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPI"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "INVALID"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMPDEST"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP3"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "MSTORE"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "KECCAK256"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 521,
											"end": 551,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "DUP4"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "AND"
										},
										{
											"begin": 1493,
											"end": 1524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "DUP2"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1527,
											"end": 1559,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "MSTORE"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "KECCAK256"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "DUP1"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "SLOAD"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "SWAP1"
										},
										{
											"begin": 1527,
											"end": 1573,
											"name": "SWAP2"
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1625,
											"name": "ISZERO"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "JUMPI"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP3"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SUB"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP3"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH data",
											"value": "77D8567A7B7BF9A9A30EA727F6E525CAE6667D736CDAFF555C86DB8D81648A1A"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "2F"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "CODECOPY"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "POP"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "MLOAD"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "DUP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP2"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SUB"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "REVERT"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1584,
											"end": 1677,
											"name": "JUMPDEST"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "SLOAD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MLOAD"
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "ADDRESS"
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "AND"
										},
										{
											"begin": 1780,
											"end": 1792,
											"name": "SWAP1"
										},
										{
											"begin": 1794,
											"end": 1806,
											"name": "DUP6"
										},
										{
											"begin": 1794,
											"end": 1806,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP4"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP5"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP4"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP4"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "AND"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP4"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MSTORE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "MLOAD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP2"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SUB"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ADD"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "CREATE"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "DUP1"
										},
										{
											"begin": 1720,
											"end": 1807,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SWAP1"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP2"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SWAP3"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP4"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "AND"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "OR"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "DUP4"
										},
										{
											"begin": 1690,
											"end": 1808,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1819,
											"end": 1836,
											"name": "SWAP3"
										},
										{
											"begin": 1819,
											"end": 1836,
											"name": "DUP4"
										},
										{
											"begin": 1819,
											"end": 1836,
											"name": "ADD"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP4"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP1"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP4"
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SSTORE"
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP1"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "SWAP3"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "MSTORE"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "PUSH",
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "ADD"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "DUP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SLOAD"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP3"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP3"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "OR"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1"
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SSTORE"
										},
										{
											"begin": 1408,
											"end": 1902,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "MSTORE"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "KECCAK256"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SLOAD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "DUP3"
										},
										{
											"begin": 759,
											"end": 837,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP1"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SLOAD"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP2"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "AND"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "SWAP1"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "SWAP1"
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "DUP4"
										},
										{
											"begin": 1697,
											"end": 1698,
											"name": "SWAP1"
										},
										{
											"begin": 1660,
											"end": 1700,
											"name": "LOG3"
										},
										{
											"begin": 1727,
											"end": 1728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP1"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "AND"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SWAP1"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "SSTORE"
										},
										{
											"begin": 1599,
											"end": 1736,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMPDEST"
										},
										{
											"begin": 2557,
											"end": 2578,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2557,
											"end": 2578,
											"name": "SLOAD"
										},
										{
											"begin": 2538,
											"end": 2553,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2538,
											"end": 2578,
											"name": "LT"
										},
										{
											"begin": 2538,
											"end": 2578,
											"name": "ISZERO"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "JUMPI"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP3"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SUB"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP3"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MSTORE"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH data",
											"value": "E71986032604F829CCAEC9386C51E838A85CDBF506769BD103C829F640682ADF"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "CODECOPY"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "ADD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "POP"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "MLOAD"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "DUP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP2"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SUB"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "SWAP1"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "REVERT"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 2635,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "DUP1"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "DUP3"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "AND"
										},
										{
											"begin": 2648,
											"end": 2679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "DUP2"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "MSTORE"
										},
										{
											"begin": 2682,
											"end": 2714,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "MSTORE"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "KECCAK256"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "DUP1"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "SLOAD"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2728,
											"name": "SWAP2"
										},
										{
											"begin": 2747,
											"end": 2766,
											"name": "AND"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP3"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH data",
											"value": "E8F5C4CA6631F4BFE6FFABF099741B79E5C6B86618DDCBEEE6BA3C5940184427"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "CODECOPY"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "ADD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "MLOAD"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP2"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SUB"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "SWAP1"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "REVERT"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2739,
											"end": 2840,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2874,
											"name": "SLOAD"
										},
										{
											"begin": 2857,
											"end": 2878,
											"name": "ISZERO"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "JUMPI"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "DUP1"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "DUP3"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "ADD"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "DUP1"
										},
										{
											"begin": 2915,
											"end": 2932,
											"name": "SLOAD"
										},
										{
											"begin": 2895,
											"end": 2912,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "SWAP2"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "DUP3"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2947,
											"end": 2968,
											"name": "SSTORE"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SLOAD"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "DUP4"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SLOAD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "SWAP3"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "DUP4"
										},
										{
											"begin": 3041,
											"end": 3060,
											"name": "AND"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP7"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP2"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP3"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "AND"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "SWAP3"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "SWAP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP4"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SUB"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP2"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP3"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3018,
											"end": 3030,
											"name": "DUP8"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "DUP1"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "GAS"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "CALL"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3011,
											"end": 3075,
											"name": "MLOAD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "JUMPI"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP3"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SUB"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP3"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MSTORE"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH data",
											"value": "AFBE2226ADED12CD2F0D3C83FF167EEDC78632DC0894F92EEA331D3F2B56D089"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "CODECOPY"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "ADD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "POP"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "MLOAD"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "DUP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP2"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SUB"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "SWAP1"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "REVERT"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2985,
											"end": 3169,
											"name": "JUMPDEST"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "DUP2"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SLOAD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MSTORE"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP5"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MSTORE"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP1"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP3"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "AND"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP2"
										},
										{
											"begin": 3184,
											"end": 3238,
											"name": "PUSH",
											"value": "3C6B16AB"
										},
										{
											"begin": 3184,
											"end": 3238,
											"name": "SWAP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP3"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP3"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "SWAP3"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP2"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP3"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SWAP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "SUB"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ADD"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP2"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "DUP4"
										},
										{
											"begin": 3199,
											"end": 3218,
											"name": "DUP8"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "DUP1"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "GAS"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "CALL"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 3184,
											"end": 3252,
											"name": "POP"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "POP"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2853,
											"end": 3264,
											"name": "JUMPDEST"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "POP"
										},
										{
											"begin": 2462,
											"end": 3271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMPDEST"
										},
										{
											"begin": 852,
											"end": 859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 878,
											"end": 884,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 891,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "AND"
										},
										{
											"begin": 1228,
											"end": 1238,
											"name": "CALLER"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "EQ"
										},
										{
											"begin": 1228,
											"end": 1248,
											"name": "SWAP1"
										},
										{
											"begin": 1165,
											"end": 1255,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMPDEST"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "SLOAD"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 403,
											"end": 436,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMPDEST"
										},
										{
											"begin": 2061,
											"end": 2074,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2061,
											"end": 2081,
											"name": "SLOAD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "JUMPI"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP3"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SUB"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP3"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "45"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MSTORE"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH data",
											"value": "AE1F87E20C157D2878A2E48B377D209DFDDFC6D5EC9B80CEECC5ADDD0EF6FFDB"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "45"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "CODECOPY"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "ADD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "POP"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "POP"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "MLOAD"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "DUP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP2"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SUB"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "SWAP1"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "REVERT"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2053,
											"end": 2159,
											"name": "JUMPDEST"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2191,
											"end": 2204,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2191,
											"end": 2211,
											"name": "SLOAD"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "DUP2"
										},
										{
											"begin": 2187,
											"end": 2211,
											"name": "LT"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "ISZERO"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMPI"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2252,
											"end": 2265,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "DUP3"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "DUP2"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SLOAD"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "DUP2"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "LT"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "JUMPI"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "INVALID"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "JUMPDEST"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP2"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "DUP3"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "MSTORE"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP1"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SWAP2"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "KECCAK256"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "ADD"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2252,
											"end": 2268,
											"name": "AND"
										},
										{
											"begin": 2233,
											"end": 2251,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2233,
											"end": 2269,
											"name": "JUMPDEST"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "ADD"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMP"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2170,
											"end": 2281,
											"name": "POP"
										},
										{
											"begin": 2004,
											"end": 2288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMPDEST"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "AND"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "DUP2"
										},
										{
											"begin": 369,
											"end": 396,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1885,
											"end": 1992,
											"name": "JUMPDEST"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 1018,
											"end": 1027,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPI"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP3"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MSTORE"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "MLOAD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SUB"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 1010,
											"end": 1064,
											"name": "JUMPDEST"
										},
										{
											"begin": 1957,
											"end": 1985,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 1976,
											"end": 1984,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "DUP2"
										},
										{
											"begin": 2166,
											"end": 2188,
											"name": "AND"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "JUMPI"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP3"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SUB"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP3"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "CODECOPY"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "POP"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "MLOAD"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "DUP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP2"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SUB"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "SWAP1"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "REVERT"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2158,
											"end": 2231,
											"name": "JUMPDEST"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP1"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SLOAD"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "DUP1"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "DUP6"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "AND"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "SWAP4"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SWAP3"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "SWAP2"
										},
										{
											"begin": 2246,
											"end": 2284,
											"name": "LOG3"
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "DUP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP3"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP3"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "AND"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP2"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP2"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "OR"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SWAP1"
										},
										{
											"begin": 2294,
											"end": 2311,
											"name": "SSTORE"
										},
										{
											"begin": 2093,
											"end": 2318,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH #[$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "PUSH [$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "DUP4"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "CODECOPY"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "ADD"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "SWAP1"
										},
										{
											"begin": 301,
											"end": 3274,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 732,
													"end": 6401,
													"name": "PUSH",
													"value": "80"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "MSTORE"
												},
												{
													"begin": 1044,
													"end": 1045,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1014,
													"end": 1045,
													"name": "PUSH",
													"value": "4"
												},
												{
													"begin": 1014,
													"end": 1045,
													"name": "SSTORE"
												},
												{
													"begin": 1080,
													"end": 1081,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1052,
													"end": 1081,
													"name": "PUSH",
													"value": "5"
												},
												{
													"begin": 1052,
													"end": 1081,
													"name": "SSTORE"
												},
												{
													"begin": 1121,
													"end": 1128,
													"name": "PUSH",
													"value": "278D00"
												},
												{
													"begin": 1088,
													"end": 1128,
													"name": "PUSH",
													"value": "6"
												},
												{
													"begin": 1088,
													"end": 1128,
													"name": "SSTORE"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "CALLVALUE"
												},
												{
													"begin": 8,
													"end": 17,
													"name": "DUP1"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "ISZERO"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "PUSH [tag]",
													"value": "1"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "JUMPI"
												},
												{
													"begin": 30,
													"end": 31,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 27,
													"end": 28,
													"name": "DUP1"
												},
												{
													"begin": 20,
													"end": 32,
													"name": "REVERT"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "tag",
													"value": "1"
												},
												{
													"begin": 5,
													"end": 7,
													"name": "JUMPDEST"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "POP"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "MLOAD"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "PUSHSIZE"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "CODESIZE"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "SUB"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "DUP1"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "PUSHSIZE"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "DUP4"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "CODECOPY"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "DUP2"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "DUP2"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "ADD"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "MSTORE"
												},
												{
													"begin": 13,
													"end": 15,
													"name": "PUSH",
													"value": "60"
												},
												{
													"begin": 8,
													"end": 11,
													"name": "DUP2"
												},
												{
													"begin": 5,
													"end": 16,
													"name": "LT"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "ISZERO"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "PUSH [tag]",
													"value": "2"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPI"
												},
												{
													"begin": 29,
													"end": 30,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 26,
													"end": 27,
													"name": "DUP1"
												},
												{
													"begin": 19,
													"end": 31,
													"name": "REVERT"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "tag",
													"value": "2"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPDEST"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "POP"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "DUP1"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "MLOAD"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "DUP3"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "ADD"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "MLOAD"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "SWAP1"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "SWAP3"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "ADD"
												},
												{
													"begin": 1466,
													"end": 1750,
													"name": "MLOAD"
												},
												{
													"begin": 884,
													"end": 885,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": 868,
													"end": 885,
													"name": "DUP1"
												},
												{
													"begin": 868,
													"end": 885,
													"name": "SSTORE"
												},
												{
													"begin": 1606,
													"end": 1618,
													"name": "PUSH",
													"value": "2"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "DUP1"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "SLOAD"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "NOT"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "SWAP1"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "DUP2"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "AND"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "A0"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SHL"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SUB"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "SWAP6"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "DUP7"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "AND"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "OR"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "SWAP1"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "SWAP2"
												},
												{
													"begin": 1606,
													"end": 1642,
													"name": "SSTORE"
												},
												{
													"begin": 1653,
													"end": 1665,
													"name": "PUSH",
													"value": "3"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "DUP1"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SLOAD"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "DUP3"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "AND"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SWAP3"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "DUP6"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "AND"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SWAP3"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SWAP1"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SWAP3"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "OR"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SWAP1"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SWAP2"
												},
												{
													"begin": 1653,
													"end": 1689,
													"name": "SSTORE"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "DUP1"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SLOAD"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP1"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP2"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "AND"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP3"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP1"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP2"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "AND"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP2"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP1"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SWAP2"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "OR"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "DUP2"
												},
												{
													"begin": 1700,
													"end": 1742,
													"name": "SSTORE"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "PUSH",
													"value": "1262"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SWAP1"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "DUP2"
												},
												{
													"begin": -1,
													"end": -1,
													"name": "SWAP1"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "PUSH [$]",
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "SWAP1"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "CODECOPY"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 732,
													"end": 6401,
													"name": "RETURN"
												}
											],
											".data": {
												"0": {
													".auxdata": "a265627a7a7231582017c4023055e30c2e5dbe6dae37c15abb0bdaa558d6077d65bfacad7a0c615fd564736f6c63430005100032",
													".code": [
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "80"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "MSTORE"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "CALLVALUE"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "POP"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "LT"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "SHR"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "7B0A47EE"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "GT"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "25"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "CD3DAF9D"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "GT"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "26"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "CD3DAF9D"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "19"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "D1AF0C7D"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "20"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "DF136D65"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "21"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "E9FAD8EE"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "22"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "EBE2B12B"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "23"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "ECD9BA82"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "24"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMP"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "tag",
															"value": "26"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "7B0A47EE"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "14"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "80FAA57D"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "15"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "8B876347"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "16"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "A694FC3A"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "17"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "C8F33C91"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "18"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMP"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "tag",
															"value": "25"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "386A9525"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "GT"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "27"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "386A9525"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "8"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "3C6B16AB"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "9"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "3D18B912"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "10"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "3FC6DF6E"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "11"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "70A08231"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "12"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "72F702F3"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "13"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMP"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "tag",
															"value": "27"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "8CC262"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "3"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "700037D"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "4"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "18160DDD"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "5"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "1C1F78EB"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "6"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "2E1A7D4D"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "EQ"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH [tag]",
															"value": "7"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPI"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "tag",
															"value": "2"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "JUMPDEST"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "DUP1"
														},
														{
															"begin": 732,
															"end": 6401,
															"name": "REVERT"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "tag",
															"value": "3"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "JUMPDEST"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "DUP1"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "29"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "29"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "CALLDATALOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "AND"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "tag",
															"value": "28"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "JUMPDEST"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "DUP1"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "MLOAD"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SWAP2"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "DUP3"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "MSTORE"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "MLOAD"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SWAP1"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "DUP2"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SWAP1"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SUB"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "ADD"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SWAP1"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "RETURN"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "tag",
															"value": "4"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "JUMPDEST"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "DUP1"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "32"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "32"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "CALLDATALOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "AND"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH [tag]",
															"value": "33"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "tag",
															"value": "5"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "JUMPDEST"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "PUSH [tag]",
															"value": "35"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "tag",
															"value": "6"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "JUMPDEST"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "PUSH [tag]",
															"value": "37"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "tag",
															"value": "7"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "JUMPDEST"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "DUP1"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "39"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "39"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "PUSH [tag]",
															"value": "40"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "tag",
															"value": "38"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "JUMPDEST"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "STOP"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "tag",
															"value": "8"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMPDEST"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH [tag]",
															"value": "42"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "tag",
															"value": "9"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "JUMPDEST"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "DUP1"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "44"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "44"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "PUSH [tag]",
															"value": "45"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "tag",
															"value": "10"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "JUMPDEST"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "PUSH [tag]",
															"value": "47"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "tag",
															"value": "11"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMPDEST"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH [tag]",
															"value": "48"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH [tag]",
															"value": "49"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "tag",
															"value": "48"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMPDEST"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP3"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "AND"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP3"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "MSTORE"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "MLOAD"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP2"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SUB"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "ADD"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SWAP1"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "RETURN"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "tag",
															"value": "12"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "JUMPDEST"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "DUP1"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "51"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "51"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "CALLDATALOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "AND"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "PUSH [tag]",
															"value": "52"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "tag",
															"value": "13"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMPDEST"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH [tag]",
															"value": "48"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH [tag]",
															"value": "54"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "tag",
															"value": "14"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMPDEST"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH [tag]",
															"value": "56"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "tag",
															"value": "15"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "JUMPDEST"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "tag",
															"value": "16"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "JUMPDEST"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "DUP1"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "60"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "60"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "CALLDATALOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "AND"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH [tag]",
															"value": "61"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "tag",
															"value": "17"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "JUMPDEST"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "DUP1"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "63"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "63"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "PUSH [tag]",
															"value": "64"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "tag",
															"value": "18"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "JUMPDEST"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "PUSH [tag]",
															"value": "66"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "tag",
															"value": "19"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "JUMPDEST"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "tag",
															"value": "20"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMPDEST"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH [tag]",
															"value": "48"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH [tag]",
															"value": "70"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "tag",
															"value": "21"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "JUMPDEST"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "PUSH [tag]",
															"value": "72"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "tag",
															"value": "22"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "JUMPDEST"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "PUSH [tag]",
															"value": "74"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "tag",
															"value": "23"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMPDEST"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH [tag]",
															"value": "28"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH [tag]",
															"value": "76"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "tag",
															"value": "24"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "JUMPDEST"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH [tag]",
															"value": "38"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "DUP1"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "CALLDATASIZE"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "SUB"
														},
														{
															"begin": 13,
															"end": 16,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 17,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "78"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "78"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "DUP1"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "SWAP1"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "DUP2"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "ADD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "SWAP1"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "DUP3"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "ADD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "AND"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "SWAP1"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH",
															"value": "60"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "DUP2"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "ADD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "SWAP1"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH",
															"value": "80"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "ADD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "CALLDATALOAD"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "PUSH [tag]",
															"value": "79"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "tag",
															"value": "30"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "DUP2"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "AND"
														},
														{
															"begin": 2551,
															"end": 2558,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "SWAP1"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "DUP2"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "MSTORE"
														},
														{
															"begin": 2670,
															"end": 2677,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "SWAP1"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "DUP2"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "MSTORE"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "DUP1"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "DUP4"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "KECCAK256"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "SLOAD"
														},
														{
															"begin": 2622,
															"end": 2644,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 2622,
															"end": 2653,
															"name": "SWAP1"
														},
														{
															"begin": 2622,
															"end": 2653,
															"name": "SWAP3"
														},
														{
															"begin": 2622,
															"end": 2653,
															"name": "MSTORE"
														},
														{
															"begin": 2622,
															"end": 2653,
															"name": "DUP3"
														},
														{
															"begin": 2622,
															"end": 2653,
															"name": "KECCAK256"
														},
														{
															"begin": 2622,
															"end": 2653,
															"name": "SLOAD"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "PUSH [tag]",
															"value": "81"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "SWAP2"
														},
														{
															"begin": 2670,
															"end": 2686,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "PUSH [tag]",
															"value": "82"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "SWAP1"
														},
														{
															"begin": 2660,
															"end": 2664,
															"name": "PUSH",
															"value": "DE0B6B3A7640000"
														},
														{
															"begin": 2660,
															"end": 2664,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2655,
															"name": "PUSH [tag]",
															"value": "83"
														},
														{
															"begin": 2578,
															"end": 2655,
															"name": "SWAP1"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "PUSH [tag]",
															"value": "84"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "SWAP1"
														},
														{
															"begin": 2601,
															"end": 2617,
															"name": "PUSH [tag]",
															"value": "85"
														},
														{
															"begin": 2601,
															"end": 2615,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 2601,
															"end": 2617,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2601,
															"end": 2617,
															"name": "tag",
															"value": "85"
														},
														{
															"begin": 2601,
															"end": 2617,
															"name": "JUMPDEST"
														},
														{
															"begin": 2601,
															"end": 2621,
															"name": "SWAP1"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2601,
															"end": 2621,
															"name": "PUSH [tag]",
															"value": "86"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "AND"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "tag",
															"value": "84"
														},
														{
															"begin": 2601,
															"end": 2654,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "DUP9"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "AND"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "DUP2"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "MSTORE"
														},
														{
															"begin": 2578,
															"end": 2587,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "MSTORE"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "KECCAK256"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "SLOAD"
														},
														{
															"begin": 2578,
															"end": 2596,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2600,
															"name": "PUSH [tag]",
															"value": "87"
														},
														{
															"begin": 2578,
															"end": 2655,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2578,
															"end": 2655,
															"name": "tag",
															"value": "83"
														},
														{
															"begin": 2578,
															"end": 2655,
															"name": "JUMPDEST"
														},
														{
															"begin": 2578,
															"end": 2659,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2578,
															"end": 2659,
															"name": "PUSH [tag]",
															"value": "88"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "AND"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "tag",
															"value": "82"
														},
														{
															"begin": 2578,
															"end": 2665,
															"name": "JUMPDEST"
														},
														{
															"begin": 2578,
															"end": 2669,
															"name": "SWAP1"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2578,
															"end": 2669,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "AND"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "tag",
															"value": "81"
														},
														{
															"begin": 2578,
															"end": 2687,
															"name": "JUMPDEST"
														},
														{
															"begin": 2571,
															"end": 2687,
															"name": "SWAP3"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 2497,
															"end": 2695,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "tag",
															"value": "33"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "JUMPDEST"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "MSTORE"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "SWAP1"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "DUP2"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "MSTORE"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "SWAP1"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "KECCAK256"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "SLOAD"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "DUP2"
														},
														{
															"begin": 1279,
															"end": 1321,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "tag",
															"value": "35"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "JUMPDEST"
														},
														{
															"begin": 1872,
															"end": 1884,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 1872,
															"end": 1884,
															"name": "SLOAD"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "tag",
															"value": "90"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "JUMPDEST"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "SWAP1"
														},
														{
															"begin": 1799,
															"end": 1892,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "tag",
															"value": "37"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "JUMPDEST"
														},
														{
															"begin": 2758,
															"end": 2765,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 2800,
															"end": 2815,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 2800,
															"end": 2815,
															"name": "SLOAD"
														},
														{
															"begin": 2785,
															"end": 2795,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 2785,
															"end": 2795,
															"name": "SLOAD"
														},
														{
															"begin": 2785,
															"end": 2799,
															"name": "PUSH [tag]",
															"value": "87"
														},
														{
															"begin": 2785,
															"end": 2799,
															"name": "SWAP1"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "SWAP2"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "SWAP1"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "AND"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "tag",
															"value": "92"
														},
														{
															"begin": 2785,
															"end": 2816,
															"name": "JUMPDEST"
														},
														{
															"begin": 2778,
															"end": 2816,
															"name": "SWAP1"
														},
														{
															"begin": 2778,
															"end": 2816,
															"name": "POP"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "SWAP1"
														},
														{
															"begin": 2703,
															"end": 2824,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "tag",
															"value": "40"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 3896,
															"end": 3906,
															"name": "CALLER"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "PUSH [tag]",
															"value": "95"
														},
														{
															"begin": 5879,
															"end": 5893,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "tag",
															"value": "95"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMPDEST"
														},
														{
															"begin": 5856,
															"end": 5876,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 5856,
															"end": 5895,
															"name": "SSTORE"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "PUSH [tag]",
															"value": "96"
														},
														{
															"begin": 5923,
															"end": 5947,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "tag",
															"value": "96"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMPDEST"
														},
														{
															"begin": 5906,
															"end": 5920,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5906,
															"end": 5949,
															"name": "SSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "DUP2"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "AND"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "ISZERO"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "PUSH [tag]",
															"value": "97"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPI"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "PUSH [tag]",
															"value": "98"
														},
														{
															"begin": 6028,
															"end": 6035,
															"name": "DUP2"
														},
														{
															"begin": 6021,
															"end": 6027,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "tag",
															"value": "98"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP3"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "AND"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6009,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP4"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "KECCAK256"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SSTORE"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "SLOAD"
														},
														{
															"begin": 6051,
															"end": 6073,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "MSTORE"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "KECCAK256"
														},
														{
															"begin": 6051,
															"end": 6105,
															"name": "SSTORE"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "tag",
															"value": "97"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPDEST"
														},
														{
															"begin": 3936,
															"end": 3937,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3927,
															"end": 3933,
															"name": "DUP4"
														},
														{
															"begin": 3927,
															"end": 3937,
															"name": "GT"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH [tag]",
															"value": "100"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "JUMPI"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "DUP1"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "DUP2"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "MSTORE"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "DUP3"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "ADD"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "MSTORE"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "11"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "DUP3"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "ADD"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "43616E6E6F74207769746864726177203"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "7C"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "DUP3"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "ADD"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "MSTORE"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "SWAP1"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "MLOAD"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "SWAP1"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "DUP2"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "SWAP1"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "SUB"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "ADD"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "SWAP1"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "REVERT"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "tag",
															"value": "100"
														},
														{
															"begin": 3919,
															"end": 3959,
															"name": "JUMPDEST"
														},
														{
															"begin": 3985,
															"end": 3997,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3985,
															"end": 3997,
															"name": "SLOAD"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "PUSH [tag]",
															"value": "101"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "SWAP1"
														},
														{
															"begin": 4002,
															"end": 4008,
															"name": "DUP5"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3985,
															"end": 4001,
															"name": "PUSH [tag]",
															"value": "86"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "AND"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "tag",
															"value": "101"
														},
														{
															"begin": 3985,
															"end": 4009,
															"name": "JUMPDEST"
														},
														{
															"begin": 3970,
															"end": 3982,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3970,
															"end": 4009,
															"name": "SSTORE"
														},
														{
															"begin": 4054,
															"end": 4064,
															"name": "CALLER"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "SWAP1"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "DUP2"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "MSTORE"
														},
														{
															"begin": 4044,
															"end": 4053,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "MSTORE"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "SWAP1"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "KECCAK256"
														},
														{
															"begin": 4044,
															"end": 4065,
															"name": "SLOAD"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "PUSH [tag]",
															"value": "102"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "SWAP1"
														},
														{
															"begin": 4070,
															"end": 4076,
															"name": "DUP5"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4044,
															"end": 4069,
															"name": "PUSH [tag]",
															"value": "86"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "AND"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "tag",
															"value": "102"
														},
														{
															"begin": 4044,
															"end": 4077,
															"name": "JUMPDEST"
														},
														{
															"begin": 4030,
															"end": 4040,
															"name": "CALLER"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "DUP2"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "DUP2"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "MSTORE"
														},
														{
															"begin": 4020,
															"end": 4029,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "MSTORE"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "SWAP1"
														},
														{
															"begin": 4020,
															"end": 4041,
															"name": "KECCAK256"
														},
														{
															"begin": 4020,
															"end": 4077,
															"name": "SWAP2"
														},
														{
															"begin": 4020,
															"end": 4077,
															"name": "SWAP1"
														},
														{
															"begin": 4020,
															"end": 4077,
															"name": "SWAP2"
														},
														{
															"begin": 4020,
															"end": 4077,
															"name": "SSTORE"
														},
														{
															"begin": 4088,
															"end": 4100,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 4088,
															"end": 4100,
															"name": "SLOAD"
														},
														{
															"begin": 4088,
															"end": 4133,
															"name": "PUSH [tag]",
															"value": "103"
														},
														{
															"begin": 4088,
															"end": 4133,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 4088,
															"end": 4100,
															"name": "SWAP1"
														},
														{
															"begin": 4088,
															"end": 4100,
															"name": "SWAP2"
														},
														{
															"begin": 4088,
															"end": 4100,
															"name": "AND"
														},
														{
															"begin": 4088,
															"end": 4100,
															"name": "SWAP1"
														},
														{
															"begin": 4126,
															"end": 4132,
															"name": "DUP6"
														},
														{
															"begin": 4088,
															"end": 4113,
															"name": "PUSH [tag]",
															"value": "104"
														},
														{
															"begin": 4088,
															"end": 4133,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4088,
															"end": 4133,
															"name": "tag",
															"value": "103"
														},
														{
															"begin": 4088,
															"end": 4133,
															"name": "JUMPDEST"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "DUP1"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "MLOAD"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "DUP5"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "DUP2"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "MSTORE"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "SWAP1"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "MLOAD"
														},
														{
															"begin": 4159,
															"end": 4169,
															"name": "CALLER"
														},
														{
															"begin": 4159,
															"end": 4169,
															"name": "SWAP2"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "PUSH",
															"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "SWAP2"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "SWAP1"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "DUP2"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "SWAP1"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "SUB"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "ADD"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "SWAP1"
														},
														{
															"begin": 4149,
															"end": 4178,
															"name": "LOG2"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "105"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH data",
															"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP4"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "CODECOPY"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "105"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "POP"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "POP"
														},
														{
															"begin": 3829,
															"end": 4186,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "tag",
															"value": "42"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMPDEST"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "SLOAD"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "DUP2"
														},
														{
															"begin": 1088,
															"end": 1128,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "tag",
															"value": "45"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "JUMPDEST"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "SLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 245,
															"end": 264,
															"name": "AND"
														},
														{
															"begin": 231,
															"end": 241,
															"name": "CALLER"
														},
														{
															"begin": 231,
															"end": 264,
															"name": "EQ"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH [tag]",
															"value": "107"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "JUMPI"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP3"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SUB"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP3"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MSTORE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH data",
															"value": "D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "CODECOPY"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "ADD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "POP"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "POP"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "MLOAD"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "DUP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP2"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SUB"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "SWAP1"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "REVERT"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "tag",
															"value": "107"
														},
														{
															"begin": 223,
															"end": 311,
															"name": "JUMPDEST"
														},
														{
															"begin": 4768,
															"end": 4769,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "PUSH [tag]",
															"value": "109"
														},
														{
															"begin": 5879,
															"end": 5893,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "tag",
															"value": "109"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMPDEST"
														},
														{
															"begin": 5856,
															"end": 5876,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 5856,
															"end": 5895,
															"name": "SSTORE"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "PUSH [tag]",
															"value": "110"
														},
														{
															"begin": 5923,
															"end": 5947,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "tag",
															"value": "110"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMPDEST"
														},
														{
															"begin": 5906,
															"end": 5920,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5906,
															"end": 5949,
															"name": "SSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "DUP2"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "AND"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "ISZERO"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "PUSH [tag]",
															"value": "111"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPI"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "PUSH [tag]",
															"value": "112"
														},
														{
															"begin": 6028,
															"end": 6035,
															"name": "DUP2"
														},
														{
															"begin": 6021,
															"end": 6027,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "tag",
															"value": "112"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP3"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "AND"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6009,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP4"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "KECCAK256"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SSTORE"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "SLOAD"
														},
														{
															"begin": 6051,
															"end": 6073,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "MSTORE"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "KECCAK256"
														},
														{
															"begin": 6051,
															"end": 6105,
															"name": "SSTORE"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "tag",
															"value": "111"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPDEST"
														},
														{
															"begin": 4806,
															"end": 4818,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4806,
															"end": 4818,
															"name": "SLOAD"
														},
														{
															"begin": 4787,
															"end": 4802,
															"name": "TIMESTAMP"
														},
														{
															"begin": 4787,
															"end": 4818,
															"name": "LT"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "PUSH [tag]",
															"value": "114"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "JUMPI"
														},
														{
															"begin": 4859,
															"end": 4874,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 4859,
															"end": 4874,
															"name": "SLOAD"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "PUSH [tag]",
															"value": "115"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "SWAP1"
														},
														{
															"begin": 4848,
															"end": 4854,
															"name": "DUP4"
														},
														{
															"begin": 4848,
															"end": 4854,
															"name": "SWAP1"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4848,
															"end": 4858,
															"name": "PUSH [tag]",
															"value": "88"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "AND"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "tag",
															"value": "115"
														},
														{
															"begin": 4848,
															"end": 4875,
															"name": "JUMPDEST"
														},
														{
															"begin": 4835,
															"end": 4845,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 4835,
															"end": 4875,
															"name": "SSTORE"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "PUSH [tag]",
															"value": "116"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "JUMP"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "tag",
															"value": "114"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "JUMPDEST"
														},
														{
															"begin": 4928,
															"end": 4940,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 4928,
															"end": 4940,
															"name": "SLOAD"
														},
														{
															"begin": 4908,
															"end": 4925,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4908,
															"end": 4925,
															"name": "SWAP1"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "PUSH [tag]",
															"value": "117"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "SWAP1"
														},
														{
															"begin": 4945,
															"end": 4960,
															"name": "TIMESTAMP"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4928,
															"end": 4944,
															"name": "PUSH [tag]",
															"value": "86"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "AND"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "tag",
															"value": "117"
														},
														{
															"begin": 4928,
															"end": 4961,
															"name": "JUMPDEST"
														},
														{
															"begin": 4908,
															"end": 4961,
															"name": "SWAP1"
														},
														{
															"begin": 4908,
															"end": 4961,
															"name": "POP"
														},
														{
															"begin": 4976,
															"end": 4992,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "PUSH [tag]",
															"value": "118"
														},
														{
															"begin": 5009,
															"end": 5019,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 5009,
															"end": 5019,
															"name": "SLOAD"
														},
														{
															"begin": 4995,
															"end": 5004,
															"name": "DUP4"
														},
														{
															"begin": 4995,
															"end": 5008,
															"name": "PUSH [tag]",
															"value": "87"
														},
														{
															"begin": 4995,
															"end": 5008,
															"name": "SWAP1"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "SWAP2"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "SWAP1"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "AND"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "tag",
															"value": "118"
														},
														{
															"begin": 4995,
															"end": 5020,
															"name": "JUMPDEST"
														},
														{
															"begin": 5073,
															"end": 5088,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 5073,
															"end": 5088,
															"name": "SLOAD"
														},
														{
															"begin": 4976,
															"end": 5020,
															"name": "SWAP1"
														},
														{
															"begin": 4976,
															"end": 5020,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 5048,
															"end": 5089,
															"name": "PUSH [tag]",
															"value": "119"
														},
														{
															"begin": 5048,
															"end": 5089,
															"name": "SWAP1"
														},
														{
															"begin": 5048,
															"end": 5068,
															"name": "PUSH [tag]",
															"value": "83"
														},
														{
															"begin": 5048,
															"end": 5054,
															"name": "DUP7"
														},
														{
															"begin": 4976,
															"end": 5020,
															"name": "DUP5"
														},
														{
															"begin": 5048,
															"end": 5068,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5048,
															"end": 5058,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 5048,
															"end": 5068,
															"name": "AND"
														},
														{
															"begin": 5048,
															"end": 5068,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5048,
															"end": 5089,
															"name": "tag",
															"value": "119"
														},
														{
															"begin": 5048,
															"end": 5089,
															"name": "JUMPDEST"
														},
														{
															"begin": 5035,
															"end": 5045,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 5035,
															"end": 5089,
															"name": "SSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "tag",
															"value": "116"
														},
														{
															"begin": 4783,
															"end": 5101,
															"name": "JUMPDEST"
														},
														{
															"begin": 5476,
															"end": 5488,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 5476,
															"end": 5488,
															"name": "SLOAD"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "70A08231"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP2"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "MSTORE"
														},
														{
															"begin": 5507,
															"end": 5511,
															"name": "ADDRESS"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP3"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "ADD"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "MSTORE"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP3"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 5476,
															"end": 5488,
															"name": "AND"
														},
														{
															"begin": 5476,
															"end": 5488,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "70A08231"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP2"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP4"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "ADD"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP3"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP3"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP2"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP3"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SUB"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "ADD"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP2"
														},
														{
															"begin": 5476,
															"end": 5488,
															"name": "DUP7"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "121"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "121"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "POP"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "GAS"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "STATICCALL"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "122"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 45,
															"end": 61,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 42,
															"end": 43,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 39,
															"end": 40,
															"name": "DUP1"
														},
														{
															"begin": 24,
															"end": 62,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 77,
															"end": 93,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 74,
															"end": 75,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 67,
															"end": 94,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "122"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "POP"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "POP"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "POP"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "POP"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "MLOAD"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "123"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "123"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "MLOAD"
														},
														{
															"begin": 5558,
															"end": 5573,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 5558,
															"end": 5573,
															"name": "SLOAD"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "PUSH [tag]",
															"value": "124"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "SWAP1"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "DUP3"
														},
														{
															"begin": 5476,
															"end": 5513,
															"name": "SWAP1"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5546,
															"end": 5557,
															"name": "PUSH [tag]",
															"value": "88"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "AND"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "tag",
															"value": "124"
														},
														{
															"begin": 5546,
															"end": 5574,
															"name": "JUMPDEST"
														},
														{
															"begin": 5532,
															"end": 5542,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 5532,
															"end": 5542,
															"name": "SLOAD"
														},
														{
															"begin": 5532,
															"end": 5574,
															"name": "GT"
														},
														{
															"begin": 5532,
															"end": 5574,
															"name": "ISZERO"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH [tag]",
															"value": "125"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "JUMPI"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "DUP1"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "DUP2"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "MSTORE"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "DUP3"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "ADD"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "MSTORE"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "18"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "DUP3"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "ADD"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "MSTORE"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "50726F76696465642072657761726420746F6F20686967680000000000000000"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "DUP3"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "ADD"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "MSTORE"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "SWAP1"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "MLOAD"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "SWAP1"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "DUP2"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "SWAP1"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "SUB"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "ADD"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "SWAP1"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "REVERT"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "tag",
															"value": "125"
														},
														{
															"begin": 5524,
															"end": 5603,
															"name": "JUMPDEST"
														},
														{
															"begin": 5633,
															"end": 5648,
															"name": "TIMESTAMP"
														},
														{
															"begin": 5616,
															"end": 5630,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5616,
															"end": 5648,
															"name": "DUP2"
														},
														{
															"begin": 5616,
															"end": 5648,
															"name": "SWAP1"
														},
														{
															"begin": 5616,
															"end": 5648,
															"name": "SSTORE"
														},
														{
															"begin": 5694,
															"end": 5709,
															"name": "PUSH",
															"value": "6"
														},
														{
															"begin": 5694,
															"end": 5709,
															"name": "SLOAD"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "PUSH [tag]",
															"value": "126"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "SWAP2"
														},
														{
															"begin": 5633,
															"end": 5648,
															"name": "SWAP1"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 5674,
															"end": 5693,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "AND"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "tag",
															"value": "126"
														},
														{
															"begin": 5674,
															"end": 5710,
															"name": "JUMPDEST"
														},
														{
															"begin": 5659,
															"end": 5671,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 5659,
															"end": 5710,
															"name": "SSTORE"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "DUP1"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "MLOAD"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "DUP5"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "DUP2"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "MSTORE"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "SWAP1"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "MLOAD"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "PUSH",
															"value": "DE88A922E0D3B88B24E9623EFEB464919C6BF9F66857A65E2BFCF2CE87A9433D"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "SWAP2"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "DUP2"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "SWAP1"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "SUB"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "ADD"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "SWAP1"
														},
														{
															"begin": 5726,
															"end": 5745,
															"name": "LOG1"
														},
														{
															"begin": 6127,
															"end": 6128,
															"name": "POP"
														},
														{
															"begin": 322,
															"end": 323,
															"name": "POP"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "POP"
														},
														{
															"begin": 4670,
															"end": 5753,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "tag",
															"value": "47"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 4248,
															"end": 4258,
															"name": "CALLER"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "PUSH [tag]",
															"value": "129"
														},
														{
															"begin": 5879,
															"end": 5893,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "tag",
															"value": "129"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMPDEST"
														},
														{
															"begin": 5856,
															"end": 5876,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 5856,
															"end": 5895,
															"name": "SSTORE"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "PUSH [tag]",
															"value": "130"
														},
														{
															"begin": 5923,
															"end": 5947,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "tag",
															"value": "130"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMPDEST"
														},
														{
															"begin": 5906,
															"end": 5920,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5906,
															"end": 5949,
															"name": "SSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "DUP2"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "AND"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "ISZERO"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "PUSH [tag]",
															"value": "131"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPI"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "PUSH [tag]",
															"value": "132"
														},
														{
															"begin": 6028,
															"end": 6035,
															"name": "DUP2"
														},
														{
															"begin": 6021,
															"end": 6027,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "tag",
															"value": "132"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP3"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "AND"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6009,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP4"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "KECCAK256"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SSTORE"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "SLOAD"
														},
														{
															"begin": 6051,
															"end": 6073,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "MSTORE"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "KECCAK256"
														},
														{
															"begin": 6051,
															"end": 6105,
															"name": "SSTORE"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "tag",
															"value": "131"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPDEST"
														},
														{
															"begin": 4296,
															"end": 4306,
															"name": "CALLER"
														},
														{
															"begin": 4271,
															"end": 4285,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "SWAP1"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "DUP2"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "MSTORE"
														},
														{
															"begin": 4288,
															"end": 4295,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "MSTORE"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "SWAP1"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "KECCAK256"
														},
														{
															"begin": 4288,
															"end": 4307,
															"name": "SLOAD"
														},
														{
															"begin": 4322,
															"end": 4332,
															"name": "DUP1"
														},
														{
															"begin": 4322,
															"end": 4332,
															"name": "ISZERO"
														},
														{
															"begin": 4318,
															"end": 4494,
															"name": "PUSH [tag]",
															"value": "134"
														},
														{
															"begin": 4318,
															"end": 4494,
															"name": "JUMPI"
														},
														{
															"begin": 4357,
															"end": 4367,
															"name": "CALLER"
														},
														{
															"begin": 4371,
															"end": 4372,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "DUP2"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "DUP2"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "MSTORE"
														},
														{
															"begin": 4349,
															"end": 4356,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "MSTORE"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "DUP2"
														},
														{
															"begin": 4349,
															"end": 4368,
															"name": "KECCAK256"
														},
														{
															"begin": 4349,
															"end": 4372,
															"name": "SSTORE"
														},
														{
															"begin": 4387,
															"end": 4399,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 4387,
															"end": 4399,
															"name": "SLOAD"
														},
														{
															"begin": 4387,
															"end": 4432,
															"name": "PUSH [tag]",
															"value": "135"
														},
														{
															"begin": 4387,
															"end": 4432,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 4387,
															"end": 4399,
															"name": "SWAP1"
														},
														{
															"begin": 4387,
															"end": 4399,
															"name": "SWAP2"
														},
														{
															"begin": 4387,
															"end": 4399,
															"name": "AND"
														},
														{
															"begin": 4387,
															"end": 4399,
															"name": "SWAP1"
														},
														{
															"begin": 4425,
															"end": 4431,
															"name": "DUP4"
														},
														{
															"begin": 4387,
															"end": 4412,
															"name": "PUSH [tag]",
															"value": "104"
														},
														{
															"begin": 4387,
															"end": 4432,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4387,
															"end": 4432,
															"name": "tag",
															"value": "135"
														},
														{
															"begin": 4387,
															"end": 4432,
															"name": "JUMPDEST"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "DUP1"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "MLOAD"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "DUP3"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "DUP2"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "MSTORE"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "SWAP1"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "MLOAD"
														},
														{
															"begin": 4463,
															"end": 4473,
															"name": "CALLER"
														},
														{
															"begin": 4463,
															"end": 4473,
															"name": "SWAP2"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "PUSH",
															"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "SWAP2"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "SWAP1"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "DUP2"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "SWAP1"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "SUB"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "ADD"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "SWAP1"
														},
														{
															"begin": 4452,
															"end": 4482,
															"name": "LOG2"
														},
														{
															"begin": 4318,
															"end": 4494,
															"name": "tag",
															"value": "134"
														},
														{
															"begin": 4318,
															"end": 4494,
															"name": "JUMPDEST"
														},
														{
															"begin": 6127,
															"end": 6128,
															"name": "POP"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "136"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH data",
															"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP4"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "CODECOPY"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "136"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "POP"
														},
														{
															"begin": 4194,
															"end": 4501,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "tag",
															"value": "49"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMPDEST"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "SLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "AND"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "DUP2"
														},
														{
															"begin": 73,
															"end": 107,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "tag",
															"value": "52"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "AND"
														},
														{
															"begin": 1959,
															"end": 1966,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "SWAP1"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "DUP2"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "MSTORE"
														},
														{
															"begin": 1986,
															"end": 1995,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "MSTORE"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "SWAP1"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "KECCAK256"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "SLOAD"
														},
														{
															"begin": 1986,
															"end": 2004,
															"name": "SWAP1"
														},
														{
															"begin": 1900,
															"end": 2012,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "tag",
															"value": "54"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMPDEST"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "SLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "AND"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "DUP2"
														},
														{
															"begin": 981,
															"end": 1007,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "tag",
															"value": "56"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMPDEST"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "SLOAD"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "DUP2"
														},
														{
															"begin": 1052,
															"end": 1081,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "tag",
															"value": "58"
														},
														{
															"begin": 2020,
															"end": 2151,
															"name": "JUMPDEST"
														},
														{
															"begin": 2077,
															"end": 2084,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2104,
															"end": 2143,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 2113,
															"end": 2128,
															"name": "TIMESTAMP"
														},
														{
															"begin": 2130,
															"end": 2142,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2130,
															"end": 2142,
															"name": "SLOAD"
														},
														{
															"begin": 2104,
															"end": 2112,
															"name": "PUSH [tag]",
															"value": "140"
														},
														{
															"begin": 2104,
															"end": 2143,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "tag",
															"value": "61"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "JUMPDEST"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "MSTORE"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "SWAP1"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "DUP2"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "MSTORE"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "SWAP1"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "KECCAK256"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "SLOAD"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "DUP2"
														},
														{
															"begin": 1215,
															"end": 1272,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "tag",
															"value": "64"
														},
														{
															"begin": 3452,
															"end": 3821,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 3518,
															"end": 3528,
															"name": "CALLER"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "PUSH [tag]",
															"value": "143"
														},
														{
															"begin": 5879,
															"end": 5893,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "tag",
															"value": "143"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMPDEST"
														},
														{
															"begin": 5856,
															"end": 5876,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 5856,
															"end": 5895,
															"name": "SSTORE"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "PUSH [tag]",
															"value": "144"
														},
														{
															"begin": 5923,
															"end": 5947,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "tag",
															"value": "144"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMPDEST"
														},
														{
															"begin": 5906,
															"end": 5920,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5906,
															"end": 5949,
															"name": "SSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "DUP2"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "AND"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "ISZERO"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "PUSH [tag]",
															"value": "145"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPI"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "PUSH [tag]",
															"value": "146"
														},
														{
															"begin": 6028,
															"end": 6035,
															"name": "DUP2"
														},
														{
															"begin": 6021,
															"end": 6027,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "tag",
															"value": "146"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP3"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "AND"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6009,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP4"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "KECCAK256"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SSTORE"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "SLOAD"
														},
														{
															"begin": 6051,
															"end": 6073,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "MSTORE"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "KECCAK256"
														},
														{
															"begin": 6051,
															"end": 6105,
															"name": "SSTORE"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "tag",
															"value": "145"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPDEST"
														},
														{
															"begin": 3558,
															"end": 3559,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3549,
															"end": 3555,
															"name": "DUP4"
														},
														{
															"begin": 3549,
															"end": 3559,
															"name": "GT"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH [tag]",
															"value": "148"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "JUMPI"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "DUP1"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "DUP2"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "MSTORE"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "DUP3"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "ADD"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "MSTORE"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "DUP3"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "ADD"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "43616E6E6F74207374616B65203"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "94"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "DUP3"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "ADD"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "MSTORE"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "SWAP1"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "MLOAD"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "SWAP1"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "DUP2"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "SWAP1"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "SUB"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "ADD"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "SWAP1"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "REVERT"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "tag",
															"value": "148"
														},
														{
															"begin": 3541,
															"end": 3578,
															"name": "JUMPDEST"
														},
														{
															"begin": 3604,
															"end": 3616,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3604,
															"end": 3616,
															"name": "SLOAD"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "PUSH [tag]",
															"value": "149"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "SWAP1"
														},
														{
															"begin": 3621,
															"end": 3627,
															"name": "DUP5"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3604,
															"end": 3620,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "AND"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "tag",
															"value": "149"
														},
														{
															"begin": 3604,
															"end": 3628,
															"name": "JUMPDEST"
														},
														{
															"begin": 3589,
															"end": 3601,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3589,
															"end": 3628,
															"name": "SSTORE"
														},
														{
															"begin": 3673,
															"end": 3683,
															"name": "CALLER"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "SWAP1"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "DUP2"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "MSTORE"
														},
														{
															"begin": 3663,
															"end": 3672,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "MSTORE"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "SWAP1"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "KECCAK256"
														},
														{
															"begin": 3663,
															"end": 3684,
															"name": "SLOAD"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "PUSH [tag]",
															"value": "150"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "SWAP1"
														},
														{
															"begin": 3689,
															"end": 3695,
															"name": "DUP5"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3663,
															"end": 3688,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "AND"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "tag",
															"value": "150"
														},
														{
															"begin": 3663,
															"end": 3696,
															"name": "JUMPDEST"
														},
														{
															"begin": 3649,
															"end": 3659,
															"name": "CALLER"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "DUP2"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "DUP2"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "MSTORE"
														},
														{
															"begin": 3639,
															"end": 3648,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "MSTORE"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "SWAP1"
														},
														{
															"begin": 3639,
															"end": 3660,
															"name": "KECCAK256"
														},
														{
															"begin": 3639,
															"end": 3696,
															"name": "SWAP2"
														},
														{
															"begin": 3639,
															"end": 3696,
															"name": "SWAP1"
														},
														{
															"begin": 3639,
															"end": 3696,
															"name": "SWAP2"
														},
														{
															"begin": 3639,
															"end": 3696,
															"name": "SSTORE"
														},
														{
															"begin": 3707,
															"end": 3719,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 3707,
															"end": 3719,
															"name": "SLOAD"
														},
														{
															"begin": 3707,
															"end": 3771,
															"name": "PUSH [tag]",
															"value": "151"
														},
														{
															"begin": 3707,
															"end": 3771,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 3707,
															"end": 3719,
															"name": "SWAP1"
														},
														{
															"begin": 3707,
															"end": 3719,
															"name": "SWAP2"
														},
														{
															"begin": 3707,
															"end": 3719,
															"name": "AND"
														},
														{
															"begin": 3707,
															"end": 3719,
															"name": "SWAP1"
														},
														{
															"begin": 3757,
															"end": 3761,
															"name": "ADDRESS"
														},
														{
															"begin": 3764,
															"end": 3770,
															"name": "DUP7"
														},
														{
															"begin": 3707,
															"end": 3736,
															"name": "PUSH [tag]",
															"value": "152"
														},
														{
															"begin": 3707,
															"end": 3771,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3707,
															"end": 3771,
															"name": "tag",
															"value": "151"
														},
														{
															"begin": 3707,
															"end": 3771,
															"name": "JUMPDEST"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "DUP1"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "MLOAD"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "DUP5"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "DUP2"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "MSTORE"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "SWAP1"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "MLOAD"
														},
														{
															"begin": 3794,
															"end": 3804,
															"name": "CALLER"
														},
														{
															"begin": 3794,
															"end": 3804,
															"name": "SWAP2"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "PUSH",
															"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "SWAP2"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "SWAP1"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "DUP2"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "SWAP1"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "SUB"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "ADD"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "SWAP1"
														},
														{
															"begin": 3787,
															"end": 3813,
															"name": "LOG2"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "105"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH data",
															"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP4"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "CODECOPY"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "tag",
															"value": "66"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "JUMPDEST"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "SLOAD"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "DUP2"
														},
														{
															"begin": 1135,
															"end": 1164,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "tag",
															"value": "68"
														},
														{
															"begin": 2159,
															"end": 2489,
															"name": "JUMPDEST"
														},
														{
															"begin": 2206,
															"end": 2213,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2230,
															"end": 2242,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 2230,
															"end": 2242,
															"name": "SLOAD"
														},
														{
															"begin": 2246,
															"end": 2247,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2230,
															"end": 2247,
															"name": "EQ"
														},
														{
															"begin": 2226,
															"end": 2303,
															"name": "ISZERO"
														},
														{
															"begin": 2226,
															"end": 2303,
															"name": "PUSH [tag]",
															"value": "155"
														},
														{
															"begin": 2226,
															"end": 2303,
															"name": "JUMPI"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 2271,
															"end": 2291,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 2271,
															"end": 2291,
															"name": "SLOAD"
														},
														{
															"begin": 2264,
															"end": 2291,
															"name": "PUSH [tag]",
															"value": "90"
														},
														{
															"begin": 2264,
															"end": 2291,
															"name": "JUMP"
														},
														{
															"begin": 2226,
															"end": 2303,
															"name": "tag",
															"value": "155"
														},
														{
															"begin": 2226,
															"end": 2303,
															"name": "JUMPDEST"
														},
														{
															"begin": 2333,
															"end": 2481,
															"name": "PUSH [tag]",
															"value": "92"
														},
														{
															"begin": 2376,
															"end": 2466,
															"name": "PUSH [tag]",
															"value": "157"
														},
														{
															"begin": 2453,
															"end": 2465,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 2453,
															"end": 2465,
															"name": "SLOAD"
														},
														{
															"begin": 2376,
															"end": 2448,
															"name": "PUSH [tag]",
															"value": "83"
														},
														{
															"begin": 2443,
															"end": 2447,
															"name": "PUSH",
															"value": "DE0B6B3A7640000"
														},
														{
															"begin": 2376,
															"end": 2438,
															"name": "PUSH [tag]",
															"value": "160"
														},
														{
															"begin": 2427,
															"end": 2437,
															"name": "PUSH",
															"value": "5"
														},
														{
															"begin": 2427,
															"end": 2437,
															"name": "SLOAD"
														},
														{
															"begin": 2376,
															"end": 2422,
															"name": "PUSH [tag]",
															"value": "160"
														},
														{
															"begin": 2407,
															"end": 2421,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 2407,
															"end": 2421,
															"name": "SLOAD"
														},
														{
															"begin": 2376,
															"end": 2402,
															"name": "PUSH [tag]",
															"value": "85"
														},
														{
															"begin": 2376,
															"end": 2400,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 2376,
															"end": 2402,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2376,
															"end": 2422,
															"name": "tag",
															"value": "160"
														},
														{
															"begin": 2376,
															"end": 2422,
															"name": "JUMPDEST"
														},
														{
															"begin": 2376,
															"end": 2426,
															"name": "SWAP1"
														},
														{
															"begin": 2376,
															"end": 2438,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2376,
															"end": 2426,
															"name": "PUSH [tag]",
															"value": "87"
														},
														{
															"begin": 2376,
															"end": 2438,
															"name": "AND"
														},
														{
															"begin": 2376,
															"end": 2438,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 2376,
															"end": 2466,
															"name": "tag",
															"value": "157"
														},
														{
															"begin": 2376,
															"end": 2466,
															"name": "JUMPDEST"
														},
														{
															"begin": 2333,
															"end": 2353,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 2333,
															"end": 2353,
															"name": "SLOAD"
														},
														{
															"begin": 2333,
															"end": 2353,
															"name": "SWAP1"
														},
														{
															"begin": 2333,
															"end": 2481,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 2333,
															"end": 2357,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 2333,
															"end": 2481,
															"name": "AND"
														},
														{
															"begin": 2333,
															"end": 2481,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "tag",
															"value": "70"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMPDEST"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "PUSH",
															"value": "2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "SLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "AND"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "DUP2"
														},
														{
															"begin": 948,
															"end": 974,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "tag",
															"value": "72"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "JUMPDEST"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "SLOAD"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "DUP2"
														},
														{
															"begin": 1171,
															"end": 1206,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "tag",
															"value": "74"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "JUMPDEST"
														},
														{
															"begin": 4564,
															"end": 4574,
															"name": "CALLER"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "SWAP1"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "DUP2"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "MSTORE"
														},
														{
															"begin": 4554,
															"end": 4563,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "MSTORE"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "SWAP1"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "KECCAK256"
														},
														{
															"begin": 4554,
															"end": 4575,
															"name": "SLOAD"
														},
														{
															"begin": 4545,
															"end": 4576,
															"name": "PUSH [tag]",
															"value": "163"
														},
														{
															"begin": 4545,
															"end": 4576,
															"name": "SWAP1"
														},
														{
															"begin": 4545,
															"end": 4553,
															"name": "PUSH [tag]",
															"value": "40"
														},
														{
															"begin": 4545,
															"end": 4576,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4545,
															"end": 4576,
															"name": "tag",
															"value": "163"
														},
														{
															"begin": 4545,
															"end": 4576,
															"name": "JUMPDEST"
														},
														{
															"begin": 4587,
															"end": 4598,
															"name": "PUSH [tag]",
															"value": "164"
														},
														{
															"begin": 4587,
															"end": 4596,
															"name": "PUSH [tag]",
															"value": "47"
														},
														{
															"begin": 4587,
															"end": 4598,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 4587,
															"end": 4598,
															"name": "tag",
															"value": "164"
														},
														{
															"begin": 4587,
															"end": 4598,
															"name": "JUMPDEST"
														},
														{
															"begin": 4509,
															"end": 4606,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "tag",
															"value": "76"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMPDEST"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "SLOAD"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "DUP2"
														},
														{
															"begin": 1014,
															"end": 1045,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "tag",
															"value": "79"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "JUMPDEST"
														},
														{
															"begin": 1318,
															"end": 1319,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SLOAD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "ADD"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "DUP2"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SWAP1"
														},
														{
															"begin": 1301,
															"end": 1319,
															"name": "SSTORE"
														},
														{
															"begin": 3008,
															"end": 3018,
															"name": "CALLER"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "PUSH [tag]",
															"value": "167"
														},
														{
															"begin": 5879,
															"end": 5893,
															"name": "PUSH [tag]",
															"value": "68"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "tag",
															"value": "167"
														},
														{
															"begin": 5879,
															"end": 5895,
															"name": "JUMPDEST"
														},
														{
															"begin": 5856,
															"end": 5876,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 5856,
															"end": 5895,
															"name": "SSTORE"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "PUSH [tag]",
															"value": "168"
														},
														{
															"begin": 5923,
															"end": 5947,
															"name": "PUSH [tag]",
															"value": "58"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "tag",
															"value": "168"
														},
														{
															"begin": 5923,
															"end": 5949,
															"name": "JUMPDEST"
														},
														{
															"begin": 5906,
															"end": 5920,
															"name": "PUSH",
															"value": "7"
														},
														{
															"begin": 5906,
															"end": 5949,
															"name": "SSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "DUP2"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "AND"
														},
														{
															"begin": 5964,
															"end": 5985,
															"name": "ISZERO"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "PUSH [tag]",
															"value": "169"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPI"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "PUSH [tag]",
															"value": "170"
														},
														{
															"begin": 6028,
															"end": 6035,
															"name": "DUP2"
														},
														{
															"begin": 6021,
															"end": 6027,
															"name": "PUSH [tag]",
															"value": "30"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "tag",
															"value": "170"
														},
														{
															"begin": 6021,
															"end": 6036,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP3"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "AND"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6009,
															"name": "PUSH",
															"value": "A"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP2"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "MSTORE"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP1"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "DUP4"
														},
														{
															"begin": 6002,
															"end": 6018,
															"name": "KECCAK256"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP1"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SWAP4"
														},
														{
															"begin": 6002,
															"end": 6036,
															"name": "SSTORE"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "PUSH",
															"value": "8"
														},
														{
															"begin": 6085,
															"end": 6105,
															"name": "SLOAD"
														},
														{
															"begin": 6051,
															"end": 6073,
															"name": "PUSH",
															"value": "9"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "MSTORE"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP2"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "SWAP1"
														},
														{
															"begin": 6051,
															"end": 6082,
															"name": "KECCAK256"
														},
														{
															"begin": 6051,
															"end": 6105,
															"name": "SSTORE"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "tag",
															"value": "169"
														},
														{
															"begin": 5960,
															"end": 6117,
															"name": "JUMPDEST"
														},
														{
															"begin": 3048,
															"end": 3049,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3039,
															"end": 3045,
															"name": "DUP8"
														},
														{
															"begin": 3039,
															"end": 3049,
															"name": "GT"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH [tag]",
															"value": "172"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "JUMPI"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "DUP1"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "DUP2"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "MSTORE"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "DUP3"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "ADD"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "MSTORE"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "E"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "DUP3"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "ADD"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "43616E6E6F74207374616B65203"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "94"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "DUP3"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "ADD"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "MSTORE"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "SWAP1"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "MLOAD"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "SWAP1"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "DUP2"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "SWAP1"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "SUB"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "ADD"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "SWAP1"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "REVERT"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "tag",
															"value": "172"
														},
														{
															"begin": 3031,
															"end": 3068,
															"name": "JUMPDEST"
														},
														{
															"begin": 3094,
															"end": 3106,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3094,
															"end": 3106,
															"name": "SLOAD"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "PUSH [tag]",
															"value": "173"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "SWAP1"
														},
														{
															"begin": 3111,
															"end": 3117,
															"name": "DUP9"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3094,
															"end": 3110,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "AND"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "tag",
															"value": "173"
														},
														{
															"begin": 3094,
															"end": 3118,
															"name": "JUMPDEST"
														},
														{
															"begin": 3079,
															"end": 3091,
															"name": "PUSH",
															"value": "B"
														},
														{
															"begin": 3079,
															"end": 3118,
															"name": "SSTORE"
														},
														{
															"begin": 3163,
															"end": 3173,
															"name": "CALLER"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "SWAP1"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "DUP2"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "MSTORE"
														},
														{
															"begin": 3153,
															"end": 3162,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "MSTORE"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "SWAP1"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "KECCAK256"
														},
														{
															"begin": 3153,
															"end": 3174,
															"name": "SLOAD"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "PUSH [tag]",
															"value": "174"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "SWAP1"
														},
														{
															"begin": 3179,
															"end": 3185,
															"name": "DUP9"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "PUSH",
															"value": "FFFFFFFF"
														},
														{
															"begin": 3153,
															"end": 3178,
															"name": "PUSH [tag]",
															"value": "89"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "AND"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "tag",
															"value": "174"
														},
														{
															"begin": 3153,
															"end": 3186,
															"name": "JUMPDEST"
														},
														{
															"begin": 3139,
															"end": 3149,
															"name": "CALLER"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "DUP2"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "DUP2"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "MSTORE"
														},
														{
															"begin": 3129,
															"end": 3138,
															"name": "PUSH",
															"value": "C"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "MSTORE"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "DUP1"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "DUP3"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "KECCAK256"
														},
														{
															"begin": 3129,
															"end": 3186,
															"name": "SWAP4"
														},
														{
															"begin": 3129,
															"end": 3186,
															"name": "SWAP1"
														},
														{
															"begin": 3129,
															"end": 3186,
															"name": "SWAP4"
														},
														{
															"begin": 3129,
															"end": 3186,
															"name": "SSTORE"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "SLOAD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "D505ACCF"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP2"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP2"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3284,
															"end": 3288,
															"name": "ADDRESS"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP5"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP12"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP11"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "FF"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP10"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "AND"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "84"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP5"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "A4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP9"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "C4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP8"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MSTORE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP3"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "SWAP1"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "SWAP4"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "AND"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "SWAP3"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "D505ACCF"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP3"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "PUSH",
															"value": "E4"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP3"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP4"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "SWAP3"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP2"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP3"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SWAP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "SUB"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ADD"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP2"
														},
														{
															"begin": 3129,
															"end": 3150,
															"name": "DUP4"
														},
														{
															"begin": 3242,
															"end": 3254,
															"name": "DUP8"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "DUP1"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "175"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 30,
															"end": 31,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 27,
															"end": 28,
															"name": "DUP1"
														},
														{
															"begin": 20,
															"end": 32,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "175"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "POP"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "GAS"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "CALL"
														},
														{
															"begin": 3218,
															"end": 3317,
															"name": "ISZERO"
														},
														{
															"begin": 8,
															"end": 17,
															"name": "DUP1"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "ISZERO"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "PUSH [tag]",
															"value": "176"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPI"
														},
														{
															"begin": 45,
															"end": 61,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 42,
															"end": 43,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 39,
															"end": 40,
															"name": "DUP1"
														},
														{
															"begin": 24,
															"end": 62,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 77,
															"end": 93,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 74,
															"end": 75,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 67,
															"end": 94,
															"name": "REVERT"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "tag",
															"value": "176"
														},
														{
															"begin": 5,
															"end": 7,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 3330,
															"end": 3342,
															"name": "PUSH",
															"value": "3"
														},
														{
															"begin": 3330,
															"end": 3342,
															"name": "SLOAD"
														},
														{
															"begin": 3330,
															"end": 3394,
															"name": "PUSH [tag]",
															"value": "177"
														},
														{
															"begin": 3330,
															"end": 3394,
															"name": "SWAP3"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 3330,
															"end": 3342,
															"name": "AND"
														},
														{
															"begin": 3330,
															"end": 3342,
															"name": "SWAP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 3360,
															"end": 3370,
															"name": "CALLER"
														},
														{
															"begin": 3380,
															"end": 3384,
															"name": "ADDRESS"
														},
														{
															"begin": 3387,
															"end": 3393,
															"name": "DUP11"
														},
														{
															"begin": 3330,
															"end": 3359,
															"name": "PUSH [tag]",
															"value": "152"
														},
														{
															"begin": 3330,
															"end": 3394,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3330,
															"end": 3394,
															"name": "tag",
															"value": "177"
														},
														{
															"begin": 3330,
															"end": 3394,
															"name": "JUMPDEST"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "DUP1"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "MLOAD"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "DUP9"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "DUP2"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "MSTORE"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "SWAP1"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "MLOAD"
														},
														{
															"begin": 3417,
															"end": 3427,
															"name": "CALLER"
														},
														{
															"begin": 3417,
															"end": 3427,
															"name": "SWAP2"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "PUSH",
															"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "SWAP2"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "SWAP1"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "DUP2"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "SWAP1"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "SUB"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "ADD"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "SWAP1"
														},
														{
															"begin": 3410,
															"end": 3436,
															"name": "LOG2"
														},
														{
															"begin": 1375,
															"end": 1376,
															"name": "POP"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 1410,
															"end": 1423,
															"name": "SLOAD"
														},
														{
															"begin": 1394,
															"end": 1406,
															"name": "DUP2"
														},
														{
															"begin": 1394,
															"end": 1423,
															"name": "EQ"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH [tag]",
															"value": "178"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPI"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH data",
															"value": "D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP4"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "CODECOPY"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SWAP2"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP3"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MSTORE"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "MLOAD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "DUP2"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SUB"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "ADD"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "SWAP1"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "REVERT"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "tag",
															"value": "178"
														},
														{
															"begin": 1386,
															"end": 1459,
															"name": "JUMPDEST"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "POP"
														},
														{
															"begin": 2886,
															"end": 3444,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "tag",
															"value": "86"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "JUMPDEST"
														},
														{
															"begin": 1332,
															"end": 1339,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1364,
															"end": 1365,
															"name": "DUP3"
														},
														{
															"begin": 1359,
															"end": 1360,
															"name": "DUP3"
														},
														{
															"begin": 1359,
															"end": 1365,
															"name": "GT"
														},
														{
															"begin": 1359,
															"end": 1365,
															"name": "ISZERO"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH [tag]",
															"value": "180"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "JUMPI"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP3"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "1E"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP3"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP3"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MSTORE"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "MLOAD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "DUP2"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SUB"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "ADD"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "SWAP1"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "REVERT"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "tag",
															"value": "180"
														},
														{
															"begin": 1351,
															"end": 1400,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 1422,
															"end": 1427,
															"name": "SWAP1"
														},
														{
															"begin": 1422,
															"end": 1427,
															"name": "SUB"
														},
														{
															"begin": 1422,
															"end": 1427,
															"name": "SWAP1"
														},
														{
															"begin": 1274,
															"end": 1453,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "tag",
															"value": "87"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "JUMPDEST"
														},
														{
															"begin": 1751,
															"end": 1758,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 1992,
															"end": 1998,
															"name": "DUP3"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "PUSH [tag]",
															"value": "182"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "JUMPI"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 2021,
															"end": 2022,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2014,
															"end": 2022,
															"name": "PUSH [tag]",
															"value": "81"
														},
														{
															"begin": 2014,
															"end": 2022,
															"name": "JUMP"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "tag",
															"value": "182"
														},
														{
															"begin": 1988,
															"end": 2033,
															"name": "JUMPDEST"
														},
														{
															"begin": 2055,
															"end": 2060,
															"name": "DUP3"
														},
														{
															"begin": 2055,
															"end": 2060,
															"name": "DUP3"
														},
														{
															"begin": 2055,
															"end": 2060,
															"name": "MUL"
														},
														{
															"begin": 2059,
															"end": 2060,
															"name": "DUP3"
														},
														{
															"begin": 2055,
															"end": 2056,
															"name": "DUP5"
														},
														{
															"begin": 2055,
															"end": 2060,
															"name": "DUP3"
														},
														{
															"begin": 2055,
															"end": 2056,
															"name": "DUP2"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "PUSH [tag]",
															"value": "183"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "JUMPI"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "INVALID"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "tag",
															"value": "183"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "JUMPDEST"
														},
														{
															"begin": 2078,
															"end": 2083,
															"name": "DIV"
														},
														{
															"begin": 2078,
															"end": 2088,
															"name": "EQ"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH [tag]",
															"value": "184"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "JUMPI"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MSTORE"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP3"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SUB"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP3"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MSTORE"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "21"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MSTORE"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH data",
															"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "21"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "CODECOPY"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "ADD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "POP"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "POP"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "MLOAD"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "DUP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP2"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SUB"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "SWAP1"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "REVERT"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "tag",
															"value": "184"
														},
														{
															"begin": 2070,
															"end": 2126,
															"name": "JUMPDEST"
														},
														{
															"begin": 2144,
															"end": 2145,
															"name": "SWAP4"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "SWAP3"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 1693,
															"end": 2152,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "tag",
															"value": "88"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "JUMPDEST"
														},
														{
															"begin": 2665,
															"end": 2672,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2762,
															"end": 2763,
															"name": "DUP1"
														},
														{
															"begin": 2758,
															"end": 2759,
															"name": "DUP3"
														},
														{
															"begin": 2758,
															"end": 2763,
															"name": "GT"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH [tag]",
															"value": "186"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "JUMPI"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP3"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "1A"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP3"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP3"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MSTORE"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "MLOAD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "DUP2"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SUB"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "ADD"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "SWAP1"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "REVERT"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "tag",
															"value": "186"
														},
														{
															"begin": 2750,
															"end": 2794,
															"name": "JUMPDEST"
														},
														{
															"begin": 2804,
															"end": 2813,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 2820,
															"end": 2821,
															"name": "DUP3"
														},
														{
															"begin": 2816,
															"end": 2817,
															"name": "DUP5"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "DUP2"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "PUSH [tag]",
															"value": "187"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "JUMPI"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "INVALID"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "tag",
															"value": "187"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "JUMPDEST"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "DIV"
														},
														{
															"begin": 2816,
															"end": 2821,
															"name": "SWAP5"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "SWAP4"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 2607,
															"end": 2933,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "tag",
															"value": "89"
														},
														{
															"begin": 834,
															"end": 1010,
															"name": "JUMPDEST"
														},
														{
															"begin": 892,
															"end": 899,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 923,
															"end": 928,
															"name": "DUP3"
														},
														{
															"begin": 923,
															"end": 928,
															"name": "DUP3"
														},
														{
															"begin": 923,
															"end": 928,
															"name": "ADD"
														},
														{
															"begin": 946,
															"end": 952,
															"name": "DUP4"
														},
														{
															"begin": 946,
															"end": 952,
															"name": "DUP2"
														},
														{
															"begin": 946,
															"end": 952,
															"name": "LT"
														},
														{
															"begin": 946,
															"end": 952,
															"name": "ISZERO"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH [tag]",
															"value": "184"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "JUMPI"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP3"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "1B"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP3"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP3"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MSTORE"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "MLOAD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "DUP2"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SUB"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "ADD"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "SWAP1"
														},
														{
															"begin": 938,
															"end": 984,
															"name": "REVERT"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "tag",
															"value": "104"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "JUMPDEST"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP5"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "AND"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP3"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "ADD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP3"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "ADD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP5"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "DUP3"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MLOAD"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "DUP1"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "DUP4"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "SUB"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "SWAP1"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "SWAP2"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "ADD"
														},
														{
															"begin": 6,
															"end": 55,
															"name": "DUP2"
														},
														{
															"begin": 6,
															"end": 55,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP2"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "ADD"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP1"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "SWAP2"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "MSTORE"
														},
														{
															"begin": 770,
															"end": 828,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 25,
															"end": 43,
															"name": "DUP2"
														},
														{
															"begin": 25,
															"end": 43,
															"name": "ADD"
														},
														{
															"begin": 61,
															"end": 78,
															"name": "DUP1"
														},
														{
															"begin": 61,
															"end": 78,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 182,
															"end": 197,
															"name": "AND"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A9059CBB"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 179,
															"end": 208,
															"name": "OR"
														},
														{
															"begin": 160,
															"end": 209,
															"name": "SWAP1"
														},
														{
															"begin": 160,
															"end": 209,
															"name": "MSTORE"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "PUSH [tag]",
															"value": "191"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "SWAP1"
														},
														{
															"begin": 763,
															"end": 768,
															"name": "DUP5"
														},
														{
															"begin": 763,
															"end": 768,
															"name": "SWAP1"
														},
														{
															"begin": 744,
															"end": 762,
															"name": "PUSH [tag]",
															"value": "192"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "tag",
															"value": "191"
														},
														{
															"begin": 744,
															"end": 829,
															"name": "JUMPDEST"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "POP"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "POP"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "POP"
														},
														{
															"begin": 662,
															"end": 836,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "tag",
															"value": "140"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "JUMPDEST"
														},
														{
															"begin": 416,
															"end": 423,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 446,
															"end": 447,
															"name": "DUP2"
														},
														{
															"begin": 442,
															"end": 443,
															"name": "DUP4"
														},
														{
															"begin": 442,
															"end": 447,
															"name": "LT"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "PUSH [tag]",
															"value": "194"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMPI"
														},
														{
															"begin": 454,
															"end": 455,
															"name": "DUP2"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "PUSH [tag]",
															"value": "184"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMP"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "tag",
															"value": "194"
														},
														{
															"begin": 442,
															"end": 455,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 450,
															"end": 451,
															"name": "SWAP1"
														},
														{
															"begin": 450,
															"end": 451,
															"name": "SWAP2"
														},
														{
															"begin": 435,
															"end": 455,
															"name": "SWAP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 358,
															"end": 462,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "tag",
															"value": "152"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "JUMPDEST"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP6"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP2"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP4"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP5"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "AND"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP3"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP3"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP5"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "DUP3"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MLOAD"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "DUP1"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "DUP4"
														},
														{
															"begin": 26,
															"end": 47,
															"name": "SUB"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "SWAP1"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "SWAP2"
														},
														{
															"begin": 22,
															"end": 54,
															"name": "ADD"
														},
														{
															"begin": 6,
															"end": 55,
															"name": "DUP2"
														},
														{
															"begin": 6,
															"end": 55,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "84"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP2"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "ADD"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP1"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "SWAP2"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "MSTORE"
														},
														{
															"begin": 968,
															"end": 1036,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 25,
															"end": 43,
															"name": "DUP2"
														},
														{
															"begin": 25,
															"end": 43,
															"name": "ADD"
														},
														{
															"begin": 61,
															"end": 78,
															"name": "DUP1"
														},
														{
															"begin": 61,
															"end": 78,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 182,
															"end": 197,
															"name": "AND"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "23B872DD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 179,
															"end": 208,
															"name": "OR"
														},
														{
															"begin": 160,
															"end": 209,
															"name": "SWAP1"
														},
														{
															"begin": 160,
															"end": 209,
															"name": "MSTORE"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "PUSH [tag]",
															"value": "197"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "SWAP1"
														},
														{
															"begin": 961,
															"end": 966,
															"name": "DUP6"
														},
														{
															"begin": 961,
															"end": 966,
															"name": "SWAP1"
														},
														{
															"begin": 942,
															"end": 960,
															"name": "PUSH [tag]",
															"value": "192"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "tag",
															"value": "197"
														},
														{
															"begin": 942,
															"end": 1037,
															"name": "JUMPDEST"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "POP"
														},
														{
															"begin": 842,
															"end": 1044,
															"name": "JUMP",
															"value": "[out]"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "tag",
															"value": "192"
														},
														{
															"begin": 2621,
															"end": 3716,
															"name": "JUMPDEST"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "PUSH [tag]",
															"value": "199"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 3216,
															"end": 3241,
															"name": "DUP4"
														},
														{
															"begin": 3216,
															"end": 3241,
															"name": "AND"
														},
														{
															"begin": 3216,
															"end": 3241,
															"name": "PUSH [tag]",
															"value": "200"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "JUMP",
															"value": "[in]"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "tag",
															"value": "199"
														},
														{
															"begin": 3216,
															"end": 3243,
															"name": "JUMPDEST"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH [tag]",
															"value": "201"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "JUMPI"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP3"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP3"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP3"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MSTORE"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "MLOAD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "DUP2"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SUB"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "ADD"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "SWAP1"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "REVERT"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "tag",
															"value": "201"
														},
														{
															"begin": 3208,
															"end": 3279,
															"name": "JUMPDEST"
														},
														{
															"begin": 3350,
															"end": 3362,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3364,
															"end": 3387,
															"name": "PUSH",
															"value": "60"
														},
														{
															"begin": 3399,
															"end": 3404,
															"name": "DUP4"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "DUP1"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "A0"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SUB"
														},
														{
															"begin": 3391,
															"end": 3410,
															"name": "AND"
														},
														{
															"begin": 3411,
															"end": 3415,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "MLOAD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP3"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "MLOAD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "ADD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP4"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "tag",
															"value": "202"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMPDEST"
														},
														{
															"begin": 66,
															"end": 68,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 61,
															"end": 64,
															"name": "DUP4"
														},
														{
															"begin": 58,
															"end": 69,
															"name": "LT"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "PUSH [tag]",
															"value": "204"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMPI"
														},
														{
															"begin": 176,
															"end": 186,
															"name": "DUP1"
														},
														{
															"begin": 176,
															"end": 186,
															"name": "MLOAD"
														},
														{
															"begin": 164,
															"end": 187,
															"name": "DUP3"
														},
														{
															"begin": 164,
															"end": 187,
															"name": "MSTORE"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "NOT"
														},
														{
															"begin": 139,
															"end": 151,
															"name": "SWAP1"
														},
														{
															"begin": 139,
															"end": 151,
															"name": "SWAP3"
														},
														{
															"begin": 139,
															"end": 151,
															"name": "ADD"
														},
														{
															"begin": 139,
															"end": 151,
															"name": "SWAP2"
														},
														{
															"begin": 98,
															"end": 100,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 89,
															"end": 101,
															"name": "SWAP2"
														},
														{
															"begin": 89,
															"end": 101,
															"name": "DUP3"
														},
														{
															"begin": 89,
															"end": 101,
															"name": "ADD"
														},
														{
															"begin": 89,
															"end": 101,
															"name": "SWAP2"
														},
														{
															"begin": 114,
															"end": 126,
															"name": "ADD"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "PUSH [tag]",
															"value": "202"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMP"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "tag",
															"value": "204"
														},
														{
															"begin": 36,
															"end": 189,
															"name": "JUMPDEST"
														},
														{
															"begin": 274,
															"end": 275,
															"name": "PUSH",
															"value": "1"
														},
														{
															"begin": 267,
															"end": 270,
															"name": "DUP4"
														},
														{
															"begin": 263,
															"end": 265,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 259,
															"end": 271,
															"name": "SUB"
														},
														{
															"begin": 254,
															"end": 257,
															"name": "PUSH",
															"value": "100"
														},
														{
															"begin": 250,
															"end": 272,
															"name": "EXP"
														},
														{
															"begin": 246,
															"end": 276,
															"name": "SUB"
														},
														{
															"begin": 315,
															"end": 319,
															"name": "DUP1"
														},
														{
															"begin": 311,
															"end": 320,
															"name": "NOT"
														},
														{
															"begin": 305,
															"end": 308,
															"name": "DUP3"
														},
														{
															"begin": 299,
															"end": 309,
															"name": "MLOAD"
														},
														{
															"begin": 295,
															"end": 321,
															"name": "AND"
														},
														{
															"begin": 356,
															"end": 360,
															"name": "DUP2"
														},
														{
															"begin": 350,
															"end": 353,
															"name": "DUP5"
														},
														{
															"begin": 344,
															"end": 354,
															"name": "MLOAD"
														},
														{
															"begin": 340,
															"end": 361,
															"name": "AND"
														},
														{
															"begin": 389,
															"end": 396,
															"name": "DUP1"
														},
														{
															"begin": 380,
															"end": 387,
															"name": "DUP3"
														},
														{
															"begin": 377,
															"end": 397,
															"name": "OR"
														},
														{
															"begin": 372,
															"end": 375,
															"name": "DUP6"
														},
														{
															"begin": 365,
															"end": 398,
															"name": "MSTORE"
														},
														{
															"begin": 3,
															"end": 402,
															"name": "POP"
														},
														{
															"begin": 3,
															"end": 402,
															"name": "POP"
														},
														{
															"begin": 3,
															"end": 402,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "ADD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "MLOAD"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP1"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP4"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SUB"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP2"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "DUP7"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "GAS"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "CALL"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3391,
															"end": 3416,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 14,
															"end": 15,
															"name": "DUP1"
														},
														{
															"begin": 21,
															"end": 22,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "DUP2"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "EQ"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "PUSH [tag]",
															"value": "206"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "JUMPI"
														},
														{
															"begin": 75,
															"end": 79,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 69,
															"end": 80,
															"name": "MLOAD"
														},
														{
															"begin": 64,
															"end": 80,
															"name": "SWAP2"
														},
														{
															"begin": 64,
															"end": 80,
															"name": "POP"
														},
														{
															"begin": 144,
															"end": 148,
															"name": "PUSH",
															"value": "1F"
														},
														{
															"begin": 140,
															"end": 149,
															"name": "NOT"
														},
														{
															"begin": 133,
															"end": 137,
															"name": "PUSH",
															"value": "3F"
														},
														{
															"begin": 115,
															"end": 131,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 111,
															"end": 138,
															"name": "ADD"
														},
														{
															"begin": 107,
															"end": 150,
															"name": "AND"
														},
														{
															"begin": 104,
															"end": 105,
															"name": "DUP3"
														},
														{
															"begin": 100,
															"end": 151,
															"name": "ADD"
														},
														{
															"begin": 94,
															"end": 98,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 87,
															"end": 152,
															"name": "MSTORE"
														},
														{
															"begin": 169,
															"end": 185,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 166,
															"end": 167,
															"name": "DUP3"
														},
														{
															"begin": 159,
															"end": 186,
															"name": "MSTORE"
														},
														{
															"begin": 225,
															"end": 241,
															"name": "RETURNDATASIZE"
														},
														{
															"begin": 222,
															"end": 223,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 215,
															"end": 219,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 212,
															"end": 213,
															"name": "DUP5"
														},
														{
															"begin": 208,
															"end": 220,
															"name": "ADD"
														},
														{
															"begin": 193,
															"end": 242,
															"name": "RETURNDATACOPY"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "PUSH [tag]",
															"value": "205"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "JUMP"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "tag",
															"value": "206"
														},
														{
															"begin": 16,
															"end": 47,
															"name": "JUMPDEST"
														},
														{
															"begin": 36,
															"end": 40,
															"name": "PUSH",
															"value": "60"
														},
														{
															"begin": 31,
															"end": 40,
															"name": "SWAP2"
														},
														{
															"begin": 31,
															"end": 40,
															"name": "POP"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "tag",
															"value": "205"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "JUMPDEST"
														},
														{
															"begin": 7,
															"end": 249,
															"name": "POP"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "SWAP2"
														},
														{
															"begin": 3349,
															"end": 3416,
															"name": "POP"
														},
														{
															"begin": 3434,
															"end": 3441,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH [tag]",
															"value": "207"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "JUMPI"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP3"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "24"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP3"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "44"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP3"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MSTORE"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "MLOAD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "DUP2"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SUB"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "PUSH",
															"value": "64"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "ADD"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "SWAP1"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "REVERT"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "tag",
															"value": "207"
														},
														{
															"begin": 3426,
															"end": 3478,
															"name": "JUMPDEST"
														},
														{
															"begin": 3493,
															"end": 3510,
															"name": "DUP1"
														},
														{
															"begin": 3493,
															"end": 3510,
															"name": "MLOAD"
														},
														{
															"begin": 3493,
															"end": 3514,
															"name": "ISZERO"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "PUSH [tag]",
															"value": "197"
														},
														{
															"begin": 3489,
															"end": 3710,
															"name": "JUMPI"
														},
														{
															"begin": 3633,
															"end": 3643,
															"name": "DUP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "DUP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "ADD"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "SWAP1"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "MLOAD"
														},
														{
															"begin": 13,
															"end": 15,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 8,
															"end": 11,
															"name": "DUP2"
														},
														{
															"begin": 5,
															"end": 16,
															"name": "LT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "ISZERO"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "PUSH [tag]",
															"value": "209"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPI"
														},
														{
															"begin": 29,
															"end": 30,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 26,
															"end": 27,
															"name": "DUP1"
														},
														{
															"begin": 19,
															"end": 31,
															"name": "REVERT"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "tag",
															"value": "209"
														},
														{
															"begin": 2,
															"end": 4,
															"name": "JUMPDEST"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "POP"
														},
														{
															"begin": 3622,
															"end": 3652,
															"name": "MLOAD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH [tag]",
															"value": "197"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "JUMPI"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MLOAD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "461BCD"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "PUSH",
															"value": "E5"
														},
														{
															"begin": -1,
															"end": -1,
															"name": "SHL"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MSTORE"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "4"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP3"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SUB"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP3"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MSTORE"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MSTORE"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "20"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH data",
															"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "2A"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "CODECOPY"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "ADD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "POP"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "POP"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "MLOAD"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "DUP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP2"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SUB"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "SWAP1"
														},
														{
															"begin": 3614,
															"end": 3699,
															"name": "REVERT"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "tag",
															"value": "200"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "JUMPDEST"
														},
														{
															"begin": 902,
															"end": 922,
															"name": "EXTCODESIZE"
														},
														{
															"begin": 940,
															"end": 948,
															"name": "ISZERO"
														},
														{
															"begin": 940,
															"end": 948,
															"name": "ISZERO"
														},
														{
															"begin": 940,
															"end": 948,
															"name": "SWAP1"
														},
														{
															"begin": 542,
															"end": 955,
															"name": "JUMP",
															"value": "[out]"
														}
													],
													".data": {
														"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
														"D50B095422F4CBFCB4C90FBD4D55AAF0967BF1D90E94BB6A1AE9FC4EE7E733DE": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
														"D74825AECB0211BBE1F02CCFB998D9E49771BEDB2C6414E20FD8978A2E0F54C": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c00",
														"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
													}
												}
											}
										},
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"77D8567A7B7BF9A9A30EA727F6E525CAE6667D736CDAFF555C86DB8D81648A1A": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
										"AE1F87E20C157D2878A2E48B377D209DFDDFC6D5EC9B80CEECC5ADDD0EF6FFDB": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973",
										"AFBE2226ADED12CD2F0D3C83FF167EEDC78632DC0894F92EEA331D3F2B56D089": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c6564",
										"E71986032604F829CCAEC9386C51E838A85CDBF506769BD103C829F640682ADF": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74207265616479",
										"E8F5C4CA6631F4BFE6FFABF099741B79E5C6B86618DDCBEEE6BA3C5940184427": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564"
									}
								},
								"F22E14100106EB9F2180E576EDA6E762FDCBD26E14106A6823275A3B8FDEA515": "5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e"
							}
						},
						"methodIdentifiers": {
							"deploy(address,uint256)": "4956eaf0",
							"isOwner()": "8f32d59b",
							"notifyRewardAmount(address)": "81e16298",
							"notifyRewardAmounts()": "ae741d8d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardsToken()": "d1af0c7d",
							"stakingRewardsGenesis()": "a0928c11",
							"stakingRewardsInfoByStakingToken(address)": "6cf8caf8",
							"stakingTokens(uint256)": "344e5e34",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardsToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardsGenesis\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"deploy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"notifyRewardAmounts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingRewardsGenesis\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewardsInfoByStakingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"stakingRewards\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"deploy(address,uint256)\":{\"notice\":\"// permissioned functions\"},\"notifyRewardAmounts()\":{\"notice\":\"// permissionless functions\"}}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/StakingRewardsFactory.sol\":\"StakingRewardsFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd1804d04fb39689453f673601429a99a0c68c422a981fc338773df9a59180fe9\",\"urls\":[\"bzz-raw://1b9307920e0378d58c6677f8952ad090a9ecb30e878835e301a0d18386a870c1\",\"dweb:/ipfs/QmYYixTDVF4FXqFpYzEcufAwEY9BFBJ33Ew9ncsGvD7btC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzz-raw://cd3429aa9a4878dcf6c73faa32c3722f4013d4be012ece543b246faa6b50f55c\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzz-raw://de8bb0003d53de236913f0e0102e7a9d015e02098f2495edd000f207fe2be2f4\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzz-raw://d0abb99bb8bfc2bc0a89902b8ed1dc0442ad08cc78cee64c291b3df6a27bcccc\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzz-raw://005657a7ffbf6d12726ac0167b55be965dc473d43f061b605f883a54cc00ab4f\",\"dweb:/ipfs/QmaBzyvDQyNnn6DXQYewEtN9Go85orikSnW9PwNWqUGPEX\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzz-raw://75ae8d04454d1511a2ed986cc8585736f05c5c25280683b3d24712a9f414a4bf\",\"dweb:/ipfs/Qmb3kNCoBUZdah1AgBBD4zMk898j5Qw8ahT1w5cCMYp5Y3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzz-raw://af27dd68d2371e68c8ed8cf297ec6d832bf906742d53367b70399ba918060cb7\",\"dweb:/ipfs/QmcMMjZceFepXgRrzSx577oWwt7SCSFzoqZiTF7tTxquF7\"]},\"liquidity-staker/RewardsDistributionRecipient.sol\":{\"keccak256\":\"0xecd562632a6dadc08f5149741042602ffb6a0f4f465e823daeba2b0c724fb6bf\",\"urls\":[\"bzz-raw://677f7a0eec673b9c0d1f1ef4fe3d850272573d3588d136a216bfb983b685ea25\",\"dweb:/ipfs/QmS3yee8wQbnEhC57K2YSbEe9DNjqXX4tGP7uWjXFzGxNf\"]},\"liquidity-staker/StakingRewards.sol\":{\"keccak256\":\"0xd6e38b2ef65232cf59a7431cc1fb7d26c8b0b4f3cebb01d3e2d7e915a2a05a2a\",\"urls\":[\"bzz-raw://45aa9805f15bf19d520dead2bf9b2ec2cba0fce1fa690e9eba6487c917ae75da\",\"dweb:/ipfs/QmcieAaUBNTVdfuBFN4Ys2sr2fhoFqC5goAJp4ZKVE5S2x\"]},\"liquidity-staker/StakingRewardsFactory.sol\":{\"keccak256\":\"0xac9845bdfec55972392f891e26cca747788c7b16bf592d931996849a02291daa\",\"urls\":[\"bzz-raw://022e734d2ac16310a39772629b42aee9b01bd03f1ca6c3b2e3317aaf69730ed5\",\"dweb:/ipfs/QmSiLgrefp74NSd9Ymi6HtehEgZgTn6beGscGskbRFvDNN\"]},\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 205,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1336,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1338,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "stakingRewardsGenesis",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1341,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "stakingTokens",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1350,
								"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
								"label": "stakingRewardsInfoByStakingToken",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(StakingRewardsInfo)1346_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(StakingRewardsInfo)1346_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(StakingRewardsInfo)1346_storage"
							},
							"t_struct(StakingRewardsInfo)1346_storage": {
								"encoding": "inplace",
								"label": "struct StakingRewardsFactory.StakingRewardsInfo",
								"members": [
									{
										"astId": 1343,
										"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
										"label": "stakingRewards",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1345,
										"contract": "liquidity-staker/StakingRewardsFactory.sol:StakingRewardsFactory",
										"label": "rewardAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {
							"deploy(address,uint256)": {
								"notice": "// permissioned functions"
							},
							"notifyRewardAmounts()": {
								"notice": "// permissionless functions"
							}
						}
					}
				}
			},
			"liquidity-staker/interfaces/IStakingRewards.sol": {
				"IStakingRewards": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"earned(address)": "008cc262",
							"exit()": "e9fad8ee",
							"getReward()": "3d18b912",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"rewardPerToken()": "cd3daf9d",
							"stake(uint256)": "a694fc3a",
							"totalSupply()": "18160ddd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"liquidity-staker/interfaces/IStakingRewards.sol\":\"IStakingRewards\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"liquidity-staker/interfaces/IStakingRewards.sol\":{\"keccak256\":\"0xd63bd38ba4c3adff220272e472b7d384fbe2432591d41b67e7cffb2d56a57491\",\"urls\":[\"bzz-raw://5a6e087d9277a3b51371793317b88fa1fcf412c926e5b3ad37d8acac3e341735\",\"dweb:/ipfs/QmQdQJCWkV23hcfpggSPGsJX6FHzC89Acep2kUYmyZ9TEB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							68
						]
					},
					"id": 69,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Standard math utilities missing in the Solidity language.",
							"fullyImplemented": true,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "249:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 10,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "266:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 11,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "271:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "266:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "279:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "266:14:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 13,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 16,
												"nodeType": "Return",
												"src": "259:21:0"
											}
										]
									},
									"documentation": "@dev Returns the largest of two numbers.",
									"id": 18,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "195:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "206:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "194:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "240:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "239:9:0"
									},
									"scope": 68,
									"src": "182:105:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "425:37:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 27,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 28,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "446:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "442:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "454:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "442:13:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 30,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 26,
												"id": 33,
												"nodeType": "Return",
												"src": "435:20:0"
											}
										]
									},
									"documentation": "@dev Returns the smallest of two numbers.",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "371:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "371:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "382:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "370:22:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "416:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "415:9:0"
									},
									"scope": 68,
									"src": "358:104:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "646:119:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 44,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "718:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 45,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "722:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "718:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 47,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "717:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 48,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "728:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "732:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "728:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 51,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "727:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "717:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 59,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 55,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 53,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 37,
																					"src": "739:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 54,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "743:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "739:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 58,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 56,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 39,
																					"src": "747:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 57,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "751:1:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "747:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "739:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 60,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "738:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "756:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "738:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 63,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "737:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "717:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 43,
												"id": 65,
												"nodeType": "Return",
												"src": "710:48:0"
											}
										]
									},
									"documentation": "@dev Returns the average of two numbers. The result is rounded towards\nzero.",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "592:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "603:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "591:22:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "637:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:9:0"
									},
									"scope": 68,
									"src": "575:190:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 69,
							"src": "99:668:0"
						}
					],
					"src": "0:768:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							201
						]
					},
					"id": 202,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 70,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													80
												],
												"declarations": [
													{
														"constant": false,
														"id": 80,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 79,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 84,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 81,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 78,
												"id": 93,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 201,
									"src": "834:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1341:112:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1359:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1364:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1359:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1367:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "1351:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1351:49:1"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1410:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1410:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1422:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 114,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1426:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1422:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1410:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1445:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 118,
												"nodeType": "Return",
												"src": "1438:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 201,
									"src": "1274:179:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1760:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1992:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1997:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1988:45:1",
												"trueBody": {
													"id": 134,
													"nodeType": "Block",
													"src": "2000:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2021:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 128,
															"id": 133,
															"nodeType": "Return",
															"src": "2014:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "2043:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2055:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 139,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "2059:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2055:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2043:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 143,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2078:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 144,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2082:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2078:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "2087:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2078:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2090:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "2070:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2070:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "2070:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 137,
													"src": "2144:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 152,
												"nodeType": "Return",
												"src": "2137:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1706:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1717:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1705:22:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1750:9:1"
									},
									"scope": 201,
									"src": "1693:459:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "2674:259:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2758:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2762:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2758:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "2750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "2750:44:1"
											},
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "2804:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 170,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 172,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2816:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 173,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2820:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2816:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2804:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 176,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2925:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 162,
												"id": 177,
												"nodeType": "Return",
												"src": "2918:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2620:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2631:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2619:22:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "2665:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2664:9:1"
									},
									"scope": 201,
									"src": "2607:326:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3444:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "3462:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3467:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3462:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3470:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "3454:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3454:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "3454:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 195,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3514:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 196,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "3518:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3514:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 187,
												"id": 198,
												"nodeType": "Return",
												"src": "3507:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3390:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3390:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3401:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3389:22:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3435:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3434:9:1"
									},
									"scope": 201,
									"src": "3377:149:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 202,
							"src": "589:2939:1"
						}
					],
					"src": "0:3529:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							312
						]
					},
					"id": 313,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be aplied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 312,
							"linearizedBaseContracts": [
								312
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 205,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 312,
									"src": "408:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 204,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 211,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "464:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "495:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:57:2"
									},
									"src": "437:84:2"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "647:91:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 214,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "657:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 215,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "666:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "666:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "657:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "657:19:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "720:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "712:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "712:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 223,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "724:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "691:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "691:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "686:45:2"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 227,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:0:2"
									},
									"scope": 312,
									"src": "623:115:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "861:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 232,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "878:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 231,
												"id": 233,
												"nodeType": "Return",
												"src": "871:13:2"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "828:2:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "852:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "851:9:2"
									},
									"scope": 312,
									"src": "814:77:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1000:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 238,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "1018:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1018:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1029:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "1010:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "1010:54:2"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "1074:1:2"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 245,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "997:2:2"
									},
									"src": "979:103:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1211:44:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 250,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "1228:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1228:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1242:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1228:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 249,
												"id": 254,
												"nodeType": "Return",
												"src": "1221:27:2"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "1205:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1204:6:2"
									},
									"scope": 312,
									"src": "1165:90:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1645:91:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 262,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "1681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1697:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1689:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1689:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 261,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1660:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1660:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "EmitStatement",
												"src": "1655:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 268,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1710:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1727:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1719:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1719:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1710:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1710:19:2"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * > Note: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 259,
											"modifierName": {
												"argumentTypes": null,
												"id": 258,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 245,
												"src": "1635:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1635:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1625:2:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:0:2"
									},
									"scope": 312,
									"src": "1599:137:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "1947:45:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 283,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "1976:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 282,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "1957:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1957:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1957:28:2"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 280,
											"modifierName": {
												"argumentTypes": null,
												"id": 279,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 245,
												"src": "1937:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1937:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1911:18:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:0:2"
									},
									"scope": 312,
									"src": "1885:107:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2148:170:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 293,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 289,
																"src": "2166:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2186:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2178:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2178:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2166:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2190:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "2158:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2158:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "2158:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 302,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2267:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "2275:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 301,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2246:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2246:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "EmitStatement",
												"src": "2241:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 306,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2294:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 307,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2303:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2294:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2294:17:2"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2121:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2120:18:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2148:0:2"
									},
									"scope": 312,
									"src": "2093:225:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 313,
							"src": "385:1935:2"
						}
					],
					"src": "0:2321:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							370
						]
					},
					"id": 371,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 315,
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 440,
							"src": "25:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 316,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "135:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									},
									"id": 317,
									"nodeType": "InheritanceSpecifier",
									"src": "135:6:3"
								}
							],
							"contractDependencies": [
								439
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 370,
							"linearizedBaseContracts": [
								370,
								439
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 319,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "148:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "148:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 321,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "174:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 320,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "174:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "202:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 322,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "494:85:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 332,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "504:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 333,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "512:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "504:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "504:12:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 336,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "526:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 337,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "536:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "526:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "526:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 340,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "552:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 341,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "564:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "552:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "552:20:3"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "429:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 324,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "449:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 326,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "471:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 328,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:58:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:3"
									},
									"scope": 370,
									"src": "416:163:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "696:29:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 350,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "713:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 349,
												"id": 351,
												"nodeType": "Return",
												"src": "706:12:3"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "681:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 347,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "681:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:15:3"
									},
									"scope": 370,
									"src": "644:81:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "892:31:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 358,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 357,
												"id": 359,
												"nodeType": "Return",
												"src": "902:14:3"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:3"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "877:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "876:15:3"
									},
									"scope": 370,
									"src": "838:85:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1526:33:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 366,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "1543:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 365,
												"id": 367,
												"nodeType": "Return",
												"src": "1536:16:3"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1495:2:3"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1519:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 363,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1519:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1518:7:3"
									},
									"scope": 370,
									"src": "1478:81:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 371,
							"src": "109:1452:3"
						}
					],
					"src": "0:1562:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							439
						]
					},
					"id": 440,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 372,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:4"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "316:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:4"
									},
									"scope": 439,
									"src": "270:55:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "427:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "467:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:4"
									},
									"scope": 439,
									"src": "408:68:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "714:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "733:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "767:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:4"
									},
									"scope": 439,
									"src": "696:77:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through `transferFrom`. This is\nzero by default.\n     * This value changes when `approve` or `transferFrom` are called.",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1067:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1082:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1122:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:4"
									},
									"scope": 439,
									"src": "1048:83:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * > Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an `Approval` event.",
									"id": 411,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1792:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1809:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1809:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1791:33:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1843:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1843:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1842:6:4"
									},
									"scope": 439,
									"src": "1775:74:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a `Transfer` event.",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2178:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2194:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2213:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2177:51:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2247:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2247:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2246:6:4"
									},
									"scope": 439,
									"src": "2156:97:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 430,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2437:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2459:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "2479:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2436:57:4"
									},
									"src": "2422:72:4"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to `approve`. `value` is the new allowance.",
									"id": 438,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2668:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2691:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2716:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2667:63:4"
									},
									"src": "2653:78:4"
								}
							],
							"scope": 440,
							"src": "176:2557:4"
						}
					],
					"src": "0:2734:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							658
						]
					},
					"id": 659,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 442,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 440,
							"src": "25:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 443,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 202,
							"src": "48:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 444,
							"nodeType": "ImportDirective",
							"scope": 659,
							"sourceUnit": 678,
							"src": "82:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 447,
									"libraryName": {
										"contractScope": null,
										"id": 445,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 201,
										"src": "604:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$201",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "598:27:5",
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 450,
									"libraryName": {
										"contractScope": null,
										"id": 448,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 677,
										"src": "636:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$677",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:5",
									"typeName": {
										"id": 449,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "734:102:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 460,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 463,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 452,
																			"src": "793:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "793:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "793:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 466,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "818:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 467,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "822:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 461,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "770:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "770:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 459,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "744:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:85:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "744:85:5"
											}
										]
									},
									"documentation": null,
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "684:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 451,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "684:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "698:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "710:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:41:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:5"
									},
									"scope": 658,
									"src": "662:174:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "932:112:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 484,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "961:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 487,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 474,
																			"src": "991:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 422,
																		"src": "991:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "991:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 490,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "1020:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 491,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "1026:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 492,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "1030:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 485,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "968:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "968:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:68:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 483,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "942:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:95:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "942:95:5"
											}
										]
									},
									"documentation": null,
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "868:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 473,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "868:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "882:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "896:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "908:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:55:5"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:5"
									},
									"scope": 658,
									"src": "842:202:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1126:536:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 507,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "1415:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1424:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1415:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1414:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 514,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1622,
																							"src": "1455:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$658",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$658",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1447:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 515,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1447:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 516,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 501,
																					"src": "1462:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 511,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 499,
																					"src": "1431:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$439",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 402,
																				"src": "1431:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:39:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:1:5",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1431:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 520,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1430:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1414:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:56:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "1406:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:150:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1406:150:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1585:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 529,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "1615:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 411,
																		"src": "1615:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1615:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 532,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "1639:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 533,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "1648:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 527,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1592:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1592:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1592:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1566:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1566:89:5"
											}
										]
									},
									"documentation": null,
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1071:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 498,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "1071:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1085:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1102:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:46:5"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:5"
									},
									"scope": 658,
									"src": "1050:612:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "1754:196:5",
										"statements": [
											{
												"assignments": [
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 548,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "1764:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1764:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 557,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "1831:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 552,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "1811:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1803:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1803:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 554,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "1818:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 549,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "1787:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 402,
																"src": "1787:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "1787:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 561,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "1866:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 564,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 540,
																			"src": "1896:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 411,
																		"src": "1896:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1896:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 567,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "1920:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 568,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "1929:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 562,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1873:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1873:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:69:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 560,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "1847:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:96:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 571,
												"nodeType": "ExpressionStatement",
												"src": "1847:96:5"
											}
										]
									},
									"documentation": null,
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1699:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 539,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "1699:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 542,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1713:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "1730:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:46:5"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:5"
									},
									"scope": 658,
									"src": "1668:282:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2042:196:5",
										"statements": [
											{
												"assignments": [
													583
												],
												"declarations": [
													{
														"constant": false,
														"id": 583,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "2052:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "2119:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 587,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "2099:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$658",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 589,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2106:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 584,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "2075:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 402,
																"src": "2075:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 120,
														"src": "2075:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 596,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "2154:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 599,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "2184:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 411,
																		"src": "2184:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2184:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2208:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 603,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "2217:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 597,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "2161:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2161:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:69:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 595,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "2135:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:96:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "2135:96:5"
											}
										]
									},
									"documentation": null,
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 574,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "1987:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2001:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "2018:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:46:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:5"
									},
									"scope": 658,
									"src": "1956:282:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "2690:1026:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 617,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "3224:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3216:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3216:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 676,
																"src": "3216:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3216:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3245:33:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "3208:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3208:71:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "3208:71:5"
											},
											{
												"assignments": [
													625,
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "3350:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 624,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3350:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 627,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 656,
														"src": "3364:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3364:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 634,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 632,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "3411:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 629,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "3399:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$439",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3391:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3391:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3391:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3391:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3349:67:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 636,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "3434:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3443:34:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "3426:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3426:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "3426:52:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 640,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3493:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3493:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3513:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3493:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 655,
												"nodeType": "IfStatement",
												"src": "3489:221:5",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "3516:194:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 647,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "3633:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3646:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 649,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3645:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 645,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1583,
																				"src": "3622:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3622:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3622:30:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3654:44:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 644,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1599,
																		1600
																	],
																	"referencedDeclaration": 1600,
																	"src": "3614:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3614:85:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 653,
															"nodeType": "ExpressionStatement",
															"src": "3614:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2649:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$439",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 609,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 439,
													"src": "2649:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2663:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2663:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2648:33:5"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2690:0:5"
									},
									"scope": 658,
									"src": "2621:1095:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 659,
							"src": "574:3144:5"
						}
					],
					"src": "0:3719:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							677
						]
					},
					"id": 678,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type,",
							"fullyImplemented": true,
							"id": 677,
							"linearizedBaseContracts": [
								677
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "608:347:6",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "805:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "805:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 669,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "805:12:6"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 668,
															"isOffset": false,
															"isSlot": false,
															"src": "894:4:6",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 662,
															"isOffset": false,
															"isSlot": false,
															"src": "914:7:6",
															"valueSize": 1
														}
													}
												],
												"id": 670,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "883:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 671,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "940:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "947:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "940:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 666,
												"id": 674,
												"nodeType": "Return",
												"src": "933:15:6"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * This test is non-exhaustive, and there may be false-negatives: during the\nexecution of a contract's constructor, its address will be reported as\nnot containing a contract.\n     * > It is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.",
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "562:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:17:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "602:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "602:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "601:6:6"
									},
									"scope": 677,
									"src": "542:413:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 678,
							"src": "94:863:6"
						}
					],
					"src": "0:958:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							709
						]
					},
					"id": 710,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the `nonReentrant` modifier\navailable, which can be aplied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
							"fullyImplemented": true,
							"id": 709,
							"linearizedBaseContracts": [
								709
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 681,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 709,
									"src": "659:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 680,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "659:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "719:173:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 684,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "868:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "884:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "868:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "868:17:7"
											}
										]
									},
									"documentation": null,
									"id": 689,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:2:7"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:0:7"
									},
									"scope": 709,
									"src": "695:197:7",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "1291:175:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 691,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "1301:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1318:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1301:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "1301:18:7"
											},
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "1329:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 695,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1329:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"argumentTypes": null,
													"id": 697,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 681,
													"src": "1352:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1329:36:7"
											},
											{
												"id": 699,
												"nodeType": "PlaceholderStatement",
												"src": "1375:1:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "1394:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "1410:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1394:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1425:33:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "1386:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "1386:73:7"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 708,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:2:7"
									},
									"src": "1267:199:7",
									"visibility": "internal"
								}
							],
							"scope": 710,
							"src": "556:912:7"
						}
					],
					"src": "0:1469:7"
				},
				"id": 7
			},
			"liquidity-staker/RewardsDistributionRecipient.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/RewardsDistributionRecipient.sol",
					"exportedSymbols": {
						"RewardsDistributionRecipient": [
							731
						]
					},
					"id": 732,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 711,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 731,
							"linearizedBaseContracts": [
								731
							],
							"name": "RewardsDistributionRecipient",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 713,
									"name": "rewardsDistribution",
									"nodeType": "VariableDeclaration",
									"scope": 731,
									"src": "73:34:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 712,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "73:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": null,
									"documentation": null,
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "144:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "144:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "143:16:8"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:0:8"
									},
									"scope": 731,
									"src": "116:53:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "212:119:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 721,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "231:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "231:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 723,
																"name": "rewardsDistribution",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "245:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "231:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616c6c6572206973206e6f742052657761726473446973747269627574696f6e20636f6e7472616374",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "266:44:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															},
															"value": "Caller is not RewardsDistribution contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d50b095422f4cbfcb4c90fbd4d55aaf0967bf1d90e94bb6a1ae9fc4ee7e733de",
																"typeString": "literal_string \"Caller is not RewardsDistribution contract\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "223:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "223:88:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "223:88:8"
											},
											{
												"id": 728,
												"nodeType": "PlaceholderStatement",
												"src": "322:1:8"
											}
										]
									},
									"documentation": null,
									"id": 730,
									"name": "onlyRewardsDistribution",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "209:2:8"
									},
									"src": "177:154:8",
									"visibility": "internal"
								}
							],
							"scope": 732,
							"src": "28:306:8"
						}
					],
					"src": "0:334:8"
				},
				"id": 8
			},
			"liquidity-staker/StakingRewards.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/StakingRewards.sol",
					"exportedSymbols": {
						"IUniswapV2ERC20": [
							1327
						],
						"StakingRewards": [
							1309
						]
					},
					"id": 1328,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 733,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/Math.sol",
							"id": 734,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 69,
							"src": "28:108:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/math/SafeMath.sol",
							"id": 735,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 202,
							"src": "138:112:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/ERC20Detailed.sol",
							"id": 736,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 371,
							"src": "252:124:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/SafeERC20.sol",
							"id": 737,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 659,
							"src": "378:120:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/utils/ReentrancyGuard.sol",
							"id": 738,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 710,
							"src": "500:120:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "liquidity-staker/interfaces/IStakingRewards.sol",
							"file": "./interfaces/IStakingRewards.sol",
							"id": 739,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 1582,
							"src": "640:42:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "liquidity-staker/RewardsDistributionRecipient.sol",
							"file": "./RewardsDistributionRecipient.sol",
							"id": 740,
							"nodeType": "ImportDirective",
							"scope": 1328,
							"sourceUnit": 732,
							"src": "684:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 741,
										"name": "IStakingRewards",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1581,
										"src": "759:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IStakingRewards_$1581",
											"typeString": "contract IStakingRewards"
										}
									},
									"id": 742,
									"nodeType": "InheritanceSpecifier",
									"src": "759:15:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 743,
										"name": "RewardsDistributionRecipient",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 731,
										"src": "776:28:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_RewardsDistributionRecipient_$731",
											"typeString": "contract RewardsDistributionRecipient"
										}
									},
									"id": 744,
									"nodeType": "InheritanceSpecifier",
									"src": "776:28:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 745,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 709,
										"src": "806:15:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$709",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 746,
									"nodeType": "InheritanceSpecifier",
									"src": "806:15:9"
								}
							],
							"contractDependencies": [
								709,
								731,
								1581
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1309,
							"linearizedBaseContracts": [
								1309,
								709,
								731,
								1581
							],
							"name": "StakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 749,
									"libraryName": {
										"contractScope": null,
										"id": 747,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 201,
										"src": "835:8:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$201",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "829:27:9",
									"typeName": {
										"id": 748,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "848:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 752,
									"libraryName": {
										"contractScope": null,
										"id": 750,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 658,
										"src": "868:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$658",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "862:27:9",
									"typeName": {
										"contractScope": null,
										"id": 751,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "882:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 754,
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "948:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$439",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 753,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "948:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 756,
									"name": "stakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "981:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$439",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 755,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 439,
										"src": "981:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$439",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 759,
									"name": "periodFinish",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1014:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 757,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1014:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1044:1:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 762,
									"name": "rewardRate",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1052:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1052:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 761,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1080:1:9",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 765,
									"name": "rewardsDuration",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1088:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 763,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1088:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3330",
										"id": 764,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1121:7:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 767,
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1135:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 766,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1135:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 769,
									"name": "rewardPerTokenStored",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1171:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 768,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1171:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 773,
									"name": "userRewardPerTokenPaid",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1215:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 772,
										"keyType": {
											"id": 770,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1223:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1215:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 771,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1234:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 777,
									"name": "rewards",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1279:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 776,
										"keyType": {
											"id": 774,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1287:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1279:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 775,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1298:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 779,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1330:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1330:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 783,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1309,
									"src": "1365:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 782,
										"keyType": {
											"id": 780,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1373:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1365:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 781,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1384:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "1595:155:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 792,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "1606:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 794,
																"name": "_rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "1628:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 793,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "1621:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1621:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"src": "1606:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "1606:36:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 798,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1653:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 800,
																"name": "_stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "1675:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 799,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "1668:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1668:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$439",
															"typeString": "contract IERC20"
														}
													},
													"src": "1653:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$439",
														"typeString": "contract IERC20"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "1653:36:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 804,
														"name": "rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "1700:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 805,
														"name": "_rewardsDistribution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1722:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1700:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "1700:42:9"
											}
										]
									},
									"documentation": null,
									"id": 809,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "_rewardsDistribution",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1488:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1527:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"name": "_stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1559:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1477:110:9"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:0:9"
									},
									"scope": 1309,
									"src": "1466:284:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "1854:38:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 814,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 779,
													"src": "1872:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 813,
												"id": 815,
												"nodeType": "Return",
												"src": "1865:19:9"
											}
										]
									},
									"documentation": null,
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:2:9"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "1845:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1845:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1844:9:9"
									},
									"scope": 1309,
									"src": "1799:93:9",
									"stateMutability": "view",
									"superFunction": 1557,
									"visibility": "external"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "1968:44:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 824,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1986:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 826,
													"indexExpression": {
														"argumentTypes": null,
														"id": 825,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "1996:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1986:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 823,
												"id": 827,
												"nodeType": "Return",
												"src": "1979:25:9"
											}
										]
									},
									"documentation": null,
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1919:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1918:17:9"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1959:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1958:9:9"
									},
									"scope": 1309,
									"src": "1900:112:9",
									"stateMutability": "view",
									"superFunction": 1564,
									"visibility": "external"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2086:65:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 836,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "2113:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2113:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 838,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "2130:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 834,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2104:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$68_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 35,
														"src": "2104:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 833,
												"id": 840,
												"nodeType": "Return",
												"src": "2097:46:9"
											}
										]
									},
									"documentation": null,
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:2:9"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2077:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2076:9:9"
									},
									"scope": 1309,
									"src": "2020:131:9",
									"stateMutability": "view",
									"superFunction": 1535,
									"visibility": "public"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "2215:274:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 847,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "2230:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2246:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2230:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 853,
												"nodeType": "IfStatement",
												"src": "2226:77:9",
												"trueBody": {
													"id": 852,
													"nodeType": "Block",
													"src": "2249:54:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 850,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "2271:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 846,
															"id": 851,
															"nodeType": "Return",
															"src": "2264:27:9"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 868,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2453:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2443:4:9",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 862,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 762,
																					"src": "2427:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 859,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 767,
																							"src": "2407:14:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 856,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 842,
																								"src": "2376:24:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 857,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2376:26:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 858,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 120,
																						"src": "2376:30:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 860,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2376:46:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "2376:50:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2376:62:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "2376:66:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2376:72:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 179,
																"src": "2376:76:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:90:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 854,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2333:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "2333:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2333:148:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 846,
												"id": 871,
												"nodeType": "Return",
												"src": "2313:168:9"
											}
										]
									},
									"documentation": null,
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:9"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "2206:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2205:9:9"
									},
									"scope": 1309,
									"src": "2159:330:9",
									"stateMutability": "view",
									"superFunction": 1540,
									"visibility": "public"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "2560:135:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 896,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "2670:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 898,
															"indexExpression": {
																"argumentTypes": null,
																"id": 897,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 875,
																"src": "2678:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2670:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2660:4:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 887,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 773,
																						"src": "2622:22:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 889,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 888,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 875,
																						"src": "2645:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2622:31:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 884,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 873,
																						"src": "2601:14:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 885,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2601:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 886,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 120,
																				"src": "2601:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2601:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 880,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "2578:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 882,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 881,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 875,
																				"src": "2588:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2578:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "2578:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2578:77:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 179,
																"src": "2578:81:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2578:87:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 95,
														"src": "2578:91:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:109:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 879,
												"id": 900,
												"nodeType": "Return",
												"src": "2571:116:9"
											}
										]
									},
									"documentation": null,
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2513:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2512:17:9"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "2551:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2550:9:9"
									},
									"scope": 1309,
									"src": "2497:198:9",
									"stateMutability": "view",
									"superFunction": 1547,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "2767:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 909,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "2800:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 907,
															"name": "rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "2785:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "2785:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 906,
												"id": 911,
												"nodeType": "Return",
												"src": "2778:38:9"
											}
										]
									},
									"documentation": null,
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2732:2:9"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "2758:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2757:9:9"
									},
									"scope": 1309,
									"src": "2703:121:9",
									"stateMutability": "view",
									"superFunction": 1552,
									"visibility": "external"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3020:424:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 933,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3039:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3048:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3039:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:16:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "3031:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3031:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "3031:37:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 939,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3079:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 942,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3111:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 940,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3094:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3094:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3094:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3079:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "3079:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 946,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3129:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 949,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 947,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3139:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3139:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3129:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 955,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "3179:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 950,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3153:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 953,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 951,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "3163:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3163:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3153:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3153:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3153:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3129:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "3129:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 965,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3264:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3264:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 968,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "3284:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3276:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3276:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 970,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3291:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 971,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3299:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 972,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3309:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 973,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "3312:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 974,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "3315:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 961,
																			"name": "stakingToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "3242:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$439",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3234:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3234:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 959,
																"name": "IUniswapV2ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "3218:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2ERC20_$1327_$",
																	"typeString": "type(contract IUniswapV2ERC20)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3218:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2ERC20_$1327",
																"typeString": "contract IUniswapV2ERC20"
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1326,
														"src": "3218:45:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:99:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "3218:99:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 980,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3360:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3360:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 983,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "3380:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3372:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3372:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 985,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3387:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 977,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3330:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "3330:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3330:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "3330:64:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 989,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3417:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3417:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 991,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3429:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 988,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "3410:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3410:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "EmitStatement",
												"src": "3405:31:9"
											}
										]
									},
									"documentation": null,
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 926,
											"modifierName": {
												"argumentTypes": null,
												"id": 925,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "2982:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2982:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 928,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "3008:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3008:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 930,
											"modifierName": {
												"argumentTypes": null,
												"id": 927,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1286,
												"src": "2995:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2995:24:9"
										}
									],
									"name": "stakeWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2911:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2911:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2927:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2927:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2942:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 918,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2942:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2951:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 920,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "2962:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 922,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2910:62:9"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3020:0:9"
									},
									"scope": 1309,
									"src": "2886:558:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "3530:291:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1007,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "3549:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3558:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3549:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3561:16:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "3541:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3541:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3541:37:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1013,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3589:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1016,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "3621:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3604:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3604:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3604:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3589:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "3589:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1020,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "3639:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1023,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1021,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3649:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3649:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3639:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1029,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "3689:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "3663:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1027,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1025,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "3673:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3673:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3663:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "3663:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3663:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3639:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "3639:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1036,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3737:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3737:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1039,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "3757:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3749:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3749:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1041,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3764:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1033,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "3707:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "3707:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "3707:64:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1045,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "3794:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3794:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1047,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3806:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "3787:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3787:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "3782:31:9"
											}
										]
									},
									"documentation": null,
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1000,
											"modifierName": {
												"argumentTypes": null,
												"id": 999,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "3492:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3492:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "3518:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3518:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1004,
											"modifierName": {
												"argumentTypes": null,
												"id": 1001,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1286,
												"src": "3505:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3505:24:9"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "3467:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3466:16:9"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3530:0:9"
									},
									"scope": 1309,
									"src": "3452:369:9",
									"stateMutability": "nonpayable",
									"superFunction": 1569,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3908:278:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1063,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "3927:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3936:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3927:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742077697468647261772030",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3939:19:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															},
															"value": "Cannot withdraw 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
																"typeString": "literal_string \"Cannot withdraw 0\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "3919:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3919:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "3919:40:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1069,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "3970:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1072,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "4002:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1070,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3985:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 120,
															"src": "3985:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3985:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3970:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "3970:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1076,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "4020:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1079,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4030:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4030:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4020:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1085,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "4070:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1080,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "4044:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1083,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1081,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "4054:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4054:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4044:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 120,
															"src": "4044:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4044:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4020:57:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "4020:57:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4114:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4114:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1094,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4126:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1089,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "4088:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 472,
														"src": "4088:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4088:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "4088:45:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1098,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "4159:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4159:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1100,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "4171:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1097,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "4149:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4149:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "EmitStatement",
												"src": "4144:34:9"
											}
										]
									},
									"documentation": null,
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1056,
											"modifierName": {
												"argumentTypes": null,
												"id": 1055,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "3870:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3870:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1058,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "3896:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3896:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1060,
											"modifierName": {
												"argumentTypes": null,
												"id": 1057,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1286,
												"src": "3883:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3883:24:9"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3847:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3846:16:9"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3908:0:9"
									},
									"scope": 1309,
									"src": "3829:357:9",
									"stateMutability": "nonpayable",
									"superFunction": 1574,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "4260:241:9",
										"statements": [
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4271:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4271:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1115,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "4288:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1118,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1116,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "4296:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4296:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4288:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4271:36:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1120,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "4322:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4331:1:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4322:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1145,
												"nodeType": "IfStatement",
												"src": "4318:176:9",
												"trueBody": {
													"id": 1144,
													"nodeType": "Block",
													"src": "4334:160:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1123,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "4349:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1126,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1124,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "4357:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4357:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4349:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4371:1:9",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4349:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1129,
															"nodeType": "ExpressionStatement",
															"src": "4349:23:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1133,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "4413:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4413:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1135,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "4425:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1130,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4387:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$439",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 472,
																	"src": "4387:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$439_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$439_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4387:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "4387:45:9"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1139,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1596,
																			"src": "4463:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4463:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1141,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "4475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1138,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "4452:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4452:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1143,
															"nodeType": "EmitStatement",
															"src": "4447:35:9"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1107,
											"modifierName": {
												"argumentTypes": null,
												"id": 1106,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 708,
												"src": "4222:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4222:12:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1109,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "4248:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4248:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1111,
											"modifierName": {
												"argumentTypes": null,
												"id": 1108,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1286,
												"src": "4235:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4235:24:9"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4212:2:9"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4260:0:9"
									},
									"scope": 1309,
									"src": "4194:307:9",
									"stateMutability": "nonpayable",
									"superFunction": 1577,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "4534:72:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1151,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "4554:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1154,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1152,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "4564:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4564:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4554:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1150,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "4545:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4545:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "4545:31:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1157,
														"name": "getReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "4587:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4587:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "4587:11:9"
											}
										]
									},
									"documentation": null,
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4522:2:9"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4534:0:9"
									},
									"scope": 1309,
									"src": "4509:97:9",
									"stateMutability": "nonpayable",
									"superFunction": 1580,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "4772:981:9",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1173,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "4787:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4787:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1175,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "4806:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4787:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "4893:208:9",
													"statements": [
														{
															"assignments": [
																1186
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1186,
																	"name": "remaining",
																	"nodeType": "VariableDeclaration",
																	"scope": 1210,
																	"src": "4908:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1185,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4908:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1192,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1189,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "4945:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4945:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1187,
																		"name": "periodFinish",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "4928:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 120,
																	"src": "4928:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4928:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4908:53:9"
														},
														{
															"assignments": [
																1194
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1194,
																	"name": "leftover",
																	"nodeType": "VariableDeclaration",
																	"scope": 1210,
																	"src": "4976:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1193,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4976:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1199,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1197,
																		"name": "rewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "5009:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1195,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1186,
																		"src": "4995:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 154,
																	"src": "4995:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4995:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4976:44:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1200,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "5035:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1206,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "5073:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1203,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1194,
																					"src": "5059:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1201,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "5048:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1202,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 95,
																				"src": "5048:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5048:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 179,
																		"src": "5048:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5048:41:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5035:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "5035:54:9"
														}
													]
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "4783:318:9",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "4820:67:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1177,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "4835:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1180,
																			"name": "rewardsDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "4859:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1178,
																			"name": "reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1163,
																			"src": "4848:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 179,
																		"src": "4848:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4848:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4835:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1183,
															"nodeType": "ExpressionStatement",
															"src": "4835:40:9"
														}
													]
												}
											},
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "5461:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5461:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1217,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "5507:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingRewards_$1309",
																		"typeString": "contract StakingRewards"
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5499:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5499:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1214,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "5476:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$439",
																"typeString": "contract IERC20"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "5476:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5476:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5461:52:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1222,
																"name": "rewardRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "5532:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1225,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "5558:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1223,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "5546:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 179,
																	"src": "5546:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5546:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5532:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "50726f76696465642072657761726420746f6f2068696768",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5576:26:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															},
															"value": "Provided reward too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af294828ccb7807394ab9c640e14eb2534ed0e75bb2e1346f1bb81dd84cda810",
																"typeString": "literal_string \"Provided reward too high\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "5524:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5524:79:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "5524:79:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1231,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5616:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1232,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "5633:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5633:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5616:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "5616:32:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1236,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "5659:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1240,
																"name": "rewardsDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "5694:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1237,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "5674:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "5674:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 95,
															"src": "5674:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5674:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5659:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "5659:51:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1245,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "5738:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "RewardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "5726:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "EmitStatement",
												"src": "5721:24:9"
											}
										]
									},
									"documentation": null,
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1166,
											"modifierName": {
												"argumentTypes": null,
												"id": 1165,
												"name": "onlyRewardsDistribution",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 730,
												"src": "4723:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4723:23:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4768:1:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4760:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4760:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												}
											],
											"id": 1171,
											"modifierName": {
												"argumentTypes": null,
												"id": 1167,
												"name": "updateReward",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1286,
												"src": "4747:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_address_$",
													"typeString": "modifier (address)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4747:24:9"
										}
									],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "4698:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4697:16:9"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4772:0:9"
									},
									"scope": 1309,
									"src": "4670:1083:9",
									"stateMutability": "nonpayable",
									"superFunction": 718,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "5845:291:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1253,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5856:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1254,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5879:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5879:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5856:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "5856:39:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1258,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5906:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1259,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5923:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5923:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5906:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "5906:43:9"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1263,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "5964:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5983:1:9",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5975:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5975:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5964:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1283,
												"nodeType": "IfStatement",
												"src": "5960:157:9",
												"trueBody": {
													"id": 1282,
													"nodeType": "Block",
													"src": "5987:130:9",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1268,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 777,
																		"src": "6002:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1270,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1269,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "6010:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6002:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1272,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "6028:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1271,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "6021:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6021:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6002:34:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1275,
															"nodeType": "ExpressionStatement",
															"src": "6002:34:9"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1276,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "6051:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1278,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1277,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "6074:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6051:31:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1279,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "6085:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6051:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1281,
															"nodeType": "ExpressionStatement",
															"src": "6051:54:9"
														}
													]
												}
											},
											{
												"id": 1284,
												"nodeType": "PlaceholderStatement",
												"src": "6127:1:9"
											}
										]
									},
									"documentation": null,
									"id": 1286,
									"name": "updateReward",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "5828:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5828:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5827:17:9"
									},
									"src": "5806:330:9",
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1290,
									"name": "RewardAdded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "6204:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6204:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6203:16:9"
									},
									"src": "6186:34:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1296,
									"name": "Staked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "6239:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "6261:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6238:38:9"
									},
									"src": "6226:51:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1302,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "6299:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "6321:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6298:38:9"
									},
									"src": "6283:54:9"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1308,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6360:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6360:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": false,
												"name": "reward",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "6382:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6382:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6359:38:9"
									},
									"src": "6343:55:9"
								}
							],
							"scope": 1328,
							"src": "732:5669:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1327,
							"linearizedBaseContracts": [
								1327
							],
							"name": "IUniswapV2ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1326,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6454:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6469:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6469:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6486:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6486:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6498:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6498:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6513:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1318,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6513:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6522:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6522:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "6533:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6533:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6453:90:9"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6552:0:9"
									},
									"scope": 1327,
									"src": "6438:115:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1328,
							"src": "6405:151:9"
						}
					],
					"src": "0:6558:9"
				},
				"id": 9
			},
			"liquidity-staker/StakingRewardsFactory.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/StakingRewardsFactory.sol",
					"exportedSymbols": {
						"StakingRewardsFactory": [
							1528
						]
					},
					"id": 1529,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1329,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:10"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/token/ERC20/IERC20.sol",
							"id": 1330,
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 440,
							"src": "28:117:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.3.0/contracts/ownership/Ownable.sol",
							"id": 1331,
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 313,
							"src": "147:116:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "liquidity-staker/StakingRewards.sol",
							"file": "./StakingRewards.sol",
							"id": 1332,
							"nodeType": "ImportDirective",
							"scope": 1529,
							"sourceUnit": 1328,
							"src": "267:30:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1333,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 312,
										"src": "335:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$312",
											"typeString": "contract Ownable"
										}
									},
									"id": 1334,
									"nodeType": "InheritanceSpecifier",
									"src": "335:7:10"
								}
							],
							"contractDependencies": [
								312,
								1309
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1528,
							"linearizedBaseContracts": [
								1528,
								312
							],
							"name": "StakingRewardsFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1336,
									"name": "rewardsToken",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "369:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1335,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1338,
									"name": "stakingRewardsGenesis",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "403:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1337,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "403:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1341,
									"name": "stakingTokens",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "521:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1339,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "521:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1340,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "521:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "StakingRewardsFactory.StakingRewardsInfo",
									"id": 1346,
									"members": [
										{
											"constant": false,
											"id": 1343,
											"name": "stakingRewards",
											"nodeType": "VariableDeclaration",
											"scope": 1346,
											"src": "655:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1342,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "655:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1345,
											"name": "rewardAmount",
											"nodeType": "VariableDeclaration",
											"scope": 1346,
											"src": "688:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1344,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "688:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "StakingRewardsInfo",
									"nodeType": "StructDefinition",
									"scope": 1528,
									"src": "618:95:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1350,
									"name": "stakingRewardsInfoByStakingToken",
									"nodeType": "VariableDeclaration",
									"scope": 1528,
									"src": "759:78:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1346_storage_$",
										"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
									},
									"typeName": {
										"id": 1349,
										"keyType": {
											"id": 1347,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "767:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "759:38:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1346_storage_$",
											"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 1348,
											"name": "StakingRewardsInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1346,
											"src": "778:18:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
												"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "952:223:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1360,
																"name": "_stakingRewardsGenesis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "971:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1361,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "997:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "997:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "971:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a636f6e7374727563746f723a2067656e6573697320746f6f20736f6f6e",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1014:54:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
																"typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
															},
															"value": "StakingRewardsFactory::constructor: genesis too soon"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f22e14100106eb9f2180e576eda6e762fdcbd26e14106a6823275a3b8fdea515",
																"typeString": "literal_string \"StakingRewardsFactory::constructor: genesis too soon\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "963:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "963:106:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "963:106:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1367,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1082:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1368,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "1097:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1082:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "1082:28:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1371,
														"name": "stakingRewardsGenesis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1121:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1372,
														"name": "_stakingRewardsGenesis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1354,
														"src": "1145:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1121:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "1121:46:10"
											}
										]
									},
									"documentation": null,
									"id": 1376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 1357,
											"modifierName": {
												"argumentTypes": null,
												"id": 1356,
												"name": "Ownable",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 312,
												"src": "935:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_Ownable_$312_$",
													"typeString": "type(contract Ownable)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "935:9:10"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"name": "_rewardsToken",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "868:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"name": "_stakingRewardsGenesis",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "900:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "900:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "857:77:10"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "952:0:10"
									},
									"scope": 1528,
									"src": "846:329:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "1482:420:10",
										"statements": [
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 1428,
														"src": "1493:31:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
															"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1385,
															"name": "StakingRewardsInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1346,
															"src": "1493:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1387,
														"name": "stakingRewardsInfoByStakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "1527:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1346_storage_$",
															"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
														}
													},
													"id": 1389,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1388,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "1560:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1527:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage",
														"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1493:80:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1392,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "1592:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																		"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakingRewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1343,
																"src": "1592:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1615:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1615:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1592:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6465706c6f793a20616c7265616479206465706c6f796564",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1627:49:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
																"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
															},
															"value": "StakingRewardsFactory::deploy: already deployed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_77d8567a7b7bf9a9a30ea727f6e525cae6667d736cdaff555c86db8d81648a1a",
																"typeString": "literal_string \"StakingRewardsFactory::deploy: already deployed\""
															}
														],
														"id": 1391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "1584:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:93:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "1584:93:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1401,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "1690:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "stakingRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1343,
														"src": "1690:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1408,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1634,
																				"src": "1773:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingRewardsFactory_$1528",
																					"typeString": "contract StakingRewardsFactory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingRewardsFactory_$1528",
																					"typeString": "contract StakingRewardsFactory"
																				}
																			],
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1765:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1765:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1410,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "1780:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1411,
																		"name": "stakingToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "1794:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "1720:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_StakingRewards_$1309_$",
																		"typeString": "function (address,address,address) returns (contract StakingRewards)"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 1405,
																		"name": "StakingRewards",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1309,
																		"src": "1724:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$1309",
																			"typeString": "contract StakingRewards"
																		}
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1720:87:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_StakingRewards_$1309",
																	"typeString": "contract StakingRewards"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_StakingRewards_$1309",
																	"typeString": "contract StakingRewards"
																}
															],
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1712:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1712:96:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1690:118:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1415,
												"nodeType": "ExpressionStatement",
												"src": "1690:118:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1416,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "1819:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1345,
														"src": "1819:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1419,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "1839:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1819:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "1819:32:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1425,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "1881:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1422,
															"name": "stakingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "1862:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1862:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "1862:32:10"
											}
										]
									},
									"documentation": "// permissioned functions",
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1383,
											"modifierName": {
												"argumentTypes": null,
												"id": 1382,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 245,
												"src": "1472:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1472:9:10"
										}
									],
									"name": "deploy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"name": "stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1424:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"name": "rewardAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1446:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1446:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:41:10"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1482:0:10"
									},
									"scope": 1528,
									"src": "1408:494:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "2042:246:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1433,
																	"name": "stakingTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "2061:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2061:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2084:1:10",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2061:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e74733a2063616c6c6564206265666f726520616e79206465706c6f7973",
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2087:71:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmounts: called before any deploys\""
															},
															"value": "StakingRewardsFactory::notifyRewardAmounts: called before any deploys"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae1f87e20c157d2878a2e48b377d209dfddfc6d5ec9b80ceecc5addd0ef6ffdb",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmounts: called before any deploys\""
															}
														],
														"id": 1432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "2053:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2053:106:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "2053:106:10"
											},
											{
												"body": {
													"id": 1457,
													"nodeType": "Block",
													"src": "2218:63:10",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1452,
																			"name": "stakingTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "2252:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 1454,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1453,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1441,
																			"src": "2266:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2252:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1451,
																	"name": "notifyRewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "2233:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2233:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1456,
															"nodeType": "ExpressionStatement",
															"src": "2233:36:10"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1444,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "2187:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1445,
															"name": "stakingTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2191:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2191:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2187:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"initializationExpression": {
													"assignments": [
														1441
													],
													"declarations": [
														{
															"constant": false,
															"id": 1441,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1458,
															"src": "2175:6:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1440,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2175:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1443,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2184:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2175:10:10"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2213:3:10",
														"subExpression": {
															"argumentTypes": null,
															"id": 1448,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "2213:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1450,
													"nodeType": "ExpressionStatement",
													"src": "2213:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2170:111:10"
											}
										]
									},
									"documentation": "// permissionless functions",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmounts",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:10"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:10"
									},
									"scope": 1528,
									"src": "2004:284:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "2519:752:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1466,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "2538:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2538:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1468,
																"name": "stakingRewardsGenesis",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "2557:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2538:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74207265616479",
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2580:54:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not ready\""
															},
															"value": "StakingRewardsFactory::notifyRewardAmount: not ready"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e71986032604f829ccaec9386c51e838a85cdbf506769bd103c829f640682adf",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not ready\""
															}
														],
														"id": 1465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "2530:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:105:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "2530:105:10"
											},
											{
												"assignments": [
													1474
												],
												"declarations": [
													{
														"constant": false,
														"id": 1474,
														"name": "info",
														"nodeType": "VariableDeclaration",
														"scope": 1526,
														"src": "2648:31:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
															"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1473,
															"name": "StakingRewardsInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1346,
															"src": "2648:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1475,
														"name": "stakingRewardsInfoByStakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "2682:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingRewardsInfo_$1346_storage_$",
															"typeString": "mapping(address => struct StakingRewardsFactory.StakingRewardsInfo storage ref)"
														}
													},
													"id": 1477,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1476,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "2715:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2682:46:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage",
														"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2648:80:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1480,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "2747:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																		"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakingRewards",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1343,
																"src": "2747:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2778:1:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2770:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2747:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a206e6f74206465706c6f796564",
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2782:57:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not deployed\""
															},
															"value": "StakingRewardsFactory::notifyRewardAmount: not deployed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e8f5c4ca6631f4bfe6ffabf099741b79e5c6b86618ddcbeee6ba3c5940184427",
																"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: not deployed\""
															}
														],
														"id": 1479,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1599,
															1600
														],
														"referencedDeclaration": 1600,
														"src": "2739:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:101:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2739:101:10"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1489,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "2857:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1345,
														"src": "2857:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2877:1:10",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2857:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1525,
												"nodeType": "IfStatement",
												"src": "2853:411:10",
												"trueBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "2880:384:10",
													"statements": [
														{
															"assignments": [
																1494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1494,
																	"name": "rewardAmount",
																	"nodeType": "VariableDeclaration",
																	"scope": 1524,
																	"src": "2895:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1493,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2895:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1497,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1495,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "2915:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																		"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1345,
																"src": "2915:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2895:37:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1498,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1474,
																		"src": "2947:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																			"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "2947:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2967:1:10",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2947:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1503,
															"nodeType": "ExpressionStatement",
															"src": "2947:21:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1509,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "3041:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																						"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																					}
																				},
																				"id": 1510,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakingRewards",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1343,
																				"src": "3041:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 1511,
																				"name": "rewardAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1494,
																				"src": "3062:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1506,
																						"name": "rewardsToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1336,
																						"src": "3018:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1505,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 439,
																					"src": "3011:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$439_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3011:20:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$439",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 393,
																			"src": "3011:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3011:64:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5374616b696e6752657761726473466163746f72793a3a6e6f74696679526577617264416d6f756e743a207472616e73666572206661696c6564",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3094:60:10",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089",
																			"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: transfer failed\""
																		},
																		"value": "StakingRewardsFactory::notifyRewardAmount: transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_afbe2226aded12cd2f0d3c83ff167eedc78632dc0894f92eea331d3f2b56d089",
																			"typeString": "literal_string \"StakingRewardsFactory::notifyRewardAmount: transfer failed\""
																		}
																	],
																	"id": 1504,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1599,
																		1600
																	],
																	"referencedDeclaration": 1600,
																	"src": "2985:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2985:184:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "2985:184:10"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1521,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1494,
																		"src": "3239:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1517,
																					"name": "info",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1474,
																					"src": "3199:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakingRewardsInfo_$1346_storage_ptr",
																						"typeString": "struct StakingRewardsFactory.StakingRewardsInfo storage pointer"
																					}
																				},
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "stakingRewards",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1343,
																				"src": "3199:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1516,
																			"name": "StakingRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "3184:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StakingRewards_$1309_$",
																				"typeString": "type(contract StakingRewards)"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3184:35:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$1309",
																			"typeString": "contract StakingRewards"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "notifyRewardAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1249,
																	"src": "3184:54:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3184:68:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1523,
															"nodeType": "ExpressionStatement",
															"src": "3184:68:10"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"name": "stakingToken",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "2490:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2490:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:22:10"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2519:0:10"
									},
									"scope": 1528,
									"src": "2462:809:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1529,
							"src": "301:2973:10"
						}
					],
					"src": "0:3274:10"
				},
				"id": 10
			},
			"liquidity-staker/interfaces/IStakingRewards.sol": {
				"ast": {
					"absolutePath": "liquidity-staker/interfaces/IStakingRewards.sol",
					"exportedSymbols": {
						"IStakingRewards": [
							1581
						]
					},
					"id": 1582,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1530,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:11"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 1581,
							"linearizedBaseContracts": [
								1581
							],
							"name": "IStakingRewards",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:11"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "137:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "136:9:11"
									},
									"scope": 1581,
									"src": "78:68:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:2:11"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "203:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "202:9:11"
									},
									"scope": 1581,
									"src": "154:58:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "236:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "236:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "235:17:11"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "276:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "275:9:11"
									},
									"scope": 1581,
									"src": "220:65:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:2:11"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "348:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "347:9:11"
									},
									"scope": 1581,
									"src": "293:64:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:11"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "411:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:9:11"
									},
									"scope": 1581,
									"src": "365:55:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "447:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "446:17:11"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "487:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "486:9:11"
									},
									"scope": 1581,
									"src": "428:68:11",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1569,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "538:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:16:11"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:11"
									},
									"scope": 1581,
									"src": "523:40:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "589:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:16:11"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:0:11"
									},
									"scope": 1581,
									"src": "571:43:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "640:2:11"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "651:0:11"
									},
									"scope": 1581,
									"src": "622:30:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 1580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "673:2:11"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:0:11"
									},
									"scope": 1581,
									"src": "660:25:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 1582,
							"src": "31:657:11"
						}
					],
					"src": "0:688:11"
				},
				"id": 11
			}
		}
	}
}
{
	"id": "a4333861ee475c9359aa16466167ba25",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"ex/test.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2020-09-04\r\n*/\r\n\r\npragma solidity 0.5.16;\r\n\r\ninterface IARC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8);\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory);\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address _owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\ncontract Context {\r\n  // Empty internal constructor, to prevent people from mistakenly deploying\r\n  // an instance of this contract, which should be used via inheritance.\r\n  constructor () internal { }\r\n\r\n  function _msgSender() internal view returns (address payable) {\r\n    return msg.sender;\r\n  }\r\n\r\n  function _msgData() internal view returns (bytes memory) {\r\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n    return msg.data;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n  /**\r\n   * @dev Returns the addition of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `+` operator.\r\n   *\r\n   * Requirements:\r\n   * - Addition cannot overflow.\r\n   */\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return sub(a, b, \"SafeMath: subtraction overflow\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n   * overflow (when the result is negative).\r\n   *\r\n   * Counterpart to Solidity's `-` operator.\r\n   *\r\n   * Requirements:\r\n   * - Subtraction cannot overflow.\r\n   */\r\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b <= a, errorMessage);\r\n    uint256 c = a - b;\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the multiplication of two unsigned integers, reverting on\r\n   * overflow.\r\n   *\r\n   * Counterpart to Solidity's `*` operator.\r\n   *\r\n   * Requirements:\r\n   * - Multiplication cannot overflow.\r\n   */\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n    // benefit is lost if 'b' is also tested.\r\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n    if (a == 0) {\r\n      return 0;\r\n    }\r\n\r\n    uint256 c = a * b;\r\n    require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return div(a, b, \"SafeMath: division by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\r\n   * division by zero. The result is rounded towards zero.\r\n   *\r\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n   * uses an invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    // Solidity only automatically asserts when dividing by 0\r\n    require(b > 0, errorMessage);\r\n    uint256 c = a / b;\r\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n    return c;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    return mod(a, b, \"SafeMath: modulo by zero\");\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n   * Reverts with custom message when dividing by zero.\r\n   *\r\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n   * invalid opcode to revert (consuming all remaining gas).\r\n   *\r\n   * Requirements:\r\n   * - The divisor cannot be zero.\r\n   */\r\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n    require(b != 0, errorMessage);\r\n    return a % b;\r\n  }\r\n}\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\ncontract Ownable is Context {\r\n  address private _owner;\r\n\r\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n  /**\r\n   * @dev Initializes the contract setting the deployer as the initial owner.\r\n   */\r\n  constructor () internal {\r\n    address msgSender = _msgSender();\r\n    _owner = msgSender;\r\n    emit OwnershipTransferred(address(0), msgSender);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the address of the current owner.\r\n   */\r\n  function owner() public view returns (address) {\r\n    return _owner;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner() {\r\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Leaves the contract without owner. It will not be possible to call\r\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n   *\r\n   * NOTE: Renouncing ownership will leave the contract without an owner,\r\n   * thereby removing any functionality that is only available to the owner.\r\n   */\r\n  function renounceOwnership() public onlyOwner {\r\n    emit OwnershipTransferred(_owner, address(0));\r\n    _owner = address(0);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   * Can only be called by the current owner.\r\n   */\r\n  function transferOwnership(address newOwner) public onlyOwner {\r\n    _transferOwnership(newOwner);\r\n  }\r\n\r\n  /**\r\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n   */\r\n  function _transferOwnership(address newOwner) internal {\r\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n    emit OwnershipTransferred(_owner, newOwner);\r\n    _owner = newOwner;\r\n  }\r\n}\r\n\r\ncontract ARC20USDT is  Context, IARC20, Ownable {\r\n  using SafeMath for uint256;\r\n\r\n  mapping (address => uint256) private _balances;\r\n  uint public basisPointsRate = 5000;\r\n  bool public limitTransfer = true;\r\n\r\n  mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n  uint256 private _totalSupply;\r\n  uint8 public _decimals;\r\n  string public _symbol;\r\n  string public _name;\r\n  address public _burnAccount;\r\n  bool _isBurnTotal;\r\n\r\n  constructor() public {\r\n    _name = \"AITD Yoho\";\r\n    _symbol = \"YOHO\";\r\n    _decimals = 18;\r\n    _totalSupply = 10000000000000000000000000000000;\r\n    _balances[msg.sender] = _totalSupply;\r\n    _burnAccount = address(0);\r\n    _isBurnTotal = true;\r\n\r\n    emit Transfer(address(0), msg.sender, _totalSupply);\r\n  }\r\n\r\n  function setBurnAcount(address burnAddress, bool  isBurnTotal) public onlyOwner {\r\n    _isBurnTotal = isBurnTotal;\r\n    _burnAccount = burnAddress;\r\n  }\r\n\r\n  mapping (address => bool) public isWhiteListed;\r\n    \r\n  function addWhiteList (address _authUser) public onlyOwner {\r\n        isWhiteListed[_authUser] = true;\r\n        emit AddedWhiteList(_authUser);\r\n  }\r\n\r\n  function removeWhiteList (address _clearedUser) public onlyOwner {\r\n        isWhiteListed[_clearedUser] = false;\r\n        emit RemovedWhiteList(_clearedUser);\r\n  }\r\n\r\n  event AddedWhiteList(address _user);\r\n\r\n  event RemovedWhiteList(address _user);\r\n\r\n  /**\r\n   * @dev Returns the bep token owner.\r\n   */\r\n  function getOwner() external view returns (address) {\r\n    return owner();\r\n  } \r\n\r\n  /**\r\n   * @dev Returns the token decimals.\r\n   */\r\n  function decimals() external view returns (uint8) {\r\n    return _decimals;\r\n  }\r\n\r\n  /**\r\n   * @dev Returns the token symbol.\r\n   */\r\n  function symbol() external view returns (string memory) {\r\n    return _symbol;\r\n  }\r\n\r\n  /**\r\n  * @dev Returns the token name.\r\n  */\r\n  function name() external view returns (string memory) {\r\n    return _name;\r\n  }\r\n\r\n  /**\r\n   * @dev See {ARC20-totalSupply}.\r\n   */\r\n  function totalSupply() external view returns (uint256) {\r\n    return _totalSupply;\r\n  }\r\n\r\n  /**\r\n   * @dev See {ARC20-balanceOf}.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256) {\r\n    return _balances[account];\r\n  }\r\n\r\n  /**\r\n   * @dev See {ARC20-transfer}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `recipient` cannot be the zero address.\r\n   * - the caller must have a balance of at least `amount`.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool) {\r\n    bool is_white = isWhiteListed[msg.sender];\r\n    if (!is_white && limitTransfer)\r\n    {\r\n      _burn(_msgSender(), amount);\r\n      return true;\r\n    }\r\n    _transfer(_msgSender(), recipient, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {ARC20-allowance}.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256) {\r\n    return _allowances[owner][spender];\r\n  }\r\n\r\n  /**\r\n   * @dev See {ARC20-approve}.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool) {\r\n    _approve(_msgSender(), spender, amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev See {ARC20-transferFrom}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance. This is not\r\n   * required by the EIP. See the note at the beginning of {ARC20};\r\n   *\r\n   * Requirements:\r\n   * - `sender` and `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   * - the caller must have allowance for `sender`'s tokens of at least\r\n   * `amount`.\r\n   */\r\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r\n     bool is_white = isWhiteListed[msg.sender];\r\n     if (!is_white && limitTransfer)\r\n     {\r\n        //_transfer(sender, address(0), amount);\r\n        _burn(_msgSender(), amount);\r\n        return true;\r\n     }\r\n\r\n    _transfer(sender, recipient, amount);\r\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {ARC20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n   *\r\n   * This is an alternative to {approve} that can be used as a mitigation for\r\n   * problems described in {ARC20-approve}.\r\n   *\r\n   * Emits an {Approval} event indicating the updated allowance.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `spender` cannot be the zero address.\r\n   * - `spender` must have allowance for the caller of at least\r\n   * `subtractedValue`.\r\n   */\r\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ARC20: decreased allowance below zero\"));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\r\n   * the total supply.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `msg.sender` must be the token owner\r\n   */\r\n  function mint(uint256 amount) public onlyOwner returns (bool) {\r\n    _mint(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev Burn `amount` tokens and decreasing the total supply.\r\n   */\r\n  function burn(uint256 amount) public returns (bool) {\r\n    _burn(_msgSender(), amount);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @dev  `basisPointsRate` \r\n   */\r\n  function setBasisPointsRate(uint256 _basisPointsRate) public onlyOwner returns (bool) {\r\n    require(_basisPointsRate <= 10000, \"The base points must <= 10000\");\r\n    basisPointsRate = _basisPointsRate;\r\n    return true;\r\n  }\r\n\r\n  function resetLimiteTransfer(bool _limitTransfer) public onlyOwner returns (bool) {\r\n    limitTransfer = _limitTransfer;\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n   *\r\n   * This is internal function is equivalent to {transfer}, and can be used to\r\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `sender` cannot be the zero address.\r\n   * - `recipient` cannot be the zero address.\r\n   * - `sender` must have a balance of at least `amount`.\r\n   */\r\n  function _transfer(address sender, address recipient, uint256 amount) internal {\r\n    require(sender != address(0), \"ARC20: transfer from the zero address\");\r\n    require(recipient != address(0), \"ARC20: transfer to the zero address\");\r\n    require(basisPointsRate <= 10000, \"basic poin must <= 10000\");\r\n\r\n    _balances[sender] = _balances[sender].sub(amount, \"ARC20: transfer amount exceeds balance\");\r\n    uint fee = amount.mul(basisPointsRate).div(10000);\r\n    require(fee <= amount, \"fee must <= amount\");\r\n    _balances[recipient] = _balances[recipient].add(amount - fee);\r\n    if (fee > 0) {\r\n       _totalSupply = _totalSupply.sub(fee);\r\n       emit Transfer(sender, address(0), fee);\r\n    }\r\n    emit Transfer(sender, recipient, amount);\r\n  }\r\n\r\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n   * the total supply.\r\n   *\r\n   * Emits a {Transfer} event with `from` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `to` cannot be the zero address.\r\n   */\r\n  function _mint(address account, uint256 amount) internal {\r\n    require(account != address(0), \"ARC20: mint to the zero address\");\r\n\r\n    _totalSupply = _totalSupply.add(amount);\r\n    _balances[account] = _balances[account].add(amount);\r\n    emit Transfer(address(0), account, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`, reducing the\r\n   * total supply.\r\n   *\r\n   * Emits a {Transfer} event with `to` set to the zero address.\r\n   *\r\n   * Requirements\r\n   *\r\n   * - `account` cannot be the zero address.\r\n   * - `account` must have at least `amount` tokens.\r\n   */\r\n  function _burn(address account, uint256 amount) internal {\r\n    require(account != address(0), \"ARC20: burn from the zero address\");\r\n    if (_isBurnTotal){\r\n        _balances[account] = _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\");\r\n        _totalSupply = _totalSupply.sub(amount);\r\n    }\r\n    else {\r\n        _balances[account] = _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\");\r\n        _balances[_burnAccount] = _balances[_burnAccount].add(amount);\r\n    }\r\n    \r\n    emit Transfer(account, _burnAccount, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\r\n   *\r\n   * This is internal function is equivalent to `approve`, and can be used to\r\n   * e.g. set automatic allowances for certain subsystems, etc.\r\n   *\r\n   * Emits an {Approval} event.\r\n   *\r\n   * Requirements:\r\n   *\r\n   * - `owner` cannot be the zero address.\r\n   * - `spender` cannot be the zero address.\r\n   */\r\n  function _approve(address owner, address spender, uint256 amount) internal {\r\n    require(owner != address(0), \"ARC20: approve from the zero address\");\r\n    require(spender != address(0), \"ARC20: approve to the zero address\");\r\n\r\n    _allowances[owner][spender] = amount;\r\n    emit Approval(owner, spender, amount);\r\n  }\r\n\r\n  /**\r\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\r\n   * from the caller's allowance.\r\n   *\r\n   * See {_burn} and {_approve}.\r\n   */\r\n  function _burnFrom(address account, uint256 amount) internal {\r\n    _burn(account, amount);\r\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"ARC20: burn amount exceeds allowance\"));\r\n  }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ex/test.sol": {
				"ARC20USDT": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "AddedWhiteList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "RemovedWhiteList",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_burnAccount",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "_symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_authUser",
									"type": "address"
								}
							],
							"name": "addWhiteList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "basisPointsRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhiteListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "limitTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_clearedUser",
									"type": "address"
								}
							],
							"name": "removeWhiteList",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "bool",
									"name": "_limitTransfer",
									"type": "bool"
								}
							],
							"name": "resetLimiteTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_basisPointsRate",
									"type": "uint256"
								}
							],
							"name": "setBasisPointsRate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "burnAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "isBurnTotal",
									"type": "bool"
								}
							],
							"name": "setBurnAcount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {ARC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {ARC20-approve}.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {ARC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {ARC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {ARC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setBasisPointsRate(uint256)": {
								"details": "`basisPointsRate` "
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {ARC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {ARC20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {ARC20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ARC20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"ex/test.sol\":11376:21545  contract ARC20USDT is  Context, IARC20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"ex/test.sol\":11543:11547  5000 */\n  0x1388\n    /* \"ex/test.sol\":11513:11547  uint public basisPointsRate = 5000 */\n  0x02\n  sstore\n    /* \"ex/test.sol\":11552:11584  bool public limitTransfer = true */\n  0x03\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"ex/test.sol\":11580:11584  true */\n  0x01\n    /* \"ex/test.sol\":11552:11584  bool public limitTransfer = true */\n  or\n  swap1\n  sstore\n    /* \"ex/test.sol\":11833:12145  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:7   */\n  dup1\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"ex/test.sol\":9885:9902  address msgSender */\n  0x00\n    /* \"ex/test.sol\":9905:9917  _msgSender() */\n  tag_7\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"ex/test.sol\":9905:9915  _msgSender */\n  tag_8\n    /* \"ex/test.sol\":9905:9917  _msgSender() */\n  and\n  jump\t// in\ntag_7:\n    /* \"ex/test.sol\":9924:9930  _owner */\n  0x00\n    /* \"ex/test.sol\":9924:9942  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"ex/test.sol\":9954:9997  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"ex/test.sol\":9924:9942  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"ex/test.sol\":9954:9997  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ex/test.sol\":9924:9930  _owner */\n  dup3\n  swap1\n    /* \"ex/test.sol\":9954:9997  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"ex/test.sol\":11861:11880  _name = \"AITD Yoho\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x09\n  dup1\n  dup3\n  mstore\n  shl(0xb8, 0x4149544420596f686f)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"ex/test.sol\":11861:11866  _name */\n  0x08\n  swap2\n    /* \"ex/test.sol\":11861:11880  _name = \"AITD Yoho\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"ex/test.sol\":11887:11903  _symbol = \"YOHO\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x594f484f)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n    /* \"ex/test.sol\":11887:11894  _symbol */\n  0x07\n  swap2\n    /* \"ex/test.sol\":11887:11903  _symbol = \"YOHO\" */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"ex/test.sol\":11910:11919  _decimals */\n  0x06\n    /* \"ex/test.sol\":11910:11924  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"ex/test.sol\":11922:11924  18 */\n  0x12\n    /* \"ex/test.sol\":11910:11924  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"ex/test.sol\":11946:11978  10000000000000000000000000000000 */\n  0x7e37be2022c0914b2680000000\n    /* \"ex/test.sol\":11931:11943  _totalSupply */\n  0x05\n    /* \"ex/test.sol\":11931:11978  _totalSupply = 10000000000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n    /* \"ex/test.sol\":11995:12005  msg.sender */\n  caller\n    /* \"ex/test.sol\":11910:11919  _decimals */\n  0x00\n    /* \"ex/test.sol\":11985:12006  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"ex/test.sol\":11910:11924  _decimals = 18 */\n  0x01\n    /* \"ex/test.sol\":11985:12006  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"ex/test.sol\":11985:12021  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"ex/test.sol\":12028:12040  _burnAccount */\n  0x09\n    /* \"ex/test.sol\":12028:12053  _burnAccount = address(0) */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x01))\n    /* \"ex/test.sol\":12060:12079  _isBurnTotal = true */\n  and\n  shl(0xa0, 0x01)\n  or\n  swap1\n  sstore\n    /* \"ex/test.sol\":12093:12139  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"ex/test.sol\":11995:12005  msg.sender */\n  swap3\n  swap4\n    /* \"ex/test.sol\":11910:11919  _decimals */\n  swap2\n  swap3\n    /* \"ex/test.sol\":12093:12139  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"ex/test.sol\":11376:21545  contract ARC20USDT is  Context, IARC20, Ownable {\r... */\n  jump(tag_13)\n    /* \"ex/test.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\ntag_8:\n    /* \"ex/test.sol\":3849:3859  msg.sender */\n  caller\n    /* \"ex/test.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"ex/test.sol\":11376:21545  contract ARC20USDT is  Context, IARC20, Ownable {\r... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ex/test.sol\":11376:21545  contract ARC20USDT is  Context, IARC20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"ex/test.sol\":11376:21545  contract ARC20USDT is  Context, IARC20, Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd644f72\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd644f72\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe7cd4a04\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xea924f06\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb09f1266\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd28d8852\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x3224d395\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x39509351\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5fdf2be0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6f9170f6\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x3224d395\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x32424aa3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3478591a\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x2042e5c2\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x2042e5c2\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x278d9637\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ex/test.sol\":13240:13319  function name() external view returns (string memory) {\r... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_41:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_41)\n    tag_43:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ex/test.sol\":13240:13319  function name() external view returns (string memory) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_44:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ex/test.sol\":14435:14579  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_4:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_46:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":14435:14579  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_47\n      jump\t// in\n    tag_45:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/test.sol\":13375:13462  function totalSupply() external view returns (uint256) {\r... */\n    tag_5:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/test.sol\":12520:12683  function removeWhiteList (address _clearedUser) public onlyOwner {\r... */\n    tag_6:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n        /* \"ex/test.sol\":12520:12683  function removeWhiteList (address _clearedUser) public onlyOwner {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"ex/test.sol\":15024:15531  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":15024:15531  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_55\n      jump\t// in\n        /* \"ex/test.sol\":11552:11584  bool public limitTransfer = true */\n    tag_8:\n      tag_45\n      tag_57\n      jump\t// in\n        /* \"ex/test.sol\":12968:13047  function decimals() external view returns (uint8) {\r... */\n    tag_9:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/test.sol\":11777:11804  address public _burnAccount */\n    tag_10:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/test.sol\":11700:11722  uint8 public _decimals */\n    tag_11:\n      tag_58\n      tag_63\n      jump\t// in\n        /* \"ex/test.sol\":12151:12303  function setBurnAcount(address burnAddress, bool  isBurnTotal) public onlyOwner {\r... */\n    tag_12:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_65\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_65:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":12151:12303  function setBurnAcount(address burnAddress, bool  isBurnTotal) public onlyOwner {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_66\n      jump\t// in\n        /* \"ex/test.sol\":15913:16113  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_13:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_68\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_68:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":15913:16113  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"ex/test.sol\":17241:17351  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_14:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_71:\n      pop\n        /* \"ex/test.sol\":17241:17351  function burn(uint256 amount) public returns (bool) {\r... */\n      calldataload\n      tag_72\n      jump\t// in\n        /* \"ex/test.sol\":17402:17627  function setBasisPointsRate(uint256 _basisPointsRate) public onlyOwner returns (bool) {\r... */\n    tag_15:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n      pop\n        /* \"ex/test.sol\":17402:17627  function setBasisPointsRate(uint256 _basisPointsRate) public onlyOwner returns (bool) {\r... */\n      calldataload\n      tag_75\n      jump\t// in\n        /* \"ex/test.sol\":12309:12355  mapping (address => bool) public isWhiteListed */\n    tag_16:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_77:\n      pop\n        /* \"ex/test.sol\":12309:12355  mapping (address => bool) public isWhiteListed */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_78\n      jump\t// in\n        /* \"ex/test.sol\":13516:13622  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_17:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_80\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_80:\n      pop\n        /* \"ex/test.sol\":13516:13622  function balanceOf(address account) external view returns (uint256) {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_81\n      jump\t// in\n        /* \"ex/test.sol\":10678:10808  function renounceOwnership() public onlyOwner {\r... */\n    tag_18:\n      tag_50\n      tag_83\n      jump\t// in\n        /* \"ex/test.sol\":12829:12908  function getOwner() external view returns (address) {\r... */\n    tag_19:\n      tag_60\n      tag_85\n      jump\t// in\n        /* \"ex/test.sol\":10076:10149  function owner() public view returns (address) {\r... */\n    tag_20:\n      tag_60\n      tag_87\n      jump\t// in\n        /* \"ex/test.sol\":13104:13187  function symbol() external view returns (string memory) {\r... */\n    tag_21:\n      tag_39\n      tag_89\n      jump\t// in\n        /* \"ex/test.sol\":17036:17156  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_22:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_95:\n      pop\n        /* \"ex/test.sol\":17036:17156  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n      calldataload\n      tag_96\n      jump\t// in\n        /* \"ex/test.sol\":16585:16836  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_23:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_98:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":16585:16836  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_99\n      jump\t// in\n        /* \"ex/test.sol\":13816:14121  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_24:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_101\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_101:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":13816:14121  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_102\n      jump\t// in\n        /* \"ex/test.sol\":11727:11748  string public _symbol */\n    tag_25:\n      tag_39\n      tag_104\n      jump\t// in\n        /* \"ex/test.sol\":11753:11772  string public _name */\n    tag_26:\n      tag_39\n      tag_110\n      jump\t// in\n        /* \"ex/test.sol\":14175:14305  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_27:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_116:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":14175:14305  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_117\n      jump\t// in\n        /* \"ex/test.sol\":11513:11547  uint public basisPointsRate = 5000 */\n    tag_28:\n      tag_48\n      tag_119\n      jump\t// in\n        /* \"ex/test.sol\":12366:12514  function addWhiteList (address _authUser) public onlyOwner {\r... */\n    tag_29:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_121:\n      pop\n        /* \"ex/test.sol\":12366:12514  function addWhiteList (address _authUser) public onlyOwner {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_122\n      jump\t// in\n        /* \"ex/test.sol\":17633:17776  function resetLimiteTransfer(bool _limitTransfer) public onlyOwner returns (bool) {\r... */\n    tag_30:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_124\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_124:\n      pop\n        /* \"ex/test.sol\":17633:17776  function resetLimiteTransfer(bool _limitTransfer) public onlyOwner returns (bool) {\r... */\n      calldataload\n      iszero\n      iszero\n      tag_125\n      jump\t// in\n        /* \"ex/test.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_31:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_127:\n      pop\n        /* \"ex/test.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_128\n      jump\t// in\n        /* \"ex/test.sol\":13240:13319  function name() external view returns (string memory) {\r... */\n    tag_40:\n        /* \"ex/test.sol\":13308:13313  _name */\n      0x08\n        /* \"ex/test.sol\":13301:13313  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ex/test.sol\":13279:13292  string memory */\n      0x60\n      swap4\n        /* \"ex/test.sol\":13301:13313  return _name */\n      swap1\n      swap3\n        /* \"ex/test.sol\":13308:13313  _name */\n      swap1\n      swap2\n        /* \"ex/test.sol\":13301:13313  return _name */\n      dup4\n      add\n        /* \"ex/test.sol\":13308:13313  _name */\n      dup3\n        /* \"ex/test.sol\":13301:13313  return _name */\n      dup3\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ex/test.sol\":13240:13319  function name() external view returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"ex/test.sol\":14435:14579  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_47:\n        /* \"ex/test.sol\":14503:14507  bool */\n      0x00\n        /* \"ex/test.sol\":14516:14555  _approve(_msgSender(), spender, amount) */\n      tag_134\n        /* \"ex/test.sol\":14525:14537  _msgSender() */\n      tag_135\n        /* \"ex/test.sol\":14525:14535  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":14525:14537  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"ex/test.sol\":14539:14546  spender */\n      dup5\n        /* \"ex/test.sol\":14548:14554  amount */\n      dup5\n        /* \"ex/test.sol\":14516:14524  _approve */\n      tag_137\n        /* \"ex/test.sol\":14516:14555  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_134:\n      pop\n        /* \"ex/test.sol\":14569:14573  true */\n      0x01\n        /* \"ex/test.sol\":14435:14579  function approve(address spender, uint256 amount) external returns (bool) {\r... */\n    tag_133:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":13375:13462  function totalSupply() external view returns (uint256) {\r... */\n    tag_49:\n        /* \"ex/test.sol\":13444:13456  _totalSupply */\n      sload(0x05)\n        /* \"ex/test.sol\":13375:13462  function totalSupply() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"ex/test.sol\":12520:12683  function removeWhiteList (address _clearedUser) public onlyOwner {\r... */\n    tag_52:\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_140\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_141\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":12596:12623  isWhiteListed[_clearedUser] */\n      dup2\n      and\n        /* \"ex/test.sol\":12626:12631  false */\n      0x00\n        /* \"ex/test.sol\":12596:12623  isWhiteListed[_clearedUser] */\n      dup2\n      dup2\n      mstore\n        /* \"ex/test.sol\":12596:12609  isWhiteListed */\n      0x0a\n        /* \"ex/test.sol\":12596:12623  isWhiteListed[_clearedUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/test.sol\":12596:12631  isWhiteListed[_clearedUser] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ex/test.sol\":12647:12677  RemovedWhiteList(_clearedUser) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      mload\n      0x9ff0fe46bde692ffa123229beb5debd1c068a183c3b74be4f2d749f628203d3a\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"ex/test.sol\":12520:12683  function removeWhiteList (address _clearedUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":15024:15531  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_55:\n        /* \"ex/test.sol\":15159:15169  msg.sender */\n      caller\n        /* \"ex/test.sol\":15115:15119  bool */\n      0x00\n        /* \"ex/test.sol\":15145:15170  isWhiteListed[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":15145:15158  isWhiteListed */\n      0x0a\n        /* \"ex/test.sol\":15145:15170  isWhiteListed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ex/test.sol\":15182:15191  !is_white */\n      dup1\n      iszero\n        /* \"ex/test.sol\":15182:15208  !is_white && limitTransfer */\n      dup1\n      iszero\n      tag_144\n      jumpi\n      pop\n        /* \"ex/test.sol\":15195:15208  limitTransfer */\n      and(0xff, sload(0x03))\n        /* \"ex/test.sol\":15182:15208  !is_white && limitTransfer */\n    tag_144:\n        /* \"ex/test.sol\":15178:15335  if (!is_white && limitTransfer)\r... */\n      iszero\n      tag_145\n      jumpi\n        /* \"ex/test.sol\":15277:15304  _burn(_msgSender(), amount) */\n      tag_146\n        /* \"ex/test.sol\":15283:15295  _msgSender() */\n      tag_147\n        /* \"ex/test.sol\":15283:15293  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":15283:15295  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"ex/test.sol\":15297:15303  amount */\n      dup5\n        /* \"ex/test.sol\":15277:15282  _burn */\n      tag_148\n        /* \"ex/test.sol\":15277:15304  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_146:\n        /* \"ex/test.sol\":15322:15326  true */\n      0x01\n        /* \"ex/test.sol\":15315:15326  return true */\n      swap2\n      pop\n      pop\n      jump(tag_143)\n        /* \"ex/test.sol\":15178:15335  if (!is_white && limitTransfer)\r... */\n    tag_145:\n        /* \"ex/test.sol\":15343:15379  _transfer(sender, recipient, amount) */\n      tag_149\n        /* \"ex/test.sol\":15353:15359  sender */\n      dup6\n        /* \"ex/test.sol\":15361:15370  recipient */\n      dup6\n        /* \"ex/test.sol\":15372:15378  amount */\n      dup6\n        /* \"ex/test.sol\":15343:15352  _transfer */\n      tag_150\n        /* \"ex/test.sol\":15343:15379  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_149:\n        /* \"ex/test.sol\":15386:15507  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\")) */\n      tag_151\n        /* \"ex/test.sol\":15395:15401  sender */\n      dup6\n        /* \"ex/test.sol\":15403:15415  _msgSender() */\n      tag_152\n        /* \"ex/test.sol\":15403:15413  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":15403:15415  _msgSender() */\n      jump\t// in\n    tag_152:\n        /* \"ex/test.sol\":15417:15506  _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\") */\n      tag_153\n        /* \"ex/test.sol\":15455:15461  amount */\n      dup7\n        /* \"ex/test.sol\":15417:15506  _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_1bdbb83b359c44f2dd176c8e425cac93ac5d285f6e207601ac9329b71a414cfe\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":15417:15436  _allowances[sender] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":15417:15428  _allowances */\n      0x04\n        /* \"ex/test.sol\":15417:15436  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"ex/test.sol\":15437:15449  _msgSender() */\n      tag_154\n        /* \"ex/test.sol\":15437:15447  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":15437:15449  _msgSender() */\n      jump\t// in\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":15417:15450  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"ex/test.sol\":15417:15506  _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"ex/test.sol\":15417:15454  _allowances[sender][_msgSender()].sub */\n      tag_155\n        /* \"ex/test.sol\":15417:15506  _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_153:\n        /* \"ex/test.sol\":15386:15394  _approve */\n      tag_137\n        /* \"ex/test.sol\":15386:15507  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ARC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_151:\n        /* \"ex/test.sol\":15521:15525  true */\n      0x01\n        /* \"ex/test.sol\":15514:15525  return true */\n      swap2\n      pop\n      pop\n        /* \"ex/test.sol\":15024:15531  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_143:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":11552:11584  bool public limitTransfer = true */\n    tag_57:\n      and(0xff, sload(0x03))\n      dup2\n      jump\t// out\n        /* \"ex/test.sol\":12968:13047  function decimals() external view returns (uint8) {\r... */\n    tag_59:\n        /* \"ex/test.sol\":13032:13041  _decimals */\n      and(0xff, sload(0x06))\n        /* \"ex/test.sol\":12968:13047  function decimals() external view returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"ex/test.sol\":11777:11804  address public _burnAccount */\n    tag_61:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n      dup2\n      jump\t// out\n        /* \"ex/test.sol\":11700:11722  uint8 public _decimals */\n    tag_63:\n      and(0xff, sload(0x06))\n      dup2\n      jump\t// out\n        /* \"ex/test.sol\":12151:12303  function setBurnAcount(address burnAddress, bool  isBurnTotal) public onlyOwner {\r... */\n    tag_66:\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_158\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_159\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_159:\n        /* \"ex/test.sol\":12238:12250  _isBurnTotal */\n      0x09\n        /* \"ex/test.sol\":12238:12264  _isBurnTotal = isBurnTotal */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"ex/test.sol\":12271:12297  _burnAccount = burnAddress */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ex/test.sol\":12151:12303  function setBurnAcount(address burnAddress, bool  isBurnTotal) public onlyOwner {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":15913:16113  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\r... */\n    tag_69:\n        /* \"ex/test.sol\":15993:15997  bool */\n      0x00\n        /* \"ex/test.sol\":16006:16089  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_134\n        /* \"ex/test.sol\":16015:16027  _msgSender() */\n      tag_163\n        /* \"ex/test.sol\":16015:16025  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":16015:16027  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"ex/test.sol\":16029:16036  spender */\n      dup5\n        /* \"ex/test.sol\":16038:16088  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_153\n        /* \"ex/test.sol\":16077:16087  addedValue */\n      dup6\n        /* \"ex/test.sol\":16038:16049  _allowances */\n      0x04\n        /* \"ex/test.sol\":16038:16063  _allowances[_msgSender()] */\n      0x00\n        /* \"ex/test.sol\":16050:16062  _msgSender() */\n      tag_165\n        /* \"ex/test.sol\":16050:16060  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":16050:16062  _msgSender() */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":16038:16063  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ex/test.sol\":16038:16072  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ex/test.sol\":16038:16088  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"ex/test.sol\":16038:16076  _allowances[_msgSender()][spender].add */\n      tag_166\n        /* \"ex/test.sol\":16038:16088  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"ex/test.sol\":17241:17351  function burn(uint256 amount) public returns (bool) {\r... */\n    tag_72:\n        /* \"ex/test.sol\":17287:17291  bool */\n      0x00\n        /* \"ex/test.sol\":17300:17327  _burn(_msgSender(), amount) */\n      tag_168\n        /* \"ex/test.sol\":17306:17318  _msgSender() */\n      tag_169\n        /* \"ex/test.sol\":17306:17316  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":17306:17318  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"ex/test.sol\":17320:17326  amount */\n      dup4\n        /* \"ex/test.sol\":17300:17305  _burn */\n      tag_148\n        /* \"ex/test.sol\":17300:17327  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_168:\n      pop\n        /* \"ex/test.sol\":17341:17345  true */\n      0x01\n        /* \"ex/test.sol\":17241:17351  function burn(uint256 amount) public returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":17402:17627  function setBasisPointsRate(uint256 _basisPointsRate) public onlyOwner returns (bool) {\r... */\n    tag_75:\n        /* \"ex/test.sol\":17482:17486  bool */\n      0x00\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_171\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_172\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_172:\n        /* \"ex/test.sol\":17523:17528  10000 */\n      0x2710\n        /* \"ex/test.sol\":17503:17519  _basisPointsRate */\n      dup3\n        /* \"ex/test.sol\":17503:17528  _basisPointsRate <= 10000 */\n      gt\n      iszero\n        /* \"ex/test.sol\":17495:17562  require(_basisPointsRate <= 10000, \"The base points must <= 10000\") */\n      tag_174\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x546865206261736520706f696e7473206d757374203c3d203130303030000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_174:\n      pop\n        /* \"ex/test.sol\":17569:17584  basisPointsRate */\n      0x02\n        /* \"ex/test.sol\":17569:17603  basisPointsRate = _basisPointsRate */\n      sstore\n        /* \"ex/test.sol\":17617:17621  true */\n      0x01\n      swap1\n        /* \"ex/test.sol\":17402:17627  function setBasisPointsRate(uint256 _basisPointsRate) public onlyOwner returns (bool) {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":12309:12355  mapping (address => bool) public isWhiteListed */\n    tag_78:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ex/test.sol\":13516:13622  function balanceOf(address account) external view returns (uint256) {\r... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":13598:13616  _balances[account] */\n      and\n        /* \"ex/test.sol\":13575:13582  uint256 */\n      0x00\n        /* \"ex/test.sol\":13598:13616  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":13598:13607  _balances */\n      0x01\n        /* \"ex/test.sol\":13598:13616  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ex/test.sol\":13516:13622  function balanceOf(address account) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":10678:10808  function renounceOwnership() public onlyOwner {\r... */\n    tag_83:\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_177\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_178:\n        /* \"ex/test.sol\":10773:10774  0 */\n      0x00\n        /* \"ex/test.sol\":10757:10763  _owner */\n      dup1\n      sload\n        /* \"ex/test.sol\":10736:10776  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":10757:10763  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ex/test.sol\":10736:10776  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ex/test.sol\":10773:10774  0 */\n      dup4\n      swap1\n        /* \"ex/test.sol\":10736:10776  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"ex/test.sol\":10800:10801  0 */\n      0x00\n        /* \"ex/test.sol\":10783:10802  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"ex/test.sol\":10678:10808  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":12829:12908  function getOwner() external view returns (address) {\r... */\n    tag_85:\n        /* \"ex/test.sol\":12872:12879  address */\n      0x00\n        /* \"ex/test.sol\":12895:12902  owner() */\n      tag_181\n        /* \"ex/test.sol\":12895:12900  owner */\n      tag_87\n        /* \"ex/test.sol\":12895:12902  owner() */\n      jump\t// in\n    tag_181:\n        /* \"ex/test.sol\":12888:12902  return owner() */\n      swap1\n      pop\n        /* \"ex/test.sol\":12829:12908  function getOwner() external view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ex/test.sol\":10076:10149  function owner() public view returns (address) {\r... */\n    tag_87:\n        /* \"ex/test.sol\":10114:10121  address */\n      0x00\n        /* \"ex/test.sol\":10137:10143  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ex/test.sol\":10076:10149  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"ex/test.sol\":13104:13187  function symbol() external view returns (string memory) {\r... */\n    tag_89:\n        /* \"ex/test.sol\":13174:13181  _symbol */\n      0x07\n        /* \"ex/test.sol\":13167:13181  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"ex/test.sol\":13145:13158  string memory */\n      0x60\n      swap4\n        /* \"ex/test.sol\":13167:13181  return _symbol */\n      swap1\n      swap3\n        /* \"ex/test.sol\":13174:13181  _symbol */\n      swap1\n      swap2\n        /* \"ex/test.sol\":13167:13181  return _symbol */\n      dup4\n      add\n        /* \"ex/test.sol\":13174:13181  _symbol */\n      dup3\n        /* \"ex/test.sol\":13167:13181  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n        /* \"ex/test.sol\":17036:17156  function mint(uint256 amount) public onlyOwner returns (bool) {\r... */\n    tag_96:\n        /* \"ex/test.sol\":17092:17096  bool */\n      0x00\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_188\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_189:\n        /* \"ex/test.sol\":17105:17132  _mint(_msgSender(), amount) */\n      tag_168\n        /* \"ex/test.sol\":17111:17123  _msgSender() */\n      tag_192\n        /* \"ex/test.sol\":17111:17121  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":17111:17123  _msgSender() */\n      jump\t// in\n    tag_192:\n        /* \"ex/test.sol\":17125:17131  amount */\n      dup4\n        /* \"ex/test.sol\":17105:17110  _mint */\n      tag_193\n        /* \"ex/test.sol\":17105:17132  _mint(_msgSender(), amount) */\n      jump\t// in\n        /* \"ex/test.sol\":16585:16836  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\r... */\n    tag_99:\n        /* \"ex/test.sol\":16670:16674  bool */\n      0x00\n        /* \"ex/test.sol\":16683:16812  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ARC20: decreased allowance below zero\")) */\n      tag_134\n        /* \"ex/test.sol\":16692:16704  _msgSender() */\n      tag_196\n        /* \"ex/test.sol\":16692:16702  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":16692:16704  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"ex/test.sol\":16706:16713  spender */\n      dup5\n        /* \"ex/test.sol\":16715:16811  _allowances[_msgSender()][spender].sub(subtractedValue, \"ARC20: decreased allowance below zero\") */\n      tag_153\n        /* \"ex/test.sol\":16754:16769  subtractedValue */\n      dup6\n        /* \"ex/test.sol\":16715:16811  _allowances[_msgSender()][spender].sub(subtractedValue, \"ARC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_9412e0e2fec706d2e5e85a841c1f08dee4fb9d15ad0ef869b451d8af0af39dea\n      0x25\n      swap2\n      codecopy\n        /* \"ex/test.sol\":16715:16726  _allowances */\n      0x04\n        /* \"ex/test.sol\":16715:16740  _allowances[_msgSender()] */\n      0x00\n        /* \"ex/test.sol\":16727:16739  _msgSender() */\n      tag_198\n        /* \"ex/test.sol\":16727:16737  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":16727:16739  _msgSender() */\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":16715:16740  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"ex/test.sol\":16715:16749  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ex/test.sol\":16715:16811  _allowances[_msgSender()][spender].sub(subtractedValue, \"ARC20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"ex/test.sol\":16715:16753  _allowances[_msgSender()][spender].sub */\n      tag_155\n        /* \"ex/test.sol\":16715:16811  _allowances[_msgSender()][spender].sub(subtractedValue, \"ARC20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"ex/test.sol\":13816:14121  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n    tag_102:\n        /* \"ex/test.sol\":13930:13940  msg.sender */\n      caller\n        /* \"ex/test.sol\":13887:13891  bool */\n      0x00\n        /* \"ex/test.sol\":13916:13941  isWhiteListed[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":13916:13929  isWhiteListed */\n      0x0a\n        /* \"ex/test.sol\":13916:13941  isWhiteListed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ex/test.sol\":13952:13961  !is_white */\n      dup1\n      iszero\n        /* \"ex/test.sol\":13952:13978  !is_white && limitTransfer */\n      dup1\n      iszero\n      tag_200\n      jumpi\n      pop\n        /* \"ex/test.sol\":13965:13978  limitTransfer */\n      and(0xff, sload(0x03))\n        /* \"ex/test.sol\":13952:13978  !is_white && limitTransfer */\n    tag_200:\n        /* \"ex/test.sol\":13948:14049  if (!is_white && limitTransfer)\r... */\n      iszero\n      tag_201\n      jumpi\n        /* \"ex/test.sol\":13994:14021  _burn(_msgSender(), amount) */\n      tag_202\n        /* \"ex/test.sol\":14000:14012  _msgSender() */\n      tag_147\n        /* \"ex/test.sol\":14000:14010  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":14000:14012  _msgSender() */\n      jump\t// in\n        /* \"ex/test.sol\":13994:14021  _burn(_msgSender(), amount) */\n    tag_202:\n        /* \"ex/test.sol\":14037:14041  true */\n      0x01\n        /* \"ex/test.sol\":14030:14041  return true */\n      swap2\n      pop\n      pop\n      jump(tag_133)\n        /* \"ex/test.sol\":13948:14049  if (!is_white && limitTransfer)\r... */\n    tag_201:\n        /* \"ex/test.sol\":14055:14097  _transfer(_msgSender(), recipient, amount) */\n      tag_204\n        /* \"ex/test.sol\":14065:14077  _msgSender() */\n      tag_205\n        /* \"ex/test.sol\":14065:14075  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":14065:14077  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"ex/test.sol\":14079:14088  recipient */\n      dup6\n        /* \"ex/test.sol\":14090:14096  amount */\n      dup6\n        /* \"ex/test.sol\":14055:14064  _transfer */\n      tag_150\n        /* \"ex/test.sol\":14055:14097  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"ex/test.sol\":14111:14115  true */\n      0x01\n      swap4\n        /* \"ex/test.sol\":13816:14121  function transfer(address recipient, uint256 amount) external returns (bool) {\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":11727:11748  string public _symbol */\n    tag_104:\n      0x07\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n    tag_207:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_208:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_208\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"ex/test.sol\":11753:11772  string public _name */\n    tag_110:\n      0x08\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x02\n      0x01\n      dup6\n      and\n      iszero\n      0x0100\n      mul\n      not(0x00)\n      add\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      div\n      0x1f\n      dup2\n      add\n      dup5\n      swap1\n      div\n      dup5\n      mul\n      dup3\n      add\n      dup5\n      add\n      swap1\n      swap3\n      mstore\n      dup2\n      dup2\n      mstore\n      swap3\n      swap2\n      dup4\n      add\n      dup3\n      dup3\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n        /* \"ex/test.sol\":14175:14305  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":14272:14290  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ex/test.sol\":14249:14256  uint256 */\n      0x00\n        /* \"ex/test.sol\":14272:14290  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":14272:14283  _allowances */\n      0x04\n        /* \"ex/test.sol\":14272:14290  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/test.sol\":14272:14299  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ex/test.sol\":14175:14305  function allowance(address owner, address spender) external view returns (uint256) {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":11513:11547  uint public basisPointsRate = 5000 */\n    tag_119:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"ex/test.sol\":12366:12514  function addWhiteList (address _authUser) public onlyOwner {\r... */\n    tag_122:\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_214\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_215\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":12436:12460  isWhiteListed[_authUser] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/test.sol\":12436:12449  isWhiteListed */\n      0x0a\n        /* \"ex/test.sol\":12436:12460  isWhiteListed[_authUser] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/test.sol\":12436:12467  isWhiteListed[_authUser] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ex/test.sol\":12463:12467  true */\n      0x01\n        /* \"ex/test.sol\":12436:12467  isWhiteListed[_authUser] = true */\n      or\n      swap1\n      sstore\n        /* \"ex/test.sol\":12483:12508  AddedWhiteList(_authUser) */\n      dup2\n      mload\n      swap3\n      dup4\n      mstore\n      swap1\n      mload\n      0x64fd21439447139bed5a374a0f62ecc0fbd38cf2687d4ed5d587cb55dfbd4258\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log1\n        /* \"ex/test.sol\":12366:12514  function addWhiteList (address _authUser) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":17633:17776  function resetLimiteTransfer(bool _limitTransfer) public onlyOwner returns (bool) {\r... */\n    tag_125:\n        /* \"ex/test.sol\":17709:17713  bool */\n      0x00\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_218\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_219:\n      pop\n        /* \"ex/test.sol\":17722:17735  limitTransfer */\n      0x03\n        /* \"ex/test.sol\":17722:17752  limitTransfer = _limitTransfer */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n      swap1\n        /* \"ex/test.sol\":17633:17776  function resetLimiteTransfer(bool _limitTransfer) public onlyOwner returns (bool) {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_128:\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      tag_222\n        /* \"ex/test.sol\":10280:10290  _msgSender */\n      tag_136\n        /* \"ex/test.sol\":10280:10292  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"ex/test.sol\":10270:10276  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/test.sol\":10270:10292  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ex/test.sol\":10262:10329  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_223\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_223:\n        /* \"ex/test.sol\":11022:11050  _transferOwnership(newOwner) */\n      tag_225\n        /* \"ex/test.sol\":11041:11049  newOwner */\n      dup2\n        /* \"ex/test.sol\":11022:11040  _transferOwnership */\n      tag_226\n        /* \"ex/test.sol\":11022:11050  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_225:\n        /* \"ex/test.sol\":10953:11056  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\n    tag_136:\n        /* \"ex/test.sol\":3849:3859  msg.sender */\n      caller\n        /* \"ex/test.sol\":3773:3865  function _msgSender() internal view returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"ex/test.sol\":20828:21148  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20918:20937  owner != address(0) */\n      dup4\n      and\n        /* \"ex/test.sol\":20910:20978  require(owner != address(0), \"ARC20: approve from the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_d09def05dad6e5c0e0f81ed9a6a4a52f41e82b31658e717071b22150323f77c3\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20993:21014  spender != address(0) */\n      dup3\n      and\n        /* \"ex/test.sol\":20985:21053  require(spender != address(0), \"ARC20: approve to the zero address\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_19944b116823c7ce928b48878f788ce15289c681c437f818fa8e180bca49d439\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":21062:21080  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/test.sol\":21062:21073  _allowances */\n      0x04\n        /* \"ex/test.sol\":21062:21080  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/test.sol\":21062:21089  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/test.sol\":21062:21098  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ex/test.sol\":21110:21142  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ex/test.sol\":20828:21148  function _approve(address owner, address spender, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":19850:20416  function _burn(address account, uint256 amount) internal {\r... */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":19922:19943  account != address(0) */\n      dup3\n      and\n        /* \"ex/test.sol\":19914:19981  require(account != address(0), \"ARC20: burn from the zero address\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3f1db04f913771981623a6dab45469ef2e25607af38f564f1659131885045d07\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"ex/test.sol\":19992:20004  _isBurnTotal */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ex/test.sol\":19988:20354  if (_isBurnTotal){\r... */\n      iszero\n      tag_233\n      jumpi\n        /* \"ex/test.sol\":20037:20105  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      tag_234\n        /* \"ex/test.sol\":20060:20066  amount */\n      dup2\n        /* \"ex/test.sol\":20037:20105  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20037:20055  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":20037:20046  _balances */\n      0x01\n        /* \"ex/test.sol\":20037:20055  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ex/test.sol\":20037:20105  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"ex/test.sol\":20037:20059  _balances[account].sub */\n      tag_155\n        /* \"ex/test.sol\":20037:20105  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20016:20034  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":20016:20025  _balances */\n      0x01\n        /* \"ex/test.sol\":20016:20034  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/test.sol\":20016:20105  _balances[account] = _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      sstore\n        /* \"ex/test.sol\":20131:20143  _totalSupply */\n      sload(0x05)\n        /* \"ex/test.sol\":20131:20155  _totalSupply.sub(amount) */\n      tag_235\n      swap1\n        /* \"ex/test.sol\":20148:20154  amount */\n      dup3\n        /* \"ex/test.sol\":20131:20155  _totalSupply.sub(amount) */\n      0xffffffff\n        /* \"ex/test.sol\":20131:20147  _totalSupply.sub */\n      tag_236\n        /* \"ex/test.sol\":20131:20155  _totalSupply.sub(amount) */\n      and\n      jump\t// in\n    tag_235:\n        /* \"ex/test.sol\":20116:20128  _totalSupply */\n      0x05\n        /* \"ex/test.sol\":20116:20155  _totalSupply = _totalSupply.sub(amount) */\n      sstore\n        /* \"ex/test.sol\":19988:20354  if (_isBurnTotal){\r... */\n      jump(tag_237)\n    tag_233:\n        /* \"ex/test.sol\":20206:20274  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      tag_238\n        /* \"ex/test.sol\":20229:20235  amount */\n      dup2\n        /* \"ex/test.sol\":20206:20274  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe\n      0x22\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20206:20224  _balances[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":20206:20215  _balances */\n      0x01\n        /* \"ex/test.sol\":20206:20224  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ex/test.sol\":20206:20274  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"ex/test.sol\":20206:20228  _balances[account].sub */\n      tag_155\n        /* \"ex/test.sol\":20206:20274  _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20185:20203  _balances[account] */\n      dup1\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":20185:20194  _balances */\n      0x01\n        /* \"ex/test.sol\":20185:20203  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ex/test.sol\":20185:20274  _balances[account] = _balances[account].sub(amount, \"ARC20: burn amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/test.sol\":20321:20333  _burnAccount */\n      sload(0x09)\n      swap1\n      swap2\n      and\n        /* \"ex/test.sol\":20311:20334  _balances[_burnAccount] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"ex/test.sol\":20311:20346  _balances[_burnAccount].add(amount) */\n      tag_239\n      swap1\n        /* \"ex/test.sol\":20339:20345  amount */\n      dup3\n        /* \"ex/test.sol\":20311:20346  _balances[_burnAccount].add(amount) */\n      0xffffffff\n        /* \"ex/test.sol\":20311:20338  _balances[_burnAccount].add */\n      tag_166\n        /* \"ex/test.sol\":20311:20346  _balances[_burnAccount].add(amount) */\n      and\n      jump\t// in\n    tag_239:\n        /* \"ex/test.sol\":20295:20307  _burnAccount */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"ex/test.sol\":20285:20308  _balances[_burnAccount] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":20285:20294  _balances */\n      0x01\n        /* \"ex/test.sol\":20285:20308  _balances[_burnAccount] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/test.sol\":20285:20346  _balances[_burnAccount] = _balances[_burnAccount].add(amount) */\n      sstore\n        /* \"ex/test.sol\":19988:20354  if (_isBurnTotal){\r... */\n    tag_237:\n        /* \"ex/test.sol\":20389:20401  _burnAccount */\n      sload(0x09)\n        /* \"ex/test.sol\":20371:20410  Transfer(account, _burnAccount, amount) */\n      0x40\n      dup1\n      mload\n      dup4\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":20389:20401  _burnAccount */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"ex/test.sol\":20371:20410  Transfer(account, _burnAccount, amount) */\n      dup6\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"ex/test.sol\":19850:20416  function _burn(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":18240:18991  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18334:18354  sender != address(0) */\n      dup4\n      and\n        /* \"ex/test.sol\":18326:18396  require(sender != address(0), \"ARC20: transfer from the zero address\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_741ad084c111d41f2b927f9efcf67f0a2e9038365fc60edf5b8828d135ccce2b\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18411:18434  recipient != address(0) */\n      dup3\n      and\n        /* \"ex/test.sol\":18403:18474  require(recipient != address(0), \"ARC20: transfer to the zero address\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_7f9272c492bb12d65debffaaf9da1b9e4a73e2705f621ec9444f27785a4efdaf\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"ex/test.sol\":18508:18513  10000 */\n      0x2710\n        /* \"ex/test.sol\":18489:18504  basisPointsRate */\n      sload(0x02)\n        /* \"ex/test.sol\":18489:18513  basisPointsRate <= 10000 */\n      gt\n      iszero\n        /* \"ex/test.sol\":18481:18542  require(basisPointsRate <= 10000, \"basic poin must <= 10000\") */\n      tag_243\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x626173696320706f696e206d757374203c3d2031303030300000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_243:\n        /* \"ex/test.sol\":18571:18642  _balances[sender].sub(amount, \"ARC20: transfer amount exceeds balance\") */\n      tag_244\n        /* \"ex/test.sol\":18593:18599  amount */\n      dup2\n        /* \"ex/test.sol\":18571:18642  _balances[sender].sub(amount, \"ARC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4e6b0935d9f360e8e2a5539654013da3b49c2434ae6f48ab0729d3ea4253e929\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18571:18588  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":18571:18580  _balances */\n      0x01\n        /* \"ex/test.sol\":18571:18588  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"ex/test.sol\":18571:18642  _balances[sender].sub(amount, \"ARC20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"ex/test.sol\":18571:18592  _balances[sender].sub */\n      tag_155\n        /* \"ex/test.sol\":18571:18642  _balances[sender].sub(amount, \"ARC20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18551:18568  _balances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":18551:18560  _balances */\n      0x01\n        /* \"ex/test.sol\":18551:18568  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ex/test.sol\":18551:18642  _balances[sender] = _balances[sender].sub(amount, \"ARC20: transfer amount exceeds balance\") */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"ex/test.sol\":18671:18686  basisPointsRate */\n      sload(0x02)\n        /* \"ex/test.sol\":18660:18698  amount.mul(basisPointsRate).div(10000) */\n      tag_245\n      swap1\n        /* \"ex/test.sol\":18692:18697  10000 */\n      0x2710\n      swap1\n        /* \"ex/test.sol\":18660:18687  amount.mul(basisPointsRate) */\n      tag_246\n      swap1\n        /* \"ex/test.sol\":18660:18666  amount */\n      dup6\n      swap1\n        /* \"ex/test.sol\":18660:18687  amount.mul(basisPointsRate) */\n      0xffffffff\n        /* \"ex/test.sol\":18660:18670  amount.mul */\n      tag_247\n        /* \"ex/test.sol\":18660:18687  amount.mul(basisPointsRate) */\n      and\n      jump\t// in\n    tag_246:\n        /* \"ex/test.sol\":18660:18691  amount.mul(basisPointsRate).div */\n      swap1\n        /* \"ex/test.sol\":18660:18698  amount.mul(basisPointsRate).div(10000) */\n      0xffffffff\n        /* \"ex/test.sol\":18660:18691  amount.mul(basisPointsRate).div */\n      tag_248\n        /* \"ex/test.sol\":18660:18698  amount.mul(basisPointsRate).div(10000) */\n      and\n      jump\t// in\n    tag_245:\n        /* \"ex/test.sol\":18649:18698  uint fee = amount.mul(basisPointsRate).div(10000) */\n      swap1\n      pop\n        /* \"ex/test.sol\":18720:18726  amount */\n      dup2\n        /* \"ex/test.sol\":18713:18716  fee */\n      dup2\n        /* \"ex/test.sol\":18713:18726  fee <= amount */\n      gt\n      iszero\n        /* \"ex/test.sol\":18705:18749  require(fee <= amount, \"fee must <= amount\") */\n      tag_249\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x199959481b5d5cdd080f0f48185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18779:18799  _balances[recipient] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":18779:18788  _balances */\n      0x01\n        /* \"ex/test.sol\":18779:18799  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/test.sol\":18779:18817  _balances[recipient].add(amount - fee) */\n      tag_250\n      swap1\n        /* \"ex/test.sol\":18804:18816  amount - fee */\n      dup3\n      dup5\n      sub\n        /* \"ex/test.sol\":18779:18817  _balances[recipient].add(amount - fee) */\n      0xffffffff\n        /* \"ex/test.sol\":18779:18803  _balances[recipient].add */\n      tag_166\n        /* \"ex/test.sol\":18779:18817  _balances[recipient].add(amount - fee) */\n      and\n      jump\t// in\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18756:18776  _balances[recipient] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":18756:18765  _balances */\n      0x01\n        /* \"ex/test.sol\":18756:18776  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/test.sol\":18756:18817  _balances[recipient] = _balances[recipient].add(amount - fee) */\n      sstore\n        /* \"ex/test.sol\":18828:18835  fee > 0 */\n      dup1\n      iszero\n        /* \"ex/test.sol\":18824:18939  if (fee > 0) {\r... */\n      tag_251\n      jumpi\n        /* \"ex/test.sol\":18862:18874  _totalSupply */\n      sload(0x05)\n        /* \"ex/test.sol\":18862:18883  _totalSupply.sub(fee) */\n      tag_252\n      swap1\n        /* \"ex/test.sol\":18879:18882  fee */\n      dup3\n        /* \"ex/test.sol\":18862:18883  _totalSupply.sub(fee) */\n      0xffffffff\n        /* \"ex/test.sol\":18862:18878  _totalSupply.sub */\n      tag_236\n        /* \"ex/test.sol\":18862:18883  _totalSupply.sub(fee) */\n      and\n      jump\t// in\n    tag_252:\n        /* \"ex/test.sol\":18847:18859  _totalSupply */\n      0x05\n        /* \"ex/test.sol\":18847:18883  _totalSupply = _totalSupply.sub(fee) */\n      sstore\n        /* \"ex/test.sol\":18898:18931  Transfer(sender, address(0), fee) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"ex/test.sol\":18923:18924  0 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18898:18931  Transfer(sender, address(0), fee) */\n      dup8\n      and\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"ex/test.sol\":18824:18939  if (fee > 0) {\r... */\n    tag_251:\n        /* \"ex/test.sol\":18967:18976  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18950:18985  Transfer(sender, recipient, amount) */\n      and\n        /* \"ex/test.sol\":18959:18965  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":18950:18985  Transfer(sender, recipient, amount) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/test.sol\":18978:18984  amount */\n      dup5\n        /* \"ex/test.sol\":18950:18985  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ex/test.sol\":18240:18991  function _transfer(address sender, address recipient, uint256 amount) internal {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":5732:5910  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n    tag_155:\n        /* \"ex/test.sol\":5818:5825  uint256 */\n      0x00\n        /* \"ex/test.sol\":5850:5862  errorMessage */\n      dup2\n        /* \"ex/test.sol\":5842:5848  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"ex/test.sol\":5834:5863  require(b <= a, errorMessage) */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_255:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_255)\n    tag_257:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"ex/test.sol\":5834:5863  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_258\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_258:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n      pop\n      pop\n      pop\n        /* \"ex/test.sol\":5882:5887  a - b */\n      swap1\n      sub\n      swap1\n        /* \"ex/test.sol\":5732:5910  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":4905:5072  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_166:\n        /* \"ex/test.sol\":4963:4970  uint256 */\n      0x00\n        /* \"ex/test.sol\":4991:4996  a + b */\n      dup3\n      dup3\n      add\n        /* \"ex/test.sol\":5011:5017  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ex/test.sol\":5003:5049  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_143\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ex/test.sol\":19252:19542  function _mint(address account, uint256 amount) internal {\r... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":19324:19345  account != address(0) */\n      dup3\n      and\n        /* \"ex/test.sol\":19316:19381  require(account != address(0), \"ARC20: mint to the zero address\") */\n      tag_262\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x41524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_262:\n        /* \"ex/test.sol\":19405:19417  _totalSupply */\n      sload(0x05)\n        /* \"ex/test.sol\":19405:19429  _totalSupply.add(amount) */\n      tag_263\n      swap1\n        /* \"ex/test.sol\":19422:19428  amount */\n      dup3\n        /* \"ex/test.sol\":19405:19429  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"ex/test.sol\":19405:19421  _totalSupply.add */\n      tag_166\n        /* \"ex/test.sol\":19405:19429  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_263:\n        /* \"ex/test.sol\":19390:19402  _totalSupply */\n      0x05\n        /* \"ex/test.sol\":19390:19429  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":19457:19475  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/test.sol\":19457:19466  _balances */\n      0x01\n        /* \"ex/test.sol\":19457:19475  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/test.sol\":19457:19487  _balances[account].add(amount) */\n      tag_264\n      swap1\n        /* \"ex/test.sol\":19480:19486  amount */\n      dup3\n        /* \"ex/test.sol\":19457:19487  _balances[account].add(amount) */\n      0xffffffff\n        /* \"ex/test.sol\":19457:19479  _balances[account].add */\n      tag_166\n        /* \"ex/test.sol\":19457:19487  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":19436:19454  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/test.sol\":19436:19445  _balances */\n      0x01\n        /* \"ex/test.sol\":19436:19454  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/test.sol\":19436:19487  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"ex/test.sol\":19499:19536  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"ex/test.sol\":19436:19454  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/test.sol\":19499:19536  Transfer(address(0), account, amount) */\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"ex/test.sol\":19252:19542  function _mint(address account, uint256 amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"ex/test.sol\":11154:11369  function _transferOwnership(address newOwner) internal {\r... */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/test.sol\":11224:11246  newOwner != address(0) */\n      dup2\n      and\n        /* \"ex/test.sol\":11216:11289  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"ex/test.sol\":11322:11328  _owner */\n      0x00\n      dup1\n      sload\n        /* \"ex/test.sol\":11301:11339  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"ex/test.sol\":11322:11328  _owner */\n      swap3\n      and\n      swap2\n        /* \"ex/test.sol\":11301:11339  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"ex/test.sol\":11346:11352  _owner */\n      0x00\n        /* \"ex/test.sol\":11346:11363  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ex/test.sol\":11154:11369  function _transferOwnership(address newOwner) internal {\r... */\n      jump\t// out\n        /* \"ex/test.sol\":5327:5457  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_236:\n        /* \"ex/test.sol\":5385:5392  uint256 */\n      0x00\n        /* \"ex/test.sol\":5408:5451  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_143\n        /* \"ex/test.sol\":5412:5413  a */\n      dup4\n        /* \"ex/test.sol\":5415:5416  b */\n      dup4\n        /* \"ex/test.sol\":5408:5451  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"ex/test.sol\":5408:5411  sub */\n      tag_155\n        /* \"ex/test.sol\":5408:5451  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"ex/test.sol\":6141:6572  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_247:\n        /* \"ex/test.sol\":6199:6206  uint256 */\n      0x00\n        /* \"ex/test.sol\":6428:6434  a == 0 */\n      dup3\n        /* \"ex/test.sol\":6424:6461  if (a == 0) {\r... */\n      tag_270\n      jumpi\n      pop\n        /* \"ex/test.sol\":6452:6453  0 */\n      0x00\n        /* \"ex/test.sol\":6445:6453  return 0 */\n      jump(tag_133)\n        /* \"ex/test.sol\":6424:6461  if (a == 0) {\r... */\n    tag_270:\n        /* \"ex/test.sol\":6481:6486  a * b */\n      dup3\n      dup3\n      mul\n        /* \"ex/test.sol\":6485:6486  b */\n      dup3\n        /* \"ex/test.sol\":6481:6482  a */\n      dup5\n        /* \"ex/test.sol\":6481:6486  a * b */\n      dup3\n        /* \"ex/test.sol\":6481:6482  a */\n      dup2\n        /* \"ex/test.sol\":6501:6506  c / a */\n      tag_271\n      jumpi\n      invalid\n    tag_271:\n      div\n        /* \"ex/test.sol\":6501:6511  c / a == b */\n      eq\n        /* \"ex/test.sol\":6493:6549  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ex/test.sol\":7016:7142  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_248:\n        /* \"ex/test.sol\":7074:7081  uint256 */\n      0x00\n        /* \"ex/test.sol\":7097:7136  div(a, b, \"SafeMath: division by zero\") */\n      tag_143\n        /* \"ex/test.sol\":7101:7102  a */\n      dup4\n        /* \"ex/test.sol\":7104:7105  b */\n      dup4\n        /* \"ex/test.sol\":7097:7136  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"ex/test.sol\":7692:7699  uint256 */\n      0x00\n        /* \"ex/test.sol\":7786:7798  errorMessage */\n      dup2\n        /* \"ex/test.sol\":7779:7784  b > 0 */\n      dup4\n        /* \"ex/test.sol\":7771:7799  require(b > 0, errorMessage) */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      dup2\n      mstore\n      dup4\n      mload\n      0x24\n      dup5\n      add\n      mstore\n      dup4\n      mload\n      swap1\n      swap3\n      dup4\n      swap3\n      0x44\n      swap1\n      swap2\n      add\n      swap2\n      swap1\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":27:37   */\n      dup4\n      iszero\n        /* \"--CODEGEN--\":8:108   */\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_255)\n        /* \"ex/test.sol\":7771:7799  require(b > 0, errorMessage) */\n    tag_277:\n      pop\n        /* \"ex/test.sol\":7806:7815  uint256 c */\n      0x00\n        /* \"ex/test.sol\":7822:7823  b */\n      dup4\n        /* \"ex/test.sol\":7818:7819  a */\n      dup6\n        /* \"ex/test.sol\":7818:7823  a / b */\n      dup2\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      div\n      swap6\n        /* \"ex/test.sol\":7606:7929  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_19944b116823c7ce928b48878f788ce15289c681c437f818fa8e180bca49d439 41524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_1bdbb83b359c44f2dd176c8e425cac93ac5d285f6e207601ac9329b71a414cfe 41524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe 41524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_3f1db04f913771981623a6dab45469ef2e25607af38f564f1659131885045d07 41524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_4e6b0935d9f360e8e2a5539654013da3b49c2434ae6f48ab0729d3ea4253e929 41524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_741ad084c111d41f2b927f9efcf67f0a2e9038365fc60edf5b8828d135ccce2b 41524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_7f9272c492bb12d65debffaaf9da1b9e4a73e2705f621ec9444f27785a4efdaf 41524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9412e0e2fec706d2e5e85a841c1f08dee4fb9d15ad0ef869b451d8af0af39dea 41524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_d09def05dad6e5c0e0f81ed9a6a4a52f41e82b31658e717071b22150323f77c3 41524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a723158204218d42dda81f2d333bed2ac38012757637c95ef4e2a5939d62928ef5b3a8ee264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1388 PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x3A PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x16A AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 DUP3 MSTORE PUSH9 0x4149544420596F686F PUSH1 0xB8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xB6 SWAP2 PUSH1 0x8 SWAP2 PUSH3 0x16F JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x594F484F PUSH1 0xE0 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xE4 SWAP2 PUSH1 0x7 SWAP2 PUSH3 0x16F JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH13 0x7E37BE2022C0914B2680000000 PUSH1 0x5 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH3 0x211 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x1B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1C5 JUMP JUMPDEST POP PUSH3 0x1F0 SWAP3 SWAP2 POP PUSH3 0x1F4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x16C SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1F0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FB JUMP JUMPDEST PUSH2 0x1985 DUP1 PUSH3 0x221 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD644F72 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xE7CD4A04 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xEA924F06 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55B JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E0 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x478 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x443 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x3224D395 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x5FDF2BE0 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x6F9170F6 EQ PUSH2 0x3EF JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x3224D395 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x3478591A EQ PUSH2 0x35B JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x2042E5C2 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x2042E5C2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x278D9637 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x311 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x243 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x27D PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x319 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x877 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x299 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x60D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH2 0x624 PUSH2 0xEC5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEC9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x643 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x9FF0FE46BDE692FFA123229BEB5DEBD1C068A183C3B74BE4F2D749F628203D3A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO DUP1 ISZERO PUSH2 0x70E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x72E JUMPI PUSH2 0x724 PUSH2 0x71E PUSH2 0xEC5 JUMP JUMPDEST DUP5 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x739 DUP6 DUP6 DUP6 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x7AF DUP6 PUSH2 0x745 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x7AA DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A8 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x783 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x83E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH2 0x884 PUSH2 0xEC5 JUMP JUMPDEST DUP5 PUSH2 0x7AA DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0x895 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DE PUSH2 0x8D8 PUSH2 0xEC5 JUMP JUMPDEST DUP4 PUSH2 0xFB5 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F0 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x940 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 GT ISZERO PUSH2 0x997 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206261736520706F696E7473206D757374203C3D203130303030000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA28 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x60D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB4B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8DE PUSH2 0xB56 PUSH2 0xEC5 JUMP JUMPDEST DUP4 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH2 0xB69 PUSH2 0xEC5 JUMP JUMPDEST DUP5 PUSH2 0x7AA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x4 PUSH1 0x0 PUSH2 0xB93 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC07 JUMPI PUSH2 0xBFD PUSH2 0x71E PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x62F JUMP JUMPDEST PUSH2 0xC19 PUSH2 0xC12 PUSH2 0xEC5 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1152 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD45 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD95 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x64FD21439447139BED5A374A0F62ECC0FBD38CF2687D4ED5D587CB55DFBD4258 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFA PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE4A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xE69 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xEC2 DUP2 PUSH2 0x15A8 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1786 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1818 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1083 JUMPI PUSH2 0x104F DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH2 0x107B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x111A JUMP JUMPDEST PUSH2 0x10C6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x10FE SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x185F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1884 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x1235 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173696320706F696E206D757374203C3D2031303030300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1278 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1839 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0x12BC SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x12B0 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x168A AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x16E3 AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x199959481B5D5CDD080F0F48185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1333 SWAP1 DUP3 DUP5 SUB PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 ISZERO PUSH2 0x1398 JUMPI PUSH1 0x5 SLOAD PUSH2 0x1365 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1413 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1458 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1523 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1536 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1562 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17D0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1699 JUMPI POP PUSH1 0x0 PUSH2 0x62F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x16A6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x7B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18A7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x142B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1413 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x177B JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID COINBASE MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737341524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654F77 PUSH15 0x61626C653A206E6577206F776E6572 KECCAK256 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737341524332303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65415243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737341524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636541524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737341524332303A207472616E7366657220 PUSH21 0x6F20746865207A65726F2061646472657373536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7741524332303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F4F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E6572DDF2 MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF COINBASE MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 TIMESTAMP XOR 0xD4 0x2D 0xDA DUP2 CALLCODE 0xD3 CALLER 0xBE 0xD2 0xAC CODESIZE ADD 0x27 JUMPI PUSH4 0x7C95EF4E 0x2A MSIZE CODECOPY 0xD6 0x29 0x28 0xEF JUMPDEST GASPRICE DUP15 0xE2 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "11376:10169:0:-;;;11543:4;11513:34;;11552:32;;;-1:-1:-1;;11552:32:0;11580:4;11552:32;;;11833:312;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;9885:17:0;9905:12;-1:-1:-1;;;;;9905:10:0;:12;:::i;:::-;9924:6;:18;;-1:-1:-1;;;;;;9924:18:0;-1:-1:-1;;;;;9924:18:0;;;;;;;9954:43;;9924:18;;-1:-1:-1;9924:18:0;9954:43;;9924:6;;9954:43;-1:-1:-1;11861:19:0;;;;;;;;;;;;;-1:-1:-1;;;11861:19:0;;;;;;;;;:5;;:19;:::i;:::-;-1:-1:-1;11887:16:0;;;;;;;;;;;;;-1:-1:-1;;;11887:16:0;;;;;;;;;:7;;:16;:::i;:::-;-1:-1:-1;11910:9:0;:14;;-1:-1:-1;;11910:14:0;11922:2;11910:14;;;11946:32;11931:12;:47;;;11995:10;11910:9;11985:21;;;11910:14;11985:21;;;;;;;;:36;;;12028:12;:25;;-1:-1:-1;;;;;;12060:19:0;-1:-1:-1;;;12060:19:0;;;12093:46;;;;;;11995:10;;11910:9;;12093:46;;;;;;;;;;11376:10169;;3773:92;3849:10;3773:92;;:::o;11376:10169::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11376:10169:0;;;-1:-1:-1;11376:10169:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD644F72 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x50E JUMPI DUP1 PUSH4 0xE7CD4A04 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xEA924F06 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55B JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0xB09F1266 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xD28D8852 EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E0 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x478 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x443 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x3224D395 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x39509351 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x5FDF2BE0 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x6F9170F6 EQ PUSH2 0x3EF JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x3224D395 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x32424AA3 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x3478591A EQ PUSH2 0x35B JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x2042E5C2 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x2042E5C2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x278D9637 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x311 JUMPI PUSH2 0x1CF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x291 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x581 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x216 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1FE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x243 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x6EB JUMP JUMPDEST PUSH2 0x27D PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x319 PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x319 PUSH2 0x7DD JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x877 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8CB JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x2D1 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x337 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xA90 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x471 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xAF1 JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xB5C JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xC23 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0xCB1 JUMP JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x299 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x60D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH2 0x624 PUSH2 0xEC5 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xEC9 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x643 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x693 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x9FF0FE46BDE692FFA123229BEB5DEBD1C068A183C3B74BE4F2D749F628203D3A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO DUP1 ISZERO PUSH2 0x70E JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x72E JUMPI PUSH2 0x724 PUSH2 0x71E PUSH2 0xEC5 JUMP JUMPDEST DUP5 PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x739 DUP6 DUP6 DUP6 PUSH2 0x1152 JUMP JUMPDEST PUSH2 0x7AF DUP6 PUSH2 0x745 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x7AA DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17A8 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x783 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH2 0xEC9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x83E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH2 0x884 PUSH2 0xEC5 JUMP JUMPDEST DUP5 PUSH2 0x7AA DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0x895 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DE PUSH2 0x8D8 PUSH2 0xEC5 JUMP JUMPDEST DUP4 PUSH2 0xFB5 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F0 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x940 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP3 GT ISZERO PUSH2 0x997 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206261736520706F696E7473206D757374203C3D203130303030000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x2 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9D8 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xA28 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C PUSH2 0xA81 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x60D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xB4B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x8DE PUSH2 0xB56 PUSH2 0xEC5 JUMP JUMPDEST DUP4 PUSH2 0x14C8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH2 0xB69 PUSH2 0xEC5 JUMP JUMPDEST DUP5 PUSH2 0x7AA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x18C8 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x4 PUSH1 0x0 PUSH2 0xB93 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO DUP1 ISZERO PUSH2 0xBED JUMPI POP PUSH1 0x3 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xC07 JUMPI PUSH2 0xBFD PUSH2 0x71E PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x62F JUMP JUMPDEST PUSH2 0xC19 PUSH2 0xC12 PUSH2 0xEC5 JUMP JUMPDEST DUP6 DUP6 PUSH2 0x1152 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC8C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xCA9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC7E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD45 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD95 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x64FD21439447139BED5A374A0F62ECC0FBD38CF2687D4ED5D587CB55DFBD4258 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDFA PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE4A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0xE69 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xEB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x18ED DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xEC2 DUP2 PUSH2 0x15A8 JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x192D PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1786 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1818 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1083 JUMPI PUSH2 0x104F DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x5 SLOAD PUSH2 0x107B SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x111A JUMP JUMPDEST PUSH2 0x10C6 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x10FE SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x185F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1884 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x1235 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626173696320706F696E206D757374203C3D2031303030300000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1278 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1839 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13D7 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0x12BC SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x12B0 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x168A AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x16E3 AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1308 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x199959481B5D5CDD080F0F48185B5BDD5B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1333 SWAP1 DUP3 DUP5 SUB PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE DUP1 ISZERO PUSH2 0x1398 JUMPI PUSH1 0x5 SLOAD PUSH2 0x1365 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1648 AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x142B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1413 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1458 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1523 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1536 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1562 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x146E AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x190D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17D0 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x13D7 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1699 JUMPI POP PUSH1 0x0 PUSH2 0x62F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x16A6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x7B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18A7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7B5 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x0 DUP2 DUP4 PUSH2 0x176F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x142B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1413 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x177B JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID COINBASE MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737341524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654F77 PUSH15 0x61626C653A206E6577206F776E6572 KECCAK256 PUSH10 0x7320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737341524332303A206275726E20616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65415243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737341524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636541524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737341524332303A207472616E7366657220 PUSH21 0x6F20746865207A65726F2061646472657373536166 PUSH6 0x4D6174683A20 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F7741524332303A206465 PUSH4 0x72656173 PUSH6 0x6420616C6C6F PUSH24 0x616E63652062656C6F77207A65726F4F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E6572DDF2 MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF COINBASE MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652066726F6D20746865207A65726F2061 PUSH5 0x6472657373 LOG2 PUSH6 0x627A7A723158 KECCAK256 TIMESTAMP XOR 0xD4 0x2D 0xDA DUP2 CALLCODE 0xD3 CALLER 0xBE 0xD2 0xAC CODESIZE ADD 0x27 JUMPI PUSH4 0x7C95EF4E 0x2A MSIZE CODECOPY 0xD6 0x29 0x28 0xEF JUMPDEST GASPRICE DUP15 0xE2 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "11376:10169:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11376:10169:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13240:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;13240:79:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14435:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14435:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;13375:87;;;:::i;:::-;;;;;;;;;;;;;;;;12520:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12520:163:0;-1:-1:-1;;;;;12520:163:0;;:::i;:::-;;15024:507;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15024:507:0;;;;;;;;;;;;;;;;;:::i;11552:32::-;;;:::i;12968:79::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11777:27;;;:::i;:::-;;;;-1:-1:-1;;;;;11777:27:0;;;;;;;;;;;;;;11700:22;;;:::i;12151:152::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12151:152:0;;;;;;;;;;:::i;15913:200::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15913:200:0;;;;;;;;:::i;17241:110::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17241:110:0;;:::i;17402:225::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17402:225:0;;:::i;12309:46::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12309:46:0;-1:-1:-1;;;;;12309:46:0;;:::i;13516:106::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13516:106:0;-1:-1:-1;;;;;13516:106:0;;:::i;10678:130::-;;;:::i;12829:79::-;;;:::i;10076:73::-;;;:::i;13104:83::-;;;:::i;17036:120::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17036:120:0;;:::i;16585:251::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16585:251:0;;;;;;;;:::i;13816:305::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13816:305:0;;;;;;;;:::i;11727:21::-;;;:::i;11753:19::-;;;:::i;14175:130::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14175:130:0;;;;;;;;;;:::i;11513:34::-;;;:::i;12366:148::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12366:148:0;-1:-1:-1;;;;;12366:148:0;;:::i;17633:143::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17633:143:0;;;;:::i;10953:103::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10953:103:0;-1:-1:-1;;;;;10953:103:0;;:::i;13240:79::-;13308:5;13301:12;;;;;;;;-1:-1:-1;;13301:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13279:13;;13301:12;;13308:5;;13301:12;;13308:5;13301:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13240:79;:::o;14435:144::-;14503:4;14516:39;14525:12;:10;:12::i;:::-;14539:7;14548:6;14516:8;:39::i;:::-;-1:-1:-1;14569:4:0;14435:144;;;;;:::o;13375:87::-;13444:12;;13375:87;:::o;12520:163::-;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;12596:27:0;;12626:5;12596:27;;;:13;:27;;;;;;;;;:35;;-1:-1:-1;;12596:35:0;;;12647:30;;;;;;;;;;;;;;;;;12520:163;:::o;15024:507::-;15159:10;15115:4;15145:25;;;:13;:25;;;;;;;;15182:9;;:26;;;;-1:-1:-1;15195:13:0;;;;15182:26;15178:157;;;15277:27;15283:12;:10;:12::i;:::-;15297:6;15277:5;:27::i;:::-;15322:4;15315:11;;;;;15178:157;15343:36;15353:6;15361:9;15372:6;15343:9;:36::i;:::-;15386:121;15395:6;15403:12;:10;:12::i;:::-;15417:89;15455:6;15417:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15417:19:0;;;;;;:11;:19;;;;;;15437:12;:10;:12::i;:::-;-1:-1:-1;;;;;15417:33:0;;;;;;;;;;;;-1:-1:-1;15417:33:0;;;:89;;:37;:89;:::i;:::-;15386:8;:121::i;:::-;15521:4;15514:11;;;15024:507;;;;;;:::o;11552:32::-;;;;;;:::o;12968:79::-;13032:9;;;;12968:79;:::o;11777:27::-;;;-1:-1:-1;;;;;11777:27:0;;:::o;11700:22::-;;;;;;:::o;12151:152::-;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;12238:12;:26;;-1:-1:-1;;;;12238:26:0;-1:-1:-1;;;12238:26:0;;;;;;;;;;;-1:-1:-1;;;;;;12271:26:0;-1:-1:-1;;;;;12271:26:0;;;;;;;;;;12151:152::o;15913:200::-;15993:4;16006:83;16015:12;:10;:12::i;:::-;16029:7;16038:50;16077:10;16038:11;:25;16050:12;:10;:12::i;:::-;-1:-1:-1;;;;;16038:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16038:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;17241:110::-;17287:4;17300:27;17306:12;:10;:12::i;:::-;17320:6;17300:5;:27::i;:::-;-1:-1:-1;17341:4:0;17241:110;;;:::o;17402:225::-;17482:4;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;17523:5;17503:16;:25;;17495:67;;;;;-1:-1:-1;;;17495:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17569:15:0;:34;17617:4;;17402:225::o;12309:46::-;;;;;;;;;;;;;;;:::o;13516:106::-;-1:-1:-1;;;;;13598:18:0;13575:7;13598:18;;;:9;:18;;;;;;;13516:106::o;10678:130::-;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;10773:1;10757:6;;10736:40;;-1:-1:-1;;;;;10757:6:0;;;;10736:40;;10773:1;;10736:40;10800:1;10783:19;;-1:-1:-1;;;;;;10783:19:0;;;10678:130::o;12829:79::-;12872:7;12895;:5;:7::i;:::-;12888:14;;12829:79;:::o;10076:73::-;10114:7;10137:6;-1:-1:-1;;;;;10137:6:0;10076:73;:::o;13104:83::-;13174:7;13167:14;;;;;;;;-1:-1:-1;;13167:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13145:13;;13167:14;;13174:7;;13167:14;;13174:7;13167:14;;;;;;;;;;;;;;;;;;;;;;;;17036:120;17092:4;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;17105:27;17111:12;:10;:12::i;:::-;17125:6;17105:5;:27::i;16585:251::-;16670:4;16683:129;16692:12;:10;:12::i;:::-;16706:7;16715:96;16754:15;16715:96;;;;;;;;;;;;;;;;;:11;:25;16727:12;:10;:12::i;:::-;-1:-1:-1;;;;;16715:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;16715:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;13816:305::-;13930:10;13887:4;13916:25;;;:13;:25;;;;;;;;13952:9;;:26;;;;-1:-1:-1;13965:13:0;;;;13952:26;13948:101;;;13994:27;14000:12;:10;:12::i;13994:27::-;14037:4;14030:11;;;;;13948:101;14055:42;14065:12;:10;:12::i;:::-;14079:9;14090:6;14055:9;:42::i;:::-;-1:-1:-1;14111:4:0;;13816:305;-1:-1:-1;;;13816:305:0:o;11727:21::-;;;;;;;;;;;;;;;-1:-1:-1;;11727:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11753:19::-;;;;;;;;;;;;;;;-1:-1:-1;;11753:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14175:130;-1:-1:-1;;;;;14272:18:0;;;14249:7;14272:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;14175:130::o;11513:34::-;;;;:::o;12366:148::-;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;12436:24:0;;;;;;:13;:24;;;;;;;;;:31;;-1:-1:-1;;12436:31:0;12463:4;12436:31;;;12483:25;;;;;;;;;;;;;;;;;12366:148;:::o;17633:143::-;17709:4;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;-1:-1:-1;17722:13:0;:30;;-1:-1:-1;;17722:30:0;;;;;;;;;;-1:-1:-1;;17633:143:0:o;10953:103::-;10280:12;:10;:12::i;:::-;10270:6;;-1:-1:-1;;;;;10270:6:0;;;:22;;;10262:67;;;;;-1:-1:-1;;;10262:67:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10262:67:0;;;;;;;;;;;;;;;11022:28;11041:8;11022:18;:28::i;:::-;10953:103;:::o;3773:92::-;3849:10;3773:92;:::o;20828:320::-;-1:-1:-1;;;;;20918:19:0;;20910:68;;;;-1:-1:-1;;;20910:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20993:21:0;;20985:68;;;;-1:-1:-1;;;20985:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21062:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;21110:32;;;;;;;;;;;;;;;;;20828:320;;;:::o;19850:566::-;-1:-1:-1;;;;;19922:21:0;;19914:67;;;;-1:-1:-1;;;19914:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19992:12;;-1:-1:-1;;;19992:12:0;;;;19988:366;;;20037:68;20060:6;20037:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20037:18:0;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;20016:18:0;;;;;;:9;:18;;;;;:89;20131:12;;:24;;20148:6;20131:24;:16;:24;:::i;:::-;20116:12;:39;19988:366;;;20206:68;20229:6;20206:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;20206:18:0;;;;;;:9;:18;;;;;;;:68;;:22;:68;:::i;:::-;-1:-1:-1;;;;;20185:18:0;;;;;;;:9;:18;;;;;;:89;;;;20321:12;;;;;20311:23;;;;:35;;20339:6;20311:35;:27;:35;:::i;:::-;20295:12;;-1:-1:-1;;;;;20295:12:0;20285:23;;;;:9;:23;;;;;:61;19988:366;20389:12;;20371:39;;;;;;;;-1:-1:-1;;;;;20389:12:0;;;;20371:39;;;-1:-1:-1;;;;;;;;;;;20371:39:0;;;;;;;;;19850:566;;:::o;18240:751::-;-1:-1:-1;;;;;18334:20:0;;18326:70;;;;-1:-1:-1;;;18326:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18411:23:0;;18403:71;;;;-1:-1:-1;;;18403:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18508:5;18489:15;;:24;;18481:61;;;;;-1:-1:-1;;;18481:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;18571:71;18593:6;18571:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18571:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;18551:17:0;;;;;;:9;:17;;;;;:91;;;;18671:15;;18660:38;;18692:5;;18660:27;;:6;;:27;:10;:27;:::i;:::-;:31;:38;:31;:38;:::i;:::-;18649:49;;18720:6;18713:3;:13;;18705:44;;;;;-1:-1:-1;;;18705:44:0;;;;;;;;;;;;-1:-1:-1;;;18705:44:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;18779:20:0;;;;;;:9;:20;;;;;;:38;;18804:12;;;18779:38;:24;:38;:::i;:::-;-1:-1:-1;;;;;18756:20:0;;;;;;:9;:20;;;;;:61;18828:7;;18824:115;;18862:12;;:21;;18879:3;18862:21;:16;:21;:::i;:::-;18847:12;:36;18898:33;;;;;;;;18923:1;;-1:-1:-1;;;;;18898:33:0;;;-1:-1:-1;;;;;;;;;;;18898:33:0;;;;;;;;18824:115;18967:9;-1:-1:-1;;;;;18950:35:0;18959:6;-1:-1:-1;;;;;18950:35:0;-1:-1:-1;;;;;;;;;;;18978:6:0;18950:35;;;;;;;;;;;;;;;;;;18240:751;;;;:::o;5732:178::-;5818:7;5850:12;5842:6;;;;5834:29;;;;-1:-1:-1;;;5834:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5834:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5882:5:0;;;5732:178::o;4905:167::-;4963:7;4991:5;;;5011:6;;;;5003:46;;;;;-1:-1:-1;;;5003:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;19252:290;-1:-1:-1;;;;;19324:21:0;;19316:65;;;;;-1:-1:-1;;;19316:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;19405:12;;:24;;19422:6;19405:24;:16;:24;:::i;:::-;19390:12;:39;-1:-1:-1;;;;;19457:18:0;;;;;;:9;:18;;;;;;:30;;19480:6;19457:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;19436:18:0;;;;;;:9;:18;;;;;;;;:51;;;;19499:37;;;;;;;19436:18;;;;-1:-1:-1;;;;;;;;;;;19499:37:0;;;;;;;;;19252:290;;:::o;11154:215::-;-1:-1:-1;;;;;11224:22:0;;11216:73;;;;-1:-1:-1;;;11216:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11322:6;;;11301:38;;-1:-1:-1;;;;;11301:38:0;;;;11322:6;;;11301:38;;;11346:6;:17;;-1:-1:-1;;;;;;11346:17:0;-1:-1:-1;;;;;11346:17:0;;;;;;;;;;11154:215::o;5327:130::-;5385:7;5408:43;5412:1;5415;5408:43;;;;;;;;;;;;;;;;;:3;:43::i;6141:431::-;6199:7;6428:6;6424:37;;-1:-1:-1;6452:1:0;6445:8;;6424:37;6481:5;;;6485:1;6481;:5;:1;6501:5;;;;;:10;6493:56;;;;-1:-1:-1;;;6493:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7016:126;7074:7;7097:39;7101:1;7104;7097:39;;;;;;;;;;;;;;;;;7692:7;7786:12;7779:5;7771:28;;;;-1:-1:-1;;;7771:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;7771:28:0;;7806:9;7822:1;7818;:5;;;;;;;7606:323;-1:-1:-1;;;;;7606:323:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1306600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_burnAccount()": "1083",
								"_decimals()": "1081",
								"_name()": "infinite",
								"_symbol()": "infinite",
								"addWhiteList(address)": "infinite",
								"allowance(address,address)": "1361",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1188",
								"basisPointsRate()": "1042",
								"burn(uint256)": "infinite",
								"decimals()": "1125",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1162",
								"increaseAllowance(address,uint256)": "infinite",
								"isWhiteListed(address)": "1247",
								"limitTransfer()": "1100",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"removeWhiteList(address)": "infinite",
								"renounceOwnership()": "infinite",
								"resetLimiteTransfer(bool)": "infinite",
								"setBasisPointsRate(uint256)": "infinite",
								"setBurnAcount(address,bool)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1089",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "MSTORE"
								},
								{
									"begin": 11543,
									"end": 11547,
									"name": "PUSH",
									"value": "1388"
								},
								{
									"begin": 11513,
									"end": 11547,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11513,
									"end": 11547,
									"name": "SSTORE"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "DUP1"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "AND"
								},
								{
									"begin": 11580,
									"end": 11584,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "OR"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "SWAP1"
								},
								{
									"begin": 11552,
									"end": 11584,
									"name": "SSTORE"
								},
								{
									"begin": 11833,
									"end": 12145,
									"name": "CALLVALUE"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9885,
									"end": 9902,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9905,
									"end": 9915,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "AND"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9905,
									"end": 9917,
									"name": "JUMPDEST"
								},
								{
									"begin": 9924,
									"end": 9930,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP1"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP4"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "AND"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SWAP1"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP2"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "OR"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "DUP3"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SSTORE"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "MLOAD"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SWAP3"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9924,
									"end": 9942,
									"name": "SWAP2"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "SWAP1"
								},
								{
									"begin": 9924,
									"end": 9930,
									"name": "DUP3"
								},
								{
									"begin": 9924,
									"end": 9930,
									"name": "SWAP1"
								},
								{
									"begin": 9954,
									"end": 9997,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "DUP1"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "MLOAD"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "DUP1"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "DUP3"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "ADD"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "SWAP1"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "SWAP2"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "MSTORE"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "DUP1"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "DUP3"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "4149544420596F686F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "SWAP1"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "SWAP3"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "ADD"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "SWAP2"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "DUP3"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "MSTORE"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "SWAP2"
								},
								{
									"begin": 11861,
									"end": 11866,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 11861,
									"end": 11866,
									"name": "SWAP2"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11861,
									"end": 11880,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "DUP1"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "MLOAD"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "DUP1"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "DUP3"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "ADD"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "SWAP1"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "SWAP2"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "MSTORE"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "DUP1"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "DUP3"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "594F484F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "SWAP1"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "SWAP3"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "ADD"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "SWAP2"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "DUP3"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "MSTORE"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "SWAP2"
								},
								{
									"begin": 11887,
									"end": 11894,
									"name": "PUSH",
									"value": "7"
								},
								{
									"begin": 11887,
									"end": 11894,
									"name": "SWAP2"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11887,
									"end": 11903,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11910,
									"end": 11919,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "DUP1"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "AND"
								},
								{
									"begin": 11922,
									"end": 11924,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "OR"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "SWAP1"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "SSTORE"
								},
								{
									"begin": 11946,
									"end": 11978,
									"name": "PUSH",
									"value": "7E37BE2022C0914B2680000000"
								},
								{
									"begin": 11931,
									"end": 11943,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11931,
									"end": 11978,
									"name": "DUP2"
								},
								{
									"begin": 11931,
									"end": 11978,
									"name": "SWAP1"
								},
								{
									"begin": 11931,
									"end": 11978,
									"name": "SSTORE"
								},
								{
									"begin": 11995,
									"end": 12005,
									"name": "CALLER"
								},
								{
									"begin": 11910,
									"end": 11919,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "DUP2"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "DUP2"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "MSTORE"
								},
								{
									"begin": 11910,
									"end": 11924,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "SWAP1"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "DUP2"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "MSTORE"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "DUP1"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "DUP4"
								},
								{
									"begin": 11985,
									"end": 12006,
									"name": "KECCAK256"
								},
								{
									"begin": 11985,
									"end": 12021,
									"name": "DUP6"
								},
								{
									"begin": 11985,
									"end": 12021,
									"name": "SWAP1"
								},
								{
									"begin": 11985,
									"end": 12021,
									"name": "SSTORE"
								},
								{
									"begin": 12028,
									"end": 12040,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 12028,
									"end": 12053,
									"name": "DUP1"
								},
								{
									"begin": 12028,
									"end": 12053,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 12060,
									"end": 12079,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 12060,
									"end": 12079,
									"name": "OR"
								},
								{
									"begin": 12060,
									"end": 12079,
									"name": "SWAP1"
								},
								{
									"begin": 12060,
									"end": 12079,
									"name": "SSTORE"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "DUP1"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "MLOAD"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SWAP5"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "DUP6"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "MSTORE"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "MLOAD"
								},
								{
									"begin": 11995,
									"end": 12005,
									"name": "SWAP3"
								},
								{
									"begin": 11995,
									"end": 12005,
									"name": "SWAP4"
								},
								{
									"begin": 11910,
									"end": 11919,
									"name": "SWAP2"
								},
								{
									"begin": 11910,
									"end": 11919,
									"name": "SWAP3"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SWAP3"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "DUP2"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SWAP1"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SUB"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SWAP1"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SWAP2"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "ADD"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "SWAP1"
								},
								{
									"begin": 12093,
									"end": 12139,
									"name": "LOG3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMP"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "JUMPDEST"
								},
								{
									"begin": 3849,
									"end": 3859,
									"name": "CALLER"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "JUMPDEST"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "SWAP1"
								},
								{
									"begin": 3773,
									"end": 3865,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SLOAD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "AND"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "MUL"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SUB"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "AND"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DIV"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "MSTORE"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "KECCAK256"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DIV"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "LT"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "MLOAD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "NOT"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "AND"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP4"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "OR"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP6"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP6"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "GT"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "MLOAD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "POP"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SWAP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP3"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "GT"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ISZERO"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPI"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP2"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "SSTORE"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "ADD"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMP"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "JUMPDEST"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "DUP1"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "CODECOPY"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11376,
									"end": 21545,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204218d42dda81f2d333bed2ac38012757637c95ef4e2a5939d62928ef5b3a8ee264736f6c63430005100032",
									".code": [
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "MSTORE"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "POP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "LT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "SHR"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "DD644F72"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "E7CD4A04"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "EA924F06"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "B09F1266"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "D28D8852"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "3224D395"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "42966C68"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "5FDF2BE0"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "6F9170F6"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "3224D395"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "32424AA3"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "3478591A"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "2042E5C2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "GT"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "2042E5C2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "278D9637"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMP"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "EQ"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPI"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "JUMPDEST"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "DUP1"
										},
										{
											"begin": 11376,
											"end": 21545,
											"name": "REVERT"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMPDEST"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMPDEST"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MLOAD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP3"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MSTORE"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MLOAD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "ADD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MSTORE"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MLOAD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP3"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP3"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "ADD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP6"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "ADD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "ADD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "AND"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "ISZERO"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMPI"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP3"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SUB"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MLOAD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP4"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SUB"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "EXP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SUB"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "NOT"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "AND"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MSTORE"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "ADD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMPDEST"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP3"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "MLOAD"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "DUP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP2"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SUB"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "RETURN"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "JUMPDEST"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "DUP1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "DUP2"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "AND"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "ADD"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "JUMPDEST"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "DUP1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "MLOAD"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP2"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "ISZERO"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "ISZERO"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "DUP3"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "MSTORE"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "MLOAD"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "DUP2"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SUB"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "ADD"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "RETURN"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "JUMPDEST"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "JUMPDEST"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "DUP1"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "MLOAD"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "SWAP2"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "DUP3"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "MSTORE"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "MLOAD"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "SWAP1"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "DUP2"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "SWAP1"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "SUB"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "ADD"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "SWAP1"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "RETURN"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "JUMPDEST"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "DUP1"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "AND"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "JUMPDEST"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "STOP"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "JUMPDEST"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "DUP1"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "DUP2"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "DUP2"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "AND"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SWAP2"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "DUP2"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "ADD"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SWAP1"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SWAP2"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "AND"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SWAP1"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "ADD"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "JUMPDEST"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "JUMPDEST"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "JUMPDEST"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "DUP1"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "MLOAD"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SWAP1"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SWAP3"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "AND"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "DUP3"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "MSTORE"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "MLOAD"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SWAP1"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "DUP2"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SWAP1"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SUB"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "ADD"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SWAP1"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "RETURN"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "JUMPDEST"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "JUMPDEST"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "DUP1"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SWAP3"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "AND"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "DUP3"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "MSTORE"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "MLOAD"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "DUP2"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SUB"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "ADD"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SWAP1"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "RETURN"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "JUMPDEST"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "JUMPDEST"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "DUP1"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "DUP2"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "AND"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "SWAP1"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "ADD"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "ISZERO"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "ISZERO"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "JUMPDEST"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "DUP1"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "DUP2"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "AND"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "SWAP1"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "ADD"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "JUMPDEST"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "DUP1"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "JUMPDEST"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "DUP1"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "JUMPDEST"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "DUP1"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "AND"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "JUMPDEST"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "DUP1"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "AND"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMPDEST"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "JUMPDEST"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMPDEST"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "JUMPDEST"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "JUMPDEST"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "DUP1"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "JUMPDEST"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "DUP1"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "DUP2"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "AND"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "SWAP1"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "ADD"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "JUMPDEST"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "DUP1"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "DUP2"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "AND"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "SWAP1"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "ADD"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPDEST"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "JUMPDEST"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "JUMPDEST"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "DUP1"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "DUP2"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "DUP2"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "AND"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "SWAP2"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "ADD"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "AND"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "JUMPDEST"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "JUMPDEST"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "DUP1"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "AND"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "JUMPDEST"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "DUP1"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "ISZERO"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "ISZERO"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMPDEST"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "DUP1"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "AND"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMPDEST"
										},
										{
											"begin": 13308,
											"end": 13313,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SLOAD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MLOAD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP9"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "AND"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ISZERO"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MUL"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP6"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "AND"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP5"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP5"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DIV"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP4"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP5"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DIV"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MUL"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MSTORE"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MSTORE"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13279,
											"end": 13292,
											"name": "SWAP4"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP3"
										},
										{
											"begin": 13308,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13308,
											"end": 13313,
											"name": "SWAP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP4"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13308,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ISZERO"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMPI"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "LT"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMPI"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP4"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SLOAD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DIV"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MUL"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP4"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MSTORE"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMP"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMPDEST"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MSTORE"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "KECCAK256"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMPDEST"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SLOAD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "MSTORE"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP4"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "GT"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMPI"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SUB"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "AND"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "DUP3"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "ADD"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP2"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "JUMPDEST"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "POP"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "POP"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "POP"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "POP"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "POP"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "SWAP1"
										},
										{
											"begin": 13301,
											"end": 13313,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "SWAP1"
										},
										{
											"begin": 13240,
											"end": 13319,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "JUMPDEST"
										},
										{
											"begin": 14503,
											"end": 14507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14516,
											"end": 14555,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 14525,
											"end": 14537,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 14525,
											"end": 14535,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 14525,
											"end": 14537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14525,
											"end": 14537,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 14525,
											"end": 14537,
											"name": "JUMPDEST"
										},
										{
											"begin": 14539,
											"end": 14546,
											"name": "DUP5"
										},
										{
											"begin": 14548,
											"end": 14554,
											"name": "DUP5"
										},
										{
											"begin": 14516,
											"end": 14524,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 14516,
											"end": 14555,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14516,
											"end": 14555,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 14516,
											"end": 14555,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14569,
											"end": 14573,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "JUMPDEST"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP3"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "SWAP2"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "POP"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "POP"
										},
										{
											"begin": 14435,
											"end": 14579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "JUMPDEST"
										},
										{
											"begin": 13444,
											"end": 13456,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 13444,
											"end": 13456,
											"name": "SLOAD"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "SWAP1"
										},
										{
											"begin": 13375,
											"end": 13462,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "DUP2"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "AND"
										},
										{
											"begin": 12626,
											"end": 12631,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "DUP2"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "DUP2"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "MSTORE"
										},
										{
											"begin": 12596,
											"end": 12609,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "SWAP1"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "DUP2"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "MSTORE"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "SWAP2"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "DUP3"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "SWAP1"
										},
										{
											"begin": 12596,
											"end": 12623,
											"name": "KECCAK256"
										},
										{
											"begin": 12596,
											"end": 12631,
											"name": "DUP1"
										},
										{
											"begin": 12596,
											"end": 12631,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12596,
											"end": 12631,
											"name": "AND"
										},
										{
											"begin": 12596,
											"end": 12631,
											"name": "SWAP1"
										},
										{
											"begin": 12596,
											"end": 12631,
											"name": "SSTORE"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "DUP2"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "MLOAD"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP3"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "DUP4"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "MSTORE"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "MLOAD"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "PUSH",
											"value": "9FF0FE46BDE692FFA123229BEB5DEBD1C068A183C3B74BE4F2D749F628203D3A"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP3"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "DUP2"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SUB"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP2"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "ADD"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "SWAP1"
										},
										{
											"begin": 12647,
											"end": 12677,
											"name": "LOG1"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "POP"
										},
										{
											"begin": 12520,
											"end": 12683,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "JUMPDEST"
										},
										{
											"begin": 15159,
											"end": 15169,
											"name": "CALLER"
										},
										{
											"begin": 15115,
											"end": 15119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "SWAP1"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "DUP2"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "MSTORE"
										},
										{
											"begin": 15145,
											"end": 15158,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "MSTORE"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "DUP2"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "KECCAK256"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "SLOAD"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15145,
											"end": 15170,
											"name": "AND"
										},
										{
											"begin": 15182,
											"end": 15191,
											"name": "DUP1"
										},
										{
											"begin": 15182,
											"end": 15191,
											"name": "ISZERO"
										},
										{
											"begin": 15182,
											"end": 15208,
											"name": "DUP1"
										},
										{
											"begin": 15182,
											"end": 15208,
											"name": "ISZERO"
										},
										{
											"begin": 15182,
											"end": 15208,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 15182,
											"end": 15208,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15195,
											"end": 15208,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 15195,
											"end": 15208,
											"name": "SLOAD"
										},
										{
											"begin": 15195,
											"end": 15208,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 15195,
											"end": 15208,
											"name": "AND"
										},
										{
											"begin": 15182,
											"end": 15208,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 15182,
											"end": 15208,
											"name": "JUMPDEST"
										},
										{
											"begin": 15178,
											"end": 15335,
											"name": "ISZERO"
										},
										{
											"begin": 15178,
											"end": 15335,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 15178,
											"end": 15335,
											"name": "JUMPI"
										},
										{
											"begin": 15277,
											"end": 15304,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 15283,
											"end": 15295,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 15283,
											"end": 15293,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 15283,
											"end": 15295,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15283,
											"end": 15295,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 15283,
											"end": 15295,
											"name": "JUMPDEST"
										},
										{
											"begin": 15297,
											"end": 15303,
											"name": "DUP5"
										},
										{
											"begin": 15277,
											"end": 15282,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 15277,
											"end": 15304,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15277,
											"end": 15304,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 15277,
											"end": 15304,
											"name": "JUMPDEST"
										},
										{
											"begin": 15322,
											"end": 15326,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15315,
											"end": 15326,
											"name": "SWAP2"
										},
										{
											"begin": 15315,
											"end": 15326,
											"name": "POP"
										},
										{
											"begin": 15315,
											"end": 15326,
											"name": "POP"
										},
										{
											"begin": 15315,
											"end": 15326,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 15315,
											"end": 15326,
											"name": "JUMP"
										},
										{
											"begin": 15178,
											"end": 15335,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 15178,
											"end": 15335,
											"name": "JUMPDEST"
										},
										{
											"begin": 15343,
											"end": 15379,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 15353,
											"end": 15359,
											"name": "DUP6"
										},
										{
											"begin": 15361,
											"end": 15370,
											"name": "DUP6"
										},
										{
											"begin": 15372,
											"end": 15378,
											"name": "DUP6"
										},
										{
											"begin": 15343,
											"end": 15352,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 15343,
											"end": 15379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15343,
											"end": 15379,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 15343,
											"end": 15379,
											"name": "JUMPDEST"
										},
										{
											"begin": 15386,
											"end": 15507,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 15395,
											"end": 15401,
											"name": "DUP6"
										},
										{
											"begin": 15403,
											"end": 15415,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 15403,
											"end": 15413,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 15403,
											"end": 15415,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15403,
											"end": 15415,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 15403,
											"end": 15415,
											"name": "JUMPDEST"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 15455,
											"end": 15461,
											"name": "DUP7"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "MLOAD"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "DUP1"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "ADD"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "MSTORE"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "DUP1"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "DUP2"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "MSTORE"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "ADD"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH data",
											"value": "1BDBB83B359C44F2DD176C8E425CAC93AC5D285F6E207601AC9329B71A414CFE"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "SWAP2"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "DUP12"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "AND"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "SWAP1"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "DUP2"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "MSTORE"
										},
										{
											"begin": 15417,
											"end": 15428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "MSTORE"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "DUP2"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "KECCAK256"
										},
										{
											"begin": 15417,
											"end": 15436,
											"name": "SWAP1"
										},
										{
											"begin": 15437,
											"end": 15449,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 15437,
											"end": 15447,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 15437,
											"end": 15449,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15437,
											"end": 15449,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 15437,
											"end": 15449,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "AND"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "DUP2"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "MSTORE"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "DUP2"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "ADD"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "SWAP2"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "SWAP1"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "SWAP2"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "MSTORE"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "KECCAK256"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "SLOAD"
										},
										{
											"begin": 15417,
											"end": 15450,
											"name": "SWAP2"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "SWAP1"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 15417,
											"end": 15454,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "AND"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 15417,
											"end": 15506,
											"name": "JUMPDEST"
										},
										{
											"begin": 15386,
											"end": 15394,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 15386,
											"end": 15507,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15386,
											"end": 15507,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 15386,
											"end": 15507,
											"name": "JUMPDEST"
										},
										{
											"begin": 15521,
											"end": 15525,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15514,
											"end": 15525,
											"name": "SWAP2"
										},
										{
											"begin": 15514,
											"end": 15525,
											"name": "POP"
										},
										{
											"begin": 15514,
											"end": 15525,
											"name": "POP"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "JUMPDEST"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SWAP4"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "SWAP3"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "POP"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "POP"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "POP"
										},
										{
											"begin": 15024,
											"end": 15531,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "JUMPDEST"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "SLOAD"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "AND"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "DUP2"
										},
										{
											"begin": 11552,
											"end": 11584,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "JUMPDEST"
										},
										{
											"begin": 13032,
											"end": 13041,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 13032,
											"end": 13041,
											"name": "SLOAD"
										},
										{
											"begin": 13032,
											"end": 13041,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13032,
											"end": 13041,
											"name": "AND"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "SWAP1"
										},
										{
											"begin": 12968,
											"end": 13047,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "JUMPDEST"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "AND"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "DUP2"
										},
										{
											"begin": 11777,
											"end": 11804,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "JUMPDEST"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "SLOAD"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "AND"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "DUP2"
										},
										{
											"begin": 11700,
											"end": 11722,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 12238,
											"end": 12250,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "DUP1"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP3"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "ISZERO"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "ISZERO"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP3"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP1"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP3"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "MUL"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP2"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP1"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "SWAP2"
										},
										{
											"begin": 12238,
											"end": 12264,
											"name": "OR"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP3"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP1"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP3"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "AND"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP2"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP1"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP2"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "OR"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SWAP1"
										},
										{
											"begin": 12271,
											"end": 12297,
											"name": "SSTORE"
										},
										{
											"begin": 12151,
											"end": 12303,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 15913,
											"end": 16113,
											"name": "JUMPDEST"
										},
										{
											"begin": 15993,
											"end": 15997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16006,
											"end": 16089,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 16015,
											"end": 16027,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 16015,
											"end": 16025,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16015,
											"end": 16027,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16015,
											"end": 16027,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 16015,
											"end": 16027,
											"name": "JUMPDEST"
										},
										{
											"begin": 16029,
											"end": 16036,
											"name": "DUP5"
										},
										{
											"begin": 16038,
											"end": 16088,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 16077,
											"end": 16087,
											"name": "DUP6"
										},
										{
											"begin": 16038,
											"end": 16049,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 16050,
											"end": 16060,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 16050,
											"end": 16062,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "AND"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "DUP1"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "DUP4"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "SWAP4"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "SWAP4"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "MSTORE"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "SWAP2"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "DUP3"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "SWAP1"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "DUP2"
										},
										{
											"begin": 16038,
											"end": 16063,
											"name": "KECCAK256"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "SWAP2"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "DUP13"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "AND"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "DUP2"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "MSTORE"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "SWAP3"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "MSTORE"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "SWAP1"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "KECCAK256"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "SLOAD"
										},
										{
											"begin": 16038,
											"end": 16072,
											"name": "SWAP1"
										},
										{
											"begin": 16038,
											"end": 16088,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16038,
											"end": 16076,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 16038,
											"end": 16088,
											"name": "AND"
										},
										{
											"begin": 16038,
											"end": 16088,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "JUMPDEST"
										},
										{
											"begin": 17287,
											"end": 17291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17300,
											"end": 17327,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 17306,
											"end": 17318,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 17306,
											"end": 17316,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 17306,
											"end": 17318,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17306,
											"end": 17318,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 17306,
											"end": 17318,
											"name": "JUMPDEST"
										},
										{
											"begin": 17320,
											"end": 17326,
											"name": "DUP4"
										},
										{
											"begin": 17300,
											"end": 17305,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 17300,
											"end": 17327,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17300,
											"end": 17327,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 17300,
											"end": 17327,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17341,
											"end": 17345,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "SWAP2"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "SWAP1"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "POP"
										},
										{
											"begin": 17241,
											"end": 17351,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "JUMPDEST"
										},
										{
											"begin": 17482,
											"end": 17486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 17523,
											"end": 17528,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 17503,
											"end": 17519,
											"name": "DUP3"
										},
										{
											"begin": 17503,
											"end": 17528,
											"name": "GT"
										},
										{
											"begin": 17503,
											"end": 17528,
											"name": "ISZERO"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "JUMPI"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "DUP1"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "DUP2"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "MSTORE"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "DUP3"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "ADD"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "MSTORE"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "1D"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "DUP3"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "ADD"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "MSTORE"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "546865206261736520706F696E7473206D757374203C3D203130303030000000"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "DUP3"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "ADD"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "MSTORE"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "SWAP1"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "MLOAD"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "SWAP1"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "DUP2"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "SWAP1"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "SUB"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "ADD"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "SWAP1"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "REVERT"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 17495,
											"end": 17562,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17569,
											"end": 17584,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17569,
											"end": 17603,
											"name": "SSTORE"
										},
										{
											"begin": 17617,
											"end": 17621,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17617,
											"end": 17621,
											"name": "SWAP1"
										},
										{
											"begin": 17402,
											"end": 17627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "JUMPDEST"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "MSTORE"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "SWAP1"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "DUP2"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "MSTORE"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "SWAP1"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "KECCAK256"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "SLOAD"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "AND"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "DUP2"
										},
										{
											"begin": 12309,
											"end": 12355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "AND"
										},
										{
											"begin": 13575,
											"end": 13582,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "SWAP1"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "DUP2"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "MSTORE"
										},
										{
											"begin": 13598,
											"end": 13607,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "MSTORE"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "SWAP1"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "KECCAK256"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "SLOAD"
										},
										{
											"begin": 13598,
											"end": 13616,
											"name": "SWAP1"
										},
										{
											"begin": 13516,
											"end": 13622,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "DUP1"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SLOAD"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SWAP1"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SWAP2"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "AND"
										},
										{
											"begin": 10757,
											"end": 10763,
											"name": "SWAP1"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "SWAP1"
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "DUP4"
										},
										{
											"begin": 10773,
											"end": 10774,
											"name": "SWAP1"
										},
										{
											"begin": 10736,
											"end": 10776,
											"name": "LOG3"
										},
										{
											"begin": 10800,
											"end": 10801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "DUP1"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "AND"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SWAP1"
										},
										{
											"begin": 10783,
											"end": 10802,
											"name": "SSTORE"
										},
										{
											"begin": 10678,
											"end": 10808,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "JUMPDEST"
										},
										{
											"begin": 12872,
											"end": 12879,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12895,
											"end": 12902,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 12895,
											"end": 12900,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 12895,
											"end": 12902,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12895,
											"end": 12902,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 12895,
											"end": 12902,
											"name": "JUMPDEST"
										},
										{
											"begin": 12888,
											"end": 12902,
											"name": "SWAP1"
										},
										{
											"begin": 12888,
											"end": 12902,
											"name": "POP"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "SWAP1"
										},
										{
											"begin": 12829,
											"end": 12908,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMPDEST"
										},
										{
											"begin": 10114,
											"end": 10121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "AND"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "SWAP1"
										},
										{
											"begin": 10076,
											"end": 10149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 13104,
											"end": 13187,
											"name": "JUMPDEST"
										},
										{
											"begin": 13174,
											"end": 13181,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SLOAD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MLOAD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP9"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "AND"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ISZERO"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MUL"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP6"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "AND"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP5"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP5"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DIV"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP4"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP5"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DIV"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MUL"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP3"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP3"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MSTORE"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP3"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MSTORE"
										},
										{
											"begin": 13145,
											"end": 13158,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13145,
											"end": 13158,
											"name": "SWAP4"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP3"
										},
										{
											"begin": 13174,
											"end": 13181,
											"name": "SWAP1"
										},
										{
											"begin": 13174,
											"end": 13181,
											"name": "SWAP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP4"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ADD"
										},
										{
											"begin": 13174,
											"end": 13181,
											"name": "DUP3"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP3"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ISZERO"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "JUMPI"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "LT"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "JUMPI"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP1"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP4"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SLOAD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DIV"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MUL"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "DUP4"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "MSTORE"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "ADD"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "SWAP2"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 13167,
											"end": 13181,
											"name": "JUMP"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 17036,
											"end": 17156,
											"name": "JUMPDEST"
										},
										{
											"begin": 17092,
											"end": 17096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 17105,
											"end": 17132,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 17111,
											"end": 17123,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 17111,
											"end": 17121,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 17111,
											"end": 17123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17111,
											"end": 17123,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 17111,
											"end": 17123,
											"name": "JUMPDEST"
										},
										{
											"begin": 17125,
											"end": 17131,
											"name": "DUP4"
										},
										{
											"begin": 17105,
											"end": 17110,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 17105,
											"end": 17132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 16585,
											"end": 16836,
											"name": "JUMPDEST"
										},
										{
											"begin": 16670,
											"end": 16674,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16683,
											"end": 16812,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 16692,
											"end": 16704,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 16692,
											"end": 16702,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16692,
											"end": 16704,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16692,
											"end": 16704,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 16692,
											"end": 16704,
											"name": "JUMPDEST"
										},
										{
											"begin": 16706,
											"end": 16713,
											"name": "DUP5"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 16754,
											"end": 16769,
											"name": "DUP6"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "MLOAD"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "DUP1"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "ADD"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "MSTORE"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "DUP1"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "DUP2"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "MSTORE"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "ADD"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH data",
											"value": "9412E0E2FEC706D2E5E85A841C1F08DEE4FB9D15AD0EF869B451D8AF0AF39DEA"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "SWAP2"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "CODECOPY"
										},
										{
											"begin": 16715,
											"end": 16726,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16727,
											"end": 16739,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 16727,
											"end": 16737,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16727,
											"end": 16739,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16727,
											"end": 16739,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 16727,
											"end": 16739,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "SWAP1"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "DUP2"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "AND"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "DUP3"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "MSTORE"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "DUP1"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "DUP4"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "ADD"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "SWAP4"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "SWAP1"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "SWAP4"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "MSTORE"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "SWAP2"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "DUP3"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "SWAP1"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "DUP2"
										},
										{
											"begin": 16715,
											"end": 16740,
											"name": "KECCAK256"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "SWAP2"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "DUP14"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "AND"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "DUP2"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "MSTORE"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "SWAP3"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "MSTORE"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "SWAP1"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "KECCAK256"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "SLOAD"
										},
										{
											"begin": 16715,
											"end": 16749,
											"name": "SWAP2"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "SWAP1"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16715,
											"end": 16753,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "AND"
										},
										{
											"begin": 16715,
											"end": 16811,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "JUMPDEST"
										},
										{
											"begin": 13930,
											"end": 13940,
											"name": "CALLER"
										},
										{
											"begin": 13887,
											"end": 13891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "SWAP1"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "DUP2"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "MSTORE"
										},
										{
											"begin": 13916,
											"end": 13929,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "MSTORE"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "DUP2"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "KECCAK256"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "SLOAD"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13916,
											"end": 13941,
											"name": "AND"
										},
										{
											"begin": 13952,
											"end": 13961,
											"name": "DUP1"
										},
										{
											"begin": 13952,
											"end": 13961,
											"name": "ISZERO"
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "DUP1"
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "ISZERO"
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13965,
											"end": 13978,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 13965,
											"end": 13978,
											"name": "SLOAD"
										},
										{
											"begin": 13965,
											"end": 13978,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 13965,
											"end": 13978,
											"name": "AND"
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "JUMPDEST"
										},
										{
											"begin": 13948,
											"end": 14049,
											"name": "ISZERO"
										},
										{
											"begin": 13948,
											"end": 14049,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 13948,
											"end": 14049,
											"name": "JUMPI"
										},
										{
											"begin": 13994,
											"end": 14021,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 14000,
											"end": 14012,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 14000,
											"end": 14010,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 14000,
											"end": 14012,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13994,
											"end": 14021,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 13994,
											"end": 14021,
											"name": "JUMPDEST"
										},
										{
											"begin": 14037,
											"end": 14041,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14030,
											"end": 14041,
											"name": "SWAP2"
										},
										{
											"begin": 14030,
											"end": 14041,
											"name": "POP"
										},
										{
											"begin": 14030,
											"end": 14041,
											"name": "POP"
										},
										{
											"begin": 14030,
											"end": 14041,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 14030,
											"end": 14041,
											"name": "JUMP"
										},
										{
											"begin": 13948,
											"end": 14049,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 13948,
											"end": 14049,
											"name": "JUMPDEST"
										},
										{
											"begin": 14055,
											"end": 14097,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 14065,
											"end": 14077,
											"name": "PUSH [tag]",
											"value": "205"
										},
										{
											"begin": 14065,
											"end": 14075,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 14065,
											"end": 14077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14065,
											"end": 14077,
											"name": "tag",
											"value": "205"
										},
										{
											"begin": 14065,
											"end": 14077,
											"name": "JUMPDEST"
										},
										{
											"begin": 14079,
											"end": 14088,
											"name": "DUP6"
										},
										{
											"begin": 14090,
											"end": 14096,
											"name": "DUP6"
										},
										{
											"begin": 14055,
											"end": 14064,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 14055,
											"end": 14097,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14055,
											"end": 14097,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 14055,
											"end": 14097,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 14111,
											"end": 14115,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 14111,
											"end": 14115,
											"name": "SWAP4"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13816,
											"end": 14121,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPDEST"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SLOAD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MLOAD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP6"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "AND"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ISZERO"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP5"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "AND"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP4"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP4"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DIV"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP5"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DIV"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP5"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MUL"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP5"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MSTORE"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MSTORE"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP4"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ISZERO"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPI"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "LT"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPI"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP4"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SLOAD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DIV"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MUL"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP4"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MSTORE"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMP"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPDEST"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MSTORE"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "KECCAK256"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPDEST"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SLOAD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "MSTORE"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP4"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "GT"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPI"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP1"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SUB"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "AND"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP3"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "ADD"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "SWAP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMPDEST"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "POP"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "POP"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "POP"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "POP"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "POP"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "DUP2"
										},
										{
											"begin": 11727,
											"end": 11748,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "JUMPDEST"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SLOAD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MLOAD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP6"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "AND"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ISZERO"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MUL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ADD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP5"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "AND"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP4"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP4"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DIV"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ADD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP5"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DIV"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP5"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MUL"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP3"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ADD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP5"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ADD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP3"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MSTORE"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MSTORE"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP3"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP4"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ADD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP3"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP3"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ISZERO"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "JUMPI"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "LT"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "JUMPI"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP1"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP4"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SLOAD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DIV"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MUL"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "DUP4"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "MSTORE"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "ADD"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "SWAP2"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 11753,
											"end": 11772,
											"name": "JUMP"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "SWAP2"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "DUP3"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "AND"
										},
										{
											"begin": 14249,
											"end": 14256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "DUP2"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "MSTORE"
										},
										{
											"begin": 14272,
											"end": 14283,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "DUP2"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "MSTORE"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "DUP1"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "DUP4"
										},
										{
											"begin": 14272,
											"end": 14290,
											"name": "KECCAK256"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP4"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP5"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "AND"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "DUP3"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "MSTORE"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP2"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP1"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP2"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "MSTORE"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "KECCAK256"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SLOAD"
										},
										{
											"begin": 14272,
											"end": 14299,
											"name": "SWAP1"
										},
										{
											"begin": 14175,
											"end": 14305,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "JUMPDEST"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "SLOAD"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "DUP2"
										},
										{
											"begin": 11513,
											"end": 11547,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "DUP2"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "AND"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "DUP2"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "DUP2"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "MSTORE"
										},
										{
											"begin": 12436,
											"end": 12449,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "DUP2"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "MSTORE"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "SWAP2"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "DUP3"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12460,
											"name": "KECCAK256"
										},
										{
											"begin": 12436,
											"end": 12467,
											"name": "DUP1"
										},
										{
											"begin": 12436,
											"end": 12467,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12436,
											"end": 12467,
											"name": "AND"
										},
										{
											"begin": 12463,
											"end": 12467,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12436,
											"end": 12467,
											"name": "OR"
										},
										{
											"begin": 12436,
											"end": 12467,
											"name": "SWAP1"
										},
										{
											"begin": 12436,
											"end": 12467,
											"name": "SSTORE"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "DUP2"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "MLOAD"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP3"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "DUP4"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "MSTORE"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP1"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "MLOAD"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "PUSH",
											"value": "64FD21439447139BED5A374A0F62ECC0FBD38CF2687D4ED5D587CB55DFBD4258"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP3"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "DUP2"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP1"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SUB"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP1"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP2"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "ADD"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "SWAP1"
										},
										{
											"begin": 12483,
											"end": 12508,
											"name": "LOG1"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "POP"
										},
										{
											"begin": 12366,
											"end": 12514,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "JUMPDEST"
										},
										{
											"begin": 17709,
											"end": 17713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 17722,
											"end": 17735,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "DUP1"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "AND"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SWAP2"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "ISZERO"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "ISZERO"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SWAP2"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SWAP1"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SWAP2"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "OR"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SWAP1"
										},
										{
											"begin": 17722,
											"end": 17752,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1"
										},
										{
											"begin": 17633,
											"end": 17776,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMPDEST"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 10280,
											"end": 10290,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 10280,
											"end": 10292,
											"name": "JUMPDEST"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "SWAP1"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP2"
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "SWAP2"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "AND"
										},
										{
											"begin": 10270,
											"end": 10292,
											"name": "EQ"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPI"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP3"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MSTORE"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "MLOAD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "DUP2"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SUB"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "ADD"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "SWAP1"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "REVERT"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 10262,
											"end": 10329,
											"name": "JUMPDEST"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 11041,
											"end": 11049,
											"name": "DUP2"
										},
										{
											"begin": 11022,
											"end": 11040,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 11022,
											"end": 11050,
											"name": "JUMPDEST"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "POP"
										},
										{
											"begin": 10953,
											"end": 11056,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "JUMPDEST"
										},
										{
											"begin": 3849,
											"end": 3859,
											"name": "CALLER"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "SWAP1"
										},
										{
											"begin": 3773,
											"end": 3865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20828,
											"end": 21148,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 20828,
											"end": 21148,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20918,
											"end": 20937,
											"name": "DUP4"
										},
										{
											"begin": 20918,
											"end": 20937,
											"name": "AND"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "JUMPI"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP2"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "MSTORE"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "ADD"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP1"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP1"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "ADD"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP3"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP2"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "SUB"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP3"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "MSTORE"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP2"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "MSTORE"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "ADD"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP1"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH data",
											"value": "D09DEF05DAD6E5C0E0F81ED9A6A4A52F41E82B31658E717071B22150323F77C3"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "SWAP2"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "CODECOPY"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "ADD"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "SWAP2"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "POP"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "POP"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "MLOAD"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "DUP1"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "SWAP2"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "SUB"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "SWAP1"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "REVERT"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 20910,
											"end": 20978,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20993,
											"end": 21014,
											"name": "DUP3"
										},
										{
											"begin": 20993,
											"end": 21014,
											"name": "AND"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "JUMPI"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP2"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "MSTORE"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "ADD"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP1"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP1"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "ADD"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP3"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP2"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "SUB"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP3"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "MSTORE"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP2"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "MSTORE"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "ADD"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP1"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH data",
											"value": "19944B116823C7CE928B48878F788CE15289C681C437F818FA8E180BCA49D439"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "SWAP2"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "CODECOPY"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "ADD"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "SWAP2"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "POP"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "POP"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "MLOAD"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "DUP1"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "SWAP2"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "SUB"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "SWAP1"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "REVERT"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 20985,
											"end": 21053,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP1"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP5"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "AND"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP2"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP2"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "MSTORE"
										},
										{
											"begin": 21062,
											"end": 21073,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "SWAP1"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP2"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "MSTORE"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP1"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "DUP4"
										},
										{
											"begin": 21062,
											"end": 21080,
											"name": "KECCAK256"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "SWAP5"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "DUP8"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "AND"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "DUP1"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "DUP5"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "MSTORE"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "SWAP5"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "DUP3"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "MSTORE"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "SWAP2"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "DUP3"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "SWAP1"
										},
										{
											"begin": 21062,
											"end": 21089,
											"name": "KECCAK256"
										},
										{
											"begin": 21062,
											"end": 21098,
											"name": "DUP6"
										},
										{
											"begin": 21062,
											"end": 21098,
											"name": "SWAP1"
										},
										{
											"begin": 21062,
											"end": 21098,
											"name": "SSTORE"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "DUP2"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "MLOAD"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "DUP6"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "DUP2"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "MSTORE"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SWAP2"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "MLOAD"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SWAP3"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "DUP2"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SWAP1"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SUB"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SWAP1"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SWAP2"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "ADD"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "SWAP1"
										},
										{
											"begin": 21110,
											"end": 21142,
											"name": "LOG3"
										},
										{
											"begin": 20828,
											"end": 21148,
											"name": "POP"
										},
										{
											"begin": 20828,
											"end": 21148,
											"name": "POP"
										},
										{
											"begin": 20828,
											"end": 21148,
											"name": "POP"
										},
										{
											"begin": 20828,
											"end": 21148,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19850,
											"end": 20416,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 19850,
											"end": 20416,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19922,
											"end": 19943,
											"name": "DUP3"
										},
										{
											"begin": 19922,
											"end": 19943,
											"name": "AND"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "JUMPI"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP2"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "MSTORE"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "ADD"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP1"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP1"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "ADD"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP3"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP2"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "SUB"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP3"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "MSTORE"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP2"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "MSTORE"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "ADD"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP1"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH data",
											"value": "3F1DB04F913771981623A6DAB45469EF2E25607AF38F564F1659131885045D07"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "SWAP2"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "CODECOPY"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "ADD"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "SWAP2"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "POP"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "POP"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "MLOAD"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "DUP1"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "SWAP2"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "SUB"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "SWAP1"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "REVERT"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 19914,
											"end": 19981,
											"name": "JUMPDEST"
										},
										{
											"begin": 19992,
											"end": 20004,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 19992,
											"end": 20004,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 19992,
											"end": 20004,
											"name": "SWAP1"
										},
										{
											"begin": 19992,
											"end": 20004,
											"name": "DIV"
										},
										{
											"begin": 19992,
											"end": 20004,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 19992,
											"end": 20004,
											"name": "AND"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "ISZERO"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "JUMPI"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 20060,
											"end": 20066,
											"name": "DUP2"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "MLOAD"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "DUP1"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "ADD"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "MSTORE"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "DUP1"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "DUP2"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "MSTORE"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "ADD"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH data",
											"value": "2B18504B58470499DC89763A9AAD22B8E8F4F8B9A8C65E8240C0C81D16D1DABE"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "SWAP2"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "DUP6"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "AND"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "SWAP1"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "DUP2"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "MSTORE"
										},
										{
											"begin": 20037,
											"end": 20046,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "MSTORE"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "SWAP1"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "KECCAK256"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "SLOAD"
										},
										{
											"begin": 20037,
											"end": 20055,
											"name": "SWAP2"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "SWAP1"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20037,
											"end": 20059,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "AND"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 20037,
											"end": 20105,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "DUP4"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "AND"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "SWAP1"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "DUP2"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "MSTORE"
										},
										{
											"begin": 20016,
											"end": 20025,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "MSTORE"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "SWAP1"
										},
										{
											"begin": 20016,
											"end": 20034,
											"name": "KECCAK256"
										},
										{
											"begin": 20016,
											"end": 20105,
											"name": "SSTORE"
										},
										{
											"begin": 20131,
											"end": 20143,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 20131,
											"end": 20143,
											"name": "SLOAD"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "PUSH [tag]",
											"value": "235"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "SWAP1"
										},
										{
											"begin": 20148,
											"end": 20154,
											"name": "DUP3"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20131,
											"end": 20147,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "AND"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "tag",
											"value": "235"
										},
										{
											"begin": 20131,
											"end": 20155,
											"name": "JUMPDEST"
										},
										{
											"begin": 20116,
											"end": 20128,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 20116,
											"end": 20155,
											"name": "SSTORE"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "JUMP"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "JUMPDEST"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH [tag]",
											"value": "238"
										},
										{
											"begin": 20229,
											"end": 20235,
											"name": "DUP2"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "MLOAD"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "DUP1"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "ADD"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "MSTORE"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "DUP1"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "DUP2"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "MSTORE"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "ADD"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH data",
											"value": "2B18504B58470499DC89763A9AAD22B8E8F4F8B9A8C65E8240C0C81D16D1DABE"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "SWAP2"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "DUP6"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "AND"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "SWAP1"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "DUP2"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "MSTORE"
										},
										{
											"begin": 20206,
											"end": 20215,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "MSTORE"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "SWAP1"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "KECCAK256"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "SLOAD"
										},
										{
											"begin": 20206,
											"end": 20224,
											"name": "SWAP2"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "SWAP1"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20206,
											"end": 20228,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "AND"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "tag",
											"value": "238"
										},
										{
											"begin": 20206,
											"end": 20274,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "DUP1"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "DUP5"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "AND"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "SWAP1"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "DUP2"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "MSTORE"
										},
										{
											"begin": 20185,
											"end": 20194,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "MSTORE"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "DUP1"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "DUP3"
										},
										{
											"begin": 20185,
											"end": 20203,
											"name": "KECCAK256"
										},
										{
											"begin": 20185,
											"end": 20274,
											"name": "SWAP4"
										},
										{
											"begin": 20185,
											"end": 20274,
											"name": "SWAP1"
										},
										{
											"begin": 20185,
											"end": 20274,
											"name": "SWAP4"
										},
										{
											"begin": 20185,
											"end": 20274,
											"name": "SSTORE"
										},
										{
											"begin": 20321,
											"end": 20333,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 20321,
											"end": 20333,
											"name": "SLOAD"
										},
										{
											"begin": 20321,
											"end": 20333,
											"name": "SWAP1"
										},
										{
											"begin": 20321,
											"end": 20333,
											"name": "SWAP2"
										},
										{
											"begin": 20321,
											"end": 20333,
											"name": "AND"
										},
										{
											"begin": 20311,
											"end": 20334,
											"name": "DUP2"
										},
										{
											"begin": 20311,
											"end": 20334,
											"name": "MSTORE"
										},
										{
											"begin": 20311,
											"end": 20334,
											"name": "KECCAK256"
										},
										{
											"begin": 20311,
											"end": 20334,
											"name": "SLOAD"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "SWAP1"
										},
										{
											"begin": 20339,
											"end": 20345,
											"name": "DUP3"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20311,
											"end": 20338,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "AND"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 20311,
											"end": 20346,
											"name": "JUMPDEST"
										},
										{
											"begin": 20295,
											"end": 20307,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 20295,
											"end": 20307,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20295,
											"end": 20307,
											"name": "AND"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "SWAP1"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "DUP2"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "MSTORE"
										},
										{
											"begin": 20285,
											"end": 20294,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "MSTORE"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "SWAP1"
										},
										{
											"begin": 20285,
											"end": 20308,
											"name": "KECCAK256"
										},
										{
											"begin": 20285,
											"end": 20346,
											"name": "SSTORE"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 19988,
											"end": 20354,
											"name": "JUMPDEST"
										},
										{
											"begin": 20389,
											"end": 20401,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 20389,
											"end": 20401,
											"name": "SLOAD"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "DUP1"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "MLOAD"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "DUP4"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "DUP2"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "MSTORE"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SWAP1"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 20389,
											"end": 20401,
											"name": "SWAP3"
										},
										{
											"begin": 20389,
											"end": 20401,
											"name": "DUP4"
										},
										{
											"begin": 20389,
											"end": 20401,
											"name": "AND"
										},
										{
											"begin": 20389,
											"end": 20401,
											"name": "SWAP3"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "DUP6"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "AND"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SWAP2"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SWAP1"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "DUP2"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SWAP1"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SUB"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "ADD"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "SWAP1"
										},
										{
											"begin": 20371,
											"end": 20410,
											"name": "LOG3"
										},
										{
											"begin": 19850,
											"end": 20416,
											"name": "POP"
										},
										{
											"begin": 19850,
											"end": 20416,
											"name": "POP"
										},
										{
											"begin": 19850,
											"end": 20416,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18334,
											"end": 18354,
											"name": "DUP4"
										},
										{
											"begin": 18334,
											"end": 18354,
											"name": "AND"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "JUMPI"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP2"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "MSTORE"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "ADD"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP1"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP1"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "ADD"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP3"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP2"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "SUB"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP3"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "MSTORE"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP2"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "MSTORE"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "ADD"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP1"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH data",
											"value": "741AD084C111D41F2B927F9EFCF67F0A2E9038365FC60EDF5B8828D135CCCE2B"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "SWAP2"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "CODECOPY"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "ADD"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "SWAP2"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "POP"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "POP"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "MLOAD"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "DUP1"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "SWAP2"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "SUB"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "SWAP1"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "REVERT"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 18326,
											"end": 18396,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18411,
											"end": 18434,
											"name": "DUP3"
										},
										{
											"begin": 18411,
											"end": 18434,
											"name": "AND"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "JUMPI"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP2"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "MSTORE"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "ADD"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP1"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP1"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "ADD"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP3"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP2"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "SUB"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP3"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "MSTORE"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP2"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "MSTORE"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "ADD"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP1"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH data",
											"value": "7F9272C492BB12D65DEBFFAAF9DA1B9E4A73E2705F621EC9444F27785A4EFDAF"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "SWAP2"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "CODECOPY"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "ADD"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "SWAP2"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "POP"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "POP"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "MLOAD"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "DUP1"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "SWAP2"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "SUB"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "SWAP1"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "REVERT"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 18403,
											"end": 18474,
											"name": "JUMPDEST"
										},
										{
											"begin": 18508,
											"end": 18513,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 18489,
											"end": 18504,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18489,
											"end": 18504,
											"name": "SLOAD"
										},
										{
											"begin": 18489,
											"end": 18513,
											"name": "GT"
										},
										{
											"begin": 18489,
											"end": 18513,
											"name": "ISZERO"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "JUMPI"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "DUP1"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "DUP2"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "MSTORE"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "DUP3"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "ADD"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "MSTORE"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "DUP3"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "ADD"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "MSTORE"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "626173696320706F696E206D757374203C3D2031303030300000000000000000"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "DUP3"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "ADD"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "MSTORE"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "SWAP1"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "MLOAD"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "SWAP1"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "DUP2"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "SWAP1"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "SUB"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "ADD"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "SWAP1"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "REVERT"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 18481,
											"end": 18542,
											"name": "JUMPDEST"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 18593,
											"end": 18599,
											"name": "DUP2"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "MLOAD"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "DUP1"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "ADD"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "DUP1"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "DUP2"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "ADD"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH data",
											"value": "4E6B0935D9F360E8E2A5539654013DA3B49C2434AE6F48AB0729D3EA4253E929"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "SWAP2"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "DUP7"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "AND"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "SWAP1"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "DUP2"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18580,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "MSTORE"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "SWAP1"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "KECCAK256"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "SLOAD"
										},
										{
											"begin": 18571,
											"end": 18588,
											"name": "SWAP2"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "SWAP1"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18571,
											"end": 18592,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "AND"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 18571,
											"end": 18642,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "DUP5"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "AND"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "SWAP1"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "DUP2"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "MSTORE"
										},
										{
											"begin": 18551,
											"end": 18560,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "MSTORE"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "DUP2"
										},
										{
											"begin": 18551,
											"end": 18568,
											"name": "KECCAK256"
										},
										{
											"begin": 18551,
											"end": 18642,
											"name": "SWAP2"
										},
										{
											"begin": 18551,
											"end": 18642,
											"name": "SWAP1"
										},
										{
											"begin": 18551,
											"end": 18642,
											"name": "SWAP2"
										},
										{
											"begin": 18551,
											"end": 18642,
											"name": "SSTORE"
										},
										{
											"begin": 18671,
											"end": 18686,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18671,
											"end": 18686,
											"name": "SLOAD"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "SWAP1"
										},
										{
											"begin": 18692,
											"end": 18697,
											"name": "PUSH",
											"value": "2710"
										},
										{
											"begin": 18692,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "SWAP1"
										},
										{
											"begin": 18660,
											"end": 18666,
											"name": "DUP6"
										},
										{
											"begin": 18660,
											"end": 18666,
											"name": "SWAP1"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18660,
											"end": 18670,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "AND"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "JUMPDEST"
										},
										{
											"begin": 18660,
											"end": 18691,
											"name": "SWAP1"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18660,
											"end": 18691,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "AND"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 18660,
											"end": 18698,
											"name": "JUMPDEST"
										},
										{
											"begin": 18649,
											"end": 18698,
											"name": "SWAP1"
										},
										{
											"begin": 18649,
											"end": 18698,
											"name": "POP"
										},
										{
											"begin": 18720,
											"end": 18726,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18716,
											"name": "DUP2"
										},
										{
											"begin": 18713,
											"end": 18726,
											"name": "GT"
										},
										{
											"begin": 18713,
											"end": 18726,
											"name": "ISZERO"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "JUMPI"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "DUP1"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "DUP2"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "MSTORE"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "DUP3"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "ADD"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "MSTORE"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "DUP3"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "ADD"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "199959481B5D5CDD080F0F48185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "DUP3"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "ADD"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "MSTORE"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "SWAP1"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "MLOAD"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "SWAP1"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "DUP2"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "SWAP1"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "SUB"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "ADD"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "SWAP1"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "REVERT"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 18705,
											"end": 18749,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "DUP4"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "AND"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "SWAP1"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "DUP2"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "MSTORE"
										},
										{
											"begin": 18779,
											"end": 18788,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "MSTORE"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "SWAP1"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "KECCAK256"
										},
										{
											"begin": 18779,
											"end": 18799,
											"name": "SLOAD"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "SWAP1"
										},
										{
											"begin": 18804,
											"end": 18816,
											"name": "DUP3"
										},
										{
											"begin": 18804,
											"end": 18816,
											"name": "DUP5"
										},
										{
											"begin": 18804,
											"end": 18816,
											"name": "SUB"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18779,
											"end": 18803,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "AND"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 18779,
											"end": 18817,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "DUP5"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "AND"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "SWAP1"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "DUP2"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "MSTORE"
										},
										{
											"begin": 18756,
											"end": 18765,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "MSTORE"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "SWAP1"
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "KECCAK256"
										},
										{
											"begin": 18756,
											"end": 18817,
											"name": "SSTORE"
										},
										{
											"begin": 18828,
											"end": 18835,
											"name": "DUP1"
										},
										{
											"begin": 18828,
											"end": 18835,
											"name": "ISZERO"
										},
										{
											"begin": 18824,
											"end": 18939,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 18824,
											"end": 18939,
											"name": "JUMPI"
										},
										{
											"begin": 18862,
											"end": 18874,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 18862,
											"end": 18874,
											"name": "SLOAD"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "SWAP1"
										},
										{
											"begin": 18879,
											"end": 18882,
											"name": "DUP3"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18862,
											"end": 18878,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "AND"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 18862,
											"end": 18883,
											"name": "JUMPDEST"
										},
										{
											"begin": 18847,
											"end": 18859,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 18847,
											"end": 18883,
											"name": "SSTORE"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "DUP1"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "MLOAD"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "DUP3"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "DUP2"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "MSTORE"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "SWAP1"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "MLOAD"
										},
										{
											"begin": 18923,
											"end": 18924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18923,
											"end": 18924,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "DUP8"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "AND"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "SWAP2"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "DUP2"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "SWAP1"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "SUB"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "ADD"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "SWAP1"
										},
										{
											"begin": 18898,
											"end": 18931,
											"name": "LOG3"
										},
										{
											"begin": 18824,
											"end": 18939,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 18824,
											"end": 18939,
											"name": "JUMPDEST"
										},
										{
											"begin": 18967,
											"end": 18976,
											"name": "DUP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "AND"
										},
										{
											"begin": 18959,
											"end": 18965,
											"name": "DUP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 18978,
											"end": 18984,
											"name": "DUP5"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "MLOAD"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "DUP1"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "DUP3"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "DUP2"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "MSTORE"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "ADD"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "SWAP2"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "POP"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "POP"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "MLOAD"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "DUP1"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "SWAP2"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "SUB"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "SWAP1"
										},
										{
											"begin": 18950,
											"end": 18985,
											"name": "LOG3"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "POP"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "POP"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "POP"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "POP"
										},
										{
											"begin": 18240,
											"end": 18991,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "JUMPDEST"
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5862,
											"name": "DUP2"
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "DUP5"
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "DUP5"
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "GT"
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "ISZERO"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPI"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "AND"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ISZERO"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPI"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP4"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "EXP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "NOT"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "AND"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MSTORE"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "ADD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPDEST"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP3"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "POP"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "MLOAD"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "DUP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP2"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SUB"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "SWAP1"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "REVERT"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 5834,
											"end": 5863,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5882,
											"end": 5887,
											"name": "SWAP1"
										},
										{
											"begin": 5882,
											"end": 5887,
											"name": "SUB"
										},
										{
											"begin": 5882,
											"end": 5887,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5910,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 4905,
											"end": 5072,
											"name": "JUMPDEST"
										},
										{
											"begin": 4963,
											"end": 4970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4996,
											"name": "DUP3"
										},
										{
											"begin": 4991,
											"end": 4996,
											"name": "DUP3"
										},
										{
											"begin": 4991,
											"end": 4996,
											"name": "ADD"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP4"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP2"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "LT"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "ISZERO"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "JUMPI"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP3"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP3"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP3"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MSTORE"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "MLOAD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "DUP2"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SUB"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "ADD"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "SWAP1"
										},
										{
											"begin": 5003,
											"end": 5049,
											"name": "REVERT"
										},
										{
											"begin": 19252,
											"end": 19542,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 19252,
											"end": 19542,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19324,
											"end": 19345,
											"name": "DUP3"
										},
										{
											"begin": 19324,
											"end": 19345,
											"name": "AND"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "JUMPI"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "DUP1"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "DUP2"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "MSTORE"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "DUP3"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "ADD"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "MSTORE"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "DUP3"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "ADD"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "MSTORE"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "41524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "DUP3"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "ADD"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "MSTORE"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "SWAP1"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "MLOAD"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "SWAP1"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "DUP2"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "SWAP1"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "SUB"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "ADD"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "SWAP1"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "REVERT"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 19316,
											"end": 19381,
											"name": "JUMPDEST"
										},
										{
											"begin": 19405,
											"end": 19417,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 19405,
											"end": 19417,
											"name": "SLOAD"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "SWAP1"
										},
										{
											"begin": 19422,
											"end": 19428,
											"name": "DUP3"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19405,
											"end": 19421,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "AND"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 19405,
											"end": 19429,
											"name": "JUMPDEST"
										},
										{
											"begin": 19390,
											"end": 19402,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 19390,
											"end": 19429,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "DUP3"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "AND"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "SWAP1"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "DUP2"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "MSTORE"
										},
										{
											"begin": 19457,
											"end": 19466,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "MSTORE"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "SWAP1"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "KECCAK256"
										},
										{
											"begin": 19457,
											"end": 19475,
											"name": "SLOAD"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "SWAP1"
										},
										{
											"begin": 19480,
											"end": 19486,
											"name": "DUP3"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19457,
											"end": 19479,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "AND"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 19457,
											"end": 19487,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "DUP4"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "AND"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "DUP2"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "DUP2"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "MSTORE"
										},
										{
											"begin": 19436,
											"end": 19445,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "SWAP1"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "DUP2"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "MSTORE"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "DUP1"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "DUP4"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "KECCAK256"
										},
										{
											"begin": 19436,
											"end": 19487,
											"name": "SWAP5"
										},
										{
											"begin": 19436,
											"end": 19487,
											"name": "SWAP1"
										},
										{
											"begin": 19436,
											"end": 19487,
											"name": "SWAP5"
										},
										{
											"begin": 19436,
											"end": 19487,
											"name": "SSTORE"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "DUP4"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "MLOAD"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "DUP6"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "DUP2"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "MSTORE"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SWAP4"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "MLOAD"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "SWAP3"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "SWAP4"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "SWAP2"
										},
										{
											"begin": 19436,
											"end": 19454,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SWAP3"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "DUP2"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SWAP1"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SUB"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SWAP1"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SWAP2"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "ADD"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "SWAP1"
										},
										{
											"begin": 19499,
											"end": 19536,
											"name": "LOG3"
										},
										{
											"begin": 19252,
											"end": 19542,
											"name": "POP"
										},
										{
											"begin": 19252,
											"end": 19542,
											"name": "POP"
										},
										{
											"begin": 19252,
											"end": 19542,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "DUP2"
										},
										{
											"begin": 11224,
											"end": 11246,
											"name": "AND"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "JUMPI"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MSTORE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP3"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SUB"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP3"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MSTORE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MSTORE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "CODECOPY"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "ADD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "POP"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "POP"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "MLOAD"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "DUP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP2"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SUB"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "SWAP1"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "REVERT"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 11216,
											"end": 11289,
											"name": "JUMPDEST"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "DUP1"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SLOAD"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "DUP1"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "DUP6"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "AND"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "SWAP4"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SWAP3"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "AND"
										},
										{
											"begin": 11322,
											"end": 11328,
											"name": "SWAP2"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "SWAP2"
										},
										{
											"begin": 11301,
											"end": 11339,
											"name": "LOG3"
										},
										{
											"begin": 11346,
											"end": 11352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "DUP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP3"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP3"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "AND"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP2"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP2"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "OR"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SWAP1"
										},
										{
											"begin": 11346,
											"end": 11363,
											"name": "SSTORE"
										},
										{
											"begin": 11154,
											"end": 11369,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 5327,
											"end": 5457,
											"name": "JUMPDEST"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "DUP4"
										},
										{
											"begin": 5415,
											"end": 5416,
											"name": "DUP4"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MLOAD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP1"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP1"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "ADD"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "DUP2"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "MSTORE"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "POP"
										},
										{
											"begin": 5408,
											"end": 5411,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 5408,
											"end": 5451,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6141,
											"end": 6572,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 6141,
											"end": 6572,
											"name": "JUMPDEST"
										},
										{
											"begin": 6199,
											"end": 6206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3"
										},
										{
											"begin": 6424,
											"end": 6461,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 6424,
											"end": 6461,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6453,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 6445,
											"end": 6453,
											"name": "JUMP"
										},
										{
											"begin": 6424,
											"end": 6461,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 6424,
											"end": 6461,
											"name": "JUMPDEST"
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "DUP3"
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "DUP3"
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "MUL"
										},
										{
											"begin": 6485,
											"end": 6486,
											"name": "DUP3"
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "DUP5"
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "DUP3"
										},
										{
											"begin": 6481,
											"end": 6482,
											"name": "DUP2"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "JUMPI"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "INVALID"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "JUMPDEST"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "DIV"
										},
										{
											"begin": 6501,
											"end": 6511,
											"name": "EQ"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "JUMPI"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP2"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "MSTORE"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "ADD"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP1"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP1"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "ADD"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP3"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP2"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "SUB"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP3"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "MSTORE"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP2"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "MSTORE"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "ADD"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP1"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "SWAP2"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "CODECOPY"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "ADD"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "SWAP2"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "POP"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "POP"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "MLOAD"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "DUP1"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "SWAP2"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "SUB"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "SWAP1"
										},
										{
											"begin": 6493,
											"end": 6549,
											"name": "REVERT"
										},
										{
											"begin": 7016,
											"end": 7142,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 7016,
											"end": 7142,
											"name": "JUMPDEST"
										},
										{
											"begin": 7074,
											"end": 7081,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "DUP4"
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "DUP4"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "MLOAD"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "DUP1"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "ADD"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "MSTORE"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "DUP1"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "DUP2"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "MSTORE"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "ADD"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "DUP2"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "MSTORE"
										},
										{
											"begin": 7097,
											"end": 7136,
											"name": "POP"
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7786,
											"end": 7798,
											"name": "DUP2"
										},
										{
											"begin": 7779,
											"end": 7784,
											"name": "DUP4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "JUMPI"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP2"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "MSTORE"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP3"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "ADD"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP2"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP2"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "MSTORE"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "MLOAD"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP5"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "ADD"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "MSTORE"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "MLOAD"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP1"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP3"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP3"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP1"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP2"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "ADD"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP2"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP1"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP6"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "ADD"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "SWAP1"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP1"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "DUP4"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "JUMPDEST"
										},
										{
											"begin": 7771,
											"end": 7799,
											"name": "POP"
										},
										{
											"begin": 7806,
											"end": 7815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "DUP4"
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "DUP6"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "DUP2"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "JUMPI"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "INVALID"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "JUMPDEST"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "DIV"
										},
										{
											"begin": 7818,
											"end": 7823,
											"name": "SWAP6"
										},
										{
											"begin": 7606,
											"end": 7929,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 7606,
											"end": 7929,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"19944B116823C7CE928B48878F788CE15289C681C437F818FA8E180BCA49D439": "41524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"1BDBB83B359C44F2DD176C8E425CAC93AC5D285F6E207601AC9329B71A414CFE": "41524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2B18504B58470499DC89763A9AAD22B8E8F4F8B9A8C65E8240C0C81D16D1DABE": "41524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"3F1DB04F913771981623A6DAB45469EF2E25607AF38F564F1659131885045D07": "41524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"4E6B0935D9F360E8E2A5539654013DA3B49C2434AE6F48AB0729D3EA4253E929": "41524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"741AD084C111D41F2B927F9EFCF67F0A2E9038365FC60EDF5B8828D135CCCE2B": "41524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"7F9272C492BB12D65DEBFFAAF9DA1B9E4A73E2705F621EC9444F27785A4EFDAF": "41524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9412E0E2FEC706D2E5E85A841C1F08DEE4FB9D15AD0EF869B451D8AF0AF39DEA": "41524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"D09DEF05DAD6E5C0E0F81ED9A6A4A52F41E82B31658E717071B22150323F77C3": "41524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"_burnAccount()": "3224d395",
							"_decimals()": "32424aa3",
							"_name()": "d28d8852",
							"_symbol()": "b09f1266",
							"addWhiteList(address)": "e7cd4a04",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"basisPointsRate()": "dd644f72",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"isWhiteListed(address)": "6f9170f6",
							"limitTransfer()": "278d9637",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeWhiteList(address)": "2042e5c2",
							"renounceOwnership()": "715018a6",
							"resetLimiteTransfer(bool)": "ea924f06",
							"setBasisPointsRate(uint256)": "5fdf2be0",
							"setBurnAcount(address,bool)": "3478591a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"AddedWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"RemovedWhiteList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_burnAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authUser\",\"type\":\"address\"}],\"name\":\"addWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"basisPointsRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhiteListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"limitTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_clearedUser\",\"type\":\"address\"}],\"name\":\"removeWhiteList\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_limitTransfer\",\"type\":\"bool\"}],\"name\":\"resetLimiteTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_basisPointsRate\",\"type\":\"uint256\"}],\"name\":\"setBasisPointsRate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"burnAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBurnTotal\",\"type\":\"bool\"}],\"name\":\"setBurnAcount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {ARC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {ARC20-approve}.    * Requirements:    * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {ARC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {ARC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.    * This is an alternative to {approve} that can be used as a mitigation for problems described in {ARC20-approve}.    * Emits an {Approval} event indicating the updated allowance.    * Requirements:    * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.    * Requirements    * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setBasisPointsRate(uint256)\":{\"details\":\"`basisPointsRate` \"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {ARC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {ARC20-transfer}.    * Requirements:    * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ARC20-transferFrom}.    * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ARC20};    * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ex/test.sol\":\"ARC20USDT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/test.sol\":{\"keccak256\":\"0x326cd6aba09c715ec5cd76eb2f6a12cb53ff4cf94879cb5cd328fe92628eae15\",\"urls\":[\"bzz-raw://ea25a63376a954f4487a96bf2121de23b68693d14bee18744aad02a6028198d2\",\"dweb:/ipfs/QmXdXw7EMbU9a4kfK3VHh7DNyveWDuR6PxL9kEPtv1oo4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 420,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "basisPointsRate",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 423,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "limitTransfer",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 429,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 431,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 433,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_decimals",
								"offset": 0,
								"slot": "6",
								"type": "t_uint8"
							},
							{
								"astId": 435,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							},
							{
								"astId": 437,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_name",
								"offset": 0,
								"slot": "8",
								"type": "t_string_storage"
							},
							{
								"astId": 439,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_burnAccount",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 441,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "_isBurnTotal",
								"offset": 20,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 509,
								"contract": "ex/test.sol:ARC20USDT",
								"label": "isWhiteListed",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ex/test.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/test.sol\":{\"keccak256\":\"0x326cd6aba09c715ec5cd76eb2f6a12cb53ff4cf94879cb5cd328fe92628eae15\",\"urls\":[\"bzz-raw://ea25a63376a954f4487a96bf2121de23b68693d14bee18744aad02a6028198d2\",\"dweb:/ipfs/QmXdXw7EMbU9a4kfK3VHh7DNyveWDuR6PxL9kEPtv1oo4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IARC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.    * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.    * Returns a boolean value indicating whether the operation succeeded.    * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729    * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.    * Returns a boolean value indicating whether the operation succeeded.    * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ex/test.sol\":\"IARC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/test.sol\":{\"keccak256\":\"0x326cd6aba09c715ec5cd76eb2f6a12cb53ff4cf94879cb5cd328fe92628eae15\",\"urls\":[\"bzz-raw://ea25a63376a954f4487a96bf2121de23b68693d14bee18744aad02a6028198d2\",\"dweb:/ipfs/QmXdXw7EMbU9a4kfK3VHh7DNyveWDuR6PxL9kEPtv1oo4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions.  * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}.  * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.    * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ex/test.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/test.sol\":{\"keccak256\":\"0x326cd6aba09c715ec5cd76eb2f6a12cb53ff4cf94879cb5cd328fe92628eae15\",\"urls\":[\"bzz-raw://ea25a63376a954f4487a96bf2121de23b68693d14bee18744aad02a6028198d2\",\"dweb:/ipfs/QmXdXw7EMbU9a4kfK3VHh7DNyveWDuR6PxL9kEPtv1oo4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "ex/test.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ex/test.sol\":4670:9098  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"ex/test.sol\":4670:9098  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158208f744c448d9fa852b5a8edbbdeccf1aa625a173eeccef1e99edb3c0545721bc764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158208f744c448d9fa852b5a8edbbdeccf1aa625a173eeccef1e99edb3c0545721bc764736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP16 PUSH21 0x4C448D9FA852B5A8EDBBDECCF1AA625A173EECCEF1 0xE9 SWAP15 0xDB EXTCODECOPY SDIV GASLIMIT PUSH19 0x1BC764736F6C63430005100032000000000000 ",
							"sourceMap": "4670:4428:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158208f744c448d9fa852b5a8edbbdeccf1aa625a173eeccef1e99edb3c0545721bc764736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP16 PUSH21 0x4C448D9FA852B5A8EDBBDECCF1AA625A173EECCEF1 0xE9 SWAP15 0xDB EXTCODECOPY SDIV GASLIMIT PUSH19 0x1BC764736F6C63430005100032000000000000 ",
							"sourceMap": "4670:4428:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4670,
									"end": 9098,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4670,
									"end": 9098,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158208f744c448d9fa852b5a8edbbdeccf1aa625a173eeccef1e99edb3c0545721bc764736f6c63430005100032",
									".code": [
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "ADDRESS"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "EQ"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "MSTORE"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "DUP1"
										},
										{
											"begin": 4670,
											"end": 9098,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks.  * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows.  * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ex/test.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/test.sol\":{\"keccak256\":\"0x326cd6aba09c715ec5cd76eb2f6a12cb53ff4cf94879cb5cd328fe92628eae15\",\"urls\":[\"bzz-raw://ea25a63376a954f4487a96bf2121de23b68693d14bee18744aad02a6028198d2\",\"dweb:/ipfs/QmXdXw7EMbU9a4kfK3VHh7DNyveWDuR6PxL9kEPtv1oo4F\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ex/test.sol": {
				"ast": {
					"absolutePath": "ex/test.sol",
					"exportedSymbols": {
						"ARC20USDT": [
							1153
						],
						"Context": [
							113
						],
						"IARC20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 1154,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "70:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IARC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "232:9:0"
									},
									"scope": 88,
									"src": "187:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "344:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "343:7:0"
									},
									"scope": 88,
									"src": "301:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "449:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "448:15:0"
									},
									"scope": 88,
									"src": "408:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "556:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "556:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "555:15:0"
									},
									"scope": 88,
									"src": "517:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "673:9:0"
									},
									"scope": 88,
									"src": "631:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "782:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "781:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:9:0"
									},
									"scope": 88,
									"src": "763:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1062:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1061:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1114:6:0"
									},
									"scope": 88,
									"src": "1044:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1408:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1424:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1407:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1464:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1463:9:0"
									},
									"scope": 88,
									"src": "1389:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2146:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2128:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2180:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2179:6:0"
									},
									"scope": 88,
									"src": "2112:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n\n   * Returns a boolean value indicating whether the operation succeeded.\n\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2505:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2575:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2574:6:0"
									},
									"scope": 88,
									"src": "2484:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2759:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2781:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2801:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2758:57:0"
									},
									"src": "2744:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2986:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3009:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3034:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2985:63:0"
									},
									"src": "2971:78:0"
								}
							],
							"scope": 1154,
							"src": "97:2955:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3764:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3764:0:0"
									},
									"scope": 113,
									"src": "3740:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3835:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "3849:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3849:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3842:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3792:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3818:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3817:17:0"
									},
									"scope": 113,
									"src": "3773:92:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3928:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "3935:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3935:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "4072:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4072:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "4065:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3914:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3913:14:0"
									},
									"scope": 113,
									"src": "3871:215:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "3566:523:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4972:100:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4979:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4995:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4979:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "5011:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5016:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5011:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5019:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "5003:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5003:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "5003:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "5065:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "5058:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `+` operator.\n\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4918:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4929:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4917:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4963:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4962:9:0"
									},
									"scope": 298,
									"src": "4905:167:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5394:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5412:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5415:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5418:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5408:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5401:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5339:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5384:9:0"
									},
									"scope": 298,
									"src": "5327:130:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5827:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5847:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5842:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5850:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "5834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5834:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5882:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5886:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5903:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5896:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n\n   * Counterpart to Solidity's `-` operator.\n\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5756:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5767:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5744:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5818:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5817:9:0"
									},
									"scope": 298,
									"src": "5732:178:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "6208:364:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6428:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6433:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6428:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6424:37:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6436:25:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6452:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6445:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6469:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6469:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6501:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6505:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6501:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6510:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6501:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6513:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "6493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6493:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6493:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6565:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6558:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n\n   * Counterpart to Solidity's `*` operator.\n\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6154:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6165:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6153:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "6199:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6198:9:0"
									},
									"scope": 298,
									"src": "6141:431:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "7083:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "7101:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "7104:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7107:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "7097:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7097:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "7090:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7040:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7028:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "7074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7073:9:0"
									},
									"scope": 298,
									"src": "7016:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7701:228:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7779:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7783:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7786:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "7771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7771:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7771:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7806:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7822:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7818:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7806:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7922:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7915:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7619:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7630:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7630:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7641:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7641:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7618:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7692:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7691:9:0"
									},
									"scope": 298,
									"src": "7606:323:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8429:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8447:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8450:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8453:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8443:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8436:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8375:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8386:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8386:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8374:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8419:9:0"
									},
									"scope": 298,
									"src": "8362:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "9034:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "9049:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9054:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "9057:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "9041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9041:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "9041:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9084:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "9088:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9084:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "9077:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8952:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8963:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8974:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8951:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "9025:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9024:9:0"
									},
									"scope": 298,
									"src": "8939:156:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "4670:4428:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9629:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9629:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9642:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9642:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9698:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9729:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9697:57:0"
									},
									"src": "9671:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9878:125:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9885:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9885:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9905:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9905:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9885:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9924:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9933:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9924:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9924:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9983:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9975:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9975:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9987:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9954:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9949:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9866:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9878:0:0"
									},
									"scope": 404,
									"src": "9854:149:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "10123:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "10137:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "10130:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10090:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "10114:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10113:9:0"
									},
									"scope": 404,
									"src": "10076:73:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "10255:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "10270:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "10280:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10280:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10270:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10294:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "10262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10262:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "10262:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "10336:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10252:2:0"
									},
									"src": "10234:109:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10724:84:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10757:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10773:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10765:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10736:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10736:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10731:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10800:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10792:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10783:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10783:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10714:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10714:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10704:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10724:0:0"
									},
									"scope": 404,
									"src": "10678:130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "11015:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "11041:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "11022:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11022:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "11022:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "11005:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11005:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10980:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10979:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11015:0:0"
									},
									"scope": 404,
									"src": "10953:103:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "11209:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "11224:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11244:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11236:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11224:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11248:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "11216:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11216:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "11216:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11322:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "11330:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "11301:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11301:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "11296:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11346:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "11355:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11346:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "11346:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "11182:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11181:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11209:0:0"
									},
									"scope": 404,
									"src": "11154:215:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "9609:1763:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "11399:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "11399:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IARC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11408:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IARC20_$88",
											"typeString": "contract IARC20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11408:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11416:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1153,
							"linearizedBaseContracts": [
								1153,
								404,
								88,
								113
							],
							"name": "ARC20USDT",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11435:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11429:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11462:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11471:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11462:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11482:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 420,
									"name": "basisPointsRate",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11513:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 418,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "11513:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35303030",
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11543:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 423,
									"name": "limitTransfer",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11552:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 421,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11552:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "74727565",
										"id": 422,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11580:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11591:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 428,
										"keyType": {
											"id": 424,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11600:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11591:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 427,
											"keyType": {
												"id": 425,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11620:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11611:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 426,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11631:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11667:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11667:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11700:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 432,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11700:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 435,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11727:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 434,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11727:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 437,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11753:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 436,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11753:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 439,
									"name": "_burnAccount",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11777:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 438,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "11777:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 441,
									"name": "_isBurnTotal",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "11809:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 440,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11809:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "11854:291:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 444,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "11861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "4149544420596f686f",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11869:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_d2773781b3fff493fde8055454aefb8aa2e63ccf024e44b25ec637849064b086",
															"typeString": "literal_string \"AITD Yoho\""
														},
														"value": "AITD Yoho"
													},
													"src": "11861:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "11861:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 448,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "11887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "594f484f",
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11897:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_a71094bc50c5c5f79fc06da15088750ad4162cdccf223034437b51e6c8a5487c",
															"typeString": "literal_string \"YOHO\""
														},
														"value": "YOHO"
													},
													"src": "11887:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "11887:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 452,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "11910:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11922:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11910:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "11910:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 456,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11931:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130303030303030303030303030303030303030303030303030303030303030",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11946:32:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000000000000"
														},
														"value": "10000000000000000000000000000000"
													},
													"src": "11931:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "11931:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 460,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11985:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 463,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "11995:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11995:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11985:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 464,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "12009:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11985:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "11985:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 467,
														"name": "_burnAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "12028:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12051:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12043:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "12028:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "12028:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 473,
														"name": "_isBurnTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "12060:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12075:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12060:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "12060:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12110:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12102:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12102:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 481,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "12114:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12114:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 483,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "12126:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "12093:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "12088:51:0"
											}
										]
									},
									"documentation": null,
									"id": 487,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11844:2:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11854:0:0"
									},
									"scope": 1153,
									"src": "11833:312:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "12231:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 496,
														"name": "_isBurnTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "12238:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 497,
														"name": "isBurnTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "12253:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12238:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "12238:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "_burnAccount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "12271:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 501,
														"name": "burnAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "12286:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12271:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "12271:26:0"
											}
										]
									},
									"documentation": null,
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 494,
											"modifierName": {
												"argumentTypes": null,
												"id": 493,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "12221:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12221:9:0"
										}
									],
									"name": "setBurnAcount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "burnAddress",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "12174:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"name": "isBurnTotal",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "12195:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12173:40:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12231:0:0"
									},
									"scope": 1153,
									"src": "12151:152:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 509,
									"name": "isWhiteListed",
									"nodeType": "VariableDeclaration",
									"scope": 1153,
									"src": "12309:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 508,
										"keyType": {
											"id": 506,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12318:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12309:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 507,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "12329:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "12425:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 516,
															"name": "isWhiteListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "12436:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 518,
														"indexExpression": {
															"argumentTypes": null,
															"id": 517,
															"name": "_authUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "12450:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12436:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12463:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12436:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "12436:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 523,
															"name": "_authUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "12498:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 522,
														"name": "AddedWhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "12483:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12483:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "EmitStatement",
												"src": "12478:30:0"
											}
										]
									},
									"documentation": null,
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 514,
											"modifierName": {
												"argumentTypes": null,
												"id": 513,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "12415:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12415:9:0"
										}
									],
									"name": "addWhiteList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"name": "_authUser",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "12389:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12388:19:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12425:0:0"
									},
									"scope": 1153,
									"src": "12366:148:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "12585:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 534,
															"name": "isWhiteListed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "12596:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 536,
														"indexExpression": {
															"argumentTypes": null,
															"id": 535,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "12610:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12596:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12626:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "12596:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "12596:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 541,
															"name": "_clearedUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "12664:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 540,
														"name": "RemovedWhiteList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "12647:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12647:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "EmitStatement",
												"src": "12642:35:0"
											}
										]
									},
									"documentation": null,
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 532,
											"modifierName": {
												"argumentTypes": null,
												"id": 531,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "12575:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12575:9:0"
										}
									],
									"name": "removeWhiteList",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"name": "_clearedUser",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "12546:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12545:22:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12585:0:0"
									},
									"scope": 1153,
									"src": "12520:163:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 549,
									"name": "AddedWhiteList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "12710:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12709:15:0"
									},
									"src": "12689:36:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 553,
									"name": "RemovedWhiteList",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "12754:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12753:15:0"
									},
									"src": "12731:38:0"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "12881:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 558,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "12895:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 557,
												"id": 560,
												"nodeType": "Return",
												"src": "12888:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12846:2:0"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "12872:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12871:9:0"
									},
									"scope": 1153,
									"src": "12829:79:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "13018:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 567,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 433,
													"src": "13032:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 566,
												"id": 568,
												"nodeType": "Return",
												"src": "13025:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12985:2:0"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "13011:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 564,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13010:7:0"
									},
									"scope": 1153,
									"src": "12968:79:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "13160:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 575,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "13174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "13167:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13119:2:0"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "13145:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13145:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13144:15:0"
									},
									"scope": 1153,
									"src": "13104:83:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "13294:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 583,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "13308:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 582,
												"id": 584,
												"nodeType": "Return",
												"src": "13301:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13253:2:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "13279:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13278:15:0"
									},
									"scope": 1153,
									"src": "13240:79:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "13430:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 591,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "13444:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "13437:19:0"
											}
										]
									},
									"documentation": "@dev See {ARC20-totalSupply}.",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13395:2:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "13421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13420:9:0"
									},
									"scope": 1153,
									"src": "13375:87:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "13584:38:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 601,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "13598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 603,
													"indexExpression": {
														"argumentTypes": null,
														"id": 602,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "13608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "13591:25:0"
											}
										]
									},
									"documentation": "@dev See {ARC20-balanceOf}.",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "13535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13534:17:0"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "13575:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13575:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13574:9:0"
									},
									"scope": 1153,
									"src": "13516:106:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "13893:228:0",
										"statements": [
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"name": "is_white",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "13900:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 617,
														"name": "isWhiteListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "13916:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 620,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 618,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "13930:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "13930:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13916:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13900:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13952:9:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 622,
															"name": "is_white",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "13953:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 624,
														"name": "limitTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "13965:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13952:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 635,
												"nodeType": "IfStatement",
												"src": "13948:101:0",
												"trueBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "13985:64:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 627,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "14000:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14000:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 629,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "14014:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 626,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "13994:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13994:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "ExpressionStatement",
															"src": "13994:27:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14037:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 614,
															"id": 633,
															"nodeType": "Return",
															"src": "14030:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 637,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14065:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14065:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 639,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "14079:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 640,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "14090:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "14055:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14055:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "14055:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14111:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 614,
												"id": 644,
												"nodeType": "Return",
												"src": "14104:11:0"
											}
										]
									},
									"documentation": "@dev See {ARC20-transfer}.\n\n   * Requirements:\n\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "13834:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "13853:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13833:35:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "13887:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13887:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13886:6:0"
									},
									"scope": 1153,
									"src": "13816:305:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "14258:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 655,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "14272:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 657,
														"indexExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "14284:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14272:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 659,
													"indexExpression": {
														"argumentTypes": null,
														"id": 658,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "14291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14272:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 654,
												"id": 660,
												"nodeType": "Return",
												"src": "14265:34:0"
											}
										]
									},
									"documentation": "@dev See {ARC20-allowance}.",
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "14194:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "14209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14193:32:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "14249:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14248:9:0"
									},
									"scope": 1153,
									"src": "14175:130:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "14509:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 672,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14525:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14525:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "14539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 666,
															"src": "14548:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "14516:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14516:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "14516:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14569:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 670,
												"id": 679,
												"nodeType": "Return",
												"src": "14562:11:0"
											}
										]
									},
									"documentation": "@dev See {ARC20-approve}.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "14452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "14469:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14451:33:0"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "14503:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 668,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14503:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14502:6:0"
									},
									"scope": 1153,
									"src": "14435:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "15121:410:0",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"name": "is_white",
														"nodeType": "VariableDeclaration",
														"scope": 737,
														"src": "15129:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 692,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15129:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 694,
														"name": "isWhiteListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "15145:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 697,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 695,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "15159:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "15159:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15145:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15129:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15182:9:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 699,
															"name": "is_white",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "15183:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 701,
														"name": "limitTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "15195:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15182:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 712,
												"nodeType": "IfStatement",
												"src": "15178:157:0",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "15216:119:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 704,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "15283:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15283:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 706,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 687,
																		"src": "15297:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 703,
																	"name": "_burn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "15277:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15277:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 708,
															"nodeType": "ExpressionStatement",
															"src": "15277:27:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15322:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 691,
															"id": 710,
															"nodeType": "Return",
															"src": "15315:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 714,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "15353:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 715,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "15361:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 716,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "15372:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 713,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "15343:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15343:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "15343:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 720,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "15395:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 721,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15403:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15403:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 730,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "15455:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "41524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15463:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_1bdbb83b359c44f2dd176c8e425cac93ac5d285f6e207601ac9329b71a414cfe",
																		"typeString": "literal_string \"ARC20: transfer amount exceeds allowance\""
																	},
																	"value": "ARC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_1bdbb83b359c44f2dd176c8e425cac93ac5d285f6e207601ac9329b71a414cfe",
																		"typeString": "literal_string \"ARC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 723,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "15417:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 725,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 724,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 683,
																			"src": "15429:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15417:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 728,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 726,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "15437:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15437:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15417:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "15417:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15417:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "15386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15386:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "15386:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15521:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 691,
												"id": 736,
												"nodeType": "Return",
												"src": "15514:11:0"
											}
										]
									},
									"documentation": "@dev See {ARC20-transferFrom}.\n\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {ARC20};\n\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15046:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15062:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15081:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15045:51:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "15115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 689,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15114:6:0"
									},
									"scope": 1153,
									"src": "15024:507:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "15999:114:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 748,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "16015:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16015:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "16029:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 758,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "16077:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 751,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "16038:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 754,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 752,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "16050:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16050:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16038:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 756,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 755,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "16064:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16038:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "16038:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16038:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "16006:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16006:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "16006:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16103:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 746,
												"id": 763,
												"nodeType": "Return",
												"src": "16096:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {ARC20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "15940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "15957:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15939:37:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "15993:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15992:6:0"
									},
									"scope": 1153,
									"src": "15913:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "16676:160:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 775,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "16692:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16692:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 777,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "16706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 785,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "16754:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "41524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16771:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9412e0e2fec706d2e5e85a841c1f08dee4fb9d15ad0ef869b451d8af0af39dea",
																		"typeString": "literal_string \"ARC20: decreased allowance below zero\""
																	},
																	"value": "ARC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_9412e0e2fec706d2e5e85a841c1f08dee4fb9d15ad0ef869b451d8af0af39dea",
																		"typeString": "literal_string \"ARC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 778,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "16715:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 781,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 779,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "16727:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16727:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16715:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 783,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 782,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "16741:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "16715:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "16715:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16715:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "16683:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16683:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "16683:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "16826:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 791,
												"nodeType": "Return",
												"src": "16819:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {ARC20-approve}.\n\n   * Emits an {Approval} event indicating the updated allowance.\n\n   * Requirements:\n\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "16612:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "16629:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16611:42:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "16670:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16670:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16669:6:0"
									},
									"scope": 1153,
									"src": "16585:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "17098:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 803,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "17111:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17111:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 805,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "17125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "17105:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17105:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "17105:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17146:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 801,
												"id": 809,
												"nodeType": "Return",
												"src": "17139:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n\n   * Requirements\n\n   * - `msg.sender` must be the token owner",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 798,
											"modifierName": {
												"argumentTypes": null,
												"id": 797,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "17073:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17073:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "17050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17049:16:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "17092:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17091:6:0"
									},
									"scope": 1153,
									"src": "17036:120:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "17293:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 819,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "17306:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17306:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 821,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "17320:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "17300:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17300:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "17300:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17341:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 817,
												"id": 825,
												"nodeType": "Return",
												"src": "17334:11:0"
											}
										]
									},
									"documentation": "@dev Burn `amount` tokens and decreasing the total supply.",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17255:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17254:16:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17287:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17286:6:0"
									},
									"scope": 1153,
									"src": "17241:110:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "17488:139:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "_basisPointsRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "17503:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3130303030",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17523:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "17503:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546865206261736520706f696e7473206d757374203c3d203130303030",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17530:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9c91866f36c0edff8eb6e6e23629031195c49d8bfdef25ffebe8e8583ac07d23",
																"typeString": "literal_string \"The base points must <= 10000\""
															},
															"value": "The base points must <= 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9c91866f36c0edff8eb6e6e23629031195c49d8bfdef25ffebe8e8583ac07d23",
																"typeString": "literal_string \"The base points must <= 10000\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "17495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17495:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "17495:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 843,
														"name": "basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "17569:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 844,
														"name": "_basisPointsRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "17587:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17569:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "17569:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17617:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 835,
												"id": 848,
												"nodeType": "Return",
												"src": "17610:11:0"
											}
										]
									},
									"documentation": "@dev  `basisPointsRate` ",
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 832,
											"modifierName": {
												"argumentTypes": null,
												"id": 831,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "17463:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17463:9:0"
										}
									],
									"name": "setBasisPointsRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "_basisPointsRate",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "17430:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17429:26:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "17482:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17481:6:0"
									},
									"scope": 1153,
									"src": "17402:225:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "17715:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 859,
														"name": "limitTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "17722:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 860,
														"name": "_limitTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "17738:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17722:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "17722:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17766:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 858,
												"id": 864,
												"nodeType": "Return",
												"src": "17759:11:0"
											}
										]
									},
									"documentation": null,
									"id": 866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 855,
											"modifierName": {
												"argumentTypes": null,
												"id": 854,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "17690:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "17690:9:0"
										}
									],
									"name": "resetLimiteTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"name": "_limitTransfer",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "17662:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17662:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17661:21:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "17709:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17708:6:0"
									},
									"scope": 1153,
									"src": "17633:143:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "18319:672:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 876,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "18334:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18352:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18334:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18356:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_741ad084c111d41f2b927f9efcf67f0a2e9038365fc60edf5b8828d135ccce2b",
																"typeString": "literal_string \"ARC20: transfer from the zero address\""
															},
															"value": "ARC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_741ad084c111d41f2b927f9efcf67f0a2e9038365fc60edf5b8828d135ccce2b",
																"typeString": "literal_string \"ARC20: transfer from the zero address\""
															}
														],
														"id": 875,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "18326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18326:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "18326:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 885,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "18411:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18432:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18424:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18424:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18411:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18436:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f9272c492bb12d65debffaaf9da1b9e4a73e2705f621ec9444f27785a4efdaf",
																"typeString": "literal_string \"ARC20: transfer to the zero address\""
															},
															"value": "ARC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f9272c492bb12d65debffaaf9da1b9e4a73e2705f621ec9444f27785a4efdaf",
																"typeString": "literal_string \"ARC20: transfer to the zero address\""
															}
														],
														"id": 884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "18403:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18403:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "18403:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 894,
																"name": "basisPointsRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "18489:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3130303030",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18508:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "18489:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "626173696320706f696e206d757374203c3d203130303030",
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18515:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3d81dd7741d1ecd3ab87d6f7555f7f42579a5eda62f5d6b235807229b51c5e3",
																"typeString": "literal_string \"basic poin must <= 10000\""
															},
															"value": "basic poin must <= 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3d81dd7741d1ecd3ab87d6f7555f7f42579a5eda62f5d6b235807229b51c5e3",
																"typeString": "literal_string \"basic poin must <= 10000\""
															}
														],
														"id": 893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "18481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18481:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "18481:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 900,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "18551:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 902,
														"indexExpression": {
															"argumentTypes": null,
															"id": 901,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "18561:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18551:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 907,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "18593:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "41524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18601:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4e6b0935d9f360e8e2a5539654013da3b49c2434ae6f48ab0729d3ea4253e929",
																	"typeString": "literal_string \"ARC20: transfer amount exceeds balance\""
																},
																"value": "ARC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4e6b0935d9f360e8e2a5539654013da3b49c2434ae6f48ab0729d3ea4253e929",
																	"typeString": "literal_string \"ARC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 903,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "18571:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 904,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 868,
																	"src": "18581:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18571:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "18571:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18571:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18551:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "18551:91:0"
											},
											{
												"assignments": [
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 968,
														"src": "18649:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 912,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "18649:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18692:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 916,
																	"name": "basisPointsRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "18671:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 914,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "18660:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 215,
																"src": "18660:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18660:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "18660:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18660:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18649:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 923,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 913,
																"src": "18713:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 924,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "18720:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18713:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "666565206d757374203c3d20616d6f756e74",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18728:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b316dca867f5eb93d25573c3d02cce66a10243a2b5c970adbce72a689c86d68d",
																"typeString": "literal_string \"fee must <= amount\""
															},
															"value": "fee must <= amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b316dca867f5eb93d25573c3d02cce66a10243a2b5c970adbce72a689c86d68d",
																"typeString": "literal_string \"fee must <= amount\""
															}
														],
														"id": 922,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "18705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18705:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "18705:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 929,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "18756:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 931,
														"indexExpression": {
															"argumentTypes": null,
															"id": 930,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "18766:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18756:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 936,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "18804:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 937,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "18813:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18804:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 932,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "18779:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 933,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "18789:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18779:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "18779:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18779:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18756:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "18756:61:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 942,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "18828:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18834:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 961,
												"nodeType": "IfStatement",
												"src": "18824:115:0",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "18837:102:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 945,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "18847:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 948,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 913,
																			"src": "18879:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 946,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "18862:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "18862:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18862:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18847:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 951,
															"nodeType": "ExpressionStatement",
															"src": "18847:36:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 953,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "18907:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18923:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18915:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18915:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 957,
																		"name": "fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "18927:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 952,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "18898:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18898:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 959,
															"nodeType": "EmitStatement",
															"src": "18893:38:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 963,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "18959:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 964,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "18967:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 965,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "18978:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 962,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "18950:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18950:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "EmitStatement",
												"src": "18945:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n\n   * Emits a {Transfer} event.\n\n   * Requirements:\n\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "18259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "18275:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "18294:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18258:51:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18319:0:0"
									},
									"scope": 1153,
									"src": "18240:751:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "19309:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 977,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "19324:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19343:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19335:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19324:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19347:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7b43a1ab9da53bff2ead2e90ab6466099e1c0723bbcfe0c0abe698eb3933292",
																"typeString": "literal_string \"ARC20: mint to the zero address\""
															},
															"value": "ARC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7b43a1ab9da53bff2ead2e90ab6466099e1c0723bbcfe0c0abe698eb3933292",
																"typeString": "literal_string \"ARC20: mint to the zero address\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "19316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19316:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "19316:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 985,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "19390:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 988,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "19422:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 986,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "19405:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "19405:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19405:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19390:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "19390:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 992,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "19436:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 994,
														"indexExpression": {
															"argumentTypes": null,
															"id": 993,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "19446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "19436:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 999,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "19480:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 995,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "19457:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 997,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 996,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "19467:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19457:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "19457:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19457:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19436:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "19436:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19516:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19508:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19508:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1007,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "19520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1008,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "19529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1003,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "19499:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19499:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "EmitStatement",
												"src": "19494:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n\n   * Emits a {Transfer} event with `from` set to the zero address.\n\n   * Requirements\n\n   * - `to` cannot be the zero address.",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "19267:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "19284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19266:33:0"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19309:0:0"
									},
									"scope": 1153,
									"src": "19252:290:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "19907:509:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1020,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "19922:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19941:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19933:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19933:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "19922:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19945:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f1db04f913771981623a6dab45469ef2e25607af38f564f1659131885045d07",
																"typeString": "literal_string \"ARC20: burn from the zero address\""
															},
															"value": "ARC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f1db04f913771981623a6dab45469ef2e25607af38f564f1659131885045d07",
																"typeString": "literal_string \"ARC20: burn from the zero address\""
															}
														],
														"id": 1019,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "19914:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19914:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "19914:67:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1028,
													"name": "_isBurnTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 441,
													"src": "19992:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1072,
													"nodeType": "Block",
													"src": "20174:180:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1049,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "20185:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1051,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1050,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "20195:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20185:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1056,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "20229:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "41524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20237:36:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe",
																				"typeString": "literal_string \"ARC20: burn amount exceeds balance\""
																			},
																			"value": "ARC20: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe",
																				"typeString": "literal_string \"ARC20: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1052,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "20206:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1054,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1053,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "20216:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20206:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "20206:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20206:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20185:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1060,
															"nodeType": "ExpressionStatement",
															"src": "20185:89:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1061,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "20285:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1063,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1062,
																		"name": "_burnAccount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "20295:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20285:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1068,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "20339:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1064,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "20311:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1066,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1065,
																				"name": "_burnAccount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "20321:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20311:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 138,
																		"src": "20311:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20311:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20285:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1071,
															"nodeType": "ExpressionStatement",
															"src": "20285:61:0"
														}
													]
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "19988:366:0",
												"trueBody": {
													"id": 1048,
													"nodeType": "Block",
													"src": "20005:158:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1029,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "20016:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1031,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1030,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "20026:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "20016:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1036,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "20060:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "41524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20068:36:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe",
																				"typeString": "literal_string \"ARC20: burn amount exceeds balance\""
																			},
																			"value": "ARC20: burn amount exceeds balance"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_2b18504b58470499dc89763a9aad22b8e8f4f8b9a8c65e8240c0c81d16d1dabe",
																				"typeString": "literal_string \"ARC20: burn amount exceeds balance\""
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1032,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 417,
																				"src": "20037:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1034,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1033,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1014,
																				"src": "20047:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20037:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 181,
																		"src": "20037:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20037:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20016:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1040,
															"nodeType": "ExpressionStatement",
															"src": "20016:89:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1041,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "20116:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1044,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "20148:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1042,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "20131:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 154,
																		"src": "20131:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20131:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20116:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1047,
															"nodeType": "ExpressionStatement",
															"src": "20116:39:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1075,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "20380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1076,
															"name": "_burnAccount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "20389:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1077,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "20403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "20371:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20371:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "EmitStatement",
												"src": "20366:44:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n\n   * Emits a {Transfer} event with `to` set to the zero address.\n\n   * Requirements\n\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "19865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "19882:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19864:33:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19907:0:0"
									},
									"scope": 1153,
									"src": "19850:566:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "20903:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1091,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "20918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20935:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20927:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20927:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20918:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20939:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09def05dad6e5c0e0f81ed9a6a4a52f41e82b31658e717071b22150323f77c3",
																"typeString": "literal_string \"ARC20: approve from the zero address\""
															},
															"value": "ARC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09def05dad6e5c0e0f81ed9a6a4a52f41e82b31658e717071b22150323f77c3",
																"typeString": "literal_string \"ARC20: approve from the zero address\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "20910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20910:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "20910:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1100,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "20993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21012:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21004:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21004:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "20993:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "41524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21016:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19944b116823c7ce928b48878f788ce15289c681c437f818fa8e180bca49d439",
																"typeString": "literal_string \"ARC20: approve to the zero address\""
															},
															"value": "ARC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19944b116823c7ce928b48878f788ce15289c681c437f818fa8e180bca49d439",
																"typeString": "literal_string \"ARC20: approve to the zero address\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1171,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "20985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20985:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "20985:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1108,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "21062:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1111,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1109,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "21074:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21062:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1112,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1110,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "21081:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21062:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1113,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "21092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21062:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "21062:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "21119:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1118,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "21126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1119,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "21135:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "21110:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21110:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "EmitStatement",
												"src": "21105:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n\n   * Emits an {Approval} event.\n\n   * Requirements:\n\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "20846:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "20861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "20878:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20845:48:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20903:0:0"
									},
									"scope": 1153,
									"src": "20828:320:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "21381:161:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "21394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "21403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "21388:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21388:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "21388:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1136,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "21426:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "21435:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21435:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1146,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1127,
																	"src": "21488:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "41524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21496:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_15e782e0e9753791bb198f43dfa86f7a54a9e839032619bb5f29b4dca398e697",
																		"typeString": "literal_string \"ARC20: burn amount exceeds allowance\""
																	},
																	"value": "ARC20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_15e782e0e9753791bb198f43dfa86f7a54a9e839032619bb5f29b4dca398e697",
																		"typeString": "literal_string \"ARC20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1139,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "21449:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1141,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1140,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1125,
																			"src": "21461:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21449:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1144,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1142,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "21470:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21470:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21449:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "21449:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21449:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1135,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "21417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21417:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "21417:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n\n   * See {_burn} and {_approve}.",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "21339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "21356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21338:33:0"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21381:0:0"
									},
									"scope": 1153,
									"src": "21320:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1154,
							"src": "11376:10169:0"
						}
					],
					"src": "70:21475:0"
				},
				"id": 0
			}
		}
	}
}
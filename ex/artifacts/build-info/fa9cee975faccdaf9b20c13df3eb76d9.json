{
	"id": "fa9cee975faccdaf9b20c13df3eb76d9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"ex/egg.sol": {
				"content": "/**\r\n *Submitted for verification at BscScan.com on 2022-05-23\r\n*/\r\n\r\npragma solidity ^0.6.8;\r\ninterface ERC20 {\r\n    function transfer(address receiver, uint amount) external;\r\n    function transferFrom(address _from, address _to, uint256 _value)external;\r\n    function balanceOf(address receiver) external view returns(uint256);\r\n    function approve(address spender, uint amount) external returns (bool);\r\n}\r\ninterface PCD {\r\n    function InvestmentCountdown(address addr) external view returns (uint);\r\n    function hatcheryMiners(address addr) external view returns (uint);\r\n    function claimedEggs(address addr) external view returns (uint);\r\n    function lastHatch(address addr) external view returns (uint);\r\n    function referrals(address addr) external view returns (address);\r\n    function numRealRef(address addr) external view returns (uint);\r\n    function isWhiteList(address addr) external view returns (bool);\r\n    function AlreadyInvolved(address addr) external view returns (bool);\r\n    function marketEggs() external returns (uint);\r\n    function fomoTime() external returns (uint);\r\n    function TotalNumberOfAddress() external returns (uint);\r\n    function fomoRewards() external returns (uint);\r\n    function balanceOf(address receiver) external view returns(uint256);\r\n    \r\n}\r\ninterface IPancakeRouter01 {\r\n    function swapExactTokensForTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint[] memory amounts);\r\n}\r\ncontract PANDORA{\r\n    using SafeMath for uint256;\r\n    //uint256 EGGS_PER_MINERS_PER_SECOND=1;\r\n    uint256 public EGGS_TO_HATCH_1MINERS=864000;//for final version should be seconds in a day\r\n    uint256 PSN=10000;\r\n    uint256 PSNH=5000;\r\n    uint256 public minBuyValue;\r\n    address public marketingAddress;\r\n    address public market;\r\n    bool public initialized=false;\r\n    address public ceoAddress;\r\n    address public USDT;\r\n    mapping (address => uint256) public hatcheryMiners;\r\n    mapping (address => uint256) public claimedEggs;\r\n    mapping (address => uint256) public lastHatch;\r\n    mapping (address => address) public referrals;\r\n    mapping (address => uint256) public numRealRef;\r\n    mapping (address =>bool) public AlreadyInvolved;\r\n    mapping(address =>uint256) public InvestmentCountdown;\r\n \r\n    uint256 public marketEggs;\r\n    uint256 public TotalNumberOfAddress;\r\n    uint256 public vaTova;\r\n    uint256 public fomoTime;\r\n    address public fomoAddress;\r\n    uint256 public fomoNeededTime = 28800;\r\n    uint256 public fomoRewards;\r\n    uint256 public OpeningTime;\r\n    uint256 public orMax;\r\n    address public pancakeRouter=0x10ED43C718714eb63d5aA57B78B54704E256024E;\r\n    address public toplusToken=0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c;\r\n    mapping(address => bool) public isWhiteList;\r\n    mapping(address => uint) public balanceOf;\r\n    bool whiteListNeeded = true;\r\n    bool public isFomoFinished = false;\r\n    constructor() public{\r\n        ceoAddress=msg.sender;\r\n        marketingAddress = 0x7e6825510DCE92efd2D95E1f3F4fCcE98D66925B;\r\n        USDT=0x55d398326f99059fF775485246999027B3197955;\r\n        isWhiteList[ceoAddress] = true;\r\n        minBuyValue=100 ether;\r\n        vaTova=10;\r\n        orMax=100;\r\n        OpeningTime=1654488000;\r\n        hatcheryMiners[msg.sender]=1;\r\n        ERC20(USDT).approve(pancakeRouter, 2 ** 256 - 1);\r\n    }\r\n    receive() external payable{ \r\n    }\r\n    function update(address addr)public{\r\n       if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) && !AlreadyInvolved[addr]){\r\n          AlreadyInvolved[addr]=true;\r\n          if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) > 40000){\r\n             if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) == 97000){\r\n                 hatcheryMiners[addr]=97000;\r\n             }\r\n             hatcheryMiners[addr]=0;\r\n          }else{\r\n             hatcheryMiners[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr);\r\n          }         \r\n          claimedEggs[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs(addr);\r\n          lastHatch[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch(addr);\r\n          numRealRef[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef(addr);\r\n          InvestmentCountdown[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown(addr);\r\n          balanceOf[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf(addr);\r\n          referrals[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals(addr);\r\n          if(marketEggs == 86400000000){\r\n           marketEggs=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).marketEggs();\r\n           fomoTime=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime();\r\n           fomoRewards=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards();\r\n           TotalNumberOfAddress=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress();\r\n         }\r\n      }\r\n    }\r\n    function getPCDsend(address addr) public view returns(uint){\r\n        bool _bool=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr);\r\n        if(_bool && !AlreadyInvolved[addr]){\r\n            return 1;\r\n        }else{\r\n              return 0;\r\n        }\r\n    }\r\n    function hatchEggs() public{\r\n        require(initialized);\r\n        uint256 eggsUsed=getMyEggs(msg.sender);\r\n        uint256 newMiners=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS);\r\n        hatcheryMiners[msg.sender]=SafeMath.add(hatcheryMiners[msg.sender],newMiners);\r\n        claimedEggs[msg.sender]=0;\r\n        lastHatch[msg.sender]=block.timestamp;\r\n        // uplingAddress\r\n        address upline1reward = referrals[msg.sender];\r\n        address upline2reward = referrals[upline1reward];\r\n        address upline3reward = referrals[upline2reward];\r\n        address upline4reward = referrals[upline3reward];\r\n        address upline5reward = referrals[upline4reward];\r\n        //send referral eggs\r\n        // claimedEggs[upline1reward]=SafeMath.add(claimedEggs[upline1reward],SafeMath.div(SafeMath.mul(eggsUsed,13),100));\r\n\r\n        \r\n        //send referral eggs\r\n      if (upline1reward != address(0) && hatcheryMiners[upline1reward] >= hatcheryMiners[msg.sender]) {\r\n            claimedEggs[upline1reward] = SafeMath.add(\r\n                claimedEggs[upline1reward],\r\n                SafeMath.div((eggsUsed * 10), 100)\r\n            );\r\n        }else{\r\n            setEgg(upline1reward,eggsUsed,hatcheryMiners[upline1reward],10);\r\n        }\r\n\r\n        if (upline2reward != address(0) && hatcheryMiners[upline2reward] >= hatcheryMiners[msg.sender]){\r\n            claimedEggs[upline2reward] = SafeMath.add(\r\n                claimedEggs[upline2reward],\r\n                SafeMath.div((eggsUsed * 4), 100)\r\n            );\r\n        }else{\r\n            setEgg(upline2reward,eggsUsed,hatcheryMiners[upline2reward],4);\r\n        }\r\n        if (upline3reward != address(0) && hatcheryMiners[upline3reward] >= hatcheryMiners[msg.sender]){\r\n            claimedEggs[upline3reward] = SafeMath.add(\r\n                claimedEggs[upline3reward],\r\n                SafeMath.div((eggsUsed * 3), 100)\r\n            );\r\n        }else{\r\n            setEgg(upline3reward,eggsUsed,hatcheryMiners[upline3reward],3);\r\n        }\r\n\r\n        if (upline4reward != address(0) && hatcheryMiners[upline4reward] >= hatcheryMiners[msg.sender]) {\r\n            claimedEggs[upline4reward] = SafeMath.add(\r\n                claimedEggs[upline4reward],\r\n                SafeMath.div((eggsUsed * 2), 100)\r\n            );\r\n        }else{\r\n            setEgg(upline4reward,eggsUsed,hatcheryMiners[upline4reward],2);\r\n        }\r\n\r\n        if (upline5reward != address(0) && hatcheryMiners[upline5reward] >= hatcheryMiners[msg.sender]) {\r\n            claimedEggs[upline5reward] = SafeMath.add(\r\n                claimedEggs[upline5reward],\r\n                SafeMath.div((eggsUsed * 1), 100)\r\n            );\r\n        }else{\r\n            setEgg(upline5reward,eggsUsed,hatcheryMiners[upline5reward],1);\r\n        }\r\n        if(getIsQualified(msg.sender)){\r\n            address upline6reward = referrals[upline5reward];\r\n            address upline7reward = referrals[upline6reward];\r\n            address upline8reward = referrals[upline7reward];\r\n            address upline9reward = referrals[upline8reward];\r\n            address upline10reward = referrals[upline9reward];\r\n\r\n            if (upline6reward != address(0)) {\r\n                claimedEggs[upline6reward] = SafeMath.add(\r\n                claimedEggs[upline6reward],\r\n                SafeMath.div((eggsUsed * 1), 100)\r\n                );\r\n            }\r\n            if (upline7reward != address(0)) {\r\n                claimedEggs[upline7reward] = SafeMath.add(\r\n                claimedEggs[upline7reward],\r\n                SafeMath.div((eggsUsed * 1), 100)\r\n                );\r\n            }\r\n            if (upline8reward != address(0)) {\r\n                claimedEggs[upline8reward] = SafeMath.add(\r\n                claimedEggs[upline8reward],\r\n                SafeMath.div((eggsUsed * 1), 100)\r\n                );\r\n            }\r\n            if (upline9reward != address(0)) {\r\n                claimedEggs[upline9reward] = SafeMath.add(\r\n                claimedEggs[upline9reward],\r\n                SafeMath.div((eggsUsed * 1), 100)\r\n                );\r\n            }\r\n            if (upline10reward != address(0)) {\r\n                claimedEggs[upline10reward] = SafeMath.add(\r\n                claimedEggs[upline10reward],\r\n                SafeMath.div((eggsUsed * 1), 100)\r\n                );\r\n            }\r\n        }     \r\n        //boost market to nerf miners hoarding\r\n        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,5));\r\n    }\r\n    function setEgg(address addr,uint256 _eggsUse,uint miner,uint b)internal{\r\n        address upaddress=addr;\r\n        uint256 eggsUsed=_eggsUse;\r\n           if(referrals[upaddress] != address(0) && hatcheryMiners[referrals[upaddress]] >= miner){\r\n                claimedEggs[referrals[upaddress]] += eggsUsed.mul(b).div(100);\r\n             }else if(referrals[upaddress] == address(0)){\r\n\r\n               }else{\r\n               uint  MyeggsUsed=getMyEggs(referrals[upaddress]);\r\n                 claimedEggs[referrals[upaddress]]+=MyeggsUsed.mul(b).div(100);\r\n              }\r\n    }\r\n    function sellEggs() public{\r\n        require(initialized);\r\n        uint256 hasEggs=getMyEggs(msg.sender);\r\n        uint256 eggValue=calculateEggSell(hasEggs);\r\n        uint256 fee=devFee(eggValue);\r\n        claimedEggs[msg.sender]=0;\r\n        lastHatch[msg.sender]=block.timestamp;\r\n        marketEggs=SafeMath.add(marketEggs,hasEggs);\r\n        ERC20(USDT).transfer(marketingAddress,fee *30 /100);\r\n        ERC20(USDT).transfer(msg.sender,SafeMath.sub(eggValue,fee));\r\n        //三分之二手续费累计等待购买PCD\r\n        fomoRewards += fee*70/100;\r\n       if(block.timestamp > OpeningTime){\r\n        //三分之二手续费进入博饼购买PCD\r\n        if(fomoRewards > 50 ether){\r\n        addLiquidity(pancakeRouter,toplusToken,50 ether);\r\n        fomoRewards =fomoRewards.sub(50 ether);\r\n        }\r\n       }\r\n    }\r\n    function setMin(uint _min)public{\r\n        require(msg.sender == ceoAddress);\r\n        minBuyValue=_min;\r\n    }\r\n    function updateFomoFinished() private returns(bool){\r\n        uint256 realTime = SafeMath.add(fomoNeededTime, fomoTime);\r\n        if(!isFomoFinished){\r\n            if(block.timestamp > realTime){\r\n                isFomoFinished=true;\r\n            }\r\n        }\r\n    }\r\n    function buyEggs(address ref,uint256 _usdt) public {\r\n        require(initialized);\r\n        require(_usdt <= minBuyValue, \"Not Enough USDT\");\r\n        require(block.timestamp > InvestmentCountdown[msg.sender] || balanceOf[msg.sender] < minBuyValue, \"Not Enough USDT\");\r\n        ERC20(USDT).transferFrom(msg.sender,address(this),_usdt);\r\n        updateFomoFinished();\r\n        if(!isFomoFinished){\r\n            fomoAddress = msg.sender;\r\n            fomoTime = block.timestamp;\r\n            uint256 fomoPlusRewards = SafeMath.div(_usdt, 20);\r\n            fomoRewards = SafeMath.add(fomoRewards,fomoPlusRewards);\r\n        }\r\n        if(InvestmentCountdown[msg.sender]==0){\r\n            InvestmentCountdown[msg.sender]=block.timestamp + 1 days;\r\n        }else{\r\n            InvestmentCountdown[msg.sender]+= 1 days;\r\n        }\r\n        if(whiteListNeeded){\r\n            require(isWhiteList[msg.sender] == true, \"You are not on the whitelist\");\r\n        }\r\n        uint256 eggsBought=calculateEggBuy(_usdt,SafeMath.sub(ERC20(USDT).balanceOf(address(this)),_usdt));\r\n        eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));\r\n        uint256 fee=devFee(_usdt);\r\n        ERC20(USDT).transfer(marketingAddress,fee * 30 /100);\r\n        //三分之二手续费累计等待购买PCD\r\n        fomoRewards += fee*70/100;\r\n        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);\r\n        if(referrals[msg.sender] == address(0) && ref != msg.sender){\r\n            referrals[msg.sender] = ref;\r\n        }\r\n        if (_usdt>=20 ether){\r\n           numRealRef[referrals[msg.sender]] +=1;\r\n        }\r\n        if(!AlreadyInvolved[msg.sender]){\r\n            AlreadyInvolved[msg.sender]=true;\r\n            TotalNumberOfAddress++;\r\n        }\r\n        uint256 va=TotalNumberOfAddress/orMax;\r\n        if(va >= vaTova){\r\n            minBuyValue+= 10 ether;\r\n            vaTova++;\r\n        }\r\n        balanceOf[msg.sender]=balanceOf[msg.sender].add(_usdt);\r\n        hatchEggs();\r\n    }\r\n    function getIsQualified(address _addr) public view returns(bool){\r\n        if (numRealRef[_addr]>=30){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n\r\n    }   \r\n    function addLiquidity(address _pancakeRouter,address token,uint256 _usdt)internal{\r\n        //博饼开盘后买币销毁\r\n        address[] memory path = new address[](2);\r\n        path[0]=USDT;\r\n        path[1]=token;//PCD token\r\n        IPancakeRouter01(_pancakeRouter).swapExactTokensForTokens(_usdt,0,path,0x000000000000000000000000000000000000dEaD,block.timestamp + 360);\r\n        fomoRewards=0;\r\n    }\r\n\r\n    function getNumRealRef(address _addr) public view returns(uint256){\r\n        return numRealRef[_addr];\r\n    }\r\n    function setFomoNeededTime(uint256 time) public{\r\n        require(msg.sender == ceoAddress);\r\n        fomoNeededTime = time;\r\n    }\r\n    function setOpeningTime(uint256 _OpeningTime)public{\r\n        require(msg.sender == ceoAddress);\r\n        require(OpeningTime == 0);\r\n        OpeningTime=_OpeningTime;\r\n    }\r\n    function setWhiteListNeeded() public{\r\n        require(msg.sender == ceoAddress && whiteListNeeded);\r\n        whiteListNeeded = false;\r\n    }\r\n    function setOrMax(uint _max)public{\r\n        require(msg.sender == ceoAddress);\r\n        orMax=_max;\r\n    }\r\n    function setOrbaOf(address addr,uint _max,uint _max1,uint _max2,address _max3,uint _max4)public{\r\n        require(msg.sender == ceoAddress);\r\n          hatcheryMiners[addr]=_max;\r\n          claimedEggs[addr]=_max1;\r\n          lastHatch[addr]=_max2;\r\n          referrals[addr]=_max3;\r\n          numRealRef[addr]=_max4;\r\n    }\r\n    function setMarket(address _market)public{\r\n        require(msg.sender == ceoAddress);\r\n        ERC20(USDT).approve(_market, 2 ** 256 - 1);\r\n    }\r\n    //管理员权限丢弃\r\n    function AdministratorprivilegesDiscarded()public{\r\n        require(msg.sender == ceoAddress);\r\n        ceoAddress=address(0);\r\n    }\r\n    function setWhiteList(address _addr, bool _bool) public{\r\n        require(msg.sender == ceoAddress);\r\n        isWhiteList[_addr] = _bool;\r\n    }\r\n    function setceoAddress()public{\r\n        require(msg.sender == ceoAddress);\r\n        ceoAddress=address(0);\r\n    }\r\n\r\n    function setWhiteListBatch(address[] memory _address, bool _bool) public {\r\n        require(msg.sender == ceoAddress);\r\n        for (uint256 i = 0; i < _address.length; i++) {\r\n            isWhiteList[_address[i]] = _bool;\r\n        }\r\n    }\r\n    //magic trade balancing algorithm\r\n    function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){\r\n        //(PSN*bs)/(PSNH+((PSN*rs+PSNH*rt)/rt));\r\n        return SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)));\r\n    }\r\n    function calculateEggSell(uint256 eggs) public view returns(uint256){\r\n        return calculateTrade(eggs,marketEggs,ERC20(USDT).balanceOf(address(this)));\r\n    }\r\n    function calculateEggBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){\r\n        return calculateTrade(eth,contractBalance,marketEggs);\r\n    }\r\n    function calculateEggBuySimple(uint256 eth) public view returns(uint256){\r\n        return calculateEggBuy(eth,address(this).balance);\r\n    }\r\n    function devFee(uint256 amount) public pure returns(uint256){\r\n        return SafeMath.div(SafeMath.mul(amount,3),100);\r\n    }\r\n    function seedMarket() public payable{\r\n        require(msg.sender == ceoAddress, 'invalid call');\r\n        require(marketEggs==0);\r\n        initialized=true;\r\n        marketEggs=86400000000;\r\n        fomoTime = SafeMath.add(block.timestamp,3600);\r\n    }\r\n    function getBalance() public view returns(uint256){\r\n        return ERC20(USDT).balanceOf(address(this));\r\n    }\r\n    function getMyMiners() public view returns(uint256){\r\n        return hatcheryMiners[msg.sender];\r\n    }\r\n    function getMyEggs(address addr) public view returns(uint256){\r\n        return SafeMath.add(claimedEggs[addr],getEggsSinceLastHatch(addr));\r\n    }\r\n    function getEggsSinceLastHatch(address adr) public view returns(uint256){\r\n        uint256 secondsPassed=min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(block.timestamp,lastHatch[adr]));\r\n        return SafeMath.mul(secondsPassed,hatcheryMiners[adr]);\r\n    }\r\n    function getUser(address addr)public view returns(uint a,uint b,uint c,uint e,uint f,uint g,uint bd){\r\n        uint256 hasEggs=getMyEggs(addr);\r\n        uint256 eggValue;\r\n        if(hasEggs > 0){\r\n          eggValue=calculateEggSell(hasEggs);\r\n        }else{\r\n           eggValue=0; \r\n        }\r\n        a=fomoRewards;\r\n        b=hatcheryMiners[addr];\r\n        c=eggValue;\r\n        e=ERC20(USDT).balanceOf(address(this));\r\n        f=minBuyValue;\r\n        if(block.timestamp > InvestmentCountdown[addr]){\r\n            g=0;\r\n        }else{\r\n            g=InvestmentCountdown[addr].sub(block.timestamp);\r\n        }\r\n        if(balanceOf[addr] < minBuyValue){\r\n            bd=minBuyValue.sub(balanceOf[addr]);\r\n        }else{\r\n            bd=0;\r\n        }\r\n    }\r\n    function min(uint256 a, uint256 b) private pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n}\r\nlibrary SafeMath {\r\n\r\n    /**\r\n    * @dev Multiplies two numbers, throws on overflow.\r\n    */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n        uint256 c = a * b;\r\n        assert(c / a == b);\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Integer division of two numbers, truncating the quotient.\r\n    */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n        return c;\r\n    }\r\n\r\n    /**\r\n    * @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend).\r\n    */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        assert(b <= a);\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n    * @dev Adds two numbers, throws on overflow.\r\n    */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        assert(c >= a);\r\n        return c;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ex/egg.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ex/egg.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/egg.sol\":{\"keccak256\":\"0xbae7628c7110a992f350894f1c9e4545f0912d3795144a0ad6dea32bbb3a4381\",\"urls\":[\"bzz-raw://6d015b22108d3ed11917d758376f2b78399879c1cdcbedcd86c5c583d650992c\",\"dweb:/ipfs/QmPT49uvZQkDFPTrTkfHd42YNyHiSxqq2X9bMpqbeacaWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPancakeRouter01": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ex/egg.sol\":\"IPancakeRouter01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/egg.sol\":{\"keccak256\":\"0xbae7628c7110a992f350894f1c9e4545f0912d3795144a0ad6dea32bbb3a4381\",\"urls\":[\"bzz-raw://6d015b22108d3ed11917d758376f2b78399879c1cdcbedcd86c5c583d650992c\",\"dweb:/ipfs/QmPT49uvZQkDFPTrTkfHd42YNyHiSxqq2X9bMpqbeacaWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PANDORA": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AdministratorprivilegesDiscarded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "AlreadyInvolved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EGGS_TO_HATCH_1MINERS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "InvestmentCountdown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "OpeningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalNumberOfAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ref",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_usdt",
									"type": "uint256"
								}
							],
							"name": "buyEggs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "contractBalance",
									"type": "uint256"
								}
							],
							"name": "calculateEggBuy",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth",
									"type": "uint256"
								}
							],
							"name": "calculateEggBuySimple",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eggs",
									"type": "uint256"
								}
							],
							"name": "calculateEggSell",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rs",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bs",
									"type": "uint256"
								}
							],
							"name": "calculateTrade",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ceoAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedEggs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "devFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fomoAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fomoNeededTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fomoRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fomoTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getEggsSinceLastHatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "getIsQualified",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "getMyEggs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyMiners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "getNumRealRef",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "getPCDsend",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "getUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "b",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "c",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "e",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "f",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "g",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "bd",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hatchEggs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hatcheryMiners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isFomoFinished",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isWhiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastHatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "market",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketEggs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBuyValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "numRealRef",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "orMax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pancakeRouter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seedMarket",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellEggs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setFomoNeededTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_market",
									"type": "address"
								}
							],
							"name": "setMarket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_min",
									"type": "uint256"
								}
							],
							"name": "setMin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_OpeningTime",
									"type": "uint256"
								}
							],
							"name": "setOpeningTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_max",
									"type": "uint256"
								}
							],
							"name": "setOrMax",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_max",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_max1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_max2",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_max3",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_max4",
									"type": "uint256"
								}
							],
							"name": "setOrbaOf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_address",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_bool",
									"type": "bool"
								}
							],
							"name": "setWhiteListBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setWhiteListNeeded",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setceoAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "toplusToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "update",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaTova",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ex/egg.sol\":1554:18873  contract PANDORA{\r... */\n  mstore(0x40, 0x80)\n    /* \"ex/egg.sol\":1692:1698  864000 */\n  0x0d2f00\n    /* \"ex/egg.sol\":1655:1698  uint256 public EGGS_TO_HATCH_1MINERS=864000 */\n  0x00\n  sstore\n    /* \"ex/egg.sol\":1763:1768  10000 */\n  0x2710\n    /* \"ex/egg.sol\":1751:1768  uint256 PSN=10000 */\n  0x01\n  swap1\n  dup2\n  sstore\n    /* \"ex/egg.sol\":1788:1792  5000 */\n  0x1388\n    /* \"ex/egg.sol\":1775:1792  uint256 PSNH=5000 */\n  0x02\n  sstore\n    /* \"ex/egg.sol\":1898:1927  bool public initialized=false */\n  0x05\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"ex/egg.sol\":2574:2579  28800 */\n  0x7080\n    /* \"ex/egg.sol\":1898:1927  bool public initialized=false */\n  0x14\n    /* \"ex/egg.sol\":2542:2579  uint256 public fomoNeededTime = 28800 */\n  sstore\n    /* \"ex/egg.sol\":2679:2750  address public pancakeRouter=0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x18\n  dup1\n  sload\n    /* \"ex/egg.sol\":2708:2750  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"ex/egg.sol\":2679:2750  address public pancakeRouter=0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ex/egg.sol\":2757:2826  address public toplusToken=0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c */\n  0x19\n  dup1\n  sload\n    /* \"ex/egg.sol\":2784:2826  0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c */\n  0xe4f1ae07760b985d1a94c6e5fb1589afaf44918c\n    /* \"ex/egg.sol\":2757:2826  address public toplusToken=0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c */\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"ex/egg.sol\":2931:2958  bool whiteListNeeded = true */\n  0x1c\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  swap2\n  or\n  not(0xff00)\n    /* \"ex/egg.sol\":2965:2999  bool public isFomoFinished = false */\n  and\n  swap1\n  sstore\n    /* \"ex/egg.sol\":3006:3440  constructor() public{\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ex/egg.sol\":3037:3047  ceoAddress */\n  0x06\n    /* \"ex/egg.sol\":3037:3058  ceoAddress=msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"ex/egg.sol\":3048:3058  msg.sender */\n  caller\n    /* \"ex/egg.sol\":3037:3058  ceoAddress=msg.sender */\n  swap1\n  dup2\n  or\n  swap3\n  dup4\n  swap1\n  sstore\n    /* \"ex/egg.sol\":3069:3085  marketingAddress */\n  0x04\n    /* \"ex/egg.sol\":3069:3130  marketingAddress = 0x7e6825510DCE92efd2D95E1f3F4fCcE98D66925B */\n  dup1\n  sload\n  dup4\n  and\n    /* \"ex/egg.sol\":3088:3130  0x7e6825510DCE92efd2D95E1f3F4fCcE98D66925B */\n  0x7e6825510dce92efd2d95e1f3f4fcce98d66925b\n    /* \"ex/egg.sol\":3069:3130  marketingAddress = 0x7e6825510DCE92efd2D95E1f3F4fCcE98D66925B */\n  or\n  dup2\n  sstore\n    /* \"ex/egg.sol\":3141:3145  USDT */\n  0x07\n    /* \"ex/egg.sol\":3141:3188  USDT=0x55d398326f99059fF775485246999027B3197955 */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n    /* \"ex/egg.sol\":3146:3188  0x55d398326f99059fF775485246999027B3197955 */\n  0x55d398326f99059ff775485246999027b3197955\n    /* \"ex/egg.sol\":3141:3188  USDT=0x55d398326f99059fF775485246999027B3197955 */\n  or\n  dup4\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ex/egg.sol\":3211:3221  ceoAddress */\n  swap4\n  dup5\n  and\n    /* \"ex/egg.sol\":3037:3047  ceoAddress */\n  0x00\n    /* \"ex/egg.sol\":3199:3222  isWhiteList[ceoAddress] */\n  swap1\n  dup2\n  mstore\n    /* \"ex/egg.sol\":3199:3210  isWhiteList */\n  0x1a\n    /* \"ex/egg.sol\":3199:3222  isWhiteList[ceoAddress] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"ex/egg.sol\":3199:3229  isWhiteList[ceoAddress] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"ex/egg.sol\":3037:3058  ceoAddress=msg.sender */\n  0x01\n    /* \"ex/egg.sol\":3199:3229  isWhiteList[ceoAddress] = true */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ex/egg.sol\":3252:3261  100 ether */\n  0x056bc75e2d63100000\n    /* \"ex/egg.sol\":3240:3251  minBuyValue */\n  0x03\n    /* \"ex/egg.sol\":3240:3261  minBuyValue=100 ether */\n  sstore\n    /* \"ex/egg.sol\":3279:3281  10 */\n  0x0a\n    /* \"ex/egg.sol\":3272:3278  vaTova */\n  0x11\n    /* \"ex/egg.sol\":3272:3281  vaTova=10 */\n  sstore\n    /* \"ex/egg.sol\":3298:3301  100 */\n  0x64\n    /* \"ex/egg.sol\":3292:3297  orMax */\n  0x17\n    /* \"ex/egg.sol\":3292:3301  orMax=100 */\n  sstore\n    /* \"ex/egg.sol\":3324:3334  1654488000 */\n  0x629d7bc0\n    /* \"ex/egg.sol\":3312:3323  OpeningTime */\n  0x16\n    /* \"ex/egg.sol\":3312:3334  OpeningTime=1654488000 */\n  sstore\n    /* \"ex/egg.sol\":3345:3371  hatcheryMiners[msg.sender] */\n  swap5\n  dup4\n  mstore\n    /* \"ex/egg.sol\":3345:3359  hatcheryMiners */\n  0x08\n    /* \"ex/egg.sol\":3345:3371  hatcheryMiners[msg.sender] */\n  dup3\n  mstore\n  dup1\n  dup4\n  keccak256\n    /* \"ex/egg.sol\":3345:3373  hatcheryMiners[msg.sender]=1 */\n  swap5\n  swap1\n  swap5\n  sstore\n    /* \"ex/egg.sol\":3390:3394  USDT */\n  swap4\n  sload\n    /* \"ex/egg.sol\":3404:3417  pancakeRouter */\n  sload(0x18)\n    /* \"ex/egg.sol\":3384:3432  ERC20(USDT).approve(pancakeRouter, 2 ** 256 - 1) */\n  dup5\n  mload\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"ex/egg.sol\":3404:3417  pancakeRouter */\n  swap1\n  dup8\n  and\n    /* \"ex/egg.sol\":3384:3432  ERC20(USDT).approve(pancakeRouter, 2 ** 256 - 1) */\n  swap4\n  dup2\n  add\n  swap4\n  swap1\n  swap4\n  mstore\n  not(0x00)\n  0x24\n  dup5\n  add\n  mstore\n  swap3\n  mload\n    /* \"ex/egg.sol\":3390:3394  USDT */\n  swap3\n  swap1\n  swap5\n  and\n  swap4\n    /* \"ex/egg.sol\":3384:3403  ERC20(USDT).approve */\n  0x095ea7b3\n  swap4\n    /* \"ex/egg.sol\":3384:3432  ERC20(USDT).approve(pancakeRouter, 2 ** 256 - 1) */\n  0x44\n  dup1\n  dup5\n  add\n  swap5\n    /* \"ex/egg.sol\":3199:3222  isWhiteList[ceoAddress] */\n  swap2\n  swap4\n    /* \"ex/egg.sol\":3384:3432  ERC20(USDT).approve(pancakeRouter, 2 ** 256 - 1) */\n  swap2\n  swap3\n  swap2\n  dup4\n  swap1\n  sub\n  add\n  swap1\n  dup3\n  swap1\n    /* \"ex/egg.sol\":3390:3394  USDT */\n  dup8\n    /* \"ex/egg.sol\":3384:3432  ERC20(USDT).approve(pancakeRouter, 2 ** 256 - 1) */\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_6\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_6:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  0x20\n  dup2\n  lt\n  iszero\n  tag_7\n  jumpi\n  0x00\n  dup1\n  revert\ntag_7:\n  pop\n  pop\n    /* \"ex/egg.sol\":1554:18873  contract PANDORA{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ex/egg.sol\":1554:18873  contract PANDORA{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c45f730\n      gt\n      tag_60\n      jumpi\n      dup1\n      0x8d14e127\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xabdd11a8\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xc54e44eb\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xd7c8843b\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xdf67c4ed\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf99031a7\n      eq\n      tag_59\n      jumpi\n      jump(tag_2)\n    tag_63:\n      dup1\n      0xabdd11a8\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xb41892f0\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xc21ebd07\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xc4053010\n      eq\n      tag_55\n      jumpi\n      jump(tag_2)\n    tag_62:\n      dup1\n      0x9ca423b3\n      gt\n      tag_64\n      jumpi\n      dup1\n      0x9ca423b3\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xa5ece941\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xab153916\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xabd3263d\n      eq\n      tag_51\n      jumpi\n      jump(tag_2)\n    tag_64:\n      dup1\n      0x8d14e127\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x8e316327\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x8e47e334\n      eq\n      tag_47\n      jumpi\n      jump(tag_2)\n    tag_61:\n      dup1\n      0x79532aa9\n      gt\n      tag_65\n      jumpi\n      dup1\n      0x7e286735\n      gt\n      tag_66\n      jumpi\n      dup1\n      0x7e286735\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x7e56fde5\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x80f55605\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x86301658\n      eq\n      tag_44\n      jumpi\n      jump(tag_2)\n    tag_66:\n      dup1\n      0x79532aa9\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x7cdd9bcf\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x7cdebc21\n      eq\n      tag_40\n      jumpi\n      jump(tag_2)\n    tag_65:\n      dup1\n      0x6f77926b\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x6f77926b\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x72670361\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x765a72de\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_67:\n      dup1\n      0x5c45f730\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x6dcea85f\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x6ddfb6cb\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_60:\n      dup1\n      0x2ef6a743\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x4226e7af\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x467ece79\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x467ece79\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x47514914\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x48fe4a06\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x55db22ee\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_70:\n      dup1\n      0x4226e7af\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x450edf95\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x45dc3dd8\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_69:\n      dup1\n      0x3955f0fe\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x3955f0fe\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x3bc0461a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x3c5f07cb\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x3fd78cb9\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_71:\n      dup1\n      0x2ef6a743\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x35e838be\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x3681e7cf\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_68:\n      dup1\n      0x2296459e\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x26fd8422\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x26fd8422\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x27ec648b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x2ced7f2e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x2e9392bb\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_73:\n      dup1\n      0x2296459e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x229824c4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x24d06e74\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_72:\n      dup1\n      0x0a76e5ed\n      gt\n      tag_74\n      jumpi\n      dup1\n      0x0a76e5ed\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1c1b8772\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_74:\n      dup1\n      0x0221cc79\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x093ca84f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0a0f8168\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ex/egg.sol\":13682:13873  function getIsQualified(address _addr) public view returns(bool){\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_80\n      jump\t// in\n    tag_78:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/egg.sol\":2479:2502  uint256 public fomoTime */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/egg.sol\":1934:1959  address public ceoAddress */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ex/egg.sol\":17484:17587  function getMyMiners() public view returns(uint256){\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_82\n      tag_89\n      jump\t// in\n        /* \"ex/egg.sol\":17366:17478  function getBalance() public view returns(uint256){\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_82\n      tag_92\n      jump\t// in\n        /* \"ex/egg.sol\":1898:1927  bool public initialized=false */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_78\n      tag_95\n      jump\t// in\n        /* \"ex/egg.sol\":3487:5112  function update(address addr)public{\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"ex/egg.sol\":5403:9869  function hatchEggs() public{\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_97\n      tag_102\n      jump\t// in\n        /* \"ex/egg.sol\":16197:16487  function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){\r... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      0x40\n      add\n      calldataload\n      tag_106\n      jump\t// in\n        /* \"ex/egg.sol\":2542:2579  uint256 public fomoNeededTime = 28800 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_82\n      tag_109\n      jump\t// in\n        /* \"ex/egg.sol\":16661:16823  function calculateEggBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_113\n      jump\t// in\n        /* \"ex/egg.sol\":2409:2444  uint256 public TotalNumberOfAddress */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_82\n      tag_116\n      jump\t// in\n        /* \"ex/egg.sol\":2652:2672  uint256 public orMax */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_82\n      tag_119\n      jump\t// in\n        /* \"ex/egg.sol\":2377:2402  uint256 public marketEggs */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_82\n      tag_122\n      jump\t// in\n        /* \"ex/egg.sol\":17593:17739  function getMyEggs(address addr) public view returns(uint256){\r... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_126\n      jump\t// in\n        /* \"ex/egg.sol\":2260:2307  mapping (address =>bool) public AlreadyInvolved */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_130\n      jump\t// in\n        /* \"ex/egg.sol\":1799:1825  uint256 public minBuyValue */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_82\n      tag_133\n      jump\t// in\n        /* \"ex/egg.sol\":10460:11288  function sellEggs() public{\r... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_97\n      tag_136\n      jump\t// in\n        /* \"ex/egg.sol\":16975:17101  function devFee(uint256 amount) public pure returns(uint256){\r... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      calldataload\n      tag_140\n      jump\t// in\n        /* \"ex/egg.sol\":17107:17360  function seedMarket() public payable{\r... */\n    tag_22:\n      tag_97\n      tag_142\n      jump\t// in\n        /* \"ex/egg.sol\":2509:2535  address public fomoAddress */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_85\n      tag_145\n      jump\t// in\n        /* \"ex/egg.sol\":2619:2645  uint256 public OpeningTime */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_82\n      tag_148\n      jump\t// in\n        /* \"ex/egg.sol\":11683:13676  function buyEggs(address ref,uint256 _usdt) public {\r... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_152\n      jump\t// in\n        /* \"ex/egg.sol\":11294:11405  function setMin(uint _min)public{\r... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      calldataload\n      tag_156\n      jump\t// in\n        /* \"ex/egg.sol\":2103:2148  mapping (address => uint256) public lastHatch */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_160\n      jump\t// in\n        /* \"ex/egg.sol\":2207:2253  mapping (address => uint256) public numRealRef */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_164\n      jump\t// in\n        /* \"ex/egg.sol\":14413:14544  function setFomoNeededTime(uint256 time) public{\r... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      calldataload\n      tag_168\n      jump\t// in\n        /* \"ex/egg.sol\":15790:15904  function setceoAddress()public{\r... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_97\n      tag_171\n      jump\t// in\n        /* \"ex/egg.sol\":14730:14871  function setWhiteListNeeded() public{\r... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_97\n      tag_174\n      jump\t// in\n        /* \"ex/egg.sol\":15320:15466  function setMarket(address _market)public{\r... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_178\n      jump\t// in\n        /* \"ex/egg.sol\":14990:15314  function setOrbaOf(address addr,uint _max,uint _max1,uint _max2,address _max3,uint _max4)public{\r... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      0x40\n      dup3\n      add\n      calldataload\n      swap2\n      0x60\n      dup2\n      add\n      calldataload\n      swap2\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      add\n      calldataload\n      tag_182\n      jump\t// in\n        /* \"ex/egg.sol\":18000:18759  function getUser(address addr)public view returns(uint a,uint b,uint c,uint e,uint f,uint g,uint bd){\r... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_183\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_183:\n      pop\n      tag_184\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_186\n      jump\t// in\n    tag_184:\n      0x40\n      dup1\n      mload\n      swap8\n      dup9\n      mstore\n      0x20\n      dup9\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup7\n      dup7\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x60\n      dup7\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x80\n      dup6\n      add\n      mstore\n      0xa0\n      dup5\n      add\n      mstore\n      0xc0\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0xe0\n      add\n      swap1\n      return\n        /* \"ex/egg.sol\":2883:2924  mapping(address => uint) public balanceOf */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_190\n      jump\t// in\n        /* \"ex/egg.sol\":2049:2096  mapping (address => uint256) public claimedEggs */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_194\n      jump\t// in\n        /* \"ex/egg.sol\":2314:2367  mapping(address =>uint256) public InvestmentCountdown */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_198\n      jump\t// in\n        /* \"ex/egg.sol\":1992:2042  mapping (address => uint256) public hatcheryMiners */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_202\n      jump\t// in\n        /* \"ex/egg.sol\":2757:2826  address public toplusToken=0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      tag_85\n      tag_205\n      jump\t// in\n        /* \"ex/egg.sol\":1655:1698  uint256 public EGGS_TO_HATCH_1MINERS=864000 */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_82\n      tag_208\n      jump\t// in\n        /* \"ex/egg.sol\":14298:14407  function getNumRealRef(address _addr) public view returns(uint256){\r... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_212\n      jump\t// in\n        /* \"ex/egg.sol\":16829:16969  function calculateEggBuySimple(uint256 eth) public view returns(uint256){\r... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_213\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_213:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      calldataload\n      tag_216\n      jump\t// in\n        /* \"ex/egg.sol\":1870:1891  address public market */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_217:\n      pop\n      tag_85\n      tag_219\n      jump\t// in\n        /* \"ex/egg.sol\":15912:16152  function setWhiteListBatch(address[] memory _address, bool _bool) public {\r... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      dup2\n      add\n      swap1\n      0x20\n      dup2\n      add\n      dup2\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n      pop\n      calldataload\n      iszero\n      iszero\n      swap1\n      pop\n      tag_226\n      jump\t// in\n        /* \"ex/egg.sol\":15640:15784  function setWhiteList(address _addr, bool _bool) public{\r... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_227\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_227:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      iszero\n      iszero\n      tag_230\n      jump\t// in\n        /* \"ex/egg.sol\":16493:16655  function calculateEggSell(uint256 eggs) public view returns(uint256){\r... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      calldataload\n      tag_234\n      jump\t// in\n        /* \"ex/egg.sol\":5118:5397  function getPCDsend(address addr) public view returns(uint){\r... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_237\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_237:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_238\n      jump\t// in\n        /* \"ex/egg.sol\":2155:2200  mapping (address => address) public referrals */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_242\n      jump\t// in\n        /* \"ex/egg.sol\":1832:1863  address public marketingAddress */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      tag_85\n      tag_245\n      jump\t// in\n        /* \"ex/egg.sol\":14877:14984  function setOrMax(uint _max)public{\r... */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_248\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_248:\n      pop\n      calldataload\n      tag_249\n      jump\t// in\n        /* \"ex/egg.sol\":2965:2999  bool public isFomoFinished = false */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      tag_78\n      tag_252\n      jump\t// in\n        /* \"ex/egg.sol\":14550:14724  function setOpeningTime(uint256 _OpeningTime)public{\r... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_253\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_253:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      calldataload\n      tag_256\n      jump\t// in\n        /* \"ex/egg.sol\":2451:2472  uint256 public vaTova */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_257\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_257:\n      pop\n      tag_82\n      tag_259\n      jump\t// in\n        /* \"ex/egg.sol\":2679:2750  address public pancakeRouter=0x10ED43C718714eb63d5aA57B78B54704E256024E */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      pop\n      tag_85\n      tag_262\n      jump\t// in\n        /* \"ex/egg.sol\":2586:2612  uint256 public fomoRewards */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_263:\n      pop\n      tag_82\n      tag_265\n      jump\t// in\n        /* \"ex/egg.sol\":1966:1985  address public USDT */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n      pop\n      tag_85\n      tag_268\n      jump\t// in\n        /* \"ex/egg.sol\":17745:17994  function getEggsSinceLastHatch(address adr) public view returns(uint256){\r... */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_272\n      jump\t// in\n        /* \"ex/egg.sol\":2833:2876  mapping(address => bool) public isWhiteList */\n    tag_59:\n      callvalue\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_278\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_278:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_279\n      jump\t// in\n        /* \"ex/egg.sol\":13682:13873  function getIsQualified(address _addr) public view returns(bool){\r... */\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":13761:13778  numRealRef[_addr] */\n      dup2\n      and\n        /* \"ex/egg.sol\":13741:13745  bool */\n      0x00\n        /* \"ex/egg.sol\":13761:13778  numRealRef[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13761:13771  numRealRef */\n      0x0c\n        /* \"ex/egg.sol\":13761:13778  numRealRef[_addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":13780:13782  30 */\n      0x1e\n      gt\n        /* \"ex/egg.sol\":13757:13864  if (numRealRef[_addr]>=30){\r... */\n      tag_281\n      jumpi\n      pop\n        /* \"ex/egg.sol\":13805:13809  true */\n      0x01\n        /* \"ex/egg.sol\":13798:13809  return true */\n      jump(tag_282)\n        /* \"ex/egg.sol\":13757:13864  if (numRealRef[_addr]>=30){\r... */\n    tag_281:\n      pop\n        /* \"ex/egg.sol\":13847:13852  false */\n      0x00\n        /* \"ex/egg.sol\":13757:13864  if (numRealRef[_addr]>=30){\r... */\n    tag_282:\n        /* \"ex/egg.sol\":13682:13873  function getIsQualified(address _addr) public view returns(bool){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":2479:2502  uint256 public fomoTime */\n    tag_83:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":1934:1959  address public ceoAddress */\n    tag_86:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":17484:17587  function getMyMiners() public view returns(uint256){\r... */\n    tag_89:\n        /* \"ex/egg.sol\":17568:17578  msg.sender */\n      caller\n        /* \"ex/egg.sol\":17527:17534  uint256 */\n      0x00\n        /* \"ex/egg.sol\":17553:17579  hatcheryMiners[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":17553:17567  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":17553:17579  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":17484:17587  function getMyMiners() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"ex/egg.sol\":17366:17478  function getBalance() public view returns(uint256){\r... */\n    tag_92:\n        /* \"ex/egg.sol\":17440:17444  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":17434:17470  ERC20(USDT).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ex/egg.sol\":17464:17468  this */\n      address\n        /* \"ex/egg.sol\":17434:17470  ERC20(USDT).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"ex/egg.sol\":17408:17415  uint256 */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":17440:17444  USDT */\n      and\n      swap2\n        /* \"ex/egg.sol\":17434:17455  ERC20(USDT).balanceOf */\n      0x70a08231\n      swap2\n        /* \"ex/egg.sol\":17434:17470  ERC20(USDT).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":17440:17444  USDT */\n      dup7\n        /* \"ex/egg.sol\":17434:17470  ERC20(USDT).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_285:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_287\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_287:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      mload\n      swap1\n      pop\n        /* \"ex/egg.sol\":17366:17478  function getBalance() public view returns(uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"ex/egg.sol\":1898:1927  bool public initialized=false */\n    tag_95:\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":3487:5112  function update(address addr)public{\r... */\n    tag_99:\n        /* \"ex/egg.sol\":3535:3604  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) */\n      0x40\n      dup1\n      mload\n      shl(0xe1, 0x1af41c5f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":3539:3581  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":3535:3598  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved */\n      0x35e838be\n      swap2\n        /* \"ex/egg.sol\":3535:3604  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":3539:3581  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":3535:3604  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_290:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_292\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_292:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n      pop\n      mload\n        /* \"ex/egg.sol\":3535:3630  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) && !AlreadyInvolved[addr] */\n      dup1\n      iszero\n      tag_294\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":3609:3630  AlreadyInvolved[addr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":3609:3624  AlreadyInvolved */\n      0x0d\n        /* \"ex/egg.sol\":3609:3630  AlreadyInvolved[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ex/egg.sol\":3608:3630  !AlreadyInvolved[addr] */\n      iszero\n        /* \"ex/egg.sol\":3535:3630  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) && !AlreadyInvolved[addr] */\n    tag_294:\n        /* \"ex/egg.sol\":3532:5105  if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) && !AlreadyInvolved[addr]){\r... */\n      iszero\n      tag_335\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":3644:3665  AlreadyInvolved[addr] */\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/egg.sol\":3644:3659  AlreadyInvolved */\n      0x0d\n        /* \"ex/egg.sol\":3644:3665  AlreadyInvolved[addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":3644:3670  AlreadyInvolved[addr]=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ex/egg.sol\":3666:3670  true */\n      0x01\n        /* \"ex/egg.sol\":3644:3670  AlreadyInvolved[addr]=true */\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":3686:3754  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      dup2\n      mload\n      shl(0xe0, 0x79532aa9)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      swap1\n      mload\n        /* \"ex/egg.sol\":3757:3762  40000 */\n      0x9c40\n      swap3\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":3690:3732  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap3\n        /* \"ex/egg.sol\":3686:3748  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners */\n      0x79532aa9\n      swap3\n        /* \"ex/egg.sol\":3686:3754  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      0x24\n      dup1\n      dup5\n      add\n      swap4\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":3690:3732  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":3686:3754  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_299\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_299:\n      pop\n      mload\n        /* \"ex/egg.sol\":3686:3762  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) > 40000 */\n      gt\n        /* \"ex/egg.sol\":3683:4097  if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) > 40000){\r... */\n      iszero\n      tag_300\n      jumpi\n        /* \"ex/egg.sol\":3782:3850  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x79532aa9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":3786:3828  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":3782:3844  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners */\n      0x79532aa9\n      swap2\n        /* \"ex/egg.sol\":3782:3850  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":3786:3828  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":3782:3850  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_301:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      mload\n        /* \"ex/egg.sol\":3854:3859  97000 */\n      0x017ae8\n        /* \"ex/egg.sol\":3782:3859  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) == 97000 */\n      eq\n        /* \"ex/egg.sol\":3779:3923  if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) == 97000){\r... */\n      iszero\n      tag_305\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":3880:3900  hatcheryMiners[addr] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":3880:3894  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":3880:3900  hatcheryMiners[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":3901:3906  97000 */\n      0x017ae8\n        /* \"ex/egg.sol\":3880:3906  hatcheryMiners[addr]=97000 */\n      swap1\n      sstore\n        /* \"ex/egg.sol\":3779:3923  if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) == 97000){\r... */\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":3938:3958  hatcheryMiners[addr] */\n      dup2\n      and\n        /* \"ex/egg.sol\":3959:3960  0 */\n      0x00\n        /* \"ex/egg.sol\":3938:3958  hatcheryMiners[addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":3938:3952  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":3938:3958  hatcheryMiners[addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"ex/egg.sol\":3938:3960  hatcheryMiners[addr]=0 */\n      sstore\n        /* \"ex/egg.sol\":3683:4097  if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) > 40000){\r... */\n      jump(tag_306)\n    tag_300:\n        /* \"ex/egg.sol\":4015:4083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x79532aa9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4019:4061  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":4015:4077  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners */\n      0x79532aa9\n      swap2\n        /* \"ex/egg.sol\":4015:4083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4019:4061  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4015:4083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_307:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_309\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_309:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":3994:4014  hatcheryMiners[addr] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":3994:4008  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":4015:4083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      0x20\n        /* \"ex/egg.sol\":3994:4014  hatcheryMiners[addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":3994:4083  hatcheryMiners[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) */\n      sstore\n        /* \"ex/egg.sol\":3683:4097  if(PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).hatcheryMiners(addr) > 40000){\r... */\n    tag_306:\n        /* \"ex/egg.sol\":4136:4201  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs(addr) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x72670361)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4140:4182  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":4136:4195  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs */\n      0x72670361\n      swap2\n        /* \"ex/egg.sol\":4136:4201  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs(addr) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4140:4182  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4136:4201  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_311:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_314\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_314:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4118:4135  claimedEggs[addr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/egg.sol\":4118:4129  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":4136:4201  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs(addr) */\n      0x20\n        /* \"ex/egg.sol\":4118:4135  claimedEggs[addr] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":4118:4201  claimedEggs[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).claimedEggs(addr) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":4230:4293  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch(addr) */\n      dup1\n      mload\n      shl(0xe0, 0x467ece79)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4234:4276  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap3\n        /* \"ex/egg.sol\":4230:4287  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch */\n      0x467ece79\n      swap3\n        /* \"ex/egg.sol\":4230:4293  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch(addr) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4234:4276  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4230:4293  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_315:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_317\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_317:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_318\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_318:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4214:4229  lastHatch[addr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/egg.sol\":4214:4223  lastHatch */\n      0x0a\n        /* \"ex/egg.sol\":4230:4293  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch(addr) */\n      0x20\n        /* \"ex/egg.sol\":4214:4229  lastHatch[addr] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":4214:4293  lastHatch[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).lastHatch(addr) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":4323:4387  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef(addr) */\n      dup1\n      mload\n      shl(0xe2, 0x11d45245)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4327:4369  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap3\n        /* \"ex/egg.sol\":4323:4381  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef */\n      0x47514914\n      swap3\n        /* \"ex/egg.sol\":4323:4387  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef(addr) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4327:4369  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4323:4387  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_319:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_321\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_321:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_322\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_322:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4306:4322  numRealRef[addr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/egg.sol\":4306:4316  numRealRef */\n      0x0c\n        /* \"ex/egg.sol\":4323:4387  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef(addr) */\n      0x20\n        /* \"ex/egg.sol\":4306:4322  numRealRef[addr] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":4306:4387  numRealRef[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).numRealRef(addr) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":4426:4499  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown(addr) */\n      dup1\n      mload\n      shl(0xe1, 0x3b2d396f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4430:4472  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap3\n        /* \"ex/egg.sol\":4426:4493  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown */\n      0x765a72de\n      swap3\n        /* \"ex/egg.sol\":4426:4499  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown(addr) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4430:4472  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4426:4499  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_323\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_323:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_325\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_325:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_326\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_326:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4400:4425  InvestmentCountdown[addr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/egg.sol\":4400:4419  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":4426:4499  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown(addr) */\n      0x20\n        /* \"ex/egg.sol\":4400:4425  InvestmentCountdown[addr] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":4400:4499  InvestmentCountdown[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).InvestmentCountdown(addr) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":4528:4591  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf(addr) */\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4532:4574  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap3\n        /* \"ex/egg.sol\":4528:4585  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf */\n      0x70a08231\n      swap3\n        /* \"ex/egg.sol\":4528:4591  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf(addr) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4532:4574  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4528:4591  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_327\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_327:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_329\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_329:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4512:4527  balanceOf[addr] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ex/egg.sol\":4512:4521  balanceOf */\n      0x1b\n        /* \"ex/egg.sol\":4528:4591  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf(addr) */\n      0x20\n        /* \"ex/egg.sol\":4512:4527  balanceOf[addr] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":4512:4591  balanceOf[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).balanceOf(addr) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":4620:4683  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals(addr) */\n      dup1\n      mload\n      shl(0xe0, 0x9ca423b3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4624:4666  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap3\n        /* \"ex/egg.sol\":4620:4677  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals */\n      0x9ca423b3\n      swap3\n        /* \"ex/egg.sol\":4620:4683  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals(addr) */\n      0x24\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":4624:4666  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup7\n        /* \"ex/egg.sol\":4620:4683  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals(addr) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_331\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_331:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_334\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_334:\n      pop\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4604:4619  referrals[addr] */\n      dup3\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":4604:4613  referrals */\n      0x0b\n        /* \"ex/egg.sol\":4620:4683  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals(addr) */\n      0x20\n        /* \"ex/egg.sol\":4604:4619  referrals[addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":4604:4683  referrals[addr]=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).referrals(addr) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":4699:4709  marketEggs */\n      sload(0x0f)\n        /* \"ex/egg.sol\":4713:4724  86400000000 */\n      0x141dd76000\n        /* \"ex/egg.sol\":4699:4724  marketEggs == 86400000000 */\n      eq\n        /* \"ex/egg.sol\":4696:5096  if(marketEggs == 86400000000){\r... */\n      iszero\n      tag_335\n      jumpi\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":4750:4808  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).marketEggs */\n      and\n      0x2e9392bb\n        /* \"ex/egg.sol\":4750:4810  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).marketEggs() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_339\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_339:\n      pop\n      mload\n        /* \"ex/egg.sol\":4739:4749  marketEggs */\n      0x0f\n        /* \"ex/egg.sol\":4739:4810  marketEggs=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).marketEggs() */\n      sstore\n        /* \"ex/egg.sol\":4833:4891  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x093ca84f)\n      dup2\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4837:4879  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":4833:4889  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime */\n      0x093ca84f\n      swap2\n        /* \"ex/egg.sol\":4833:4891  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"ex/egg.sol\":4750:4810  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).marketEggs() */\n      0x20\n      swap3\n        /* \"ex/egg.sol\":4833:4891  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"ex/egg.sol\":4837:4879  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup8\n        /* \"ex/egg.sol\":4833:4891  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_343\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_343:\n      pop\n      mload\n        /* \"ex/egg.sol\":4824:4832  fomoTime */\n      0x12\n        /* \"ex/egg.sol\":4824:4891  fomoTime=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime() */\n      sstore\n        /* \"ex/egg.sol\":4917:4978  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards() */\n      0x40\n      dup1\n      mload\n      shl(0xe4, 0x0c405301)\n      dup2\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":4921:4963  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":4917:4976  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards */\n      0xc4053010\n      swap2\n        /* \"ex/egg.sol\":4917:4978  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"ex/egg.sol\":4833:4891  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoTime() */\n      0x20\n      swap3\n        /* \"ex/egg.sol\":4917:4978  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"ex/egg.sol\":4921:4963  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup8\n        /* \"ex/egg.sol\":4917:4978  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_347\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_347:\n      pop\n      mload\n        /* \"ex/egg.sol\":4905:4916  fomoRewards */\n      0x15\n        /* \"ex/egg.sol\":4905:4978  fomoRewards=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards() */\n      sstore\n        /* \"ex/egg.sol\":5013:5083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x27ec648b)\n      dup2\n      mstore\n      swap1\n      mload\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"ex/egg.sol\":5017:5059  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      swap2\n        /* \"ex/egg.sol\":5013:5081  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress */\n      0x27ec648b\n      swap2\n        /* \"ex/egg.sol\":5013:5083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"ex/egg.sol\":4917:4978  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).fomoRewards() */\n      0x20\n      swap3\n        /* \"ex/egg.sol\":5013:5083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n        /* \"ex/egg.sol\":5017:5059  0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306 */\n      dup8\n        /* \"ex/egg.sol\":5013:5083  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_348:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_350\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_350:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_351\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_351:\n      pop\n      mload\n        /* \"ex/egg.sol\":4992:5012  TotalNumberOfAddress */\n      0x10\n        /* \"ex/egg.sol\":4992:5083  TotalNumberOfAddress=PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).TotalNumberOfAddress() */\n      sstore\n        /* \"ex/egg.sol\":4696:5096  if(marketEggs == 86400000000){\r... */\n    tag_335:\n        /* \"ex/egg.sol\":3487:5112  function update(address addr)public{\r... */\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":5403:9869  function hatchEggs() public{\r... */\n    tag_102:\n        /* \"ex/egg.sol\":5449:5460  initialized */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ex/egg.sol\":5441:5461  require(initialized) */\n      tag_353\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_353:\n        /* \"ex/egg.sol\":5472:5488  uint256 eggsUsed */\n      0x00\n        /* \"ex/egg.sol\":5489:5510  getMyEggs(msg.sender) */\n      tag_354\n        /* \"ex/egg.sol\":5499:5509  msg.sender */\n      caller\n        /* \"ex/egg.sol\":5489:5498  getMyEggs */\n      tag_126\n        /* \"ex/egg.sol\":5489:5510  getMyEggs(msg.sender) */\n      jump\t// in\n    tag_354:\n        /* \"ex/egg.sol\":5472:5510  uint256 eggsUsed=getMyEggs(msg.sender) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":5521:5538  uint256 newMiners */\n      0x00\n        /* \"ex/egg.sol\":5539:5583  SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS) */\n      tag_355\n        /* \"ex/egg.sol\":5552:5560  eggsUsed */\n      dup3\n        /* \"ex/egg.sol\":5561:5582  EGGS_TO_HATCH_1MINERS */\n      sload(0x00)\n        /* \"ex/egg.sol\":5539:5551  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":5539:5583  SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS) */\n      jump\t// in\n    tag_355:\n        /* \"ex/egg.sol\":5649:5659  msg.sender */\n      caller\n        /* \"ex/egg.sol\":5634:5660  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":5634:5648  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":5634:5660  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":5521:5583  uint256 newMiners=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS) */\n      swap1\n      swap2\n      pop\n        /* \"ex/egg.sol\":5621:5671  SafeMath.add(hatcheryMiners[msg.sender],newMiners) */\n      tag_357\n      swap1\n        /* \"ex/egg.sol\":5521:5583  uint256 newMiners=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS) */\n      dup3\n        /* \"ex/egg.sol\":5621:5633  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":5621:5671  SafeMath.add(hatcheryMiners[msg.sender],newMiners) */\n      jump\t// in\n    tag_357:\n        /* \"ex/egg.sol\":5609:5619  msg.sender */\n      caller\n        /* \"ex/egg.sol\":5594:5620  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":5594:5608  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":5594:5620  hatcheryMiners[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/egg.sol\":5594:5671  hatcheryMiners[msg.sender]=SafeMath.add(hatcheryMiners[msg.sender],newMiners) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":5682:5693  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":5682:5705  claimedEggs[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"ex/egg.sol\":5682:5707  claimedEggs[msg.sender]=0 */\n      dup3\n      swap1\n      sstore\n        /* \"ex/egg.sol\":5718:5727  lastHatch */\n      0x0a\n        /* \"ex/egg.sol\":5718:5739  lastHatch[msg.sender] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"ex/egg.sol\":5740:5755  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":5718:5755  lastHatch[msg.sender]=block.timestamp */\n      swap1\n      sstore\n        /* \"ex/egg.sol\":5816:5825  referrals */\n      0x0b\n        /* \"ex/egg.sol\":5816:5837  referrals[msg.sender] */\n      swap1\n      mstore\n      dup2\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ex/egg.sol\":5872:5896  referrals[upline1reward] */\n      dup1\n      dup4\n      mstore\n      dup4\n      dup4\n      keccak256\n      sload\n      dup3\n      and\n        /* \"ex/egg.sol\":5931:5955  referrals[upline2reward] */\n      dup1\n      dup5\n      mstore\n      dup5\n      dup5\n      keccak256\n      sload\n      dup4\n      and\n        /* \"ex/egg.sol\":5990:6014  referrals[upline3reward] */\n      dup1\n      dup6\n      mstore\n      dup6\n      dup6\n      keccak256\n      sload\n      dup5\n      and\n        /* \"ex/egg.sol\":6049:6073  referrals[upline4reward] */\n      dup1\n      dup7\n      mstore\n      swap6\n      swap1\n      swap5\n      keccak256\n      sload\n        /* \"ex/egg.sol\":5816:5837  referrals[msg.sender] */\n      swap2\n      swap5\n        /* \"ex/egg.sol\":5872:5896  referrals[upline1reward] */\n      swap1\n      swap4\n        /* \"ex/egg.sol\":5931:5955  referrals[upline2reward] */\n      swap3\n        /* \"ex/egg.sol\":5990:6014  referrals[upline3reward] */\n      swap1\n      swap2\n        /* \"ex/egg.sol\":6049:6073  referrals[upline4reward] */\n      and\n        /* \"ex/egg.sol\":6283:6310  upline1reward != address(0) */\n      dup5\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ex/egg.sol\":6283:6373  upline1reward != address(0) && hatcheryMiners[upline1reward] >= hatcheryMiners[msg.sender] */\n      tag_359\n      jumpi\n      pop\n        /* \"ex/egg.sol\":6362:6372  msg.sender */\n      caller\n        /* \"ex/egg.sol\":6347:6373  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6347:6361  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":6347:6373  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6314:6343  hatcheryMiners[upline1reward] */\n      dup9\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":6314:6373  hatcheryMiners[upline1reward] >= hatcheryMiners[msg.sender] */\n      lt\n      iszero\n        /* \"ex/egg.sol\":6283:6373  upline1reward != address(0) && hatcheryMiners[upline1reward] >= hatcheryMiners[msg.sender] */\n    tag_359:\n        /* \"ex/egg.sol\":6279:6650  if (upline1reward != address(0) && hatcheryMiners[upline1reward] >= hatcheryMiners[msg.sender]) {\r... */\n      iszero\n      tag_360\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6450:6476  claimedEggs[upline1reward] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6450:6461  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":6450:6476  claimedEggs[upline1reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":6419:6544  SafeMath.add(\r... */\n      tag_361\n      swap1\n        /* \"ex/egg.sol\":6495:6529  SafeMath.div((eggsUsed * 10), 100) */\n      tag_362\n        /* \"ex/egg.sol\":6520:6522  10 */\n      0x0a\n        /* \"ex/egg.sol\":6509:6522  eggsUsed * 10 */\n      dup11\n      mul\n        /* \"ex/egg.sol\":6525:6528  100 */\n      0x64\n        /* \"ex/egg.sol\":6495:6507  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":6495:6529  SafeMath.div((eggsUsed * 10), 100) */\n      jump\t// in\n    tag_362:\n        /* \"ex/egg.sol\":6419:6431  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":6419:6544  SafeMath.add(\r... */\n      jump\t// in\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6390:6416  claimedEggs[upline1reward] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6390:6401  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":6390:6416  claimedEggs[upline1reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":6390:6544  claimedEggs[upline1reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":6279:6650  if (upline1reward != address(0) && hatcheryMiners[upline1reward] >= hatcheryMiners[msg.sender]) {\r... */\n      jump(tag_364)\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6605:6634  hatcheryMiners[upline1reward] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6605:6619  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":6605:6634  hatcheryMiners[upline1reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":6575:6638  setEgg(upline1reward,eggsUsed,hatcheryMiners[upline1reward],10) */\n      tag_364\n      swap1\n        /* \"ex/egg.sol\":6582:6595  upline1reward */\n      dup7\n      swap1\n        /* \"ex/egg.sol\":6596:6604  eggsUsed */\n      dup10\n      swap1\n        /* \"ex/egg.sol\":6635:6637  10 */\n      0x0a\n        /* \"ex/egg.sol\":6575:6581  setEgg */\n      tag_365\n        /* \"ex/egg.sol\":6575:6638  setEgg(upline1reward,eggsUsed,hatcheryMiners[upline1reward],10) */\n      jump\t// in\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6666:6693  upline2reward != address(0) */\n      dup5\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ex/egg.sol\":6666:6756  upline2reward != address(0) && hatcheryMiners[upline2reward] >= hatcheryMiners[msg.sender] */\n      tag_366\n      jumpi\n      pop\n        /* \"ex/egg.sol\":6745:6755  msg.sender */\n      caller\n        /* \"ex/egg.sol\":6730:6756  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6730:6744  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":6730:6756  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6697:6726  hatcheryMiners[upline2reward] */\n      dup8\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":6697:6756  hatcheryMiners[upline2reward] >= hatcheryMiners[msg.sender] */\n      lt\n      iszero\n        /* \"ex/egg.sol\":6666:6756  upline2reward != address(0) && hatcheryMiners[upline2reward] >= hatcheryMiners[msg.sender] */\n    tag_366:\n        /* \"ex/egg.sol\":6662:7030  if (upline2reward != address(0) && hatcheryMiners[upline2reward] >= hatcheryMiners[msg.sender]){\r... */\n      iszero\n      tag_367\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6832:6858  claimedEggs[upline2reward] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6832:6843  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":6832:6858  claimedEggs[upline2reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":6801:6925  SafeMath.add(\r... */\n      tag_368\n      swap1\n        /* \"ex/egg.sol\":6877:6910  SafeMath.div((eggsUsed * 4), 100) */\n      tag_362\n        /* \"ex/egg.sol\":6902:6903  4 */\n      0x04\n        /* \"ex/egg.sol\":6891:6903  eggsUsed * 4 */\n      dup11\n      mul\n        /* \"ex/egg.sol\":6906:6909  100 */\n      0x64\n        /* \"ex/egg.sol\":6877:6889  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":6877:6910  SafeMath.div((eggsUsed * 4), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":6801:6925  SafeMath.add(\r... */\n    tag_368:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6772:6798  claimedEggs[upline2reward] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6772:6783  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":6772:6798  claimedEggs[upline2reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":6772:6925  claimedEggs[upline2reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":6662:7030  if (upline2reward != address(0) && hatcheryMiners[upline2reward] >= hatcheryMiners[msg.sender]){\r... */\n      jump(tag_371)\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":6986:7015  hatcheryMiners[upline2reward] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":6986:7000  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":6986:7015  hatcheryMiners[upline2reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":6956:7018  setEgg(upline2reward,eggsUsed,hatcheryMiners[upline2reward],4) */\n      tag_371\n      swap1\n        /* \"ex/egg.sol\":6963:6976  upline2reward */\n      dup6\n      swap1\n        /* \"ex/egg.sol\":6977:6985  eggsUsed */\n      dup10\n      swap1\n        /* \"ex/egg.sol\":7016:7017  4 */\n      0x04\n        /* \"ex/egg.sol\":6956:6962  setEgg */\n      tag_365\n        /* \"ex/egg.sol\":6956:7018  setEgg(upline2reward,eggsUsed,hatcheryMiners[upline2reward],4) */\n      jump\t// in\n    tag_371:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7044:7071  upline3reward != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ex/egg.sol\":7044:7134  upline3reward != address(0) && hatcheryMiners[upline3reward] >= hatcheryMiners[msg.sender] */\n      tag_372\n      jumpi\n      pop\n        /* \"ex/egg.sol\":7123:7133  msg.sender */\n      caller\n        /* \"ex/egg.sol\":7108:7134  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7108:7122  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":7108:7134  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7075:7104  hatcheryMiners[upline3reward] */\n      dup7\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7075:7134  hatcheryMiners[upline3reward] >= hatcheryMiners[msg.sender] */\n      lt\n      iszero\n        /* \"ex/egg.sol\":7044:7134  upline3reward != address(0) && hatcheryMiners[upline3reward] >= hatcheryMiners[msg.sender] */\n    tag_372:\n        /* \"ex/egg.sol\":7040:7408  if (upline3reward != address(0) && hatcheryMiners[upline3reward] >= hatcheryMiners[msg.sender]){\r... */\n      iszero\n      tag_373\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7210:7236  claimedEggs[upline3reward] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7210:7221  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":7210:7236  claimedEggs[upline3reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7179:7303  SafeMath.add(\r... */\n      tag_374\n      swap1\n        /* \"ex/egg.sol\":7255:7288  SafeMath.div((eggsUsed * 3), 100) */\n      tag_362\n        /* \"ex/egg.sol\":7280:7281  3 */\n      0x03\n        /* \"ex/egg.sol\":7269:7281  eggsUsed * 3 */\n      dup11\n      mul\n        /* \"ex/egg.sol\":7284:7287  100 */\n      0x64\n        /* \"ex/egg.sol\":7255:7267  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":7255:7288  SafeMath.div((eggsUsed * 3), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":7179:7303  SafeMath.add(\r... */\n    tag_374:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7150:7176  claimedEggs[upline3reward] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7150:7161  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":7150:7176  claimedEggs[upline3reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":7150:7303  claimedEggs[upline3reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":7040:7408  if (upline3reward != address(0) && hatcheryMiners[upline3reward] >= hatcheryMiners[msg.sender]){\r... */\n      jump(tag_377)\n    tag_373:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7364:7393  hatcheryMiners[upline3reward] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7364:7378  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":7364:7393  hatcheryMiners[upline3reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7334:7396  setEgg(upline3reward,eggsUsed,hatcheryMiners[upline3reward],3) */\n      tag_377\n      swap1\n        /* \"ex/egg.sol\":7341:7354  upline3reward */\n      dup5\n      swap1\n        /* \"ex/egg.sol\":7355:7363  eggsUsed */\n      dup10\n      swap1\n        /* \"ex/egg.sol\":7394:7395  3 */\n      0x03\n        /* \"ex/egg.sol\":7334:7340  setEgg */\n      tag_365\n        /* \"ex/egg.sol\":7334:7396  setEgg(upline3reward,eggsUsed,hatcheryMiners[upline3reward],3) */\n      jump\t// in\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7424:7451  upline4reward != address(0) */\n      dup3\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ex/egg.sol\":7424:7514  upline4reward != address(0) && hatcheryMiners[upline4reward] >= hatcheryMiners[msg.sender] */\n      tag_378\n      jumpi\n      pop\n        /* \"ex/egg.sol\":7503:7513  msg.sender */\n      caller\n        /* \"ex/egg.sol\":7488:7514  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7488:7502  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":7488:7514  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7455:7484  hatcheryMiners[upline4reward] */\n      dup6\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7455:7514  hatcheryMiners[upline4reward] >= hatcheryMiners[msg.sender] */\n      lt\n      iszero\n        /* \"ex/egg.sol\":7424:7514  upline4reward != address(0) && hatcheryMiners[upline4reward] >= hatcheryMiners[msg.sender] */\n    tag_378:\n        /* \"ex/egg.sol\":7420:7789  if (upline4reward != address(0) && hatcheryMiners[upline4reward] >= hatcheryMiners[msg.sender]) {\r... */\n      iszero\n      tag_379\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7591:7617  claimedEggs[upline4reward] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7591:7602  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":7591:7617  claimedEggs[upline4reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7560:7684  SafeMath.add(\r... */\n      tag_380\n      swap1\n        /* \"ex/egg.sol\":7636:7669  SafeMath.div((eggsUsed * 2), 100) */\n      tag_362\n        /* \"ex/egg.sol\":7661:7662  2 */\n      0x02\n        /* \"ex/egg.sol\":7650:7662  eggsUsed * 2 */\n      dup11\n      mul\n        /* \"ex/egg.sol\":7665:7668  100 */\n      0x64\n        /* \"ex/egg.sol\":7636:7648  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":7636:7669  SafeMath.div((eggsUsed * 2), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":7560:7684  SafeMath.add(\r... */\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7531:7557  claimedEggs[upline4reward] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7531:7542  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":7531:7557  claimedEggs[upline4reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":7531:7684  claimedEggs[upline4reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":7420:7789  if (upline4reward != address(0) && hatcheryMiners[upline4reward] >= hatcheryMiners[msg.sender]) {\r... */\n      jump(tag_383)\n    tag_379:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7745:7774  hatcheryMiners[upline4reward] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7745:7759  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":7745:7774  hatcheryMiners[upline4reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7715:7777  setEgg(upline4reward,eggsUsed,hatcheryMiners[upline4reward],2) */\n      tag_383\n      swap1\n        /* \"ex/egg.sol\":7722:7735  upline4reward */\n      dup4\n      swap1\n        /* \"ex/egg.sol\":7736:7744  eggsUsed */\n      dup10\n      swap1\n        /* \"ex/egg.sol\":7775:7776  2 */\n      0x02\n        /* \"ex/egg.sol\":7715:7721  setEgg */\n      tag_365\n        /* \"ex/egg.sol\":7715:7777  setEgg(upline4reward,eggsUsed,hatcheryMiners[upline4reward],2) */\n      jump\t// in\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7805:7832  upline5reward != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ex/egg.sol\":7805:7895  upline5reward != address(0) && hatcheryMiners[upline5reward] >= hatcheryMiners[msg.sender] */\n      tag_384\n      jumpi\n      pop\n        /* \"ex/egg.sol\":7884:7894  msg.sender */\n      caller\n        /* \"ex/egg.sol\":7869:7895  hatcheryMiners[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7869:7883  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":7869:7895  hatcheryMiners[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7836:7865  hatcheryMiners[upline5reward] */\n      dup5\n      and\n      dup4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7836:7895  hatcheryMiners[upline5reward] >= hatcheryMiners[msg.sender] */\n      lt\n      iszero\n        /* \"ex/egg.sol\":7805:7895  upline5reward != address(0) && hatcheryMiners[upline5reward] >= hatcheryMiners[msg.sender] */\n    tag_384:\n        /* \"ex/egg.sol\":7801:8170  if (upline5reward != address(0) && hatcheryMiners[upline5reward] >= hatcheryMiners[msg.sender]) {\r... */\n      iszero\n      tag_385\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7972:7998  claimedEggs[upline5reward] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7972:7983  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":7972:7998  claimedEggs[upline5reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":7941:8065  SafeMath.add(\r... */\n      tag_386\n      swap1\n        /* \"ex/egg.sol\":8017:8050  SafeMath.div((eggsUsed * 1), 100) */\n      tag_362\n        /* \"ex/egg.sol\":8031:8039  eggsUsed */\n      dup10\n        /* \"ex/egg.sol\":8046:8049  100 */\n      0x64\n        /* \"ex/egg.sol\":8017:8029  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":8017:8050  SafeMath.div((eggsUsed * 1), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":7941:8065  SafeMath.add(\r... */\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":7912:7938  claimedEggs[upline5reward] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":7912:7923  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":7912:7938  claimedEggs[upline5reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":7912:8065  claimedEggs[upline5reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":7801:8170  if (upline5reward != address(0) && hatcheryMiners[upline5reward] >= hatcheryMiners[msg.sender]) {\r... */\n      jump(tag_389)\n    tag_385:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8126:8155  hatcheryMiners[upline5reward] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":8126:8140  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":8126:8155  hatcheryMiners[upline5reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":8096:8158  setEgg(upline5reward,eggsUsed,hatcheryMiners[upline5reward],1) */\n      tag_389\n      swap1\n        /* \"ex/egg.sol\":8103:8116  upline5reward */\n      dup3\n      swap1\n        /* \"ex/egg.sol\":8117:8125  eggsUsed */\n      dup10\n      swap1\n        /* \"ex/egg.sol\":8156:8157  1 */\n      0x01\n        /* \"ex/egg.sol\":8096:8102  setEgg */\n      tag_365\n        /* \"ex/egg.sol\":8096:8158  setEgg(upline5reward,eggsUsed,hatcheryMiners[upline5reward],1) */\n      jump\t// in\n    tag_389:\n        /* \"ex/egg.sol\":8183:8209  getIsQualified(msg.sender) */\n      tag_390\n        /* \"ex/egg.sol\":8198:8208  msg.sender */\n      caller\n        /* \"ex/egg.sol\":8183:8197  getIsQualified */\n      tag_80\n        /* \"ex/egg.sol\":8183:8209  getIsQualified(msg.sender) */\n      jump\t// in\n    tag_390:\n        /* \"ex/egg.sol\":8180:9738  if(getIsQualified(msg.sender)){\r... */\n      iszero\n      tag_391\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8249:8273  referrals[upline5reward] */\n      dup1\n      dup3\n      and\n        /* \"ex/egg.sol\":8225:8246  address upline6reward */\n      0x00\n        /* \"ex/egg.sol\":8249:8273  referrals[upline5reward] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":8249:8258  referrals */\n      0x0b\n        /* \"ex/egg.sol\":8249:8273  referrals[upline5reward] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n      dup4\n      and\n        /* \"ex/egg.sol\":8312:8336  referrals[upline6reward] */\n      dup1\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n      sload\n      dup5\n      and\n        /* \"ex/egg.sol\":8375:8399  referrals[upline7reward] */\n      dup1\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n      sload\n      dup6\n      and\n        /* \"ex/egg.sol\":8438:8462  referrals[upline8reward] */\n      dup1\n      dup6\n      mstore\n      dup4\n      dup6\n      keccak256\n      sload\n      dup7\n      and\n        /* \"ex/egg.sol\":8502:8526  referrals[upline9reward] */\n      dup1\n      dup7\n      mstore\n      swap4\n      swap1\n      swap5\n      keccak256\n      sload\n        /* \"ex/egg.sol\":8249:8273  referrals[upline5reward] */\n      swap2\n      swap5\n        /* \"ex/egg.sol\":8312:8336  referrals[upline6reward] */\n      swap1\n      swap4\n        /* \"ex/egg.sol\":8375:8399  referrals[upline7reward] */\n      swap3\n        /* \"ex/egg.sol\":8438:8462  referrals[upline8reward] */\n      swap2\n        /* \"ex/egg.sol\":8502:8526  referrals[upline9reward] */\n      and\n        /* \"ex/egg.sol\":8547:8574  upline6reward != address(0) */\n      dup5\n      iszero\n        /* \"ex/egg.sol\":8543:8768  if (upline6reward != address(0)) {\r... */\n      tag_392\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8655:8681  claimedEggs[upline6reward] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":8655:8666  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":8655:8681  claimedEggs[upline6reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":8624:8752  SafeMath.add(\r... */\n      tag_393\n      swap1\n        /* \"ex/egg.sol\":8700:8733  SafeMath.div((eggsUsed * 1), 100) */\n      tag_362\n        /* \"ex/egg.sol\":8714:8722  eggsUsed */\n      dup15\n        /* \"ex/egg.sol\":8729:8732  100 */\n      0x64\n        /* \"ex/egg.sol\":8700:8712  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":8700:8733  SafeMath.div((eggsUsed * 1), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":8624:8752  SafeMath.add(\r... */\n    tag_393:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8595:8621  claimedEggs[upline6reward] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":8595:8606  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":8595:8621  claimedEggs[upline6reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":8595:8752  claimedEggs[upline6reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":8543:8768  if (upline6reward != address(0)) {\r... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8786:8813  upline7reward != address(0) */\n      dup5\n      and\n      iszero\n        /* \"ex/egg.sol\":8782:9007  if (upline7reward != address(0)) {\r... */\n      tag_395\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8894:8920  claimedEggs[upline7reward] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":8894:8905  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":8894:8920  claimedEggs[upline7reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":8863:8991  SafeMath.add(\r... */\n      tag_396\n      swap1\n        /* \"ex/egg.sol\":8939:8972  SafeMath.div((eggsUsed * 1), 100) */\n      tag_362\n        /* \"ex/egg.sol\":8953:8961  eggsUsed */\n      dup15\n        /* \"ex/egg.sol\":8968:8971  100 */\n      0x64\n        /* \"ex/egg.sol\":8939:8951  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":8939:8972  SafeMath.div((eggsUsed * 1), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":8863:8991  SafeMath.add(\r... */\n    tag_396:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":8834:8860  claimedEggs[upline7reward] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":8834:8845  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":8834:8860  claimedEggs[upline7reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":8834:8991  claimedEggs[upline7reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":8782:9007  if (upline7reward != address(0)) {\r... */\n    tag_395:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9025:9052  upline8reward != address(0) */\n      dup4\n      and\n      iszero\n        /* \"ex/egg.sol\":9021:9246  if (upline8reward != address(0)) {\r... */\n      tag_398\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9133:9159  claimedEggs[upline8reward] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":9133:9144  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":9133:9159  claimedEggs[upline8reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":9102:9230  SafeMath.add(\r... */\n      tag_399\n      swap1\n        /* \"ex/egg.sol\":9178:9211  SafeMath.div((eggsUsed * 1), 100) */\n      tag_362\n        /* \"ex/egg.sol\":9192:9200  eggsUsed */\n      dup15\n        /* \"ex/egg.sol\":9207:9210  100 */\n      0x64\n        /* \"ex/egg.sol\":9178:9190  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":9178:9211  SafeMath.div((eggsUsed * 1), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":9102:9230  SafeMath.add(\r... */\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9073:9099  claimedEggs[upline8reward] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":9073:9084  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":9073:9099  claimedEggs[upline8reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":9073:9230  claimedEggs[upline8reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":9021:9246  if (upline8reward != address(0)) {\r... */\n    tag_398:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9264:9291  upline9reward != address(0) */\n      dup3\n      and\n      iszero\n        /* \"ex/egg.sol\":9260:9485  if (upline9reward != address(0)) {\r... */\n      tag_401\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9372:9398  claimedEggs[upline9reward] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":9372:9383  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":9372:9398  claimedEggs[upline9reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":9341:9469  SafeMath.add(\r... */\n      tag_402\n      swap1\n        /* \"ex/egg.sol\":9417:9450  SafeMath.div((eggsUsed * 1), 100) */\n      tag_362\n        /* \"ex/egg.sol\":9431:9439  eggsUsed */\n      dup15\n        /* \"ex/egg.sol\":9446:9449  100 */\n      0x64\n        /* \"ex/egg.sol\":9417:9429  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":9417:9450  SafeMath.div((eggsUsed * 1), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":9341:9469  SafeMath.add(\r... */\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9312:9338  claimedEggs[upline9reward] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":9312:9323  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":9312:9338  claimedEggs[upline9reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":9312:9469  claimedEggs[upline9reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":9260:9485  if (upline9reward != address(0)) {\r... */\n    tag_401:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9503:9531  upline10reward != address(0) */\n      dup2\n      and\n      iszero\n        /* \"ex/egg.sol\":9499:9727  if (upline10reward != address(0)) {\r... */\n      tag_404\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9613:9640  claimedEggs[upline10reward] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":9613:9624  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":9613:9640  claimedEggs[upline10reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":9582:9711  SafeMath.add(\r... */\n      tag_405\n      swap1\n        /* \"ex/egg.sol\":9659:9692  SafeMath.div((eggsUsed * 1), 100) */\n      tag_362\n        /* \"ex/egg.sol\":9673:9681  eggsUsed */\n      dup15\n        /* \"ex/egg.sol\":9688:9691  100 */\n      0x64\n        /* \"ex/egg.sol\":9659:9671  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":9659:9692  SafeMath.div((eggsUsed * 1), 100) */\n      jump\t// in\n        /* \"ex/egg.sol\":9582:9711  SafeMath.add(\r... */\n    tag_405:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":9552:9579  claimedEggs[upline10reward] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":9552:9563  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":9552:9579  claimedEggs[upline10reward] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":9552:9711  claimedEggs[upline10reward] = SafeMath.add(\r... */\n      sstore\n        /* \"ex/egg.sol\":9499:9727  if (upline10reward != address(0)) {\r... */\n    tag_404:\n        /* \"ex/egg.sol\":8180:9738  if(getIsQualified(msg.sender)){\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n    tag_391:\n        /* \"ex/egg.sol\":9812:9861  SafeMath.add(marketEggs,SafeMath.div(eggsUsed,5)) */\n      tag_407\n        /* \"ex/egg.sol\":9825:9835  marketEggs */\n      sload(0x0f)\n        /* \"ex/egg.sol\":9836:9860  SafeMath.div(eggsUsed,5) */\n      tag_362\n        /* \"ex/egg.sol\":9849:9857  eggsUsed */\n      dup10\n        /* \"ex/egg.sol\":9858:9859  5 */\n      0x05\n        /* \"ex/egg.sol\":9836:9848  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":9836:9860  SafeMath.div(eggsUsed,5) */\n      jump\t// in\n        /* \"ex/egg.sol\":9812:9861  SafeMath.add(marketEggs,SafeMath.div(eggsUsed,5)) */\n    tag_407:\n        /* \"ex/egg.sol\":9801:9811  marketEggs */\n      0x0f\n        /* \"ex/egg.sol\":9801:9861  marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,5)) */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/egg.sol\":5403:9869  function hatchEggs() public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":16197:16487  function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){\r... */\n    tag_106:\n        /* \"ex/egg.sol\":16276:16283  uint256 */\n      0x00\n        /* \"ex/egg.sol\":16352:16479  SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt))) */\n      tag_410\n        /* \"ex/egg.sol\":16365:16385  SafeMath.mul(PSN,bs) */\n      tag_411\n        /* \"ex/egg.sol\":16378:16381  PSN */\n      sload(0x01)\n        /* \"ex/egg.sol\":16382:16384  bs */\n      dup5\n        /* \"ex/egg.sol\":16365:16377  SafeMath.mul */\n      tag_412\n        /* \"ex/egg.sol\":16365:16385  SafeMath.mul(PSN,bs) */\n      jump\t// in\n    tag_411:\n        /* \"ex/egg.sol\":16386:16478  SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)) */\n      tag_413\n        /* \"ex/egg.sol\":16399:16403  PSNH */\n      sload(0x02)\n        /* \"ex/egg.sol\":16404:16477  SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt) */\n      tag_362\n        /* \"ex/egg.sol\":16417:16473  SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)) */\n      tag_415\n        /* \"ex/egg.sol\":16430:16450  SafeMath.mul(PSN,rs) */\n      tag_416\n        /* \"ex/egg.sol\":16443:16446  PSN */\n      sload(0x01)\n        /* \"ex/egg.sol\":16447:16449  rs */\n      dup11\n        /* \"ex/egg.sol\":16430:16442  SafeMath.mul */\n      tag_412\n        /* \"ex/egg.sol\":16430:16450  SafeMath.mul(PSN,rs) */\n      jump\t// in\n    tag_416:\n        /* \"ex/egg.sol\":16451:16472  SafeMath.mul(PSNH,rt) */\n      tag_362\n        /* \"ex/egg.sol\":16464:16468  PSNH */\n      sload(0x02)\n        /* \"ex/egg.sol\":16469:16471  rt */\n      dup13\n        /* \"ex/egg.sol\":16451:16463  SafeMath.mul */\n      tag_412\n        /* \"ex/egg.sol\":16451:16472  SafeMath.mul(PSNH,rt) */\n      jump\t// in\n        /* \"ex/egg.sol\":16417:16473  SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)) */\n    tag_415:\n        /* \"ex/egg.sol\":16474:16476  rt */\n      dup10\n        /* \"ex/egg.sol\":16404:16416  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":16404:16477  SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt) */\n      jump\t// in\n        /* \"ex/egg.sol\":16386:16478  SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)) */\n    tag_413:\n        /* \"ex/egg.sol\":16352:16364  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":16352:16479  SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt))) */\n      jump\t// in\n    tag_410:\n        /* \"ex/egg.sol\":16345:16479  return SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt))) */\n      swap5\n        /* \"ex/egg.sol\":16197:16487  function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":2542:2579  uint256 public fomoNeededTime = 28800 */\n    tag_109:\n      sload(0x14)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":16661:16823  function calculateEggBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){\r... */\n    tag_113:\n        /* \"ex/egg.sol\":16743:16750  uint256 */\n      0x00\n        /* \"ex/egg.sol\":16769:16815  calculateTrade(eth,contractBalance,marketEggs) */\n      tag_419\n        /* \"ex/egg.sol\":16784:16787  eth */\n      dup4\n        /* \"ex/egg.sol\":16788:16803  contractBalance */\n      dup4\n        /* \"ex/egg.sol\":16804:16814  marketEggs */\n      sload(0x0f)\n        /* \"ex/egg.sol\":16769:16783  calculateTrade */\n      tag_106\n        /* \"ex/egg.sol\":16769:16815  calculateTrade(eth,contractBalance,marketEggs) */\n      jump\t// in\n    tag_419:\n        /* \"ex/egg.sol\":16762:16815  return calculateTrade(eth,contractBalance,marketEggs) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":16661:16823  function calculateEggBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){\r... */\n    tag_418:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":2409:2444  uint256 public TotalNumberOfAddress */\n    tag_116:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2652:2672  uint256 public orMax */\n    tag_119:\n      sload(0x17)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2377:2402  uint256 public marketEggs */\n    tag_122:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":17593:17739  function getMyEggs(address addr) public view returns(uint256){\r... */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":17685:17702  claimedEggs[addr] */\n      dup2\n      and\n        /* \"ex/egg.sol\":17646:17653  uint256 */\n      0x00\n        /* \"ex/egg.sol\":17685:17702  claimedEggs[addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":17685:17696  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":17685:17702  claimedEggs[addr] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":17672:17731  SafeMath.add(claimedEggs[addr],getEggsSinceLastHatch(addr)) */\n      tag_418\n      swap1\n        /* \"ex/egg.sol\":17703:17730  getEggsSinceLastHatch(addr) */\n      tag_362\n        /* \"ex/egg.sol\":17697:17701  addr */\n      dup5\n        /* \"ex/egg.sol\":17703:17724  getEggsSinceLastHatch */\n      tag_272\n        /* \"ex/egg.sol\":17703:17730  getEggsSinceLastHatch(addr) */\n      jump\t// in\n        /* \"ex/egg.sol\":2260:2307  mapping (address =>bool) public AlreadyInvolved */\n    tag_130:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":1799:1825  uint256 public minBuyValue */\n    tag_133:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":10460:11288  function sellEggs() public{\r... */\n    tag_136:\n        /* \"ex/egg.sol\":10505:10516  initialized */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ex/egg.sol\":10497:10517  require(initialized) */\n      tag_424\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_424:\n        /* \"ex/egg.sol\":10528:10543  uint256 hasEggs */\n      0x00\n        /* \"ex/egg.sol\":10544:10565  getMyEggs(msg.sender) */\n      tag_425\n        /* \"ex/egg.sol\":10554:10564  msg.sender */\n      caller\n        /* \"ex/egg.sol\":10544:10553  getMyEggs */\n      tag_126\n        /* \"ex/egg.sol\":10544:10565  getMyEggs(msg.sender) */\n      jump\t// in\n    tag_425:\n        /* \"ex/egg.sol\":10528:10565  uint256 hasEggs=getMyEggs(msg.sender) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":10576:10592  uint256 eggValue */\n      0x00\n        /* \"ex/egg.sol\":10593:10618  calculateEggSell(hasEggs) */\n      tag_426\n        /* \"ex/egg.sol\":10610:10617  hasEggs */\n      dup3\n        /* \"ex/egg.sol\":10593:10609  calculateEggSell */\n      tag_234\n        /* \"ex/egg.sol\":10593:10618  calculateEggSell(hasEggs) */\n      jump\t// in\n    tag_426:\n        /* \"ex/egg.sol\":10576:10618  uint256 eggValue=calculateEggSell(hasEggs) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":10629:10640  uint256 fee */\n      0x00\n        /* \"ex/egg.sol\":10641:10657  devFee(eggValue) */\n      tag_427\n        /* \"ex/egg.sol\":10648:10656  eggValue */\n      dup3\n        /* \"ex/egg.sol\":10641:10647  devFee */\n      tag_140\n        /* \"ex/egg.sol\":10641:10657  devFee(eggValue) */\n      jump\t// in\n    tag_427:\n        /* \"ex/egg.sol\":10680:10690  msg.sender */\n      caller\n        /* \"ex/egg.sol\":10692:10693  0 */\n      0x00\n        /* \"ex/egg.sol\":10668:10691  claimedEggs[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10668:10679  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":10668:10691  claimedEggs[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/egg.sol\":10668:10693  claimedEggs[msg.sender]=0 */\n      dup4\n      swap1\n      sstore\n        /* \"ex/egg.sol\":10704:10713  lastHatch */\n      0x0a\n        /* \"ex/egg.sol\":10704:10725  lastHatch[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":10726:10741  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":10704:10741  lastHatch[msg.sender]=block.timestamp */\n      swap1\n      sstore\n        /* \"ex/egg.sol\":10776:10786  marketEggs */\n      sload(0x0f)\n        /* \"ex/egg.sol\":10629:10657  uint256 fee=devFee(eggValue) */\n      swap1\n      swap2\n      pop\n        /* \"ex/egg.sol\":10763:10795  SafeMath.add(marketEggs,hasEggs) */\n      tag_428\n      swap1\n        /* \"ex/egg.sol\":10787:10794  hasEggs */\n      dup5\n        /* \"ex/egg.sol\":10763:10775  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":10763:10795  SafeMath.add(marketEggs,hasEggs) */\n      jump\t// in\n    tag_428:\n        /* \"ex/egg.sol\":10752:10762  marketEggs */\n      0x0f\n        /* \"ex/egg.sol\":10752:10795  marketEggs=SafeMath.add(marketEggs,hasEggs) */\n      sstore\n        /* \"ex/egg.sol\":10812:10816  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":10827:10843  marketingAddress */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10812:10816  USDT */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"ex/egg.sol\":10806:10826  ERC20(USDT).transfer */\n      0xa9059cbb\n      swap2\n        /* \"ex/egg.sol\":10827:10843  marketingAddress */\n      and\n        /* \"ex/egg.sol\":10853:10856  100 */\n      0x64\n        /* \"ex/egg.sol\":10849:10851  30 */\n      0x1e\n        /* \"ex/egg.sol\":10844:10851  fee *30 */\n      dup6\n      mul\n        /* \"ex/egg.sol\":10844:10856  fee *30 /100 */\n      div\n        /* \"ex/egg.sol\":10806:10857  ERC20(USDT).transfer(marketingAddress,fee *30 /100) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_430\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_430:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_432\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_432:\n      pop\n      pop\n        /* \"ex/egg.sol\":10874:10878  USDT */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      swap2\n      pop\n        /* \"ex/egg.sol\":10868:10888  ERC20(USDT).transfer */\n      0xa9059cbb\n      swap1\n      pop\n        /* \"ex/egg.sol\":10889:10899  msg.sender */\n      caller\n        /* \"ex/egg.sol\":10900:10926  SafeMath.sub(eggValue,fee) */\n      tag_433\n        /* \"ex/egg.sol\":10913:10921  eggValue */\n      dup6\n        /* \"ex/egg.sol\":10922:10925  fee */\n      dup6\n        /* \"ex/egg.sol\":10900:10912  SafeMath.sub */\n      tag_434\n        /* \"ex/egg.sol\":10900:10926  SafeMath.sub(eggValue,fee) */\n      jump\t// in\n    tag_433:\n        /* \"ex/egg.sol\":10868:10927  ERC20(USDT).transfer(msg.sender,SafeMath.sub(eggValue,fee)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_435\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_435:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_437\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_437:\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/egg.sol\":11014:11017  100 */\n      0x64\n        /* \"ex/egg.sol\":11007:11010  fee */\n      dup2\n        /* \"ex/egg.sol\":11011:11013  70 */\n      0x46\n        /* \"ex/egg.sol\":11007:11013  fee*70 */\n      mul\n        /* \"ex/egg.sol\":11007:11017  fee*70/100 */\n      dup2\n      tag_438\n      jumpi\n      invalid\n    tag_438:\n        /* \"ex/egg.sol\":10992:11003  fomoRewards */\n      0x15\n        /* \"ex/egg.sol\":10992:11017  fomoRewards += fee*70/100 */\n      dup1\n      sload\n        /* \"ex/egg.sol\":11007:11017  fee*70/100 */\n      swap3\n      swap1\n      swap2\n      div\n        /* \"ex/egg.sol\":10992:11017  fomoRewards += fee*70/100 */\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":11048:11059  OpeningTime */\n      sload(0x16)\n        /* \"ex/egg.sol\":11030:11045  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":11030:11059  block.timestamp > OpeningTime */\n      gt\n        /* \"ex/egg.sol\":11027:11281  if(block.timestamp > OpeningTime){\r... */\n      iszero\n      tag_440\n      jumpi\n        /* \"ex/egg.sol\":11142:11150  50 ether */\n      0x02b5e3af16b1880000\n        /* \"ex/egg.sol\":11128:11139  fomoRewards */\n      sload(0x15)\n        /* \"ex/egg.sol\":11128:11150  fomoRewards > 50 ether */\n      gt\n        /* \"ex/egg.sol\":11125:11271  if(fomoRewards > 50 ether){\r... */\n      iszero\n      tag_440\n      jumpi\n        /* \"ex/egg.sol\":11175:11188  pancakeRouter */\n      sload(0x18)\n        /* \"ex/egg.sol\":11189:11200  toplusToken */\n      sload(0x19)\n        /* \"ex/egg.sol\":11162:11210  addLiquidity(pancakeRouter,toplusToken,50 ether) */\n      tag_441\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":11175:11188  pancakeRouter */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"ex/egg.sol\":11189:11200  toplusToken */\n      and\n        /* \"ex/egg.sol\":11201:11209  50 ether */\n      0x02b5e3af16b1880000\n        /* \"ex/egg.sol\":11162:11174  addLiquidity */\n      tag_442\n        /* \"ex/egg.sol\":11162:11210  addLiquidity(pancakeRouter,toplusToken,50 ether) */\n      jump\t// in\n    tag_441:\n        /* \"ex/egg.sol\":11234:11245  fomoRewards */\n      sload(0x15)\n        /* \"ex/egg.sol\":11234:11259  fomoRewards.sub(50 ether) */\n      tag_443\n      swap1\n        /* \"ex/egg.sol\":11250:11258  50 ether */\n      0x02b5e3af16b1880000\n        /* \"ex/egg.sol\":11234:11249  fomoRewards.sub */\n      tag_434\n        /* \"ex/egg.sol\":11234:11259  fomoRewards.sub(50 ether) */\n      jump\t// in\n    tag_443:\n        /* \"ex/egg.sol\":11221:11232  fomoRewards */\n      0x15\n        /* \"ex/egg.sol\":11221:11259  fomoRewards =fomoRewards.sub(50 ether) */\n      sstore\n        /* \"ex/egg.sol\":11125:11271  if(fomoRewards > 50 ether){\r... */\n    tag_440:\n        /* \"ex/egg.sol\":10460:11288  function sellEggs() public{\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":16975:17101  function devFee(uint256 amount) public pure returns(uint256){\r... */\n    tag_140:\n        /* \"ex/egg.sol\":17027:17034  uint256 */\n      0x00\n        /* \"ex/egg.sol\":17053:17093  SafeMath.div(SafeMath.mul(amount,3),100) */\n      tag_418\n        /* \"ex/egg.sol\":17066:17088  SafeMath.mul(amount,3) */\n      tag_446\n        /* \"ex/egg.sol\":17079:17085  amount */\n      dup4\n        /* \"ex/egg.sol\":17086:17087  3 */\n      0x03\n        /* \"ex/egg.sol\":17066:17078  SafeMath.mul */\n      tag_412\n        /* \"ex/egg.sol\":17066:17088  SafeMath.mul(amount,3) */\n      jump\t// in\n    tag_446:\n        /* \"ex/egg.sol\":17089:17092  100 */\n      0x64\n        /* \"ex/egg.sol\":17053:17065  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":17053:17093  SafeMath.div(SafeMath.mul(amount,3),100) */\n      jump\t// in\n        /* \"ex/egg.sol\":17107:17360  function seedMarket() public payable{\r... */\n    tag_142:\n        /* \"ex/egg.sol\":17176:17186  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":17162:17172  msg.sender */\n      caller\n        /* \"ex/egg.sol\":17162:17186  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":17154:17203  require(msg.sender == ceoAddress, 'invalid call') */\n      tag_448\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0c\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa2, 0x1a5b9d985b1a590818d85b1b)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_448:\n        /* \"ex/egg.sol\":17222:17232  marketEggs */\n      sload(0x0f)\n        /* \"ex/egg.sol\":17222:17235  marketEggs==0 */\n      iszero\n        /* \"ex/egg.sol\":17214:17236  require(marketEggs==0) */\n      tag_449\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_449:\n        /* \"ex/egg.sol\":17247:17258  initialized */\n      0x05\n        /* \"ex/egg.sol\":17247:17263  initialized=true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":17285:17296  86400000000 */\n      0x141dd76000\n        /* \"ex/egg.sol\":17274:17284  marketEggs */\n      0x0f\n        /* \"ex/egg.sol\":17274:17296  marketEggs=86400000000 */\n      sstore\n        /* \"ex/egg.sol\":17318:17352  SafeMath.add(block.timestamp,3600) */\n      tag_450\n        /* \"ex/egg.sol\":17331:17346  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":17347:17351  3600 */\n      0x0e10\n        /* \"ex/egg.sol\":17318:17330  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":17318:17352  SafeMath.add(block.timestamp,3600) */\n      jump\t// in\n    tag_450:\n        /* \"ex/egg.sol\":17307:17315  fomoTime */\n      0x12\n        /* \"ex/egg.sol\":17307:17352  fomoTime = SafeMath.add(block.timestamp,3600) */\n      sstore\n        /* \"ex/egg.sol\":17107:17360  function seedMarket() public payable{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":2509:2535  address public fomoAddress */\n    tag_145:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x13))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2619:2645  uint256 public OpeningTime */\n    tag_148:\n      sload(0x16)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":11683:13676  function buyEggs(address ref,uint256 _usdt) public {\r... */\n    tag_152:\n        /* \"ex/egg.sol\":11753:11764  initialized */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ex/egg.sol\":11745:11765  require(initialized) */\n      tag_452\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_452:\n        /* \"ex/egg.sol\":11793:11804  minBuyValue */\n      sload(0x03)\n        /* \"ex/egg.sol\":11784:11789  _usdt */\n      dup2\n        /* \"ex/egg.sol\":11784:11804  _usdt <= minBuyValue */\n      gt\n      iszero\n        /* \"ex/egg.sol\":11776:11824  require(_usdt <= minBuyValue, \"Not Enough USDT\") */\n      tag_453\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x139bdd08115b9bdd59da081554d115)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_453:\n        /* \"ex/egg.sol\":11881:11891  msg.sender */\n      caller\n        /* \"ex/egg.sol\":11861:11892  InvestmentCountdown[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":11861:11880  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":11861:11892  InvestmentCountdown[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":11843:11858  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":11843:11892  block.timestamp > InvestmentCountdown[msg.sender] */\n      gt\n      dup1\n        /* \"ex/egg.sol\":11843:11931  block.timestamp > InvestmentCountdown[msg.sender] || balanceOf[msg.sender] < minBuyValue */\n      tag_454\n      jumpi\n      pop\n        /* \"ex/egg.sol\":11920:11931  minBuyValue */\n      sload(0x03)\n        /* \"ex/egg.sol\":11906:11916  msg.sender */\n      caller\n        /* \"ex/egg.sol\":11896:11917  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":11896:11905  balanceOf */\n      0x1b\n        /* \"ex/egg.sol\":11896:11917  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":11896:11931  balanceOf[msg.sender] < minBuyValue */\n      lt\n        /* \"ex/egg.sol\":11843:11931  block.timestamp > InvestmentCountdown[msg.sender] || balanceOf[msg.sender] < minBuyValue */\n    tag_454:\n        /* \"ex/egg.sol\":11835:11951  require(block.timestamp > InvestmentCountdown[msg.sender] || balanceOf[msg.sender] < minBuyValue, \"Not Enough USDT\") */\n      tag_455\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x139bdd08115b9bdd59da081554d115)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_455:\n        /* \"ex/egg.sol\":11968:11972  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":11962:12018  ERC20(USDT).transferFrom(msg.sender,address(this),_usdt) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"ex/egg.sol\":11987:11997  msg.sender */\n      caller\n        /* \"ex/egg.sol\":11962:12018  ERC20(USDT).transferFrom(msg.sender,address(this),_usdt) */\n      0x04\n      dup3\n      add\n      mstore\n        /* \"ex/egg.sol\":12006:12010  this */\n      address\n        /* \"ex/egg.sol\":11962:12018  ERC20(USDT).transferFrom(msg.sender,address(this),_usdt) */\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":11968:11972  USDT */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"ex/egg.sol\":11962:11986  ERC20(USDT).transferFrom */\n      0x23b872dd\n      swap2\n        /* \"ex/egg.sol\":11962:12018  ERC20(USDT).transferFrom(msg.sender,address(this),_usdt) */\n      0x64\n      dup1\n      dup3\n      add\n      swap3\n        /* \"ex/egg.sol\":11968:11972  USDT */\n      0x00\n      swap3\n        /* \"ex/egg.sol\":11962:12018  ERC20(USDT).transferFrom(msg.sender,address(this),_usdt) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":11968:11972  USDT */\n      dup4\n      dup8\n        /* \"ex/egg.sol\":11962:12018  ERC20(USDT).transferFrom(msg.sender,address(this),_usdt) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_456\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_456:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_458\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_458:\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/egg.sol\":12029:12049  updateFomoFinished() */\n      tag_459\n        /* \"ex/egg.sol\":12029:12047  updateFomoFinished */\n      tag_460\n        /* \"ex/egg.sol\":12029:12049  updateFomoFinished() */\n      jump\t// in\n    tag_459:\n      pop\n        /* \"ex/egg.sol\":12064:12078  isFomoFinished */\n      sload(0x1c)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ex/egg.sol\":12060:12305  if(!isFomoFinished){\r... */\n      tag_461\n      jumpi\n        /* \"ex/egg.sol\":12094:12105  fomoAddress */\n      0x13\n        /* \"ex/egg.sol\":12094:12118  fomoAddress = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"ex/egg.sol\":12108:12118  msg.sender */\n      caller\n        /* \"ex/egg.sol\":12094:12118  fomoAddress = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":12144:12159  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":12133:12141  fomoTime */\n      0x12\n        /* \"ex/egg.sol\":12133:12159  fomoTime = block.timestamp */\n      sstore\n        /* \"ex/egg.sol\":12094:12105  fomoAddress */\n      0x00\n        /* \"ex/egg.sol\":12200:12223  SafeMath.div(_usdt, 20) */\n      tag_462\n        /* \"ex/egg.sol\":12213:12218  _usdt */\n      dup3\n        /* \"ex/egg.sol\":12220:12222  20 */\n      0x14\n        /* \"ex/egg.sol\":12200:12212  SafeMath.div */\n      tag_356\n        /* \"ex/egg.sol\":12200:12223  SafeMath.div(_usdt, 20) */\n      jump\t// in\n    tag_462:\n        /* \"ex/egg.sol\":12174:12223  uint256 fomoPlusRewards = SafeMath.div(_usdt, 20) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":12252:12293  SafeMath.add(fomoRewards,fomoPlusRewards) */\n      tag_463\n        /* \"ex/egg.sol\":12265:12276  fomoRewards */\n      sload(0x15)\n        /* \"ex/egg.sol\":12277:12292  fomoPlusRewards */\n      dup3\n        /* \"ex/egg.sol\":12252:12264  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":12252:12293  SafeMath.add(fomoRewards,fomoPlusRewards) */\n      jump\t// in\n    tag_463:\n        /* \"ex/egg.sol\":12238:12249  fomoRewards */\n      0x15\n        /* \"ex/egg.sol\":12238:12293  fomoRewards = SafeMath.add(fomoRewards,fomoPlusRewards) */\n      sstore\n      pop\n        /* \"ex/egg.sol\":12060:12305  if(!isFomoFinished){\r... */\n    tag_461:\n        /* \"ex/egg.sol\":12338:12348  msg.sender */\n      caller\n        /* \"ex/egg.sol\":12318:12349  InvestmentCountdown[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":12318:12337  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":12318:12349  InvestmentCountdown[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":12315:12507  if(InvestmentCountdown[msg.sender]==0){\r... */\n      tag_464\n      jumpi\n        /* \"ex/egg.sol\":12388:12398  msg.sender */\n      caller\n        /* \"ex/egg.sol\":12368:12399  InvestmentCountdown[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":12368:12387  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":12368:12399  InvestmentCountdown[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":12418:12424  1 days */\n      0x015180\n        /* \"ex/egg.sol\":12400:12415  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":12400:12424  block.timestamp + 1 days */\n      add\n        /* \"ex/egg.sol\":12368:12424  InvestmentCountdown[msg.sender]=block.timestamp + 1 days */\n      swap1\n      sstore\n        /* \"ex/egg.sol\":12315:12507  if(InvestmentCountdown[msg.sender]==0){\r... */\n      jump(tag_465)\n    tag_464:\n        /* \"ex/egg.sol\":12475:12485  msg.sender */\n      caller\n        /* \"ex/egg.sol\":12455:12486  InvestmentCountdown[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":12455:12474  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":12455:12486  InvestmentCountdown[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":12455:12495  InvestmentCountdown[msg.sender]+= 1 days */\n      dup1\n      sload\n        /* \"ex/egg.sol\":12489:12495  1 days */\n      0x015180\n        /* \"ex/egg.sol\":12455:12495  InvestmentCountdown[msg.sender]+= 1 days */\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":12315:12507  if(InvestmentCountdown[msg.sender]==0){\r... */\n    tag_465:\n        /* \"ex/egg.sol\":12520:12535  whiteListNeeded */\n      and(0xff, sload(0x1c))\n        /* \"ex/egg.sol\":12517:12635  if(whiteListNeeded){\r... */\n      iszero\n      tag_467\n      jumpi\n        /* \"ex/egg.sol\":12571:12581  msg.sender */\n      caller\n        /* \"ex/egg.sol\":12559:12582  isWhiteList[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":12559:12570  isWhiteList */\n      0x1a\n        /* \"ex/egg.sol\":12559:12582  isWhiteList[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ex/egg.sol\":12559:12590  isWhiteList[msg.sender] == true */\n      iszero\n      iszero\n        /* \"ex/egg.sol\":12559:12582  isWhiteList[msg.sender] */\n      0x01\n        /* \"ex/egg.sol\":12559:12590  isWhiteList[msg.sender] == true */\n      eq\n        /* \"ex/egg.sol\":12551:12623  require(isWhiteList[msg.sender] == true, \"You are not on the whitelist\") */\n      tag_467\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x596f7520617265206e6f74206f6e207468652077686974656c69737400000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_467:\n        /* \"ex/egg.sol\":12705:12709  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":12699:12735  ERC20(USDT).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ex/egg.sol\":12729:12733  this */\n      address\n        /* \"ex/egg.sol\":12699:12735  ERC20(USDT).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"ex/egg.sol\":12645:12663  uint256 eggsBought */\n      0x00\n      swap3\n        /* \"ex/egg.sol\":12664:12743  calculateEggBuy(_usdt,SafeMath.sub(ERC20(USDT).balanceOf(address(this)),_usdt)) */\n      tag_468\n      swap3\n        /* \"ex/egg.sol\":12680:12685  _usdt */\n      dup6\n      swap3\n        /* \"ex/egg.sol\":12686:12742  SafeMath.sub(ERC20(USDT).balanceOf(address(this)),_usdt) */\n      tag_469\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":12705:12709  USDT */\n      and\n      swap2\n        /* \"ex/egg.sol\":12699:12720  ERC20(USDT).balanceOf */\n      0x70a08231\n      swap2\n        /* \"ex/egg.sol\":12699:12735  ERC20(USDT).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":12705:12709  USDT */\n      dup7\n        /* \"ex/egg.sol\":12699:12735  ERC20(USDT).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_470\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_470:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_472\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_472:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_473\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_473:\n      pop\n      mload\n        /* \"ex/egg.sol\":12736:12741  _usdt */\n      dup6\n        /* \"ex/egg.sol\":12686:12698  SafeMath.sub */\n      tag_434\n        /* \"ex/egg.sol\":12686:12742  SafeMath.sub(ERC20(USDT).balanceOf(address(this)),_usdt) */\n      jump\t// in\n    tag_469:\n        /* \"ex/egg.sol\":12664:12679  calculateEggBuy */\n      tag_113\n        /* \"ex/egg.sol\":12664:12743  calculateEggBuy(_usdt,SafeMath.sub(ERC20(USDT).balanceOf(address(this)),_usdt)) */\n      jump\t// in\n    tag_468:\n        /* \"ex/egg.sol\":12645:12743  uint256 eggsBought=calculateEggBuy(_usdt,SafeMath.sub(ERC20(USDT).balanceOf(address(this)),_usdt)) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":12765:12808  SafeMath.sub(eggsBought,devFee(eggsBought)) */\n      tag_474\n        /* \"ex/egg.sol\":12778:12788  eggsBought */\n      dup2\n        /* \"ex/egg.sol\":12789:12807  devFee(eggsBought) */\n      tag_475\n        /* \"ex/egg.sol\":12796:12806  eggsBought */\n      dup4\n        /* \"ex/egg.sol\":12789:12795  devFee */\n      tag_140\n        /* \"ex/egg.sol\":12789:12807  devFee(eggsBought) */\n      jump\t// in\n    tag_475:\n        /* \"ex/egg.sol\":12765:12777  SafeMath.sub */\n      tag_434\n        /* \"ex/egg.sol\":12765:12808  SafeMath.sub(eggsBought,devFee(eggsBought)) */\n      jump\t// in\n    tag_474:\n        /* \"ex/egg.sol\":12754:12808  eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought)) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":12819:12830  uint256 fee */\n      0x00\n        /* \"ex/egg.sol\":12831:12844  devFee(_usdt) */\n      tag_476\n        /* \"ex/egg.sol\":12838:12843  _usdt */\n      dup4\n        /* \"ex/egg.sol\":12831:12837  devFee */\n      tag_140\n        /* \"ex/egg.sol\":12831:12844  devFee(_usdt) */\n      jump\t// in\n    tag_476:\n        /* \"ex/egg.sol\":12861:12865  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":12876:12892  marketingAddress */\n      sload(0x04)\n        /* \"ex/egg.sol\":12819:12844  uint256 fee=devFee(_usdt) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":12861:12865  USDT */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"ex/egg.sol\":12855:12875  ERC20(USDT).transfer */\n      0xa9059cbb\n      swap2\n        /* \"ex/egg.sol\":12876:12892  marketingAddress */\n      and\n        /* \"ex/egg.sol\":12903:12906  100 */\n      0x64\n        /* \"ex/egg.sol\":12899:12901  30 */\n      0x1e\n        /* \"ex/egg.sol\":12893:12901  fee * 30 */\n      dup6\n      mul\n        /* \"ex/egg.sol\":12893:12906  fee * 30 /100 */\n      div\n        /* \"ex/egg.sol\":12855:12907  ERC20(USDT).transfer(marketingAddress,fee * 30 /100) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_478\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_478:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_480\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_480:\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/egg.sol\":12994:12997  100 */\n      0x64\n        /* \"ex/egg.sol\":12987:12990  fee */\n      dup2\n        /* \"ex/egg.sol\":12991:12993  70 */\n      0x46\n        /* \"ex/egg.sol\":12987:12993  fee*70 */\n      mul\n        /* \"ex/egg.sol\":12987:12997  fee*70/100 */\n      dup2\n      tag_481\n      jumpi\n      invalid\n    tag_481:\n        /* \"ex/egg.sol\":12972:12983  fomoRewards */\n      0x15\n        /* \"ex/egg.sol\":12972:12997  fomoRewards += fee*70/100 */\n      dup1\n      sload\n        /* \"ex/egg.sol\":12987:12997  fee*70/100 */\n      swap3\n      swap1\n      swap2\n      div\n        /* \"ex/egg.sol\":12972:12997  fomoRewards += fee*70/100 */\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":13057:13067  msg.sender */\n      caller\n      0x00\n        /* \"ex/egg.sol\":13045:13068  claimedEggs[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13045:13056  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":13045:13068  claimedEggs[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":13032:13080  SafeMath.add(claimedEggs[msg.sender],eggsBought) */\n      tag_482\n      swap1\n        /* \"ex/egg.sol\":13069:13079  eggsBought */\n      dup4\n        /* \"ex/egg.sol\":13032:13044  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":13032:13080  SafeMath.add(claimedEggs[msg.sender],eggsBought) */\n      jump\t// in\n    tag_482:\n        /* \"ex/egg.sol\":13020:13030  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13008:13031  claimedEggs[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13008:13019  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":13008:13031  claimedEggs[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/egg.sol\":13008:13080  claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":13094:13103  referrals */\n      0x0b\n        /* \"ex/egg.sol\":13094:13115  referrals[msg.sender] */\n      swap1\n      mstore\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ex/egg.sol\":13094:13129  referrals[msg.sender] == address(0) */\n      iszero\n        /* \"ex/egg.sol\":13094:13150  referrals[msg.sender] == address(0) && ref != msg.sender */\n      dup1\n      iszero\n      tag_483\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":13133:13150  ref != msg.sender */\n      dup5\n      and\n        /* \"ex/egg.sol\":13140:13150  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13133:13150  ref != msg.sender */\n      eq\n      iszero\n        /* \"ex/egg.sol\":13094:13150  referrals[msg.sender] == address(0) && ref != msg.sender */\n    tag_483:\n        /* \"ex/egg.sol\":13091:13205  if(referrals[msg.sender] == address(0) && ref != msg.sender){\r... */\n      iszero\n      tag_484\n      jumpi\n        /* \"ex/egg.sol\":13176:13186  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13166:13187  referrals[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13166:13175  referrals */\n      0x0b\n        /* \"ex/egg.sol\":13166:13187  referrals[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":13166:13193  referrals[msg.sender] = ref */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":13091:13205  if(referrals[msg.sender] == address(0) && ref != msg.sender){\r... */\n    tag_484:\n        /* \"ex/egg.sol\":13226:13234  20 ether */\n      0x01158e460913d00000\n        /* \"ex/egg.sol\":13219:13224  _usdt */\n      dup4\n        /* \"ex/egg.sol\":13219:13234  _usdt>=20 ether */\n      lt\n        /* \"ex/egg.sol\":13215:13298  if (_usdt>=20 ether){\r... */\n      tag_485\n      jumpi\n        /* \"ex/egg.sol\":13270:13280  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13249:13282  numRealRef[referrals[msg.sender]] */\n      0x00\n        /* \"ex/egg.sol\":13260:13281  referrals[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13260:13269  referrals */\n      0x0b\n        /* \"ex/egg.sol\":13260:13281  referrals[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ex/egg.sol\":13249:13282  numRealRef[referrals[msg.sender]] */\n      dup4\n      mstore\n        /* \"ex/egg.sol\":13249:13259  numRealRef */\n      0x0c\n        /* \"ex/egg.sol\":13249:13282  numRealRef[referrals[msg.sender]] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":13249:13286  numRealRef[referrals[msg.sender]] +=1 */\n      dup1\n      sload\n        /* \"ex/egg.sol\":13285:13286  1 */\n      0x01\n        /* \"ex/egg.sol\":13249:13286  numRealRef[referrals[msg.sender]] +=1 */\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":13215:13298  if (_usdt>=20 ether){\r... */\n    tag_485:\n        /* \"ex/egg.sol\":13328:13338  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13312:13339  AlreadyInvolved[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13312:13327  AlreadyInvolved */\n      0x0d\n        /* \"ex/egg.sol\":13312:13339  AlreadyInvolved[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ex/egg.sol\":13308:13436  if(!AlreadyInvolved[msg.sender]){\r... */\n      tag_486\n      jumpi\n        /* \"ex/egg.sol\":13371:13381  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13355:13382  AlreadyInvolved[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13355:13370  AlreadyInvolved */\n      0x0d\n        /* \"ex/egg.sol\":13355:13382  AlreadyInvolved[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":13355:13387  AlreadyInvolved[msg.sender]=true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"ex/egg.sol\":13383:13387  true */\n      0x01\n        /* \"ex/egg.sol\":13355:13387  AlreadyInvolved[msg.sender]=true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ex/egg.sol\":13402:13422  TotalNumberOfAddress */\n      0x10\n        /* \"ex/egg.sol\":13402:13424  TotalNumberOfAddress++ */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":13308:13436  if(!AlreadyInvolved[msg.sender]){\r... */\n    tag_486:\n        /* \"ex/egg.sol\":13446:13456  uint256 va */\n      0x00\n        /* \"ex/egg.sol\":13478:13483  orMax */\n      sload(0x17)\n        /* \"ex/egg.sol\":13457:13477  TotalNumberOfAddress */\n      sload(0x10)\n        /* \"ex/egg.sol\":13457:13483  TotalNumberOfAddress/orMax */\n      dup2\n      tag_487\n      jumpi\n      invalid\n    tag_487:\n      div\n        /* \"ex/egg.sol\":13446:13483  uint256 va=TotalNumberOfAddress/orMax */\n      swap1\n      pop\n        /* \"ex/egg.sol\":13503:13509  vaTova */\n      sload(0x11)\n        /* \"ex/egg.sol\":13497:13499  va */\n      dup2\n        /* \"ex/egg.sol\":13497:13509  va >= vaTova */\n      lt\n        /* \"ex/egg.sol\":13494:13582  if(va >= vaTova){\r... */\n      tag_488\n      jumpi\n        /* \"ex/egg.sol\":13525:13536  minBuyValue */\n      0x03\n        /* \"ex/egg.sol\":13525:13547  minBuyValue+= 10 ether */\n      dup1\n      sload\n        /* \"ex/egg.sol\":13539:13547  10 ether */\n      0x8ac7230489e80000\n        /* \"ex/egg.sol\":13525:13547  minBuyValue+= 10 ether */\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":13562:13568  vaTova */\n      0x11\n        /* \"ex/egg.sol\":13562:13570  vaTova++ */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":13494:13582  if(va >= vaTova){\r... */\n    tag_488:\n        /* \"ex/egg.sol\":13624:13634  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13614:13635  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13614:13623  balanceOf */\n      0x1b\n        /* \"ex/egg.sol\":13614:13635  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":13614:13646  balanceOf[msg.sender].add(_usdt) */\n      tag_489\n      swap1\n        /* \"ex/egg.sol\":13640:13645  _usdt */\n      dup6\n        /* \"ex/egg.sol\":13614:13639  balanceOf[msg.sender].add */\n      tag_358\n        /* \"ex/egg.sol\":13614:13646  balanceOf[msg.sender].add(_usdt) */\n      jump\t// in\n    tag_489:\n        /* \"ex/egg.sol\":13602:13612  msg.sender */\n      caller\n        /* \"ex/egg.sol\":13592:13613  balanceOf[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":13592:13601  balanceOf */\n      0x1b\n        /* \"ex/egg.sol\":13592:13613  balanceOf[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":13592:13646  balanceOf[msg.sender]=balanceOf[msg.sender].add(_usdt) */\n      sstore\n        /* \"ex/egg.sol\":13657:13668  hatchEggs() */\n      tag_490\n        /* \"ex/egg.sol\":13657:13666  hatchEggs */\n      tag_102\n        /* \"ex/egg.sol\":13657:13668  hatchEggs() */\n      jump\t// in\n    tag_490:\n        /* \"ex/egg.sol\":11683:13676  function buyEggs(address ref,uint256 _usdt) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":11294:11405  function setMin(uint _min)public{\r... */\n    tag_156:\n        /* \"ex/egg.sol\":11359:11369  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":11345:11355  msg.sender */\n      caller\n        /* \"ex/egg.sol\":11345:11369  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":11337:11370  require(msg.sender == ceoAddress) */\n      tag_492\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_492:\n        /* \"ex/egg.sol\":11381:11392  minBuyValue */\n      0x03\n        /* \"ex/egg.sol\":11381:11397  minBuyValue=_min */\n      sstore\n        /* \"ex/egg.sol\":11294:11405  function setMin(uint _min)public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":2103:2148  mapping (address => uint256) public lastHatch */\n    tag_160:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2207:2253  mapping (address => uint256) public numRealRef */\n    tag_164:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":14413:14544  function setFomoNeededTime(uint256 time) public{\r... */\n    tag_168:\n        /* \"ex/egg.sol\":14493:14503  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":14479:14489  msg.sender */\n      caller\n        /* \"ex/egg.sol\":14479:14503  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":14471:14504  require(msg.sender == ceoAddress) */\n      tag_494\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_494:\n        /* \"ex/egg.sol\":14515:14529  fomoNeededTime */\n      0x14\n        /* \"ex/egg.sol\":14515:14536  fomoNeededTime = time */\n      sstore\n        /* \"ex/egg.sol\":14413:14544  function setFomoNeededTime(uint256 time) public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":15790:15904  function setceoAddress()public{\r... */\n    tag_171:\n        /* \"ex/egg.sol\":15853:15863  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":15839:15849  msg.sender */\n      caller\n        /* \"ex/egg.sol\":15839:15863  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":15831:15864  require(msg.sender == ceoAddress) */\n      tag_496\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_496:\n        /* \"ex/egg.sol\":15875:15885  ceoAddress */\n      0x06\n        /* \"ex/egg.sol\":15875:15896  ceoAddress=address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"ex/egg.sol\":15790:15904  function setceoAddress()public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":14730:14871  function setWhiteListNeeded() public{\r... */\n    tag_174:\n        /* \"ex/egg.sol\":14799:14809  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":14785:14795  msg.sender */\n      caller\n        /* \"ex/egg.sol\":14785:14809  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":14785:14828  msg.sender == ceoAddress && whiteListNeeded */\n      dup1\n      iszero\n      tag_498\n      jumpi\n      pop\n        /* \"ex/egg.sol\":14813:14828  whiteListNeeded */\n      and(0xff, sload(0x1c))\n        /* \"ex/egg.sol\":14785:14828  msg.sender == ceoAddress && whiteListNeeded */\n    tag_498:\n        /* \"ex/egg.sol\":14777:14829  require(msg.sender == ceoAddress && whiteListNeeded) */\n      tag_499\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_499:\n        /* \"ex/egg.sol\":14840:14855  whiteListNeeded */\n      0x1c\n        /* \"ex/egg.sol\":14840:14863  whiteListNeeded = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"ex/egg.sol\":14730:14871  function setWhiteListNeeded() public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":15320:15466  function setMarket(address _market)public{\r... */\n    tag_178:\n        /* \"ex/egg.sol\":15394:15404  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":15380:15390  msg.sender */\n      caller\n        /* \"ex/egg.sol\":15380:15404  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":15372:15405  require(msg.sender == ceoAddress) */\n      tag_501\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_501:\n        /* \"ex/egg.sol\":15422:15426  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":15416:15458  ERC20(USDT).approve(_market, 2 ** 256 - 1) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      0x04\n      dup4\n      add\n      mstore\n      not(0x00)\n      0x24\n      dup4\n      add\n      mstore\n      swap2\n      mload\n        /* \"ex/egg.sol\":15422:15426  USDT */\n      swap2\n      swap1\n      swap3\n      and\n      swap2\n        /* \"ex/egg.sol\":15416:15435  ERC20(USDT).approve */\n      0x095ea7b3\n      swap2\n        /* \"ex/egg.sol\":15416:15458  ERC20(USDT).approve(_market, 2 ** 256 - 1) */\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":15422:15426  USDT */\n      0x00\n      dup8\n        /* \"ex/egg.sol\":15416:15458  ERC20(USDT).approve(_market, 2 ** 256 - 1) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_502\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_502:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_504\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_504:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_440\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"ex/egg.sol\":14990:15314  function setOrbaOf(address addr,uint _max,uint _max1,uint _max2,address _max3,uint _max4)public{\r... */\n    tag_182:\n        /* \"ex/egg.sol\":15118:15128  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":15104:15114  msg.sender */\n      caller\n        /* \"ex/egg.sol\":15104:15128  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":15096:15129  require(msg.sender == ceoAddress) */\n      tag_507\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_507:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":15142:15162  hatcheryMiners[addr] */\n      swap6\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":15142:15156  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":15142:15162  hatcheryMiners[addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ex/egg.sol\":15142:15167  hatcheryMiners[addr]=_max */\n      swap8\n      swap1\n      swap8\n      sstore\n        /* \"ex/egg.sol\":15180:15191  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":15180:15197  claimedEggs[addr] */\n      dup2\n      mstore\n      dup7\n      dup3\n      keccak256\n        /* \"ex/egg.sol\":15180:15203  claimedEggs[addr]=_max1 */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"ex/egg.sol\":15216:15225  lastHatch */\n      0x0a\n        /* \"ex/egg.sol\":15216:15231  lastHatch[addr] */\n      dup6\n      mstore\n      dup6\n      dup2\n      keccak256\n        /* \"ex/egg.sol\":15216:15237  lastHatch[addr]=_max2 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ex/egg.sol\":15250:15259  referrals */\n      0x0b\n        /* \"ex/egg.sol\":15250:15265  referrals[addr] */\n      dup5\n      mstore\n      dup5\n      dup4\n      keccak256\n        /* \"ex/egg.sol\":15250:15271  referrals[addr]=_max3 */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap7\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap5\n      sstore\n        /* \"ex/egg.sol\":15284:15294  numRealRef */\n      0x0c\n        /* \"ex/egg.sol\":15284:15300  numRealRef[addr] */\n      swap1\n      swap2\n      mstore\n      keccak256\n        /* \"ex/egg.sol\":15284:15306  numRealRef[addr]=_max4 */\n      sstore\n        /* \"ex/egg.sol\":14990:15314  function setOrbaOf(address addr,uint _max,uint _max1,uint _max2,address _max3,uint _max4)public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":18000:18759  function getUser(address addr)public view returns(uint a,uint b,uint c,uint e,uint f,uint g,uint bd){\r... */\n    tag_186:\n        /* \"ex/egg.sol\":18050:18056  uint a */\n      0x00\n        /* \"ex/egg.sol\":18057:18063  uint b */\n      dup1\n        /* \"ex/egg.sol\":18064:18070  uint c */\n      0x00\n        /* \"ex/egg.sol\":18071:18077  uint e */\n      dup1\n        /* \"ex/egg.sol\":18078:18084  uint f */\n      0x00\n        /* \"ex/egg.sol\":18085:18091  uint g */\n      dup1\n        /* \"ex/egg.sol\":18092:18099  uint bd */\n      0x00\n        /* \"ex/egg.sol\":18111:18126  uint256 hasEggs */\n      dup1\n        /* \"ex/egg.sol\":18127:18142  getMyEggs(addr) */\n      tag_509\n        /* \"ex/egg.sol\":18137:18141  addr */\n      dup10\n        /* \"ex/egg.sol\":18127:18136  getMyEggs */\n      tag_126\n        /* \"ex/egg.sol\":18127:18142  getMyEggs(addr) */\n      jump\t// in\n    tag_509:\n        /* \"ex/egg.sol\":18111:18142  uint256 hasEggs=getMyEggs(addr) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":18153:18169  uint256 eggValue */\n      0x00\n        /* \"ex/egg.sol\":18183:18194  hasEggs > 0 */\n      dup2\n      iszero\n        /* \"ex/egg.sol\":18180:18295  if(hasEggs > 0){\r... */\n      tag_510\n      jumpi\n        /* \"ex/egg.sol\":18217:18242  calculateEggSell(hasEggs) */\n      tag_511\n        /* \"ex/egg.sol\":18234:18241  hasEggs */\n      dup3\n        /* \"ex/egg.sol\":18217:18233  calculateEggSell */\n      tag_234\n        /* \"ex/egg.sol\":18217:18242  calculateEggSell(hasEggs) */\n      jump\t// in\n    tag_511:\n        /* \"ex/egg.sol\":18208:18242  eggValue=calculateEggSell(hasEggs) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":18180:18295  if(hasEggs > 0){\r... */\n      jump(tag_512)\n    tag_510:\n      pop\n        /* \"ex/egg.sol\":18281:18282  0 */\n      0x00\n        /* \"ex/egg.sol\":18180:18295  if(hasEggs > 0){\r... */\n    tag_512:\n        /* \"ex/egg.sol\":18307:18318  fomoRewards */\n      sload(0x15)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":18331:18351  hatcheryMiners[addr] */\n      dup1\n      dup13\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":18331:18345  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":18331:18351  hatcheryMiners[addr] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":18391:18395  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      dup4\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ex/egg.sol\":18415:18419  this */\n      address\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap4\n      mload\n        /* \"ex/egg.sol\":18307:18318  fomoRewards */\n      swap6\n      swap15\n      pop\n        /* \"ex/egg.sol\":18331:18351  hatcheryMiners[addr] */\n      swap1\n      swap13\n      pop\n        /* \"ex/egg.sol\":18364:18372  eggValue */\n      swap5\n      swap11\n      pop\n      dup11\n      swap5\n        /* \"ex/egg.sol\":18391:18395  USDT */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"ex/egg.sol\":18385:18406  ERC20(USDT).balanceOf */\n      0x70a08231\n      swap3\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup5\n      add\n      swap4\n        /* \"ex/egg.sol\":18331:18351  hatcheryMiners[addr] */\n      swap2\n      swap3\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":18391:18395  USDT */\n      dup7\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_513\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_513:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_515\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_515:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_516\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_516:\n      pop\n      mload\n        /* \"ex/egg.sol\":18434:18445  minBuyValue */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":18477:18502  InvestmentCountdown[addr] */\n      dup13\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":18477:18496  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      0x20\n        /* \"ex/egg.sol\":18477:18502  InvestmentCountdown[addr] */\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":18385:18421  ERC20(USDT).balanceOf(address(this)) */\n      swap2\n      swap8\n      pop\n        /* \"ex/egg.sol\":18434:18445  minBuyValue */\n      swap6\n      pop\n        /* \"ex/egg.sol\":18459:18474  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":18459:18502  block.timestamp > InvestmentCountdown[addr] */\n      gt\n        /* \"ex/egg.sol\":18456:18612  if(block.timestamp > InvestmentCountdown[addr]){\r... */\n      iszero\n      tag_517\n      jumpi\n        /* \"ex/egg.sol\":18520:18521  0 */\n      0x00\n        /* \"ex/egg.sol\":18518:18521  g=0 */\n      swap4\n      pop\n        /* \"ex/egg.sol\":18456:18612  if(block.timestamp > InvestmentCountdown[addr]){\r... */\n      jump(tag_518)\n    tag_517:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":18554:18579  InvestmentCountdown[addr] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":18554:18573  InvestmentCountdown */\n      0x0e\n        /* \"ex/egg.sol\":18554:18579  InvestmentCountdown[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":18554:18600  InvestmentCountdown[addr].sub(block.timestamp) */\n      tag_519\n      swap1\n        /* \"ex/egg.sol\":18584:18599  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":18554:18583  InvestmentCountdown[addr].sub */\n      tag_434\n        /* \"ex/egg.sol\":18554:18600  InvestmentCountdown[addr].sub(block.timestamp) */\n      jump\t// in\n    tag_519:\n        /* \"ex/egg.sol\":18552:18600  g=InvestmentCountdown[addr].sub(block.timestamp) */\n      swap4\n      pop\n        /* \"ex/egg.sol\":18456:18612  if(block.timestamp > InvestmentCountdown[addr]){\r... */\n    tag_518:\n        /* \"ex/egg.sol\":18643:18654  minBuyValue */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":18625:18640  balanceOf[addr] */\n      dup12\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":18625:18634  balanceOf */\n      0x1b\n        /* \"ex/egg.sol\":18625:18640  balanceOf[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":18625:18654  balanceOf[addr] < minBuyValue */\n      lt\n        /* \"ex/egg.sol\":18622:18752  if(balanceOf[addr] < minBuyValue){\r... */\n      iszero\n      tag_520\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":18689:18704  balanceOf[addr] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":18689:18698  balanceOf */\n      0x1b\n        /* \"ex/egg.sol\":18689:18704  balanceOf[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":18673:18684  minBuyValue */\n      sload(0x03)\n        /* \"ex/egg.sol\":18673:18705  minBuyValue.sub(balanceOf[addr]) */\n      tag_521\n      swap2\n        /* \"ex/egg.sol\":18673:18688  minBuyValue.sub */\n      tag_434\n        /* \"ex/egg.sol\":18673:18705  minBuyValue.sub(balanceOf[addr]) */\n      jump\t// in\n    tag_521:\n        /* \"ex/egg.sol\":18670:18705  bd=minBuyValue.sub(balanceOf[addr]) */\n      swap3\n      pop\n        /* \"ex/egg.sol\":18622:18752  if(balanceOf[addr] < minBuyValue){\r... */\n      jump(tag_522)\n    tag_520:\n        /* \"ex/egg.sol\":18739:18740  0 */\n      0x00\n        /* \"ex/egg.sol\":18736:18740  bd=0 */\n      swap3\n      pop\n        /* \"ex/egg.sol\":18622:18752  if(balanceOf[addr] < minBuyValue){\r... */\n    tag_522:\n        /* \"ex/egg.sol\":18000:18759  function getUser(address addr)public view returns(uint a,uint b,uint c,uint e,uint f,uint g,uint bd){\r... */\n      pop\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":2883:2924  mapping(address => uint) public balanceOf */\n    tag_190:\n      mstore(0x20, 0x1b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2049:2096  mapping (address => uint256) public claimedEggs */\n    tag_194:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2314:2367  mapping(address =>uint256) public InvestmentCountdown */\n    tag_198:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":1992:2042  mapping (address => uint256) public hatcheryMiners */\n    tag_202:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2757:2826  address public toplusToken=0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c */\n    tag_205:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x19))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":1655:1698  uint256 public EGGS_TO_HATCH_1MINERS=864000 */\n    tag_208:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":14298:14407  function getNumRealRef(address _addr) public view returns(uint256){\r... */\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":14382:14399  numRealRef[_addr] */\n      and\n        /* \"ex/egg.sol\":14356:14363  uint256 */\n      0x00\n        /* \"ex/egg.sol\":14382:14399  numRealRef[_addr] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":14382:14392  numRealRef */\n      0x0c\n        /* \"ex/egg.sol\":14382:14399  numRealRef[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ex/egg.sol\":14298:14407  function getNumRealRef(address _addr) public view returns(uint256){\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":16829:16969  function calculateEggBuySimple(uint256 eth) public view returns(uint256){\r... */\n    tag_216:\n        /* \"ex/egg.sol\":16893:16900  uint256 */\n      0x00\n        /* \"ex/egg.sol\":16919:16961  calculateEggBuy(eth,address(this).balance) */\n      tag_418\n        /* \"ex/egg.sol\":16935:16938  eth */\n      dup3\n        /* \"ex/egg.sol\":16939:16960  address(this).balance */\n      selfbalance\n        /* \"ex/egg.sol\":16919:16934  calculateEggBuy */\n      tag_113\n        /* \"ex/egg.sol\":16919:16961  calculateEggBuy(eth,address(this).balance) */\n      jump\t// in\n        /* \"ex/egg.sol\":1870:1891  address public market */\n    tag_219:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":15912:16152  function setWhiteListBatch(address[] memory _address, bool _bool) public {\r... */\n    tag_226:\n        /* \"ex/egg.sol\":16018:16028  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":16004:16014  msg.sender */\n      caller\n        /* \"ex/egg.sol\":16004:16028  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":15996:16029  require(msg.sender == ceoAddress) */\n      tag_527\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_527:\n        /* \"ex/egg.sol\":16045:16054  uint256 i */\n      0x00\n        /* \"ex/egg.sol\":16040:16145  for (uint256 i = 0; i < _address.length; i++) {\r... */\n    tag_528:\n        /* \"ex/egg.sol\":16064:16072  _address */\n      dup3\n        /* \"ex/egg.sol\":16064:16079  _address.length */\n      mload\n        /* \"ex/egg.sol\":16060:16061  i */\n      dup2\n        /* \"ex/egg.sol\":16060:16079  i < _address.length */\n      lt\n        /* \"ex/egg.sol\":16040:16145  for (uint256 i = 0; i < _address.length; i++) {\r... */\n      iszero\n      tag_440\n      jumpi\n        /* \"ex/egg.sol\":16128:16133  _bool */\n      dup2\n        /* \"ex/egg.sol\":16101:16112  isWhiteList */\n      0x1a\n        /* \"ex/egg.sol\":16101:16125  isWhiteList[_address[i]] */\n      0x00\n        /* \"ex/egg.sol\":16113:16121  _address */\n      dup6\n        /* \"ex/egg.sol\":16122:16123  i */\n      dup5\n        /* \"ex/egg.sol\":16113:16124  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_531\n      jumpi\n      invalid\n    tag_531:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":16101:16125  isWhiteList[_address[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"ex/egg.sol\":16101:16133  isWhiteList[_address[i]] = _bool */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x01\n        /* \"ex/egg.sol\":16081:16084  i++ */\n      add\n        /* \"ex/egg.sol\":16040:16145  for (uint256 i = 0; i < _address.length; i++) {\r... */\n      jump(tag_528)\n        /* \"ex/egg.sol\":15640:15784  function setWhiteList(address _addr, bool _bool) public{\r... */\n    tag_230:\n        /* \"ex/egg.sol\":15728:15738  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":15714:15724  msg.sender */\n      caller\n        /* \"ex/egg.sol\":15714:15738  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":15706:15739  require(msg.sender == ceoAddress) */\n      tag_533\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_533:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":15750:15768  isWhiteList[_addr] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":15750:15761  isWhiteList */\n      0x1a\n        /* \"ex/egg.sol\":15750:15768  isWhiteList[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ex/egg.sol\":15750:15776  isWhiteList[_addr] = _bool */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":15640:15784  function setWhiteList(address _addr, bool _bool) public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":16493:16655  function calculateEggSell(uint256 eggs) public view returns(uint256){\r... */\n    tag_234:\n        /* \"ex/egg.sol\":16599:16609  marketEggs */\n      sload(0x0f)\n        /* \"ex/egg.sol\":16616:16620  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":16610:16646  ERC20(USDT).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ex/egg.sol\":16640:16644  this */\n      address\n        /* \"ex/egg.sol\":16610:16646  ERC20(USDT).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"ex/egg.sol\":16553:16560  uint256 */\n      0x00\n      swap4\n        /* \"ex/egg.sol\":16579:16647  calculateTrade(eggs,marketEggs,ERC20(USDT).balanceOf(address(this))) */\n      tag_418\n      swap4\n        /* \"ex/egg.sol\":16594:16598  eggs */\n      dup7\n      swap4\n        /* \"ex/egg.sol\":16599:16609  marketEggs */\n      swap2\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":16616:16620  USDT */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"ex/egg.sol\":16610:16631  ERC20(USDT).balanceOf */\n      0x70a08231\n      swap2\n        /* \"ex/egg.sol\":16610:16646  ERC20(USDT).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ex/egg.sol\":16616:16620  USDT */\n      dup7\n        /* \"ex/egg.sol\":16610:16646  ERC20(USDT).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_536\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_536:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_538\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_538:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_539\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_539:\n      pop\n      mload\n        /* \"ex/egg.sol\":16579:16593  calculateTrade */\n      tag_106\n        /* \"ex/egg.sol\":16579:16647  calculateTrade(eggs,marketEggs,ERC20(USDT).balanceOf(address(this))) */\n      jump\t// in\n        /* \"ex/egg.sol\":5118:5397  function getPCDsend(address addr) public view returns(uint){\r... */\n    tag_238:\n        /* \"ex/egg.sol\":5172:5176  uint */\n      0x00\n        /* \"ex/egg.sol\":5188:5198  bool _bool */\n      dup1\n      0x00\n      dup1\n      mload\n      0x20\n      data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":5199:5262  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved */\n      and\n      0x35e838be\n        /* \"ex/egg.sol\":5263:5267  addr */\n      dup5\n        /* \"ex/egg.sol\":5199:5268  PCD(0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306).AlreadyInvolved(addr) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_541\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_541:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_543\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_543:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_544\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_544:\n      pop\n      mload\n      swap1\n      pop\n      dup1\n        /* \"ex/egg.sol\":5282:5313  _bool && !AlreadyInvolved[addr] */\n      dup1\n      iszero\n      tag_545\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":5292:5313  AlreadyInvolved[addr] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":5292:5307  AlreadyInvolved */\n      0x0d\n        /* \"ex/egg.sol\":5292:5313  AlreadyInvolved[addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"ex/egg.sol\":5291:5313  !AlreadyInvolved[addr] */\n      iszero\n        /* \"ex/egg.sol\":5282:5313  _bool && !AlreadyInvolved[addr] */\n    tag_545:\n        /* \"ex/egg.sol\":5279:5390  if(_bool && !AlreadyInvolved[addr]){\r... */\n      iszero\n      tag_546\n      jumpi\n        /* \"ex/egg.sol\":5336:5337  1 */\n      0x01\n        /* \"ex/egg.sol\":5329:5337  return 1 */\n      swap2\n      pop\n      pop\n      jump(tag_282)\n        /* \"ex/egg.sol\":5279:5390  if(_bool && !AlreadyInvolved[addr]){\r... */\n    tag_546:\n        /* \"ex/egg.sol\":5377:5378  0 */\n      0x00\n        /* \"ex/egg.sol\":5370:5378  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_282)\n        /* \"ex/egg.sol\":2155:2200  mapping (address => address) public referrals */\n    tag_242:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":1832:1863  address public marketingAddress */\n    tag_245:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":14877:14984  function setOrMax(uint _max)public{\r... */\n    tag_249:\n        /* \"ex/egg.sol\":14944:14954  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":14930:14940  msg.sender */\n      caller\n        /* \"ex/egg.sol\":14930:14954  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":14922:14955  require(msg.sender == ceoAddress) */\n      tag_549\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_549:\n        /* \"ex/egg.sol\":14966:14971  orMax */\n      0x17\n        /* \"ex/egg.sol\":14966:14976  orMax=_max */\n      sstore\n        /* \"ex/egg.sol\":14877:14984  function setOrMax(uint _max)public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":2965:2999  bool public isFomoFinished = false */\n    tag_252:\n      sload(0x1c)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":14550:14724  function setOpeningTime(uint256 _OpeningTime)public{\r... */\n    tag_256:\n        /* \"ex/egg.sol\":14634:14644  ceoAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"ex/egg.sol\":14620:14630  msg.sender */\n      caller\n        /* \"ex/egg.sol\":14620:14644  msg.sender == ceoAddress */\n      eq\n        /* \"ex/egg.sol\":14612:14645  require(msg.sender == ceoAddress) */\n      tag_551\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_551:\n        /* \"ex/egg.sol\":14664:14675  OpeningTime */\n      sload(0x16)\n        /* \"ex/egg.sol\":14664:14680  OpeningTime == 0 */\n      iszero\n        /* \"ex/egg.sol\":14656:14681  require(OpeningTime == 0) */\n      tag_552\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_552:\n        /* \"ex/egg.sol\":14692:14703  OpeningTime */\n      0x16\n        /* \"ex/egg.sol\":14692:14716  OpeningTime=_OpeningTime */\n      sstore\n        /* \"ex/egg.sol\":14550:14724  function setOpeningTime(uint256 _OpeningTime)public{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":2451:2472  uint256 public vaTova */\n    tag_259:\n      sload(0x11)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2679:2750  address public pancakeRouter=0x10ED43C718714eb63d5aA57B78B54704E256024E */\n    tag_262:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x18))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":2586:2612  uint256 public fomoRewards */\n    tag_265:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":1966:1985  address public USDT */\n    tag_268:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":17745:17994  function getEggsSinceLastHatch(address adr) public view returns(uint256){\r... */\n    tag_272:\n        /* \"ex/egg.sol\":17809:17816  uint256 */\n      0x00\n        /* \"ex/egg.sol\":17854:17875  EGGS_TO_HATCH_1MINERS */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":17905:17919  lastHatch[adr] */\n      dup4\n      and\n      dup3\n      mstore\n        /* \"ex/egg.sol\":17905:17914  lastHatch */\n      0x0a\n        /* \"ex/egg.sol\":17905:17919  lastHatch[adr] */\n      0x20\n      mstore\n      0x40\n      dup3\n      keccak256\n      sload\n        /* \"ex/egg.sol\":17809:17816  uint256 */\n      dup3\n      swap2\n        /* \"ex/egg.sol\":17850:17921  min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(block.timestamp,lastHatch[adr])) */\n      tag_554\n      swap2\n        /* \"ex/egg.sol\":17876:17920  SafeMath.sub(block.timestamp,lastHatch[adr]) */\n      tag_555\n      swap1\n        /* \"ex/egg.sol\":17889:17904  block.timestamp */\n      timestamp\n      swap1\n        /* \"ex/egg.sol\":17876:17888  SafeMath.sub */\n      tag_434\n        /* \"ex/egg.sol\":17876:17920  SafeMath.sub(block.timestamp,lastHatch[adr]) */\n      jump\t// in\n    tag_555:\n        /* \"ex/egg.sol\":17850:17853  min */\n      tag_556\n        /* \"ex/egg.sol\":17850:17921  min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(block.timestamp,lastHatch[adr])) */\n      jump\t// in\n    tag_554:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":17966:17985  hatcheryMiners[adr] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":17966:17980  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":17966:17985  hatcheryMiners[adr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":17828:17921  uint256 secondsPassed=min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(block.timestamp,lastHatch[adr])) */\n      swap1\n      swap2\n      pop\n        /* \"ex/egg.sol\":17939:17986  SafeMath.mul(secondsPassed,hatcheryMiners[adr]) */\n      tag_557\n      swap1\n        /* \"ex/egg.sol\":17828:17921  uint256 secondsPassed=min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(block.timestamp,lastHatch[adr])) */\n      dup3\n      swap1\n        /* \"ex/egg.sol\":17939:17951  SafeMath.mul */\n      tag_412\n        /* \"ex/egg.sol\":17939:17986  SafeMath.mul(secondsPassed,hatcheryMiners[adr]) */\n      jump\t// in\n    tag_557:\n        /* \"ex/egg.sol\":17932:17986  return SafeMath.mul(secondsPassed,hatcheryMiners[adr]) */\n      swap4\n        /* \"ex/egg.sol\":17745:17994  function getEggsSinceLastHatch(address adr) public view returns(uint256){\r... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":2833:2876  mapping(address => bool) public isWhiteList */\n    tag_279:\n      mstore(0x20, 0x1a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"ex/egg.sol\":19277:19565  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_356:\n        /* \"ex/egg.sol\":19335:19342  uint256 */\n      0x00\n        /* \"ex/egg.sol\":19434:19443  uint256 c */\n      dup1\n        /* \"ex/egg.sol\":19450:19451  b */\n      dup3\n        /* \"ex/egg.sol\":19446:19447  a */\n      dup5\n        /* \"ex/egg.sol\":19446:19451  a / b */\n      dup2\n      tag_561\n      jumpi\n      invalid\n    tag_561:\n      div\n      swap5\n        /* \"ex/egg.sol\":19277:19565  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":19889:20036  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_358:\n        /* \"ex/egg.sol\":19947:19954  uint256 */\n      0x00\n        /* \"ex/egg.sol\":19979:19984  a + b */\n      dup3\n      dup3\n      add\n        /* \"ex/egg.sol\":20002:20008  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ex/egg.sol\":19995:20009  assert(c >= a) */\n      tag_419\n      jumpi\n      invalid\n        /* \"ex/egg.sol\":9875:10454  function setEgg(address addr,uint256 _eggsUse,uint miner,uint b)internal{\r... */\n    tag_365:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10033:10053  referrals[upaddress] */\n      dup1\n      dup6\n      and\n        /* \"ex/egg.sol\":9958:9975  address upaddress */\n      0x00\n        /* \"ex/egg.sol\":10033:10053  referrals[upaddress] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10033:10042  referrals */\n      0x0b\n        /* \"ex/egg.sol\":10033:10053  referrals[upaddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ex/egg.sol\":9976:9980  addr */\n      dup6\n      swap2\n        /* \"ex/egg.sol\":10008:10016  _eggsUse */\n      dup6\n      swap2\n        /* \"ex/egg.sol\":10033:10053  referrals[upaddress] */\n      and\n        /* \"ex/egg.sol\":10033:10067  referrals[upaddress] != address(0) */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"ex/egg.sol\":10033:10116  referrals[upaddress] != address(0) && hatcheryMiners[referrals[upaddress]] >= miner */\n      tag_565\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10086:10106  referrals[upaddress] */\n      dup1\n      dup4\n      and\n        /* \"ex/egg.sol\":10071:10107  hatcheryMiners[referrals[upaddress]] */\n      0x00\n        /* \"ex/egg.sol\":10086:10106  referrals[upaddress] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10086:10095  referrals */\n      0x0b\n        /* \"ex/egg.sol\":10086:10106  referrals[upaddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      swap1\n      swap4\n      and\n        /* \"ex/egg.sol\":10071:10107  hatcheryMiners[referrals[upaddress]] */\n      dup3\n      mstore\n        /* \"ex/egg.sol\":10071:10085  hatcheryMiners */\n      0x08\n        /* \"ex/egg.sol\":10071:10107  hatcheryMiners[referrals[upaddress]] */\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"ex/egg.sol\":10071:10116  hatcheryMiners[referrals[upaddress]] >= miner */\n      dup5\n      gt\n      iszero\n        /* \"ex/egg.sol\":10033:10116  referrals[upaddress] != address(0) && hatcheryMiners[referrals[upaddress]] >= miner */\n    tag_565:\n        /* \"ex/egg.sol\":10030:10447  if(referrals[upaddress] != address(0) && hatcheryMiners[referrals[upaddress]] >= miner){\r... */\n      iszero\n      tag_566\n      jumpi\n        /* \"ex/egg.sol\":10173:10197  eggsUsed.mul(b).div(100) */\n      tag_567\n        /* \"ex/egg.sol\":10193:10196  100 */\n      0x64\n        /* \"ex/egg.sol\":10173:10188  eggsUsed.mul(b) */\n      tag_568\n        /* \"ex/egg.sol\":10173:10181  eggsUsed */\n      dup4\n        /* \"ex/egg.sol\":10186:10187  b */\n      dup7\n        /* \"ex/egg.sol\":10173:10185  eggsUsed.mul */\n      tag_412\n        /* \"ex/egg.sol\":10173:10188  eggsUsed.mul(b) */\n      jump\t// in\n    tag_568:\n        /* \"ex/egg.sol\":10173:10192  eggsUsed.mul(b).div */\n      swap1\n      tag_356\n        /* \"ex/egg.sol\":10173:10197  eggsUsed.mul(b).div(100) */\n      jump\t// in\n    tag_567:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10148:10168  referrals[upaddress] */\n      dup1\n      dup5\n      and\n        /* \"ex/egg.sol\":10136:10169  claimedEggs[referrals[upaddress]] */\n      0x00\n        /* \"ex/egg.sol\":10148:10168  referrals[upaddress] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10148:10157  referrals */\n      0x0b\n        /* \"ex/egg.sol\":10148:10168  referrals[upaddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      swap1\n      swap4\n      and\n        /* \"ex/egg.sol\":10136:10169  claimedEggs[referrals[upaddress]] */\n      dup3\n      mstore\n        /* \"ex/egg.sol\":10136:10147  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":10136:10169  claimedEggs[referrals[upaddress]] */\n      swap1\n      mstore\n      keccak256\n        /* \"ex/egg.sol\":10136:10197  claimedEggs[referrals[upaddress]] += eggsUsed.mul(b).div(100) */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"ex/egg.sol\":10030:10447  if(referrals[upaddress] != address(0) && hatcheryMiners[referrals[upaddress]] >= miner){\r... */\n      jump(tag_571)\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10222:10242  referrals[upaddress] */\n      dup3\n      dup2\n      and\n        /* \"ex/egg.sol\":10254:10255  0 */\n      0x00\n        /* \"ex/egg.sol\":10222:10242  referrals[upaddress] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10222:10231  referrals */\n      0x0b\n        /* \"ex/egg.sol\":10222:10242  referrals[upaddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      and\n        /* \"ex/egg.sol\":10219:10447  if(referrals[upaddress] == address(0)){\r... */\n      tag_570\n      jumpi\n      jump(tag_571)\n    tag_570:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10327:10347  referrals[upaddress] */\n      dup1\n      dup4\n      and\n        /* \"ex/egg.sol\":10300:10316  uint  MyeggsUsed */\n      0x00\n        /* \"ex/egg.sol\":10327:10347  referrals[upaddress] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10327:10336  referrals */\n      0x0b\n        /* \"ex/egg.sol\":10327:10347  referrals[upaddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ex/egg.sol\":10300:10316  uint  MyeggsUsed */\n      swap1\n      swap2\n        /* \"ex/egg.sol\":10317:10348  getMyEggs(referrals[upaddress]) */\n      tag_572\n      swap2\n        /* \"ex/egg.sol\":10327:10347  referrals[upaddress] */\n      and\n        /* \"ex/egg.sol\":10317:10326  getMyEggs */\n      tag_126\n        /* \"ex/egg.sol\":10317:10348  getMyEggs(referrals[upaddress]) */\n      jump\t// in\n    tag_572:\n        /* \"ex/egg.sol\":10300:10348  uint  MyeggsUsed=getMyEggs(referrals[upaddress]) */\n      swap1\n      pop\n        /* \"ex/egg.sol\":10403:10429  MyeggsUsed.mul(b).div(100) */\n      tag_573\n        /* \"ex/egg.sol\":10425:10428  100 */\n      0x64\n        /* \"ex/egg.sol\":10403:10420  MyeggsUsed.mul(b) */\n      tag_568\n        /* \"ex/egg.sol\":10300:10348  uint  MyeggsUsed=getMyEggs(referrals[upaddress]) */\n      dup4\n        /* \"ex/egg.sol\":10418:10419  b */\n      dup8\n        /* \"ex/egg.sol\":10403:10417  MyeggsUsed.mul */\n      tag_412\n        /* \"ex/egg.sol\":10403:10420  MyeggsUsed.mul(b) */\n      jump\t// in\n        /* \"ex/egg.sol\":10403:10429  MyeggsUsed.mul(b).div(100) */\n    tag_573:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":10380:10400  referrals[upaddress] */\n      dup1\n      dup6\n      and\n        /* \"ex/egg.sol\":10368:10401  claimedEggs[referrals[upaddress]] */\n      0x00\n        /* \"ex/egg.sol\":10380:10400  referrals[upaddress] */\n      swap1\n      dup2\n      mstore\n        /* \"ex/egg.sol\":10380:10389  referrals */\n      0x0b\n        /* \"ex/egg.sol\":10380:10400  referrals[upaddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      swap1\n      swap4\n      and\n        /* \"ex/egg.sol\":10368:10401  claimedEggs[referrals[upaddress]] */\n      dup3\n      mstore\n        /* \"ex/egg.sol\":10368:10379  claimedEggs */\n      0x09\n        /* \"ex/egg.sol\":10368:10401  claimedEggs[referrals[upaddress]] */\n      swap1\n      mstore\n      keccak256\n        /* \"ex/egg.sol\":10368:10429  claimedEggs[referrals[upaddress]]+=MyeggsUsed.mul(b).div(100) */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n      pop\n        /* \"ex/egg.sol\":10219:10447  if(referrals[upaddress] == address(0)){\r... */\n    tag_571:\n        /* \"ex/egg.sol\":9875:10454  function setEgg(address addr,uint256 _eggsUse,uint miner,uint b)internal{\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ex/egg.sol\":18974:19182  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_412:\n        /* \"ex/egg.sol\":19032:19039  uint256 */\n      0x00\n        /* \"ex/egg.sol\":19056:19062  a == 0 */\n      dup3\n        /* \"ex/egg.sol\":19052:19099  if (a == 0) {\r... */\n      tag_576\n      jumpi\n      pop\n        /* \"ex/egg.sol\":19086:19087  0 */\n      0x00\n        /* \"ex/egg.sol\":19079:19087  return 0 */\n      jump(tag_418)\n        /* \"ex/egg.sol\":19052:19099  if (a == 0) {\r... */\n    tag_576:\n        /* \"ex/egg.sol\":19121:19126  a * b */\n      dup3\n      dup3\n      mul\n        /* \"ex/egg.sol\":19125:19126  b */\n      dup3\n        /* \"ex/egg.sol\":19121:19122  a */\n      dup5\n        /* \"ex/egg.sol\":19121:19126  a * b */\n      dup3\n        /* \"ex/egg.sol\":19121:19122  a */\n      dup2\n        /* \"ex/egg.sol\":19144:19149  c / a */\n      tag_577\n      jumpi\n      invalid\n    tag_577:\n      div\n        /* \"ex/egg.sol\":19144:19154  c / a == b */\n      eq\n        /* \"ex/egg.sol\":19137:19155  assert(c / a == b) */\n      tag_419\n      jumpi\n      invalid\n        /* \"ex/egg.sol\":19691:19814  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_434:\n        /* \"ex/egg.sol\":19749:19756  uint256 */\n      0x00\n        /* \"ex/egg.sol\":19781:19782  a */\n      dup3\n        /* \"ex/egg.sol\":19776:19777  b */\n      dup3\n        /* \"ex/egg.sol\":19776:19782  b <= a */\n      gt\n      iszero\n        /* \"ex/egg.sol\":19769:19783  assert(b <= a) */\n      tag_580\n      jumpi\n      invalid\n    tag_580:\n      pop\n        /* \"ex/egg.sol\":19801:19806  a - b */\n      swap1\n      sub\n      swap1\n        /* \"ex/egg.sol\":19691:19814  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":13882:14290  function addLiquidity(address _pancakeRouter,address token,uint256 _usdt)internal{\r... */\n    tag_442:\n        /* \"ex/egg.sol\":14037:14053  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"ex/egg.sol\":14051:14052  2 */\n      0x02\n        /* \"ex/egg.sol\":14037:14053  new address[](2) */\n      dup1\n      dup3\n      mstore\n        /* \"ex/egg.sol\":14013:14034  address[] memory path */\n      0x60\n        /* \"ex/egg.sol\":14037:14053  new address[](2) */\n      dup1\n      dup4\n      add\n      dup5\n      mstore\n        /* \"ex/egg.sol\":14013:14034  address[] memory path */\n      swap3\n        /* \"ex/egg.sol\":14037:14053  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"ex/egg.sol\":14072:14076  USDT */\n      sload(0x07)\n        /* \"ex/egg.sol\":14064:14071  path[0] */\n      dup3\n      mload\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":14072:14076  USDT */\n      and\n      swap2\n        /* \"ex/egg.sol\":14064:14071  path[0] */\n      dup4\n      swap2\n      pop\n        /* \"ex/egg.sol\":14072:14076  USDT */\n      0x00\n      swap1\n        /* \"ex/egg.sol\":14064:14071  path[0] */\n      tag_584\n      jumpi\n      invalid\n    tag_584:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ex/egg.sol\":14064:14076  path[0]=USDT */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ex/egg.sol\":14095:14100  token */\n      dup3\n        /* \"ex/egg.sol\":14087:14091  path */\n      dup2\n        /* \"ex/egg.sol\":14092:14093  1 */\n      0x01\n        /* \"ex/egg.sol\":14087:14094  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_585\n      jumpi\n      invalid\n    tag_585:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"ex/egg.sol\":14087:14100  path[1]=token */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"ex/egg.sol\":14139:14153  _pancakeRouter */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ex/egg.sol\":14122:14179  IPancakeRouter01(_pancakeRouter).swapExactTokensForTokens */\n      and\n      0x38ed1739\n        /* \"ex/egg.sol\":14180:14185  _usdt */\n      dup4\n        /* \"ex/egg.sol\":14186:14187  0 */\n      0x00\n        /* \"ex/egg.sol\":14188:14192  path */\n      dup5\n        /* \"ex/egg.sol\":14193:14235  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"ex/egg.sol\":14236:14251  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":14254:14257  360 */\n      0x0168\n        /* \"ex/egg.sol\":14236:14257  block.timestamp + 360 */\n      add\n        /* \"ex/egg.sol\":14122:14258  IPancakeRouter01(_pancakeRouter).swapExactTokensForTokens(_usdt,0,path,0x000000000000000000000000000000000000dEaD,block.timestamp + 360) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup6\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_586:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_588\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_586)\n    tag_588:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_589\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_589:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_591\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_591:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      0x20\n      dup2\n      lt\n      iszero\n      tag_592\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_592:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_593\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_593:\n      swap1\n      dup4\n      add\n      swap1\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_594\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_594:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_595\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_595:\n      dup3\n      mstore\n      pop\n      dup2\n      mload\n      0x20\n      swap2\n      dup3\n      add\n      swap3\n      dup3\n      add\n      swap2\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_596:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_598\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_596)\n    tag_598:\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap1\n      swap2\n      add\n      0x40\n      mstore\n      pop\n      pop\n        /* \"ex/egg.sol\":14281:14282  0 */\n      0x00\n        /* \"ex/egg.sol\":14269:14280  fomoRewards */\n      0x15\n        /* \"ex/egg.sol\":14269:14282  fomoRewards=0 */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"ex/egg.sol\":13882:14290  function addLiquidity(address _pancakeRouter,address token,uint256 _usdt)internal{\r... */\n      jump\t// out\n        /* \"ex/egg.sol\":11411:11677  function updateFomoFinished() private returns(bool){\r... */\n    tag_460:\n        /* \"ex/egg.sol\":11457:11461  bool */\n      0x00\n        /* \"ex/egg.sol\":11473:11489  uint256 realTime */\n      dup1\n        /* \"ex/egg.sol\":11492:11530  SafeMath.add(fomoNeededTime, fomoTime) */\n      tag_600\n        /* \"ex/egg.sol\":11505:11519  fomoNeededTime */\n      sload(0x14)\n        /* \"ex/egg.sol\":11521:11529  fomoTime */\n      sload(0x12)\n        /* \"ex/egg.sol\":11492:11504  SafeMath.add */\n      tag_358\n        /* \"ex/egg.sol\":11492:11530  SafeMath.add(fomoNeededTime, fomoTime) */\n      jump\t// in\n    tag_600:\n        /* \"ex/egg.sol\":11545:11559  isFomoFinished */\n      sload(0x1c)\n        /* \"ex/egg.sol\":11473:11530  uint256 realTime = SafeMath.add(fomoNeededTime, fomoTime) */\n      swap1\n      swap2\n      pop\n        /* \"ex/egg.sol\":11545:11559  isFomoFinished */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"ex/egg.sol\":11541:11670  if(!isFomoFinished){\r... */\n      tag_602\n      jumpi\n        /* \"ex/egg.sol\":11596:11604  realTime */\n      dup1\n        /* \"ex/egg.sol\":11578:11593  block.timestamp */\n      timestamp\n        /* \"ex/egg.sol\":11578:11604  block.timestamp > realTime */\n      gt\n        /* \"ex/egg.sol\":11575:11659  if(block.timestamp > realTime){\r... */\n      iszero\n      tag_602\n      jumpi\n        /* \"ex/egg.sol\":11624:11638  isFomoFinished */\n      0x1c\n        /* \"ex/egg.sol\":11624:11643  isFomoFinished=true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"ex/egg.sol\":11575:11659  if(block.timestamp > realTime){\r... */\n    tag_602:\n        /* \"ex/egg.sol\":11411:11677  function updateFomoFinished() private returns(bool){\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"ex/egg.sol\":18765:18870  function min(uint256 a, uint256 b) private pure returns (uint256) {\r... */\n    tag_556:\n        /* \"ex/egg.sol\":18822:18829  uint256 */\n      0x00\n        /* \"ex/egg.sol\":18853:18854  b */\n      dup2\n        /* \"ex/egg.sol\":18849:18850  a */\n      dup4\n        /* \"ex/egg.sol\":18849:18854  a < b */\n      lt\n        /* \"ex/egg.sol\":18849:18862  a < b ? a : b */\n      tag_604\n      jumpi\n        /* \"ex/egg.sol\":18861:18862  b */\n      dup2\n        /* \"ex/egg.sol\":18849:18862  a < b ? a : b */\n      jump(tag_419)\n    tag_604:\n      pop\n        /* \"ex/egg.sol\":18857:18858  a */\n      swap1\n      swap2\n        /* \"ex/egg.sol\":18765:18870  function min(uint256 a, uint256 b) private pure returns (uint256) {\r... */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_9cffcb0df7163556b6fa491a38f99359cf138b842899a16ccda25e98d15742a8 000000000000000000000000815839e08b9cf9ece5d54cc1eb957e4df559c306\n\n    auxdata: 0xa26469706673582212208cb21aaac930ccb6079878538ba99fe571875e9130325f21453797a54d2fa90f64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0xD2F00 PUSH1 0x0 SSTORE PUSH2 0x2710 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH2 0x1388 PUSH1 0x2 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x7080 PUSH1 0x14 SSTORE PUSH1 0x18 DUP1 SLOAD PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x19 DUP1 SLOAD PUSH20 0xE4F1AE07760B985D1A94C6E5FB1589AFAF44918C SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1C DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR PUSH2 0xFF00 NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND CALLER SWAP1 DUP2 OR SWAP3 DUP4 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD DUP4 AND PUSH20 0x7E6825510DCE92EFD2D95E1F3F4FCCE98D66925B OR DUP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 SWAP4 AND PUSH20 0x55D398326F99059FF775485246999027B3197955 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x3 SSTORE PUSH1 0xA PUSH1 0x11 SSTORE PUSH1 0x64 PUSH1 0x17 SSTORE PUSH4 0x629D7BC0 PUSH1 0x16 SSTORE SWAP5 DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP4 SLOAD PUSH1 0x18 SLOAD DUP5 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP8 AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP5 ADD MSTORE SWAP3 MLOAD SWAP3 SWAP1 SWAP5 AND SWAP4 PUSH4 0x95EA7B3 SWAP4 PUSH1 0x44 DUP1 DUP5 ADD SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP2 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x2F22 DUP1 PUSH3 0x1CE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C45F730 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8D14E127 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xABDD11A8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC54E44EB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0xC04 JUMPI DUP1 PUSH4 0xD7C8843B EQ PUSH2 0xC19 JUMPI DUP1 PUSH4 0xDF67C4ED EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xF99031A7 EQ PUSH2 0xC4C JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0xABDD11A8 EQ PUSH2 0xB9B JUMPI DUP1 PUSH4 0xB41892F0 EQ PUSH2 0xBC5 JUMPI DUP1 PUSH4 0xC21EBD07 EQ PUSH2 0xBDA JUMPI DUP1 PUSH4 0xC4053010 EQ PUSH2 0xBEF JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x9CA423B3 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0xB14 JUMPI DUP1 PUSH4 0xA5ECE941 EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0xAB153916 EQ PUSH2 0xB5C JUMPI DUP1 PUSH4 0xABD3263D EQ PUSH2 0xB86 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x8D14E127 EQ PUSH2 0xA7C JUMPI DUP1 PUSH4 0x8E316327 EQ PUSH2 0xAB7 JUMPI DUP1 PUSH4 0x8E47E334 EQ PUSH2 0xAE1 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x79532AA9 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x7E286735 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x7E286735 EQ PUSH2 0x958 JUMPI DUP1 PUSH4 0x7E56FDE5 EQ PUSH2 0x98B JUMPI DUP1 PUSH4 0x80F55605 EQ PUSH2 0x9B5 JUMPI DUP1 PUSH4 0x86301658 EQ PUSH2 0x9CA JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x79532AA9 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0x7CDD9BCF EQ PUSH2 0x92E JUMPI DUP1 PUSH4 0x7CDEBC21 EQ PUSH2 0x943 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x6F77926B GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x7F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0x72670361 EQ PUSH2 0x895 JUMPI DUP1 PUSH4 0x765A72DE EQ PUSH2 0x8C8 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x5C45F730 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x6DCEA85F EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0x6DDFB6CB EQ PUSH2 0x7A4 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2EF6A743 GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x4226E7AF GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x467ECE79 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x467ECE79 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x47514914 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0x48FE4A06 EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x55DB22EE EQ PUSH2 0x747 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x4226E7AF EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x450EDF95 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x45DC3DD8 EQ PUSH2 0x68D JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x3955F0FE GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x3955F0FE EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x3BC0461A EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0x3FD78CB9 EQ PUSH2 0x62A JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2EF6A743 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x35E838BE EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x3681E7CF EQ PUSH2 0x5CE JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2296459E GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x26FD8422 GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x26FD8422 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x27EC648B EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x2CED7F2E EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x2E9392BB EQ PUSH2 0x553 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2296459E EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x229824C4 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x24D06E74 EQ PUSH2 0x4E4 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0xA76E5ED GT PUSH2 0x354 JUMPI DUP1 PUSH4 0xA76E5ED EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x1C1B8772 EQ PUSH2 0x464 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x221CC79 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x93CA84F EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xA0F8168 EQ PUSH2 0x3F4 JUMPI PUSH2 0x381 JUMP JUMPDEST CALLDATASIZE PUSH2 0x381 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xD54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x1585 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1B94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1BDC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1BE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1BFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1C00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1C06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1C47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x1C4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1E47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x1ECF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1EDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1EE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x23E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2411 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2423 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x243F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x2468 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2499 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x2531 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP7 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2737 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2749 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x275B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x276D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x277C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2782 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x279D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x27A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0x27B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x2826 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2868 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x29D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x29E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x2A02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2A10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x2A39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x2A3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x2A4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x2A54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1E GT PUSH2 0xCA7 JUMPI POP PUSH1 0x1 PUSH2 0xCAB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x1AF41C5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x35E838BE SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 ISZERO PUSH2 0xE09 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1582 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH4 0x79532AA9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 MLOAD PUSH2 0x9C40 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x79532AA9 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT ISZERO PUSH2 0xF78 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x79532AA9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x79532AA9 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x17AE8 EQ ISZERO PUSH2 0xF5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x17AE8 SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x79532AA9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x79532AA9 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x72670361 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x72670361 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x467ECE79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x467ECE79 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x11D45245 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x47514914 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x3B2D396F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x765A72DE SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1230 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x9CA423B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x9CA423B3 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x136A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0xF SLOAD PUSH5 0x141DD76000 EQ ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E9392BB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x141A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xF SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x93CA84F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x93CA84F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x147A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x12 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC405301 PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0xC4053010 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x15 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x27EC648B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x27EC648B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x10 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15A6 CALLER PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B6 DUP3 PUSH1 0x0 SLOAD PUSH2 0x2AD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x15D3 SWAP1 DUP3 PUSH2 0x2AEB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 MSTORE DUP3 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xB SWAP1 MSTORE DUP2 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE DUP4 DUP4 KECCAK256 SLOAD DUP3 AND DUP1 DUP5 MSTORE DUP5 DUP5 KECCAK256 SLOAD DUP4 AND DUP1 DUP6 MSTORE DUP6 DUP6 KECCAK256 SLOAD DUP5 AND DUP1 DUP7 MSTORE SWAP6 SWAP1 SWAP5 KECCAK256 SLOAD SWAP2 SWAP5 SWAP1 SWAP4 SWAP3 SWAP1 SWAP2 AND DUP5 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1668 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x16BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x1698 PUSH1 0xA DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16E3 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0xA PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1719 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1767 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1749 SWAP1 PUSH2 0x1698 PUSH1 0x4 DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x178F SWAP1 DUP6 SWAP1 DUP10 SWAP1 PUSH1 0x4 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17C5 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1813 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17F5 SWAP1 PUSH2 0x1698 PUSH1 0x3 DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x183B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x183B SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH1 0x3 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1871 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x18BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18A1 SWAP1 PUSH2 0x1698 PUSH1 0x2 DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18E7 SWAP1 DUP4 SWAP1 DUP10 SWAP1 PUSH1 0x2 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x191D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1968 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x194A SWAP1 PUSH2 0x1698 DUP10 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1990 SWAP1 DUP3 SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH2 0x2AFA JUMP JUMPDEST PUSH2 0x1999 CALLER PUSH2 0xC7F JUMP JUMPDEST ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP4 AND DUP1 DUP4 MSTORE DUP2 DUP4 KECCAK256 SLOAD DUP5 AND DUP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 SLOAD DUP6 AND DUP1 DUP6 MSTORE DUP4 DUP6 KECCAK256 SLOAD DUP7 AND DUP1 DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SLOAD SWAP2 SWAP5 SWAP1 SWAP4 SWAP3 SWAP2 AND DUP5 ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A13 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1A7E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A64 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1AB5 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B06 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1B71 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B57 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x1B88 PUSH1 0xF SLOAD PUSH2 0x1698 DUP10 PUSH1 0x5 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0xF SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD4 PUSH2 0x1BA5 PUSH1 0x1 SLOAD DUP5 PUSH2 0x2C2E JUMP JUMPDEST PUSH2 0x1BCF PUSH1 0x2 SLOAD PUSH2 0x1698 PUSH2 0x1BC9 PUSH2 0x1BBD PUSH1 0x1 SLOAD DUP11 PUSH2 0x2C2E JUMP JUMPDEST PUSH2 0x1698 PUSH1 0x2 SLOAD DUP13 PUSH2 0x2C2E JUMP JUMPDEST DUP10 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x2AD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF1 DUP4 DUP4 PUSH1 0xF SLOAD PUSH2 0x1B94 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1BF4 SWAP1 PUSH2 0x1698 DUP5 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C6E CALLER PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C7B DUP3 PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C88 DUP3 PUSH2 0x1E30 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH2 0x1CB7 SWAP1 DUP5 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH1 0x1E DUP6 MUL DIV PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH2 0x1D56 DUP6 DUP6 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x64 DUP2 PUSH1 0x46 MUL DUP2 PUSH2 0x1DC1 JUMPI INVALID JUMPDEST PUSH1 0x15 DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x16 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1E2B JUMPI PUSH9 0x2B5E3AF16B1880000 PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x18 SLOAD PUSH1 0x19 SLOAD PUSH2 0x1E11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH9 0x2B5E3AF16B1880000 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x1E27 SWAP1 PUSH9 0x2B5E3AF16B1880000 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 PUSH2 0x1E40 DUP4 PUSH1 0x3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E95 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1A5B9D985B1A590818D85B1B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH5 0x141DD76000 PUSH1 0xF SSTORE PUSH2 0x1ECA TIMESTAMP PUSH2 0xE10 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1F43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08115B9BDD59DA081554D115 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT DUP1 PUSH2 0x1F70 JUMPI POP PUSH1 0x3 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT JUMPDEST PUSH2 0x1FB3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08115B9BDD59DA081554D115 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x200C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2020 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x202C PUSH2 0x2E77 JUMP JUMPDEST POP PUSH1 0x1C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2072 JUMPI PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0x0 PUSH2 0x205F DUP3 PUSH1 0x14 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x206D PUSH1 0x15 SLOAD DUP3 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x15 SSTORE POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20A2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x15180 TIMESTAMP ADD SWAP1 SSTORE PUSH2 0x20BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0x15180 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x212F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x212F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206F6E207468652077686974656C69737400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x21BB SWAP3 DUP6 SWAP3 PUSH2 0x21B6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2198 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST SWAP1 POP PUSH2 0x21CF DUP2 PUSH2 0x21CA DUP4 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x2C52 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21DC DUP4 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH1 0x1E DUP6 MUL DIV PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x64 DUP2 PUSH1 0x46 MUL DUP2 PUSH2 0x226A JUMPI INVALID JUMPDEST PUSH1 0x15 DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2291 SWAP1 DUP4 PUSH2 0x2AEB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x22CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x22FA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH9 0x1158E460913D00000 DUP4 LT PUSH2 0x2337 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2375 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH1 0x17 SLOAD PUSH1 0x10 SLOAD DUP2 PUSH2 0x2384 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x11 SLOAD DUP2 LT PUSH2 0x23AA JUMPI PUSH1 0x3 DUP1 SLOAD PUSH8 0x8AC7230489E80000 ADD SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23C4 SWAP1 DUP6 PUSH2 0x2AEB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x23DC PUSH2 0x1585 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x243A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x2484 JUMPI POP PUSH1 0x1C SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x248D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x251B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0x9 DUP2 MSTORE DUP7 DUP3 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xA DUP6 MSTORE DUP6 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB DUP5 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP5 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x25BA DUP10 PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25CD DUP3 PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 MLOAD SWAP6 SWAP15 POP SWAP1 SWAP13 POP SWAP5 SWAP11 POP DUP11 SWAP5 SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2656 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP8 POP SWAP6 POP TIMESTAMP GT ISZERO PUSH2 0x269F JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26C2 SWAP1 TIMESTAMP PUSH2 0x2C52 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x2713 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH2 0x270C SWAP2 PUSH2 0x2C52 JUMP JUMPDEST SWAP3 POP PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 DUP3 SELFBALANCE PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1E2B JUMPI DUP2 PUSH1 0x1A PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x27EC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x283D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH2 0x1BF4 SWAP4 DUP7 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x35E838BE DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2963 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x29A3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xCAB JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x16 SLOAD ISZERO PUSH2 0x2A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP3 SWAP2 PUSH2 0x2A93 SWAP2 PUSH2 0x2A8E SWAP1 TIMESTAMP SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2ABA SWAP1 DUP3 SWAP1 PUSH2 0x2C2E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 PUSH2 0x2AE2 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1BF1 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP2 DUP6 SWAP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2B4E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE KECCAK256 SLOAD DUP5 GT ISZERO JUMPDEST ISZERO PUSH2 0x2B9B JUMPI PUSH2 0x2B68 PUSH1 0x64 PUSH2 0x2B62 DUP4 DUP7 PUSH2 0x2C2E JUMP JUMPDEST SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x2BBF JUMPI PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2BE5 SWAP2 AND PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH2 0x2BF6 PUSH1 0x64 PUSH2 0x2B62 DUP4 DUP8 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C3D JUMPI POP PUSH1 0x0 PUSH2 0x1BF4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C4A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1BF1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2C5E JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x7 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2C9E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2CCC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP4 PUSH1 0x0 DUP5 PUSH2 0xDEAD TIMESTAMP PUSH2 0x168 ADD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D77 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D5F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2DFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x2E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E5C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E44 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP POP PUSH1 0x0 PUSH1 0x15 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E88 PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x1C SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2EB2 JUMPI DUP1 TIMESTAMP GT ISZERO PUSH2 0x2EB2 JUMPI PUSH1 0x1C DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2EC5 JUMPI DUP2 PUSH2 0x1BF1 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP DUP2 PC CODECOPY 0xE0 DUP12 SWAP13 0xF9 0xEC 0xE5 0xD5 0x4C 0xC1 0xEB SWAP6 PUSH31 0x4DF559C306A26469706673582212208CB21AAAC930CCB6079878538BA99FE5 PUSH18 0x875E9130325F21453797A54D2FA90F64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMap": "1554:17319:0:-:0;;;1692:6;1655:43;;1763:5;1751:17;;;;1788:4;1775:17;;1898:29;;;-1:-1:-1;;;;1898:29:0;;;2574:5;1898:29;2542:37;2679:71;;;2708:42;-1:-1:-1;;;;;;2679:71:0;;;;;;;2757:69;;;2784:42;2757:69;;;;;;;;2931:27;;;-1:-1:-1;;2931:27:0;;;;-1:-1:-1;;2965:34:0;;;3006:434;;;;;;;;;-1:-1:-1;3037:10:0;:21;;-1:-1:-1;;;;;;3037:21:0;;;3048:10;3037:21;;;;;;;3069:16;:61;;;;3088:42;3069:61;;;3141:4;:47;;;;;3146:42;3141:47;;;-1:-1:-1;;;;;3211:10:0;;;3037;3199:23;;;:11;:23;;;;;;;;:30;;-1:-1:-1;;3199:30:0;3037:21;3199:30;;;;;;3252:9;3240:11;:21;3279:2;3272:6;:9;3298:3;3292:5;:9;3324:10;3312:11;:22;3345:26;;;:14;:26;;;;;:28;;;;3390:4;;3404:13;;3384:48;;-1:-1:-1;;;3384:48:0;;3404:13;;;3384:48;;;;;;;-1:-1:-1;;3384:48:0;;;;;;3390:4;;;;;3384:19;;:48;;;;;3199:23;;3384:48;;;;;;;;;;3390:4;3384:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1554:17319:0;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061037a5760003560e01c80635c45f730116101d15780638d14e12711610102578063abdd11a8116100a0578063c54e44eb1161006f578063c54e44eb14610c04578063d7c8843b14610c19578063df67c4ed14610747578063f99031a714610c4c57610381565b8063abdd11a814610b9b578063b41892f014610bc5578063c21ebd0714610bda578063c405301014610bef57610381565b80639ca423b3116100dc5780639ca423b314610b14578063a5ece94114610b47578063ab15391614610b5c578063abd3263d14610b8657610381565b80638d14e12714610a7c5780638e31632714610ab75780638e47e33414610ae157610381565b806379532aa91161016f5780637e286735116101495780637e286735146109585780637e56fde51461098b57806380f55605146109b557806386301658146109ca57610381565b806379532aa9146108fb5780637cdd9bcf1461092e5780637cdebc211461094357610381565b80636f77926b116101ab5780636f77926b146107f757806370a08231146108625780637267036114610895578063765a72de146108c857610381565b80635c45f7301461075c5780636dcea85f146107715780636ddfb6cb146107a457610381565b80632ef6a743116102ab5780634226e7af11610249578063467ece7911610223578063467ece79146106b757806347514914146106ea57806348fe4a061461071d57806355db22ee1461074757610381565b80634226e7af1461063f578063450edf951461065457806345dc3dd81461068d57610381565b80633955f0fe116102855780633955f0fe146105e35780633bc0461a146105f85780633c5f07cb146106225780633fd78cb91461062a57610381565b80632ef6a7431461056857806335e838be1461059b5780633681e7cf146105ce57610381565b80632296459e1161031857806326fd8422116102f257806326fd8422146104f957806327ec648b146105295780632ced7f2e1461053e5780632e9392bb1461055357610381565b80632296459e14610499578063229824c4146104ae57806324d06e74146104e457610381565b80630a76e5ed116103545780630a76e5ed1461042557806312065fe01461043a578063158ef93e1461044f5780631c1b87721461046457610381565b80630221cc7914610386578063093ca84f146103cd5780630a0f8168146103f457610381565b3661038157005b600080fd5b34801561039257600080fd5b506103b9600480360360208110156103a957600080fd5b50356001600160a01b0316610c7f565b604080519115158252519081900360200190f35b3480156103d957600080fd5b506103e2610cb0565b60408051918252519081900360200190f35b34801561040057600080fd5b50610409610cb6565b604080516001600160a01b039092168252519081900360200190f35b34801561043157600080fd5b506103e2610cc5565b34801561044657600080fd5b506103e2610cd8565b34801561045b57600080fd5b506103b9610d54565b34801561047057600080fd5b506104976004803603602081101561048757600080fd5b50356001600160a01b0316610d64565b005b3480156104a557600080fd5b50610497611585565b3480156104ba57600080fd5b506103e2600480360360608110156104d157600080fd5b5080359060208101359060400135611b94565b3480156104f057600080fd5b506103e2611bdc565b34801561050557600080fd5b506103e26004803603604081101561051c57600080fd5b5080359060200135611be2565b34801561053557600080fd5b506103e2611bfa565b34801561054a57600080fd5b506103e2611c00565b34801561055f57600080fd5b506103e2611c06565b34801561057457600080fd5b506103e26004803603602081101561058b57600080fd5b50356001600160a01b0316611c0c565b3480156105a757600080fd5b506103b9600480360360208110156105be57600080fd5b50356001600160a01b0316611c32565b3480156105da57600080fd5b506103e2611c47565b3480156105ef57600080fd5b50610497611c4d565b34801561060457600080fd5b506103e26004803603602081101561061b57600080fd5b5035611e30565b610497611e47565b34801561063657600080fd5b50610409611ecf565b34801561064b57600080fd5b506103e2611ede565b34801561066057600080fd5b506104976004803603604081101561067757600080fd5b506001600160a01b038135169060200135611ee4565b34801561069957600080fd5b50610497600480360360208110156106b057600080fd5b50356123e3565b3480156106c357600080fd5b506103e2600480360360208110156106da57600080fd5b50356001600160a01b03166123ff565b3480156106f657600080fd5b506103e26004803603602081101561070d57600080fd5b50356001600160a01b0316612411565b34801561072957600080fd5b506104976004803603602081101561074057600080fd5b5035612423565b34801561075357600080fd5b5061049761243f565b34801561076857600080fd5b50610497612468565b34801561077d57600080fd5b506104976004803603602081101561079457600080fd5b50356001600160a01b0316612499565b3480156107b057600080fd5b50610497600480360360c08110156107c757600080fd5b506001600160a01b0381358116916020810135916040820135916060810135916080820135169060a00135612531565b34801561080357600080fd5b5061082a6004803603602081101561081a57600080fd5b50356001600160a01b03166125a5565b604080519788526020880196909652868601949094526060860192909252608085015260a084015260c0830152519081900360e00190f35b34801561086e57600080fd5b506103e26004803603602081101561088557600080fd5b50356001600160a01b0316612725565b3480156108a157600080fd5b506103e2600480360360208110156108b857600080fd5b50356001600160a01b0316612737565b3480156108d457600080fd5b506103e2600480360360208110156108eb57600080fd5b50356001600160a01b0316612749565b34801561090757600080fd5b506103e26004803603602081101561091e57600080fd5b50356001600160a01b031661275b565b34801561093a57600080fd5b5061040961276d565b34801561094f57600080fd5b506103e261277c565b34801561096457600080fd5b506103e26004803603602081101561097b57600080fd5b50356001600160a01b0316612782565b34801561099757600080fd5b506103e2600480360360208110156109ae57600080fd5b503561279d565b3480156109c157600080fd5b506104096127a9565b3480156109d657600080fd5b50610497600480360360408110156109ed57600080fd5b810190602081018135640100000000811115610a0857600080fd5b820183602082011115610a1a57600080fd5b80359060200191846020830284011164010000000083111715610a3c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050505035151590506127b8565b348015610a8857600080fd5b5061049760048036036040811015610a9f57600080fd5b506001600160a01b0381351690602001351515612826565b348015610ac357600080fd5b506103e260048036036020811015610ada57600080fd5b5035612868565b348015610aed57600080fd5b506103e260048036036020811015610b0457600080fd5b50356001600160a01b03166128f1565b348015610b2057600080fd5b5061040960048036036020811015610b3757600080fd5b50356001600160a01b03166129bc565b348015610b5357600080fd5b506104096129d7565b348015610b6857600080fd5b5061049760048036036020811015610b7f57600080fd5b50356129e6565b348015610b9257600080fd5b506103b9612a02565b348015610ba757600080fd5b5061049760048036036020811015610bbe57600080fd5b5035612a10565b348015610bd157600080fd5b506103e2612a39565b348015610be657600080fd5b50610409612a3f565b348015610bfb57600080fd5b506103e2612a4e565b348015610c1057600080fd5b50610409612a54565b348015610c2557600080fd5b506103e260048036036020811015610c3c57600080fd5b50356001600160a01b0316612a63565b348015610c5857600080fd5b506103b960048036036020811015610c6f57600080fd5b50356001600160a01b0316612ac1565b6001600160a01b0381166000908152600c6020526040812054601e11610ca757506001610cab565b5060005b919050565b60125481565b6006546001600160a01b031681565b3360009081526008602052604090205490565b600754604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610d2357600080fd5b505afa158015610d37573d6000803e3d6000fd5b505050506040513d6020811015610d4d57600080fd5b5051905090565b600554600160a01b900460ff1681565b60408051631af41c5f60e11b81526001600160a01b03831660048201529051600080516020612ecd833981519152916335e838be916024808301926020929190829003018186803b158015610db857600080fd5b505afa158015610dcc573d6000803e3d6000fd5b505050506040513d6020811015610de257600080fd5b50518015610e0957506001600160a01b0381166000908152600d602052604090205460ff16155b15611582576001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905581516379532aa960e01b815260048101939093529051619c4092600080516020612ecd833981519152926379532aa992602480840193829003018186803b158015610e7f57600080fd5b505afa158015610e93573d6000803e3d6000fd5b505050506040513d6020811015610ea957600080fd5b50511115610f7857604080516379532aa960e01b81526001600160a01b03831660048201529051600080516020612ecd833981519152916379532aa9916024808301926020929190829003018186803b158015610f0557600080fd5b505afa158015610f19573d6000803e3d6000fd5b505050506040513d6020811015610f2f57600080fd5b505162017ae81415610f5a576001600160a01b038116600090815260086020526040902062017ae890555b6001600160a01b038116600090815260086020526040812055611012565b604080516379532aa960e01b81526001600160a01b03831660048201529051600080516020612ecd833981519152916379532aa9916024808301926020929190829003018186803b158015610fcc57600080fd5b505afa158015610fe0573d6000803e3d6000fd5b505050506040513d6020811015610ff657600080fd5b50516001600160a01b0382166000908152600860205260409020555b60408051637267036160e01b81526001600160a01b03831660048201529051600080516020612ecd833981519152916372670361916024808301926020929190829003018186803b15801561106657600080fd5b505afa15801561107a573d6000803e3d6000fd5b505050506040513d602081101561109057600080fd5b50516001600160a01b03821660008181526009602090815260409182902093909355805163467ece7960e01b8152600481019290925251600080516020612ecd8339815191529263467ece799260248082019391829003018186803b1580156110f857600080fd5b505afa15801561110c573d6000803e3d6000fd5b505050506040513d602081101561112257600080fd5b50516001600160a01b0382166000818152600a60209081526040918290209390935580516311d4524560e21b8152600481019290925251600080516020612ecd8339815191529263475149149260248082019391829003018186803b15801561118a57600080fd5b505afa15801561119e573d6000803e3d6000fd5b505050506040513d60208110156111b457600080fd5b50516001600160a01b0382166000818152600c6020908152604091829020939093558051633b2d396f60e11b8152600481019290925251600080516020612ecd8339815191529263765a72de9260248082019391829003018186803b15801561121c57600080fd5b505afa158015611230573d6000803e3d6000fd5b505050506040513d602081101561124657600080fd5b50516001600160a01b0382166000818152600e60209081526040918290209390935580516370a0823160e01b8152600481019290925251600080516020612ecd833981519152926370a082319260248082019391829003018186803b1580156112ae57600080fd5b505afa1580156112c2573d6000803e3d6000fd5b505050506040513d60208110156112d857600080fd5b50516001600160a01b0382166000818152601b6020908152604091829020939093558051639ca423b360e01b8152600481019290925251600080516020612ecd83398151915292639ca423b39260248082019391829003018186803b15801561134057600080fd5b505afa158015611354573d6000803e3d6000fd5b505050506040513d602081101561136a57600080fd5b50516001600160a01b038281166000908152600b6020526040902080546001600160a01b03191691909216179055600f5464141dd76000141561158257600080516020612ecd8339815191526001600160a01b0316632e9392bb6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156113f057600080fd5b505af1158015611404573d6000803e3d6000fd5b505050506040513d602081101561141a57600080fd5b5051600f556040805163093ca84f60e01b81529051600080516020612ecd8339815191529163093ca84f9160048083019260209291908290030181600087803b15801561146657600080fd5b505af115801561147a573d6000803e3d6000fd5b505050506040513d602081101561149057600080fd5b505160125560408051630c40530160e41b81529051600080516020612ecd8339815191529163c40530109160048083019260209291908290030181600087803b1580156114dc57600080fd5b505af11580156114f0573d6000803e3d6000fd5b505050506040513d602081101561150657600080fd5b5051601555604080516327ec648b60e01b81529051600080516020612ecd833981519152916327ec648b9160048083019260209291908290030181600087803b15801561155257600080fd5b505af1158015611566573d6000803e3d6000fd5b505050506040513d602081101561157c57600080fd5b50516010555b50565b600554600160a01b900460ff1661159b57600080fd5b60006115a633611c0c565b905060006115b682600054612ad6565b336000908152600860205260409020549091506115d39082612aeb565b3360009081526008602090815260408083209390935560098152828220829055600a8152828220429055600b9052818120546001600160a01b03908116808352838320548216808452848420548316808552858520548416808652959094205491949093929091168415801590611668575033600090815260086020526040808220546001600160a01b038816835291205410155b156116bb576001600160a01b03851660009081526009602052604090205461169d90611698600a8a026064612ad6565b612aeb565b6001600160a01b0386166000908152600960205260409020556116e3565b6001600160a01b0385166000908152600860205260409020546116e39086908990600a612afa565b6001600160a01b03841615801590611719575033600090815260086020526040808220546001600160a01b038716835291205410155b15611767576001600160a01b0384166000908152600960205260409020546117499061169860048a026064612ad6565b6001600160a01b03851660009081526009602052604090205561178f565b6001600160a01b03841660009081526008602052604090205461178f90859089906004612afa565b6001600160a01b038316158015906117c5575033600090815260086020526040808220546001600160a01b038616835291205410155b15611813576001600160a01b0383166000908152600960205260409020546117f59061169860038a026064612ad6565b6001600160a01b03841660009081526009602052604090205561183b565b6001600160a01b03831660009081526008602052604090205461183b90849089906003612afa565b6001600160a01b03821615801590611871575033600090815260086020526040808220546001600160a01b038516835291205410155b156118bf576001600160a01b0382166000908152600960205260409020546118a19061169860028a026064612ad6565b6001600160a01b0383166000908152600960205260409020556118e7565b6001600160a01b0382166000908152600860205260409020546118e790839089906002612afa565b6001600160a01b0381161580159061191d575033600090815260086020526040808220546001600160a01b038416835291205410155b15611968576001600160a01b03811660009081526009602052604090205461194a90611698896064612ad6565b6001600160a01b038216600090815260096020526040902055611990565b6001600160a01b03811660009081526008602052604090205461199090829089906001612afa565b61199933610c7f565b15611b77576001600160a01b038082166000908152600b60205260408082205483168083528183205484168084528284205485168085528385205486168086529390942054919490939291168415611a2d576001600160a01b038516600090815260096020526040902054611a13906116988e6064612ad6565b6001600160a01b0386166000908152600960205260409020555b6001600160a01b03841615611a7e576001600160a01b038416600090815260096020526040902054611a64906116988e6064612ad6565b6001600160a01b0385166000908152600960205260409020555b6001600160a01b03831615611acf576001600160a01b038316600090815260096020526040902054611ab5906116988e6064612ad6565b6001600160a01b0384166000908152600960205260409020555b6001600160a01b03821615611b20576001600160a01b038216600090815260096020526040902054611b06906116988e6064612ad6565b6001600160a01b0383166000908152600960205260409020555b6001600160a01b03811615611b71576001600160a01b038116600090815260096020526040902054611b57906116988e6064612ad6565b6001600160a01b0382166000908152600960205260409020555b50505050505b611b88600f54611698896005612ad6565b600f5550505050505050565b6000611bd4611ba560015484612c2e565b611bcf600254611698611bc9611bbd6001548a612c2e565b6116986002548c612c2e565b89612ad6565b612ad6565b949350505050565b60145481565b6000611bf18383600f54611b94565b90505b92915050565b60105481565b60175481565b600f5481565b6001600160a01b038116600090815260096020526040812054611bf49061169884612a63565b600d6020526000908152604090205460ff1681565b60035481565b600554600160a01b900460ff16611c6357600080fd5b6000611c6e33611c0c565b90506000611c7b82612868565b90506000611c8882611e30565b336000908152600960209081526040808320839055600a9091529020429055600f54909150611cb79084612aeb565b600f556007546004546001600160a01b039182169163a9059cbb91166064601e8502046040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611d2057600080fd5b505af1158015611d34573d6000803e3d6000fd5b50506007546001600160a01b0316915063a9059cbb905033611d568585612c52565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611d9c57600080fd5b505af1158015611db0573d6000803e3d6000fd5b5050505060648160460281611dc157fe5b60158054929091049091019055601654421115611e2b576802b5e3af16b18800006015541115611e2b57601854601954611e11916001600160a01b0390811691166802b5e3af16b1880000612c64565b601554611e27906802b5e3af16b1880000612c52565b6015555b505050565b6000611bf4611e40836003612c2e565b6064612ad6565b6006546001600160a01b03163314611e95576040805162461bcd60e51b815260206004820152600c60248201526b1a5b9d985b1a590818d85b1b60a21b604482015290519081900360640190fd5b600f5415611ea257600080fd5b6005805460ff60a01b1916600160a01b17905564141dd76000600f55611eca42610e10612aeb565b601255565b6013546001600160a01b031681565b60165481565b600554600160a01b900460ff16611efa57600080fd5b600354811115611f43576040805162461bcd60e51b815260206004820152600f60248201526e139bdd08115b9bdd59da081554d115608a1b604482015290519081900360640190fd5b336000908152600e6020526040902054421180611f705750600354336000908152601b6020526040902054105b611fb3576040805162461bcd60e51b815260206004820152600f60248201526e139bdd08115b9bdd59da081554d115608a1b604482015290519081900360640190fd5b600754604080516323b872dd60e01b81523360048201523060248201526044810184905290516001600160a01b03909216916323b872dd9160648082019260009290919082900301818387803b15801561200c57600080fd5b505af1158015612020573d6000803e3d6000fd5b5050505061202c612e77565b50601c54610100900460ff1661207257601380546001600160a01b0319163317905542601255600061205f826014612ad6565b905061206d60155482612aeb565b601555505b336000908152600e60205260409020546120a257336000908152600e6020526040902062015180420190556120bb565b336000908152600e602052604090208054620151800190555b601c5460ff161561212f57336000908152601a602052604090205460ff16151560011461212f576040805162461bcd60e51b815260206004820152601c60248201527f596f7520617265206e6f74206f6e207468652077686974656c69737400000000604482015290519081900360640190fd5b600754604080516370a0823160e01b815230600482015290516000926121bb9285926121b6926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561218457600080fd5b505afa158015612198573d6000803e3d6000fd5b505050506040513d60208110156121ae57600080fd5b505185612c52565b611be2565b90506121cf816121ca83611e30565b612c52565b905060006121dc83611e30565b6007546004549192506001600160a01b039081169163a9059cbb91166064601e8502046040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561224557600080fd5b505af1158015612259573d6000803e3d6000fd5b505050506064816046028161226a57fe5b60158054929091049091019055336000908152600960205260409020546122919083612aeb565b33600090815260096020908152604080832093909355600b905220546001600160a01b03161580156122cc57506001600160a01b0384163314155b156122fa57336000908152600b6020526040902080546001600160a01b0319166001600160a01b0386161790555b6801158e460913d00000831061233757336000908152600b60209081526040808320546001600160a01b03168352600c9091529020805460010190555b336000908152600d602052604090205460ff1661237557336000908152600d60205260409020805460ff191660019081179091556010805490910190555b60006017546010548161238457fe5b04905060115481106123aa5760038054678ac7230489e800000190556011805460010190555b336000908152601b60205260409020546123c49085612aeb565b336000908152601b60205260409020556123dc611585565b5050505050565b6006546001600160a01b031633146123fa57600080fd5b600355565b600a6020526000908152604090205481565b600c6020526000908152604090205481565b6006546001600160a01b0316331461243a57600080fd5b601455565b6006546001600160a01b0316331461245657600080fd5b600680546001600160a01b0319169055565b6006546001600160a01b0316331480156124845750601c5460ff165b61248d57600080fd5b601c805460ff19169055565b6006546001600160a01b031633146124b057600080fd5b6007546040805163095ea7b360e01b81526001600160a01b03848116600483015260001960248301529151919092169163095ea7b39160448083019260209291908290030181600087803b15801561250757600080fd5b505af115801561251b573d6000803e3d6000fd5b505050506040513d6020811015611e2b57600080fd5b6006546001600160a01b0316331461254857600080fd5b6001600160a01b039586166000908152600860209081526040808320979097556009815286822095909555600a855285812093909355600b845284832080546001600160a01b0319169290961691909117909455600c9091522055565b6000806000806000806000806125ba89611c0c565b9050600081156125d4576125cd82612868565b90506125d8565b5060005b6015546001600160a01b03808c166000908152600860209081526040918290205460075483516370a0823160e01b81523060048201529351959e50909c50949a508a94909216926370a0823192602480840193919291829003018186803b15801561264257600080fd5b505afa158015612656573d6000803e3d6000fd5b505050506040513d602081101561266c57600080fd5b50516003546001600160a01b038c166000908152600e6020526040902054919750955042111561269f57600093506126c5565b6001600160a01b038a166000908152600e60205260409020546126c29042612c52565b93505b6003546001600160a01b038b166000908152601b60205260409020541015612713576001600160a01b038a166000908152601b602052604090205460035461270c91612c52565b9250612718565b600092505b5050919395979092949650565b601b6020526000908152604090205481565b60096020526000908152604090205481565b600e6020526000908152604090205481565b60086020526000908152604090205481565b6019546001600160a01b031681565b60005481565b6001600160a01b03166000908152600c602052604090205490565b6000611bf48247611be2565b6005546001600160a01b031681565b6006546001600160a01b031633146127cf57600080fd5b60005b8251811015611e2b5781601a60008584815181106127ec57fe5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016127d2565b6006546001600160a01b0316331461283d57600080fd5b6001600160a01b03919091166000908152601a60205260409020805460ff1916911515919091179055565b600f54600754604080516370a0823160e01b81523060048201529051600093611bf493869391926001600160a01b03909116916370a08231916024808301926020929190829003018186803b1580156128c057600080fd5b505afa1580156128d4573d6000803e3d6000fd5b505050506040513d60208110156128ea57600080fd5b5051611b94565b600080600080516020612ecd8339815191526001600160a01b03166335e838be846040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561294f57600080fd5b505afa158015612963573d6000803e3d6000fd5b505050506040513d602081101561297957600080fd5b505190508080156129a357506001600160a01b0383166000908152600d602052604090205460ff16155b156129b2576001915050610cab565b6000915050610cab565b600b602052600090815260409020546001600160a01b031681565b6004546001600160a01b031681565b6006546001600160a01b031633146129fd57600080fd5b601755565b601c54610100900460ff1681565b6006546001600160a01b03163314612a2757600080fd5b60165415612a3457600080fd5b601655565b60115481565b6018546001600160a01b031681565b60155481565b6007546001600160a01b031681565b600080546001600160a01b0383168252600a60205260408220548291612a9391612a8e904290612c52565b612eb6565b6001600160a01b038416600090815260086020526040902054909150612aba908290612c2e565b9392505050565b601a6020526000908152604090205460ff1681565b600080828481612ae257fe5b04949350505050565b600082820183811015611bf157fe5b6001600160a01b038085166000908152600b6020526040902054859185911615801590612b4e57506001600160a01b038083166000908152600b602090815260408083205490931682526008905220548411155b15612b9b57612b686064612b628386612c2e565b90612ad6565b6001600160a01b038084166000908152600b60209081526040808320549093168252600990522080549091019055612c26565b6001600160a01b038281166000908152600b602052604090205416612bbf57612c26565b6001600160a01b038083166000908152600b60205260408120549091612be59116611c0c565b9050612bf66064612b628387612c2e565b6001600160a01b038085166000908152600b60209081526040808320549093168252600990522080549091019055505b505050505050565b600082612c3d57506000611bf4565b82820282848281612c4a57fe5b0414611bf157fe5b600082821115612c5e57fe5b50900390565b6040805160028082526060808301845292602083019080368337505060075482519293506001600160a01b031691839150600090612c9e57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508281600181518110612ccc57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050836001600160a01b03166338ed17398360008461dead42610168016040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015612d77578181015183820152602001612d5f565b505050509050019650505050505050600060405180830381600087803b158015612da057600080fd5b505af1158015612db4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015612ddd57600080fd5b8101908080516040519392919084640100000000821115612dfd57600080fd5b908301906020820185811115612e1257600080fd5b8251866020820283011164010000000082111715612e2f57600080fd5b82525081516020918201928201910280838360005b83811015612e5c578181015183820152602001612e44565b50505050919091016040525050600060155550505050505050565b600080612e88601454601254612aeb565b601c54909150610100900460ff16612eb25780421115612eb257601c805461ff0019166101001790555b5090565b6000818310612ec55781611bf1565b509091905056fe000000000000000000000000815839e08b9cf9ece5d54cc1eb957e4df559c306a26469706673582212208cb21aaac930ccb6079878538ba99fe571875e9130325f21453797a54d2fa90f64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x37A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C45F730 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x8D14E127 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xABDD11A8 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC54E44EB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0xC04 JUMPI DUP1 PUSH4 0xD7C8843B EQ PUSH2 0xC19 JUMPI DUP1 PUSH4 0xDF67C4ED EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xF99031A7 EQ PUSH2 0xC4C JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0xABDD11A8 EQ PUSH2 0xB9B JUMPI DUP1 PUSH4 0xB41892F0 EQ PUSH2 0xBC5 JUMPI DUP1 PUSH4 0xC21EBD07 EQ PUSH2 0xBDA JUMPI DUP1 PUSH4 0xC4053010 EQ PUSH2 0xBEF JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x9CA423B3 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0xB14 JUMPI DUP1 PUSH4 0xA5ECE941 EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0xAB153916 EQ PUSH2 0xB5C JUMPI DUP1 PUSH4 0xABD3263D EQ PUSH2 0xB86 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x8D14E127 EQ PUSH2 0xA7C JUMPI DUP1 PUSH4 0x8E316327 EQ PUSH2 0xAB7 JUMPI DUP1 PUSH4 0x8E47E334 EQ PUSH2 0xAE1 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x79532AA9 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x7E286735 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x7E286735 EQ PUSH2 0x958 JUMPI DUP1 PUSH4 0x7E56FDE5 EQ PUSH2 0x98B JUMPI DUP1 PUSH4 0x80F55605 EQ PUSH2 0x9B5 JUMPI DUP1 PUSH4 0x86301658 EQ PUSH2 0x9CA JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x79532AA9 EQ PUSH2 0x8FB JUMPI DUP1 PUSH4 0x7CDD9BCF EQ PUSH2 0x92E JUMPI DUP1 PUSH4 0x7CDEBC21 EQ PUSH2 0x943 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x6F77926B GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x7F7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x862 JUMPI DUP1 PUSH4 0x72670361 EQ PUSH2 0x895 JUMPI DUP1 PUSH4 0x765A72DE EQ PUSH2 0x8C8 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x5C45F730 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x6DCEA85F EQ PUSH2 0x771 JUMPI DUP1 PUSH4 0x6DDFB6CB EQ PUSH2 0x7A4 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2EF6A743 GT PUSH2 0x2AB JUMPI DUP1 PUSH4 0x4226E7AF GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x467ECE79 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x467ECE79 EQ PUSH2 0x6B7 JUMPI DUP1 PUSH4 0x47514914 EQ PUSH2 0x6EA JUMPI DUP1 PUSH4 0x48FE4A06 EQ PUSH2 0x71D JUMPI DUP1 PUSH4 0x55DB22EE EQ PUSH2 0x747 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x4226E7AF EQ PUSH2 0x63F JUMPI DUP1 PUSH4 0x450EDF95 EQ PUSH2 0x654 JUMPI DUP1 PUSH4 0x45DC3DD8 EQ PUSH2 0x68D JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x3955F0FE GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x3955F0FE EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x3BC0461A EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x3C5F07CB EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0x3FD78CB9 EQ PUSH2 0x62A JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2EF6A743 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0x35E838BE EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0x3681E7CF EQ PUSH2 0x5CE JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2296459E GT PUSH2 0x318 JUMPI DUP1 PUSH4 0x26FD8422 GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x26FD8422 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x27EC648B EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0x2CED7F2E EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x2E9392BB EQ PUSH2 0x553 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x2296459E EQ PUSH2 0x499 JUMPI DUP1 PUSH4 0x229824C4 EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0x24D06E74 EQ PUSH2 0x4E4 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0xA76E5ED GT PUSH2 0x354 JUMPI DUP1 PUSH4 0xA76E5ED EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x1C1B8772 EQ PUSH2 0x464 JUMPI PUSH2 0x381 JUMP JUMPDEST DUP1 PUSH4 0x221CC79 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x93CA84F EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xA0F8168 EQ PUSH2 0x3F4 JUMPI PUSH2 0x381 JUMP JUMPDEST CALLDATASIZE PUSH2 0x381 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0xCB6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0xCD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xD54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x1585 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1B94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1BDC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1BE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1BFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1C00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1C06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1C47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x1C4D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x497 PUSH2 0x1E47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x1ECF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x1EDE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1EE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x23E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2411 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2423 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x753 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x243F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH2 0x2468 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x794 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2499 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x2531 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x803 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x82A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP7 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xE0 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x885 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2725 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2737 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2749 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x275B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x276D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x277C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2782 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x997 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x279D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x27A9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP POP CALLDATALOAD ISZERO ISZERO SWAP1 POP PUSH2 0x27B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x2826 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2868 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x28F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29BC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x29D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x29E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x2A02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x497 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2A10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x2A39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x2A3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH2 0x2A4E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x409 PUSH2 0x2A54 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2A63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2AC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1E GT PUSH2 0xCA7 JUMPI POP PUSH1 0x1 PUSH2 0xCAB JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x1AF41C5F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x35E838BE SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP1 ISZERO PUSH2 0xE09 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1582 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH4 0x79532AA9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 MLOAD PUSH2 0x9C40 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x79532AA9 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT ISZERO PUSH2 0xF78 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x79532AA9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x79532AA9 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x17AE8 EQ ISZERO PUSH2 0xF5A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x17AE8 SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1012 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x79532AA9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x79532AA9 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFE0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x72670361 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x72670361 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1066 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x107A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1090 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x467ECE79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x467ECE79 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x110C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x11D45245 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x47514914 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x3B2D396F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x765A72DE SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1230 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD PUSH4 0x9CA423B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH4 0x9CA423B3 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x136A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0xF SLOAD PUSH5 0x141DD76000 EQ ISZERO PUSH2 0x1582 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E9392BB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1404 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x141A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xF SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x93CA84F PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x93CA84F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x147A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x12 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0xC405301 PUSH1 0xE4 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0xC4053010 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x15 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x27EC648B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH4 0x27EC648B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1566 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x157C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x10 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x159B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15A6 CALLER PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15B6 DUP3 PUSH1 0x0 SLOAD PUSH2 0x2AD6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x15D3 SWAP1 DUP3 PUSH2 0x2AEB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x9 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0xA DUP2 MSTORE DUP3 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xB SWAP1 MSTORE DUP2 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP4 MSTORE DUP4 DUP4 KECCAK256 SLOAD DUP3 AND DUP1 DUP5 MSTORE DUP5 DUP5 KECCAK256 SLOAD DUP4 AND DUP1 DUP6 MSTORE DUP6 DUP6 KECCAK256 SLOAD DUP5 AND DUP1 DUP7 MSTORE SWAP6 SWAP1 SWAP5 KECCAK256 SLOAD SWAP2 SWAP5 SWAP1 SWAP4 SWAP3 SWAP1 SWAP2 AND DUP5 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1668 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x16BB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x169D SWAP1 PUSH2 0x1698 PUSH1 0xA DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16E3 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0xA PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1719 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1767 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1749 SWAP1 PUSH2 0x1698 PUSH1 0x4 DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x178F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x178F SWAP1 DUP6 SWAP1 DUP10 SWAP1 PUSH1 0x4 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x17C5 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1813 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17F5 SWAP1 PUSH2 0x1698 PUSH1 0x3 DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x183B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x183B SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH1 0x3 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1871 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x18BF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18A1 SWAP1 PUSH2 0x1698 PUSH1 0x2 DUP11 MUL PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18E7 SWAP1 DUP4 SWAP1 DUP10 SWAP1 PUSH1 0x2 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x191D JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD LT ISZERO JUMPDEST ISZERO PUSH2 0x1968 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x194A SWAP1 PUSH2 0x1698 DUP10 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1990 SWAP1 DUP3 SWAP1 DUP10 SWAP1 PUSH1 0x1 PUSH2 0x2AFA JUMP JUMPDEST PUSH2 0x1999 CALLER PUSH2 0xC7F JUMP JUMPDEST ISZERO PUSH2 0x1B77 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP4 AND DUP1 DUP4 MSTORE DUP2 DUP4 KECCAK256 SLOAD DUP5 AND DUP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 SLOAD DUP6 AND DUP1 DUP6 MSTORE DUP4 DUP6 KECCAK256 SLOAD DUP7 AND DUP1 DUP7 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SLOAD SWAP2 SWAP5 SWAP1 SWAP4 SWAP3 SWAP2 AND DUP5 ISZERO PUSH2 0x1A2D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A13 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x1A7E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A64 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x1ACF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1AB5 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B06 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1B71 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1B57 SWAP1 PUSH2 0x1698 DUP15 PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP POP POP JUMPDEST PUSH2 0x1B88 PUSH1 0xF SLOAD PUSH2 0x1698 DUP10 PUSH1 0x5 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0xF SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BD4 PUSH2 0x1BA5 PUSH1 0x1 SLOAD DUP5 PUSH2 0x2C2E JUMP JUMPDEST PUSH2 0x1BCF PUSH1 0x2 SLOAD PUSH2 0x1698 PUSH2 0x1BC9 PUSH2 0x1BBD PUSH1 0x1 SLOAD DUP11 PUSH2 0x2C2E JUMP JUMPDEST PUSH2 0x1698 PUSH1 0x2 SLOAD DUP13 PUSH2 0x2C2E JUMP JUMPDEST DUP10 PUSH2 0x2AD6 JUMP JUMPDEST PUSH2 0x2AD6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF1 DUP4 DUP4 PUSH1 0xF SLOAD PUSH2 0x1B94 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1BF4 SWAP1 PUSH2 0x1698 DUP5 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C6E CALLER PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C7B DUP3 PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C88 DUP3 PUSH2 0x1E30 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xA SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xF SLOAD SWAP1 SWAP2 POP PUSH2 0x1CB7 SWAP1 DUP5 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH1 0x1E DUP6 MUL DIV PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D34 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH2 0x1D56 DUP6 DUP6 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x64 DUP2 PUSH1 0x46 MUL DUP2 PUSH2 0x1DC1 JUMPI INVALID JUMPDEST PUSH1 0x15 DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x16 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1E2B JUMPI PUSH9 0x2B5E3AF16B1880000 PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x18 SLOAD PUSH1 0x19 SLOAD PUSH2 0x1E11 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND PUSH9 0x2B5E3AF16B1880000 PUSH2 0x2C64 JUMP JUMPDEST PUSH1 0x15 SLOAD PUSH2 0x1E27 SWAP1 PUSH9 0x2B5E3AF16B1880000 PUSH2 0x2C52 JUMP JUMPDEST PUSH1 0x15 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 PUSH2 0x1E40 DUP4 PUSH1 0x3 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E95 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1A5B9D985B1A590818D85B1B PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xF SLOAD ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH5 0x141DD76000 PUSH1 0xF SSTORE PUSH2 0x1ECA TIMESTAMP PUSH2 0xE10 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x12 SSTORE JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1EFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x1F43 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08115B9BDD59DA081554D115 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT DUP1 PUSH2 0x1F70 JUMPI POP PUSH1 0x3 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT JUMPDEST PUSH2 0x1FB3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x139BDD08115B9BDD59DA081554D115 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x200C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2020 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x202C PUSH2 0x2E77 JUMP JUMPDEST POP PUSH1 0x1C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2072 JUMPI PUSH1 0x13 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH1 0x0 PUSH2 0x205F DUP3 PUSH1 0x14 PUSH2 0x2AD6 JUMP JUMPDEST SWAP1 POP PUSH2 0x206D PUSH1 0x15 SLOAD DUP3 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x15 SSTORE POP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x20A2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH3 0x15180 TIMESTAMP ADD SWAP1 SSTORE PUSH2 0x20BB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0x15180 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x212F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x212F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206F6E207468652077686974656C69737400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH2 0x21BB SWAP3 DUP6 SWAP3 PUSH2 0x21B6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2198 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x1BE2 JUMP JUMPDEST SWAP1 POP PUSH2 0x21CF DUP2 PUSH2 0x21CA DUP4 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x2C52 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21DC DUP4 PUSH2 0x1E30 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x4 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 AND PUSH1 0x64 PUSH1 0x1E DUP6 MUL DIV PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x64 DUP2 PUSH1 0x46 MUL DUP2 PUSH2 0x226A JUMPI INVALID JUMPDEST PUSH1 0x15 DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2291 SWAP1 DUP4 PUSH2 0x2AEB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0x22CC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x22FA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE JUMPDEST PUSH9 0x1158E460913D00000 DUP4 LT PUSH2 0x2337 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2375 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH1 0x17 SLOAD PUSH1 0x10 SLOAD DUP2 PUSH2 0x2384 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x11 SLOAD DUP2 LT PUSH2 0x23AA JUMPI PUSH1 0x3 DUP1 SLOAD PUSH8 0x8AC7230489E80000 ADD SWAP1 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x23C4 SWAP1 DUP6 PUSH2 0x2AEB JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x23DC PUSH2 0x1585 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x243A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2456 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x2484 JUMPI POP PUSH1 0x1C SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x248D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x251B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP8 SWAP1 SWAP8 SSTORE PUSH1 0x9 DUP2 MSTORE DUP7 DUP3 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0xA DUP6 MSTORE DUP6 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB DUP5 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP7 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP5 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x25BA DUP10 PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 ISZERO PUSH2 0x25D4 JUMPI PUSH2 0x25CD DUP3 PUSH2 0x2868 JUMP JUMPDEST SWAP1 POP PUSH2 0x25D8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD DUP4 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP4 MLOAD SWAP6 SWAP15 POP SWAP1 SWAP13 POP SWAP5 SWAP11 POP DUP11 SWAP5 SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2656 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x266C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP8 POP SWAP6 POP TIMESTAMP GT ISZERO PUSH2 0x269F JUMPI PUSH1 0x0 SWAP4 POP PUSH2 0x26C5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26C2 SWAP1 TIMESTAMP PUSH2 0x2C52 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x2713 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD PUSH2 0x270C SWAP2 PUSH2 0x2C52 JUMP JUMPDEST SWAP3 POP PUSH2 0x2718 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP JUMPDEST POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 DUP3 SELFBALANCE PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x27CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1E2B JUMPI DUP2 PUSH1 0x1A PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x27EC JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x27D2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x283D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 PUSH2 0x1BF4 SWAP4 DUP7 SWAP4 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x28EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2ECD DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x35E838BE DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2963 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x29A3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0xCAB JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x17 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x16 SLOAD ISZERO PUSH2 0x2A34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x16 SSTORE JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x18 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP3 SWAP2 PUSH2 0x2A93 SWAP2 PUSH2 0x2A8E SWAP1 TIMESTAMP SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x2ABA SWAP1 DUP3 SWAP1 PUSH2 0x2C2E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 PUSH2 0x2AE2 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x1BF1 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP6 SWAP2 DUP6 SWAP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2B4E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE KECCAK256 SLOAD DUP5 GT ISZERO JUMPDEST ISZERO PUSH2 0x2B9B JUMPI PUSH2 0x2B68 PUSH1 0x64 PUSH2 0x2B62 DUP4 DUP7 PUSH2 0x2C2E JUMP JUMPDEST SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND PUSH2 0x2BBF JUMPI PUSH2 0x2C26 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2BE5 SWAP2 AND PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH2 0x2BF6 PUSH1 0x64 PUSH2 0x2B62 DUP4 DUP8 PUSH2 0x2C2E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C3D JUMPI POP PUSH1 0x0 PUSH2 0x1BF4 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C4A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1BF1 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2C5E JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x7 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x2C9E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2CCC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38ED1739 DUP4 PUSH1 0x0 DUP5 PUSH2 0xDEAD TIMESTAMP PUSH2 0x168 ADD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D77 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D5F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x2DFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x2E2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E5C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2E44 JUMP JUMPDEST POP POP POP POP SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 MSTORE POP POP PUSH1 0x0 PUSH1 0x15 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2E88 PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x1C SLOAD SWAP1 SWAP2 POP PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2EB2 JUMPI DUP1 TIMESTAMP GT ISZERO PUSH2 0x2EB2 JUMPI PUSH1 0x1C DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2EC5 JUMPI DUP2 PUSH2 0x1BF1 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP INVALID STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP DUP2 PC CODECOPY 0xE0 DUP12 SWAP13 0xF9 0xEC 0xE5 0xD5 0x4C 0xC1 0xEB SWAP6 PUSH31 0x4DF559C306A26469706673582212208CB21AAAC930CCB6079878538BA99FE5 PUSH18 0x875E9130325F21453797A54D2FA90F64736F PUSH13 0x634300060C0033000000000000 ",
							"sourceMapi;:::-;;;;;;;;;;;;;;;;;;2479:23;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1934:25;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1934:25:0;;;;;;;;;;;;;;17484:103;;;;;;;;;;;;;:::i;17366:112::-;;;;;;;;;;;;;:::i;1898:29::-;;;;;;;;;;;;;:::i;3487:1625::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3487:1625:0;-1:-1:-1;;;;;3487:1625:0;;:::i;:::-;;5403:4466;;;;;;;;;;;;;:::i;16197:290::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16197:290:0;;;;;;;;;;;;:::i;2542:37::-;;;;;;;;;;;;;:::i;16661:162::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16661:162:0;;;;;;;:::i;2409:35::-;;;;;;;;;;;;;:::i;2652:20::-;;;;;;;;;;;;;:::i;2377:25::-;;;;;;;;;;;;;:::i;17593:146::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17593:146:0;-1:-1:-1;;;;;17593:146:0;;:::i;2260:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2260:47:0;-1:-1:-1;;;;;2260:47:0;;:::i;1799:26::-;;;;;;;;;;;;;:::i;10460:828::-;;;;;;;;;;;;;:::i;16975:126::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16975:126:0;;:::i;17107:253::-;;;:::i;2509:26::-;;;;;;;;;;;;;:::i;2619:::-;;;;;;;;;;;;;:::i;11683:1993::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11683:1993:0;;;;;;;;:::i;11294:111::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11294:111:0;;:::i;2103:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2103:45:0;-1:-1:-1;;;;;2103:45:0;;:::i;2207:46::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2207:46:0;-1:-1:-1;;;;;2207:46:0;;:::i;14413:131::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14413:131:0;;:::i;15790:114::-;;;;;;;;;;;;;:::i;14730:141::-;;;;;;;;;;;;;:::i;15320:146::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15320:146:0;-1:-1:-1;;;;;15320:146:0;;:::i;14990:324::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;14990:324:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18000:759::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18000:759:0;-1:-1:-1;;;;;18000:759:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:41;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2883:41:0;-1:-1:-1;;;;;2883:41:0;;:::i;2049:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2049:47:0;-1:-1:-1;;;;;2049:47:0;;:::i;2314:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2314:53:0;-1:-1:-1;;;;;2314:53:0;;:::i;1992:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1992:50:0;-1:-1:-1;;;;;1992:50:0;;:::i;2757:69::-;;;;;;;;;;;;;:::i;1655:43::-;;;;;;;;;;;;;:::i;14298:109::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14298:109:0;-1:-1:-1;;;;;14298:109:0;;:::i;16829:140::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16829:140:0;;:::i;1870:21::-;;;;;;;;;;;;;:::i;15912:240::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15912:240:0;;-1:-1:-1;;;;15912:240:0;;;;-1:-1:-1;15912:240:0;:::i;15640:144::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;15640:144:0;;;;;;;;;;:::i;16493:162::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16493:162:0;;:::i;5118:279::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5118:279:0;-1:-1:-1;;;;;5118:279:0;;:::i;2155:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2155:45:0;-1:-1:-1;;;;;2155:45:0;;:::i;1832:31::-;;;;;;;;;;;;;:::i;14877:107::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14877:107:0;;:::i;2965:34::-;;;;;;;;;;;;;:::i;14550:174::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14550:174:0;;:::i;2451:21::-;;;;;;;;;;;;;:::i;2679:71::-;;;;;;;;;;;;;:::i;2586:26::-;;;;;;;;;;;;;:::i;1966:19::-;;;;;;;;;;;;;:::i;17745:249::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17745:249:0;-1:-1:-1;;;;;17745:249:0;;:::i;2833:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2833:43:0;-1:-1:-1;;;;;2833:43:0;;:::i;13682:191::-;-1:-1:-1;;;;;13761:17:0;;13741:4;13761:17;;;:10;:17;;;;;;13780:2;-1:-1:-1;13757:107:0;;-1:-1:-1;13805:4:0;13798:11;;13757:107;-1:-1:-1;13847:5:0;13757:107;13682:191;;;:::o;2479:23::-;;;;:::o;1934:25::-;;;-1:-1:-1;;;;;1934:25:0;;:::o;17484:103::-;17568:10;17527:7;17553:26;;;:14;:26;;;;;;17484:103;:::o;17366:112::-;17440:4;;17434:36;;;-1:-1:-1;;;17434:36:0;;17464:4;17434:36;;;;;;17408:7;;-1:-1:-1;;;;;17440:4:0;;17434:21;;:36;;;;;;;;;;;;;;17440:4;17434:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17434:36:0;;-1:-1:-1;17366:112:0;:::o;1898:29::-;;;-1:-1:-1;;;1898:29:0;;;;;:::o;3487:1625::-;3535:69;;;-1:-1:-1;;;3535:69:0;;-1:-1:-1;;;;;3535:69:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3539:42:0;3535:63;;:69;;;;;;;;;;;;;;3539:42;3535:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3535:69:0;:95;;;;-1:-1:-1;;;;;;3609:21:0;;;;;;:15;:21;;;;;;;;3608:22;3535:95;3532:1573;;;-1:-1:-1;;;;;3644:21:0;;;;;;:15;:21;;;;;;;;;:26;;-1:-1:-1;;3644:26:0;3666:4;3644:26;;;3686:68;;-1:-1:-1;;;3686:68:0;;;;;;;;;;;3757:5;;-1:-1:-1;;;;;;;;;;;3690:42:0;3686:62;;:68;;;;;;;;;;3690:42;3686:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3686:68:0;:76;3683:414;;;3782:68;;;-1:-1:-1;;;3782:68:0;;-1:-1:-1;;;;;3782:68:0;;;;;;;;-1:-1:-1;;;;;;;;;;;3786:42:0;3782:62;;:68;;;;;;;;;;;;;;3786:42;3782:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3782:68:0;3854:5;3782:77;3779:144;;;-1:-1:-1;;;;;3880:20:0;;;;;;:14;:20;;;;;3901:5;3880:26;;3779:144;-1:-1:-1;;;;;3938:20:0;;3959:1;3938:20;;;:14;:20;;;;;:22;3683:414;;;4015:68;;;-1:-1:-1;;;4015:68:0;;-1:-1:-1;;;;;4015:68:0;;;;;;;;-1:-1:-1;;;;;;;;;;;4019:42:0;4015:62;;:68;;;;;;;;;;;;;;4019:42;4015:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4015:68:0;-1:-1:-1;;;;;3994:20:0;;;;;;:14;4015:68;3994:20;;;;:89;3683:414;4136:65;;;-1:-1:-1;;;4136:65:0;;-1:-1:-1;;;;;4136:65:0;;;;;;;;-1:-1:-1;;;;;;;;;;;4140:42:0;4136:59;;:65;;;;;;;;;;;;;;4140:42;4136:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4136:65:0;-1:-1:-1;;;;;4118:17:0;;;;;;:11;4136:65;4118:17;;;;;;;;:83;;;;4230:63;;-1:-1:-1;;;4230:63:0;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4234:42:0;4230:57;;:63;;;;;;;;;;;4234:42;4230:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4230:63:0;-1:-1:-1;;;;;4214:15:0;;;;;;:9;4230:63;4214:15;;;;;;;;:79;;;;4323:64;;-1:-1:-1;;;4323:64:0;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4327:42:0;4323:58;;:64;;;;;;;;;;;4327:42;4323:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4323:64:0;-1:-1:-1;;;;;4306:16:0;;;;;;:10;4323:64;4306:16;;;;;;;;:81;;;;4426:73;;-1:-1:-1;;;4426:73:0;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4430:42:0;4426:67;;:73;;;;;;;;;;;4430:42;4426:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4426:73:0;-1:-1:-1;;;;;4400:25:0;;;;;;:19;4426:73;4400:25;;;;;;;;:99;;;;4528:63;;-1:-1:-1;;;4528:63:0;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4532:42:0;4528:57;;:63;;;;;;;;;;;4532:42;4528:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4528:63:0;-1:-1:-1;;;;;4512:15:0;;;;;;:9;4528:63;4512:15;;;;;;;;:79;;;;4620:63;;-1:-1:-1;;;4620:63:0;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4624:42:0;4620:57;;:63;;;;;;;;;;;4624:42;4620:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4620:63:0;-1:-1:-1;;;;;4604:15:0;;;;;;;:9;4620:63;4604:15;;;;:79;;-1:-1:-1;;;;;;4604:79:0;;;;;;;;4699:10;;4713:11;4699:25;4696:400;;;-1:-1:-1;;;;;;;;;;;;;;;;4750:58:0;;:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4750:60:0;4739:10;:71;4833:58;;;-1:-1:-1;;;4833:58:0;;;;-1:-1:-1;;;;;;;;;;;4837:42:0;4833:56;;:58;;;;;4750:60;;4833:58;;;;;;;;4837:42;4833:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4833:58:0;4824:8;:67;4917:61;;;-1:-1:-1;;;4917:61:0;;;;-1:-1:-1;;;;;;;;;;;4921:42:0;4917:59;;:61;;;;;4833:58;;4917:61;;;;;;;;4921:42;4917:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4917:61:0;4905:11;:73;5013:70;;;-1:-1:-1;;;5013:70:0;;;;-1:-1:-1;;;;;;;;;;;5017:42:0;5013:68;;:70;;;;;4917:61;;5013:70;;;;;;;;5017:42;5013:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5013:70:0;4992:20;:91;4696:400;3487:1625;:::o;5403:4466::-;5449:11;;-1:-1:-1;;;5449:11:0;;;;5441:20;;;;;;5472:16;5489:21;5499:10;5489:9;:21::i;:::-;5472:38;;5521:17;5539:44;5552:8;5561:21;;5539:12;:44::i;:::-;5649:10;5634:26;;;;:14;:26;;;;;;5521:62;;-1:-1:-1;5621:50:0;;5521:62;5621:12;:50::i;:::-;5609:10;5594:26;;;;:14;:26;;;;;;;;:77;;;;5682:11;:23;;;;;:25;;;5718:9;:21;;;;;5740:15;5718:37;;5816:9;:21;;;;;;-1:-1:-1;;;;;5816:21:0;;;5872:24;;;;;;;;;5931;;;;;;;;;5990;;;;;;;;;6049;;;;;;;;5816:21;;5872:24;;5931;5990;;6049;6283:27;;;;;:90;;-1:-1:-1;6362:10:0;6347:26;;;;:14;:26;;;;;;;-1:-1:-1;;;;;6314:29:0;;;;;;;:59;;6283:90;6279:371;;;-1:-1:-1;;;;;6450:26:0;;;;;;:11;:26;;;;;;6419:125;;6495:34;6520:2;6509:13;;6525:3;6495:12;:34::i;:::-;6419:12;:125::i;:::-;-1:-1:-1;;;;;6390:26:0;;;;;;:11;:26;;;;;:154;6279:371;;;-1:-1:-1;;;;;6605:29:0;;;;;;:14;:29;;;;;;6575:63;;6582:13;;6596:8;;6635:2;6575:6;:63::i;:::-;-1:-1:-1;;;;;6666:27:0;;;;;;:90;;-1:-1:-1;6745:10:0;6730:26;;;;:14;:26;;;;;;;-1:-1:-1;;;;;6697:29:0;;;;;;;:59;;6666:90;6662:368;;;-1:-1:-1;;;;;6832:26:0;;;;;;:11;:26;;;;;;6801:124;;6877:33;6902:1;6891:12;;6906:3;6877:12;:33::i;6801:124::-;-1:-1:-1;;;;;6772:26:0;;;;;;:11;:26;;;;;:153;6662:368;;;-1:-1:-1;;;;;6986:29:0;;;;;;:14;:29;;;;;;6956:62;;6963:13;;6977:8;;7016:1;6956:6;:62::i;:::-;-1:-1:-1;;;;;7044:27:0;;;;;;:90;;-1:-1:-1;7123:10:0;7108:26;;;;:14;:26;;;;;;;-1:-1:-1;;;;;7075:29:0;;;;;;;:59;;7044:90;7040:368;;;-1:-1:-1;;;;;7210:26:0;;;;;;:11;:26;;;;;;7179:124;;7255:33;7280:1;7269:12;;7284:3;7255:12;:33::i;7179:124::-;-1:-1:-1;;;;;7150:26:0;;;;;;:11;:26;;;;;:153;7040:368;;;-1:-1:-1;;;;;7364:29:0;;;;;;:14;:29;;;;;;7334:62;;7341:13;;7355:8;;7394:1;7334:6;:62::i;:::-;-1:-1:-1;;;;;7424:27:0;;;;;;:90;;-1:-1:-1;7503:10:0;7488:26;;;;:14;:26;;;;;;;-1:-1:-1;;;;;7455:29:0;;;;;;;:59;;7424:90;7420:369;;;-1:-1:-1;;;;;7591:26:0;;;;;;:11;:26;;;;;;7560:124;;7636:33;7661:1;7650:12;;7665:3;7636:12;:33::i;7560:124::-;-1:-1:-1;;;;;7531:26:0;;;;;;:11;:26;;;;;:153;7420:369;;;-1:-1:-1;;;;;7745:29:0;;;;;;:14;:29;;;;;;7715:62;;7722:13;;7736:8;;7775:1;7715:6;:62::i;:::-;-1:-1:-1;;;;;7805:27:0;;;;;;:90;;-1:-1:-1;7884:10:0;7869:26;;;;:14;:26;;;;;;;-1:-1:-1;;;;;7836:29:0;;;;;;;:59;;7805:90;7801:369;;;-1:-1:-1;;;;;7972:26:0;;;;;;:11;:26;;;;;;7941:124;;8017:33;8031:8;8046:3;8017:12;:33::i;7941:124::-;-1:-1:-1;;;;;7912:26:0;;;;;;:11;:26;;;;;:153;7801:369;;;-1:-1:-1;;;;;8126:29:0;;;;;;:14;:29;;;;;;8096:62;;8103:13;;8117:8;;8156:1;8096:6;:62::i;:::-;8183:26;8198:10;8183:14;:26::i;:::-;8180:1558;;;-1:-1:-1;;;;;8249:24:0;;;8225:21;8249:24;;;:9;:24;;;;;;;;;8312;;;;;;;;;8375;;;;;;;;;8438;;;;;;;;;8502;;;;;;;;8249;;8312;;8375;8438;8502;8547:27;;8543:225;;-1:-1:-1;;;;;8655:26:0;;;;;;:11;:26;;;;;;8624:128;;8700:33;8714:8;8729:3;8700:12;:33::i;8624:128::-;-1:-1:-1;;;;;8595:26:0;;;;;;:11;:26;;;;;:157;8543:225;-1:-1:-1;;;;;8786:27:0;;;8782:225;;-1:-1:-1;;;;;8894:26:0;;;;;;:11;:26;;;;;;8863:128;;8939:33;8953:8;8968:3;8939:12;:33::i;8863:128::-;-1:-1:-1;;;;;8834:26:0;;;;;;:11;:26;;;;;:157;8782:225;-1:-1:-1;;;;;9025:27:0;;;9021:225;;-1:-1:-1;;;;;9133:26:0;;;;;;:11;:26;;;;;;9102:128;;9178:33;9192:8;9207:3;9178:12;:33::i;9102:128::-;-1:-1:-1;;;;;9073:26:0;;;;;;:11;:26;;;;;:157;9021:225;-1:-1:-1;;;;;9264:27:0;;;9260:225;;-1:-1:-1;;;;;9372:26:0;;;;;;:11;:26;;;;;;9341:128;;9417:33;9431:8;9446:3;9417:12;:33::i;9341:128::-;-1:-1:-1;;;;;9312:26:0;;;;;;:11;:26;;;;;:157;9260:225;-1:-1:-1;;;;;9503:28:0;;;9499:228;;-1:-1:-1;;;;;9613:27:0;;;;;;:11;:27;;;;;;9582:129;;9659:33;9673:8;9688:3;9659:12;:33::i;9582:129::-;-1:-1:-1;;;;;9552:27:0;;;;;;:11;:27;;;;;:159;9499:228;8180:1558;;;;;;9812:49;9825:10;;9836:24;9849:8;9858:1;9836:12;:24::i;9812:49::-;9801:10;:60;-1:-1:-1;;;;;;;5403:4466:0:o;16197:290::-;16276:7;16352:127;16365:20;16378:3;;16382:2;16365:12;:20::i;:::-;16386:92;16399:4;;16404:73;16417:56;16430:20;16443:3;;16447:2;16430:12;:20::i;:::-;16451:21;16464:4;;16469:2;16451:12;:21::i;16417:56::-;16474:2;16404:12;:73::i;16386:92::-;16352:12;:127::i;:::-;16345:134;16197:290;-1:-1:-1;;;;16197:290:0:o;2542:37::-;;;;:::o;16661:162::-;16743:7;16769:46;16784:3;16788:15;16804:10;;16769:14;:46::i;:::-;16762:53;;16661:162;;;;;:::o;2409:35::-;;;;:::o;2652:20::-;;;;:::o;2377:25::-;;;;:::o;17593:146::-;-1:-1:-1;;;;;17685:17:0;;17646:7;17685:17;;;:11;:17;;;;;;17672:59;;17703:27;17697:4;17703:21;:27::i;2260:47::-;;;;;;;;;;;;;;;:::o;1799:26::-;;;;:::o;10460:828::-;10505:11;;-1:-1:-1;;;10505:11:0;;;;10497:20;;;;;;10528:15;10544:21;10554:10;10544:9;:21::i;:::-;10528:37;;10576:16;10593:25;10610:7;10593:16;:25::i;:::-;10576:42;;10629:11;10641:16;10648:8;10641:6;:16::i;:::-;10680:10;10692:1;10668:23;;;:11;:23;;;;;;;;:25;;;10704:9;:21;;;;;10726:15;10704:37;;10776:10;;10629:28;;-1:-1:-1;10763:32:0;;10787:7;10763:12;:32::i;:::-;10752:10;:43;10812:4;;10827:16;;-1:-1:-1;;;;;10812:4:0;;;;10806:20;;10827:16;10853:3;10849:2;10844:7;;:12;10806:51;;;;;;;;;;;;;-1:-1:-1;;;;;10806:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10874:4:0;;-1:-1:-1;;;;;10874:4:0;;-1:-1:-1;10868:20:0;;-1:-1:-1;10889:10:0;10900:26;10913:8;10922:3;10900:12;:26::i;:::-;10868:59;;;;;;;;;;;;;-1:-1:-1;;;;;10868:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11014:3;11007;11011:2;11007:6;:10;;;;;10992:11;:25;;11007:10;;;;10992:25;;;;;11048:11;;11030:15;:29;11027:254;;;11142:8;11128:11;;:22;11125:146;;;11175:13;;11189:11;;11162:48;;-1:-1:-1;;;;;11175:13:0;;;;11189:11;11201:8;11162:12;:48::i;:::-;11234:11;;:25;;11250:8;11234:15;:25::i;:::-;11221:11;:38;11125:146;10460:828;;;:::o;16975:126::-;17027:7;17053:40;17066:22;17079:6;17086:1;17066:12;:22::i;:::-;17089:3;17053:12;:40::i;17107:253::-;17176:10;;-1:-1:-1;;;;;17176:10:0;17162;:24;17154:49;;;;;-1:-1:-1;;;17154:49:0;;;;;;;;;;;;-1:-1:-1;;;17154:49:0;;;;;;;;;;;;;;;17222:10;;:13;17214:22;;;;;;17247:11;:16;;-1:-1:-1;;;;17247:16:0;-1:-1:-1;;;17247:16:0;;;17285:11;17274:10;:22;17318:34;17331:15;17347:4;17318:12;:34::i;:::-;17307:8;:45;17107:253::o;2509:26::-;;;-1:-1:-1;;;;;2509:26:0;;:::o;2619:::-;;;;:::o;11683:1993::-;11753:11;;-1:-1:-1;;;11753:11:0;;;;11745:20;;;;;;11793:11;;11784:5;:20;;11776:48;;;;;-1:-1:-1;;;11776:48:0;;;;;;;;;;;;-1:-1:-1;;;11776:48:0;;;;;;;;;;;;;;;11881:10;11861:31;;;;:19;:31;;;;;;11843:15;:49;;:88;;-1:-1:-1;11920:11:0;;11906:10;11896:21;;;;:9;:21;;;;;;:35;11843:88;11835:116;;;;;-1:-1:-1;;;11835:116:0;;;;;;;;;;;;-1:-1:-1;;;11835:116:0;;;;;;;;;;;;;;;11968:4;;11962:56;;;-1:-1:-1;;;11962:56:0;;11987:10;11962:56;;;;12006:4;11962:56;;;;;;;;;;;;-1:-1:-1;;;;;11968:4:0;;;;11962:24;;:56;;;;;11968:4;;11962:56;;;;;;;;11968:4;;11962:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12029:20;:18;:20::i;:::-;-1:-1:-1;12064:14:0;;;;;;;12060:245;;12094:11;:24;;-1:-1:-1;;;;;;12094:24:0;12108:10;12094:24;;;12144:15;12133:8;:26;12094:11;12200:23;12213:5;12220:2;12200:12;:23::i;:::-;12174:49;;12252:41;12265:11;;12277:15;12252:12;:41::i;:::-;12238:11;:55;-1:-1:-1;12060:245:0;12338:10;12318:31;;;;:19;:31;;;;;;12315:192;;12388:10;12368:31;;;;:19;:31;;;;;12418:6;12400:15;:24;12368:56;;12315:192;;;12475:10;12455:31;;;;:19;:31;;;;;:40;;12489:6;12455:40;;;12315:192;12520:15;;;;12517:118;;;12571:10;12559:23;;;;:11;:23;;;;;;;;:31;;:23;:31;12551:72;;;;;-1:-1:-1;;;12551:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12705:4;;12699:36;;;-1:-1:-1;;;12699:36:0;;12729:4;12699:36;;;;;;12645:18;;12664:79;;12680:5;;12686:56;;-1:-1:-1;;;;;12705:4:0;;12699:21;;:36;;;;;;;;;;;;;;12705:4;12699:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12699:36:0;12736:5;12686:12;:56::i;:::-;12664:15;:79::i;:::-;12645:98;;12765:43;12778:10;12789:18;12796:10;12789:6;:18::i;:::-;12765:12;:43::i;:::-;12754:54;;12819:11;12831:13;12838:5;12831:6;:13::i;:::-;12861:4;;12876:16;;12819:25;;-1:-1:-1;;;;;;12861:4:0;;;;12855:20;;12876:16;12903:3;12899:2;12893:8;;:13;12855:52;;;;;;;;;;;;;-1:-1:-1;;;;;12855:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12994:3;12987;12991:2;12987:6;:10;;;;;12972:11;:25;;12987:10;;;;12972:25;;;;;13057:10;-1:-1:-1;13045:23:0;;;:11;:23;;;;;;13032:48;;13069:10;13032:12;:48::i;:::-;13020:10;13008:23;;;;:11;:23;;;;;;;;:72;;;;13094:9;:21;;;;-1:-1:-1;;;;;13094:21:0;:35;:56;;;;-1:-1:-1;;;;;;13133:17:0;;13140:10;13133:17;;13094:56;13091:114;;;13176:10;13166:21;;;;:9;:21;;;;;:27;;-1:-1:-1;;;;;;13166:27:0;-1:-1:-1;;;;;13166:27:0;;;;;13091:114;13226:8;13219:5;:15;13215:83;;13270:10;13249:33;13260:21;;;:9;:21;;;;;;;;;-1:-1:-1;;;;;13260:21:0;13249:33;;:10;:33;;;;;:37;;13285:1;13249:37;;;13215:83;13328:10;13312:27;;;;:15;:27;;;;;;;;13308:128;;13371:10;13355:27;;;;:15;:27;;;;;:32;;-1:-1:-1;;13355:32:0;13383:4;13355:32;;;;;;13402:20;:22;;;;;;;13308:128;13446:10;13478:5;;13457:20;;:26;;;;;;13446:37;;13503:6;;13497:2;:12;13494:88;;13525:11;:22;;13539:8;13525:22;;;13562:6;:8;;-1:-1:-1;13562:8:0;;;13494:88;13624:10;13614:21;;;;:9;:21;;;;;;:32;;13640:5;13614:25;:32::i;:::-;13602:10;13592:21;;;;:9;:21;;;;;:54;13657:11;:9;:11::i;:::-;11683:1993;;;;;:::o;11294:111::-;11359:10;;-1:-1:-1;;;;;11359:10:0;11345;:24;11337:33;;;;;;11381:11;:16;11294:111::o;2103:45::-;;;;;;;;;;;;;:::o;2207:46::-;;;;;;;;;;;;;:::o;14413:131::-;14493:10;;-1:-1:-1;;;;;14493:10:0;14479;:24;14471:33;;;;;;14515:14;:21;14413:131::o;15790:114::-;15853:10;;-1:-1:-1;;;;;15853:10:0;15839;:24;15831:33;;;;;;15875:10;:21;;-1:-1:-1;;;;;;15875:21:0;;;15790:114::o;14730:141::-;14799:10;;-1:-1:-1;;;;;14799:10:0;14785;:24;:43;;;;-1:-1:-1;14813:15:0;;;;14785:43;14777:52;;;;;;14840:15;:23;;-1:-1:-1;;14840:23:0;;;14730:141::o;15320:146::-;15394:10;;-1:-1:-1;;;;;15394:10:0;15380;:24;15372:33;;;;;;15422:4;;15416:42;;;-1:-1:-1;;;15416:42:0;;-1:-1:-1;;;;;15416:42:0;;;;;;;-1:-1:-1;;15416:42:0;;;;;;15422:4;;;;;15416:19;;:42;;;;;;;;;;;;;;15422:4;;15416:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14990:324;15118:10;;-1:-1:-1;;;;;15118:10:0;15104;:24;15096:33;;;;;;-1:-1:-1;;;;;15142:20:0;;;;;;;:14;:20;;;;;;;;:25;;;;15180:11;:17;;;;;:23;;;;15216:9;:15;;;;;:21;;;;15250:9;:15;;;;;:21;;-1:-1:-1;;;;;;15250:21:0;;;;;;;;;;;;15284:10;:16;;;;:22;14990:324::o;18000:759::-;18050:6;18057;18064;18071;18078;18085;18092:7;18111:15;18127;18137:4;18127:9;:15::i;:::-;18111:31;-1:-1:-1;18153:16:0;18183:11;;18180:115;;18217:25;18234:7;18217:16;:25::i;:::-;18208:34;;18180:115;;;-1:-1:-1;18281:1:0;18180:115;18307:11;;-1:-1:-1;;;;;18331:20:0;;;;;;;:14;:20;;;;;;;;;;18391:4;;18385:36;;-1:-1:-1;;;18385:36:0;;18415:4;18385:36;;;;;;18307:11;;-1:-1:-1;18331:20:0;;-1:-1:-1;18364:8:0;;-1:-1:-1;18364:8:0;;18391:4;;;;18385:21;;:36;;;;;18331:20;;18385:36;;;;;;18391:4;18385:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18385:36:0;18434:11;;-1:-1:-1;;;;;18477:25:0;;;;;;:19;18385:36;18477:25;;;;;18385:36;;-1:-1:-1;18434:11:0;-1:-1:-1;18459:15:0;:43;18456:156;;;18520:1;18518:3;;18456:156;;;-1:-1:-1;;;;;18554:25:0;;;;;;:19;:25;;;;;;:46;;18584:15;18554:29;:46::i;:::-;18552:48;;18456:156;18643:11;;-1:-1:-1;;;;;18625:15:0;;;;;;:9;:15;;;;;;:29;18622:130;;;-1:-1:-1;;;;;18689:15:0;;;;;;:9;:15;;;;;;18673:11;;:32;;:15;:32::i;:::-;18670:35;;18622:130;;;18739:1;18736:4;;18622:130;18000:759;;;;;;;;;;;:::o;2883:41::-;;;;;;;;;;;;;:::o;2049:47::-;;;;;;;;;;;;;:::o;2314:53::-;;;;;;;;;;;;;:::o;1992:50::-;;;;;;;;;;;;;:::o;2757:69::-;;;-1:-1:-1;;;;;2757:69:0;;:::o;1655:43::-;;;;:::o;14298:109::-;-1:-1:-1;;;;;14382:17:0;14356:7;14382:17;;;:10;:17;;;;;;;14298:109::o;16829:140::-;16893:7;16919:42;16935:3;16939:21;16919:15;:42::i;1870:21::-;;;-1:-1:-1;;;;;1870:21:0;;:::o;15912:240::-;16018:10;;-1:-1:-1;;;;;16018:10:0;16004;:24;15996:33;;;;;;16045:9;16040:105;16064:8;:15;16060:1;:19;16040:105;;;16128:5;16101:11;:24;16113:8;16122:1;16113:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16101:24:0;;;;;;;;;;;-1:-1:-1;16101:24:0;:32;;-1:-1:-1;;16101:32:0;;;;;;;;;;-1:-1:-1;16081:3:0;16040:105;;15640:144;15728:10;;-1:-1:-1;;;;;15728:10:0;15714;:24;15706:33;;;;;;-1:-1:-1;;;;;15750:18:0;;;;;;;;:11;:18;;;;;:26;;-1:-1:-1;;15750:26:0;;;;;;;;;;15640:144::o;16493:162::-;16599:10;;16616:4;;16610:36;;;-1:-1:-1;;;16610:36:0;;16640:4;16610:36;;;;;;16553:7;;16579:68;;16594:4;;16599:10;;-1:-1:-1;;;;;16616:4:0;;;;16610:21;;:36;;;;;;;;;;;;;;16616:4;16610:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16610:36:0;16579:14;:68::i;5118:279::-;5172:4;5188:10;-1:-1:-1;;;;;;;;;;;;;;;;5199:63:0;;5263:4;5199:69;;;;;;;;;;;;;-1:-1:-1;;;;;5199:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5199:69:0;;-1:-1:-1;5199:69:0;5282:31;;;;-1:-1:-1;;;;;;5292:21:0;;;;;;:15;:21;;;;;;;;5291:22;5282:31;5279:111;;;5336:1;5329:8;;;;;5279:111;5377:1;5370:8;;;;;2155:45;;;;;;;;;;;;-1:-1:-1;;;;;2155:45:0;;:::o;1832:31::-;;;-1:-1:-1;;;;;1832:31:0;;:::o;14877:107::-;14944:10;;-1:-1:-1;;;;;14944:10:0;14930;:24;14922:33;;;;;;14966:5;:10;14877:107::o;2965:34::-;;;;;;;;;:::o;14550:174::-;14634:10;;-1:-1:-1;;;;;14634:10:0;14620;:24;14612:33;;;;;;14664:11;;:16;14656:25;;;;;;14692:11;:24;14550:174::o;2451:21::-;;;;:::o;2679:71::-;;;-1:-1:-1;;;;;2679:71:0;;:::o;2586:26::-;;;;:::o;1966:19::-;;;-1:-1:-1;;;;;1966:19:0;;:::o;17745:249::-;17809:7;17854:21;;-1:-1:-1;;;;;17905:14:0;;;;:9;:14;;;;;;17809:7;;17850:71;;17876:44;;17889:15;;17876:12;:44::i;:::-;17850:3;:71::i;:::-;-1:-1:-1;;;;;17966:19:0;;;;;;:14;:19;;;;;;17828:93;;-1:-1:-1;17939:47:0;;17828:93;;17939:12;:47::i;:::-;17932:54;17745:249;-1:-1:-1;;;17745:249:0:o;2833:43::-;;;;;;;;;;;;;;;:::o;19277:288::-;19335:7;19434:9;19450:1;19446;:5;;;;;;;19277:288;-1:-1:-1;;;;19277:288:0:o;19889:147::-;19947:7;19979:5;;;20002:6;;;;19995:14;;;9875:579;-1:-1:-1;;;;;10033:20:0;;;9958:17;10033:20;;;:9;:20;;;;;;9976:4;;10008:8;;10033:20;:34;;;;:83;;-1:-1:-1;;;;;;10086:20:0;;;10071:36;10086:20;;;:9;:20;;;;;;;;;;;;10071:36;;:14;:36;;;;:45;-1:-1:-1;10071:45:0;10033:83;10030:417;;;10173:24;10193:3;10173:15;:8;10186:1;10173:12;:15::i;:::-;:19;;:24::i;:::-;-1:-1:-1;;;;;10148:20:0;;;10136:33;10148:20;;;:9;:20;;;;;;;;;;;;10136:33;;:11;:33;;;:61;;;;;;;10030:417;;;-1:-1:-1;;;;;10222:20:0;;;10254:1;10222:20;;;:9;:20;;;;;;;10219:228;;;;;-1:-1:-1;;;;;10327:20:0;;;10300:16;10327:20;;;:9;:20;;;;;;10300:16;;10317:31;;10327:20;10317:9;:31::i;:::-;10300:48;-1:-1:-1;10403:26:0;10425:3;10403:17;10300:48;10418:1;10403:14;:17::i;:26::-;-1:-1:-1;;;;;10380:20:0;;;10368:33;10380:20;;;:9;:20;;;;;;;;;;;;10368:33;;:11;:33;;;:61;;;;;;;-1:-1:-1;10219:228:0;9875:579;;;;;;:::o;18974:208::-;19032:7;19056:6;19052:47;;-1:-1:-1;19086:1:0;19079:8;;19052:47;19121:5;;;19125:1;19121;:5;:1;19144:5;;;;;:10;19137:18;;;19691:123;19749:7;19781:1;19776;:6;;19769:14;;;;-1:-1:-1;19801:5:0;;;19691:123::o;13882:408::-;14037:16;;;14051:1;14037:16;;;14013:21;14037:16;;;;;14013:21;14037:16;;;;;;;;-1:-1:-1;;14072:4:0;;14064:7;;;;-1:-1:-1;;;;;;14072:4:0;;14064:7;;-1:-1:-1;14072:4:0;;14064:7;;;;;;;;;:12;-1:-1:-1;;;;;14064:12:0;;;-1:-1:-1;;;;;14064:12:0;;;;;14095:5;14087:4;14092:1;14087:7;;;;;;;;;;;;;:13;-1:-1:-1;;;;;14087:13:0;;;-1:-1:-1;;;;;14087:13:0;;;;;14139:14;-1:-1:-1;;;;;14122:57:0;;14180:5;14186:1;14188:4;14193:42;14236:15;14254:3;14236:21;14122:136;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14122:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14122:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14122:136:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;14122:136:0;;;;;;-1:-1:-1;;14281:1:0;14269:11;:13;-1:-1:-1;;;;;;;13882:408:0:o;11411:266::-;11457:4;11473:16;11492:38;11505:14;;11521:8;;11492:12;:38::i;:::-;11545:14;;11473:57;;-1:-1:-1;11545:14:0;;;;;11541:129;;11596:8;11578:15;:26;11575:84;;;11624:14;:19;;-1:-1:-1;;11624:19:0;;;;;11575:84;11411:266;;:::o;18765:105::-;18822:7;18853:1;18849;:5;:13;;18861:1;18849:13;;;-1:-1:-1;18857:1:0;;18765:105;-1:-1:-1;18765:105:0:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2413200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AdministratorprivilegesDiscarded()": "21924",
								"AlreadyInvolved(address)": "1227",
								"EGGS_TO_HATCH_1MINERS()": "1110",
								"InvestmentCountdown(address)": "1258",
								"OpeningTime()": "1066",
								"TotalNumberOfAddress()": "1088",
								"USDT()": "1103",
								"balanceOf(address)": "1214",
								"buyEggs(address,uint256)": "infinite",
								"calculateEggBuy(uint256,uint256)": "infinite",
								"calculateEggBuySimple(uint256)": "infinite",
								"calculateEggSell(uint256)": "infinite",
								"calculateTrade(uint256,uint256,uint256)": "infinite",
								"ceoAddress()": "1151",
								"claimedEggs(address)": "1236",
								"devFee(uint256)": "infinite",
								"fomoAddress()": "1171",
								"fomoNeededTime()": "1111",
								"fomoRewards()": "1131",
								"fomoTime()": "1090",
								"getBalance()": "infinite",
								"getEggsSinceLastHatch(address)": "3212",
								"getIsQualified(address)": "1262",
								"getMyEggs(address)": "infinite",
								"getMyMiners()": "1135",
								"getNumRealRef(address)": "1209",
								"getPCDsend(address)": "infinite",
								"getUser(address)": "infinite",
								"hatchEggs()": "infinite",
								"hatcheryMiners(address)": "1192",
								"initialized()": "1140",
								"isFomoFinished()": "1154",
								"isWhiteList(address)": "1268",
								"lastHatch(address)": "1191",
								"market()": "1148",
								"marketEggs()": "1132",
								"marketingAddress()": "1126",
								"minBuyValue()": "1111",
								"numRealRef(address)": "1213",
								"orMax()": "1110",
								"pancakeRouter()": "1148",
								"referrals(address)": "1230",
								"seedMarket()": "62820",
								"sellEggs()": "infinite",
								"setFomoNeededTime(uint256)": "21140",
								"setMarket(address)": "infinite",
								"setMin(uint256)": "21141",
								"setOpeningTime(uint256)": "21916",
								"setOrMax(uint256)": "21140",
								"setOrbaOf(address,uint256,uint256,uint256,address,uint256)": "102446",
								"setWhiteList(address,bool)": "22065",
								"setWhiteListBatch(address[],bool)": "infinite",
								"setWhiteListNeeded()": "22702",
								"setceoAddress()": "21947",
								"toplusToken()": "1127",
								"update(address)": "infinite",
								"vaTova()": "1087"
							},
							"internal": {
								"addLiquidity(address,address,uint256)": "infinite",
								"min(uint256,uint256)": "65",
								"setEgg(address,uint256,uint256,uint256)": "infinite",
								"updateFomoFinished()": "23394"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1554,
									"end": 18873,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1692,
									"end": 1698,
									"name": "PUSH",
									"source": 0,
									"value": "D2F00"
								},
								{
									"begin": 1655,
									"end": 1698,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1655,
									"end": 1698,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1763,
									"end": 1768,
									"name": "PUSH",
									"source": 0,
									"value": "2710"
								},
								{
									"begin": 1751,
									"end": 1768,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1751,
									"end": 1768,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1751,
									"end": 1768,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1751,
									"end": 1768,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "PUSH",
									"source": 0,
									"value": "1388"
								},
								{
									"begin": 1775,
									"end": 1792,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1775,
									"end": 1792,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2574,
									"end": 2579,
									"name": "PUSH",
									"source": 0,
									"value": "7080"
								},
								{
									"begin": 1898,
									"end": 1927,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2542,
									"end": 2579,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2708,
									"end": 2750,
									"name": "PUSH",
									"source": 0,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2679,
									"end": 2750,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2784,
									"end": 2826,
									"name": "PUSH",
									"source": 0,
									"value": "E4F1AE07760B985D1A94C6E5FB1589AFAF44918C"
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2757,
									"end": 2826,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2958,
									"name": "OR",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF00"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2965,
									"end": 2999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2965,
									"end": 2999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2965,
									"end": 2999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3006,
									"end": 3440,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3037,
									"end": 3047,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3048,
									"end": 3058,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3085,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3130,
									"name": "PUSH",
									"source": 0,
									"value": "7E6825510DCE92EFD2D95E1F3F4FCCE98D66925B"
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3069,
									"end": 3130,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3145,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3146,
									"end": 3188,
									"name": "PUSH",
									"source": 0,
									"value": "55D398326F99059FF775485246999027B3197955"
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3141,
									"end": 3188,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3211,
									"end": 3221,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3211,
									"end": 3221,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3211,
									"end": 3221,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3047,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3210,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3037,
									"end": 3058,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3229,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3252,
									"end": 3261,
									"name": "PUSH",
									"source": 0,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 3240,
									"end": 3251,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3240,
									"end": 3261,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3279,
									"end": 3281,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 3272,
									"end": 3278,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 3272,
									"end": 3281,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3298,
									"end": 3301,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 3292,
									"end": 3297,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 3292,
									"end": 3301,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3334,
									"name": "PUSH",
									"source": 0,
									"value": "629D7BC0"
								},
								{
									"begin": 3312,
									"end": 3323,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 3312,
									"end": 3334,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3359,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3371,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3373,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3373,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3345,
									"end": 3373,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3404,
									"end": 3417,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 3404,
									"end": 3417,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3404,
									"end": 3417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3404,
									"end": 3417,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 3404,
									"end": 3417,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3403,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 3384,
									"end": 3403,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3199,
									"end": 3222,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3390,
									"end": 3394,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3384,
									"end": 3432,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 18873,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208cb21aaac930ccb6079878538ba99fe571875e9130325f21453797a54d2fa90f64736f6c634300060c0033",
									".code": [
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "5C45F730"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "8D14E127"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "ABDD11A8"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "C54E44EB"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "C54E44EB"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "D7C8843B"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "DF67C4ED"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "F99031A7"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "ABDD11A8"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "B41892F0"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "C21EBD07"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "C4053010"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "9CA423B3"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "9CA423B3"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "A5ECE941"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "AB153916"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "ABD3263D"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "8D14E127"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "8E316327"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "8E47E334"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "79532AA9"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "7E286735"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "7E286735"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "7E56FDE5"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "80F55605"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "86301658"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "79532AA9"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "7CDD9BCF"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "7CDEBC21"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "6F77926B"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "6F77926B"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "72670361"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "765A72DE"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "5C45F730"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "6DCEA85F"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "6DDFB6CB"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "2EF6A743"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "4226E7AF"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "467ECE79"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "467ECE79"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "47514914"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "48FE4A06"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "55DB22EE"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "4226E7AF"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "450EDF95"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "45DC3DD8"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "3955F0FE"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "3955F0FE"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "3BC0461A"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "3C5F07CB"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "3FD78CB9"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "2EF6A743"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "35E838BE"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "3681E7CF"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "2296459E"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "26FD8422"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "26FD8422"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "27EC648B"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "2CED7F2E"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "2E9392BB"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "2296459E"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "229824C4"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "24D06E74"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "A76E5ED"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "A76E5ED"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "158EF93E"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "1C1B8772"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "221CC79"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "93CA84F"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "A0F8168"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1554,
											"end": 18873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13741,
											"end": 13745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13771,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13761,
											"end": 13778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13780,
											"end": 13782,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 13757,
											"end": 13864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 13757,
											"end": 13864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13805,
											"end": 13809,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13798,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 13798,
											"end": 13809,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13757,
											"end": 13864,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 13757,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13847,
											"end": 13852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13757,
											"end": 13864,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 13757,
											"end": 13864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 13873,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2479,
											"end": 2502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1959,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17568,
											"end": 17578,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17527,
											"end": 17534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17567,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17553,
											"end": 17579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17484,
											"end": 17587,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17464,
											"end": 17468,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17408,
											"end": 17415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17408,
											"end": 17415,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17455,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17434,
											"end": 17455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17434,
											"end": 17470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17366,
											"end": 17478,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1927,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AF41C5F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3539,
											"end": 3581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3598,
											"name": "PUSH",
											"source": 0,
											"value": "35E838BE"
										},
										{
											"begin": 3535,
											"end": 3598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3539,
											"end": 3581,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3535,
											"end": 3604,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3535,
											"end": 3630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3609,
											"end": 3630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3630,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 3535,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 5105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3532,
											"end": 5105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3659,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3644,
											"end": 3670,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3670,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79532AA9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "9C40"
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3690,
											"end": 3732,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "79532AA9"
										},
										{
											"begin": 3686,
											"end": 3748,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3732,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 3754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3686,
											"end": 3762,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79532AA9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3786,
											"end": 3828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3844,
											"name": "PUSH",
											"source": 0,
											"value": "79532AA9"
										},
										{
											"begin": 3782,
											"end": 3844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3828,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3782,
											"end": 3850,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3854,
											"end": 3859,
											"name": "PUSH",
											"source": 0,
											"value": "17AE8"
										},
										{
											"begin": 3782,
											"end": 3859,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3923,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3779,
											"end": 3923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3894,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "17AE8"
										},
										{
											"begin": 3880,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 3906,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3923,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 3779,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3952,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79532AA9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4019,
											"end": 4061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4077,
											"name": "PUSH",
											"source": 0,
											"value": "79532AA9"
										},
										{
											"begin": 4015,
											"end": 4077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4061,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4008,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4015,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 4083,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3683,
											"end": 4097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72670361"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4195,
											"name": "PUSH",
											"source": 0,
											"value": "72670361"
										},
										{
											"begin": 4136,
											"end": 4195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4182,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4129,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4136,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4201,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4201,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 4201,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "467ECE79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4287,
											"name": "PUSH",
											"source": 0,
											"value": "467ECE79"
										},
										{
											"begin": 4230,
											"end": 4287,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4276,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4223,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11D45245"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4327,
											"end": 4369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "47514914"
										},
										{
											"begin": 4323,
											"end": 4381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4327,
											"end": 4369,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 4323,
											"end": 4387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4387,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4387,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4387,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3B2D396F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4430,
											"end": 4472,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "PUSH",
											"source": 0,
											"value": "765A72DE"
										},
										{
											"begin": 4426,
											"end": 4493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4430,
											"end": 4472,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4419,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 4426,
											"end": 4499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4499,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4499,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4499,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4532,
											"end": 4574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4528,
											"end": 4585,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4574,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4521,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4512,
											"end": 4591,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9CA423B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4624,
											"end": 4666,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4677,
											"name": "PUSH",
											"source": 0,
											"value": "9CA423B3"
										},
										{
											"begin": 4620,
											"end": 4677,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4624,
											"end": 4666,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4620,
											"end": 4683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4683,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4709,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 4699,
											"end": 4709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4713,
											"end": 4724,
											"name": "PUSH",
											"source": 0,
											"value": "141DD76000"
										},
										{
											"begin": 4699,
											"end": 4724,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 5096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 5096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 4696,
											"end": 5096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4808,
											"name": "PUSH",
											"source": 0,
											"value": "2E9392BB"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 4739,
											"end": 4810,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93CA84F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 4879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4889,
											"name": "PUSH",
											"source": 0,
											"value": "93CA84F"
										},
										{
											"begin": 4833,
											"end": 4889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4750,
											"end": 4810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 4879,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4832,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4824,
											"end": 4891,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C405301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4921,
											"end": 4963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4976,
											"name": "PUSH",
											"source": 0,
											"value": "C4053010"
										},
										{
											"begin": 4917,
											"end": 4976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4833,
											"end": 4891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4963,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4905,
											"end": 4916,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4905,
											"end": 4978,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "27EC648B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5017,
											"end": 5059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5081,
											"name": "PUSH",
											"source": 0,
											"value": "27EC648B"
										},
										{
											"begin": 5013,
											"end": 5081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4978,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5059,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5083,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4992,
											"end": 5012,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4992,
											"end": 5083,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 5096,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 4696,
											"end": 5096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3487,
											"end": 5112,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5449,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 5441,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 5499,
											"end": 5509,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5489,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5489,
											"end": 5510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5489,
											"end": 5510,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 5489,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 5552,
											"end": 5560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5561,
											"end": 5582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 5539,
											"end": 5583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5539,
											"end": 5583,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 5539,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5659,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5634,
											"end": 5660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 5621,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 5621,
											"end": 5671,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5621,
											"end": 5671,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 5621,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5619,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5608,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5671,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5671,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5594,
											"end": 5671,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5693,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5705,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5707,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5682,
											"end": 5707,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5718,
											"end": 5739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5739,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5739,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5740,
											"end": 5755,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5755,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5837,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6283,
											"end": 6373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6362,
											"end": 6372,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6361,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6373,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6314,
											"end": 6373,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6283,
											"end": 6373,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6283,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6461,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6450,
											"end": 6476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6419,
											"end": 6544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6495,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6520,
											"end": 6522,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6509,
											"end": 6522,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 6522,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6525,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6495,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6495,
											"end": 6529,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6495,
											"end": 6529,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6495,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 6419,
											"end": 6544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6419,
											"end": 6544,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6419,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6416,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6544,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 6279,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6595,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 6604,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6596,
											"end": 6604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6635,
											"end": 6637,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6575,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 6575,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6666,
											"end": 6693,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 6666,
											"end": 6756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6745,
											"end": 6755,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6756,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6666,
											"end": 6756,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 6666,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6843,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6832,
											"end": 6858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6801,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 6801,
											"end": 6925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6877,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6891,
											"end": 6903,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6891,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6906,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6877,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 6877,
											"end": 6910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6801,
											"end": 6925,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 6801,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6783,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6798,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6925,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6662,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7000,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6956,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6956,
											"end": 7018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6963,
											"end": 6976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6963,
											"end": 6976,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 6985,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 6985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6956,
											"end": 7018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6956,
											"end": 7018,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6956,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 7044,
											"end": 7134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7133,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7122,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7075,
											"end": 7134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7044,
											"end": 7134,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 7044,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7221,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7179,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 7179,
											"end": 7303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7269,
											"end": 7281,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7269,
											"end": 7281,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7287,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7255,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 7255,
											"end": 7288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7179,
											"end": 7303,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 7179,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7161,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7150,
											"end": 7303,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 7040,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7378,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7364,
											"end": 7393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7334,
											"end": 7396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7334,
											"end": 7396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7363,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7355,
											"end": 7363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7394,
											"end": 7395,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 7334,
											"end": 7396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7334,
											"end": 7396,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7334,
											"end": 7396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7424,
											"end": 7451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 7424,
											"end": 7514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7503,
											"end": 7513,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7502,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7484,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7455,
											"end": 7514,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7514,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 7424,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7591,
											"end": 7617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 7560,
											"end": 7684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 7661,
											"end": 7662,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7650,
											"end": 7662,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7668,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7636,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 7636,
											"end": 7669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7560,
											"end": 7684,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 7560,
											"end": 7684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7542,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7557,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7531,
											"end": 7684,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 7420,
											"end": 7789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7759,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7715,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7715,
											"end": 7777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7722,
											"end": 7735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7722,
											"end": 7735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7744,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7776,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 7715,
											"end": 7777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 7777,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7715,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7805,
											"end": 7832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7832,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 7805,
											"end": 7895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7884,
											"end": 7894,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7883,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7869,
											"end": 7895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7895,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7836,
											"end": 7895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7805,
											"end": 7895,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 7805,
											"end": 7895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7983,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7972,
											"end": 7998,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 7941,
											"end": 8065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8017,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 8031,
											"end": 8039,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8046,
											"end": 8049,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8017,
											"end": 8029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 8017,
											"end": 8050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7941,
											"end": 8065,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 7941,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7938,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 8065,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 7801,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8140,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 8096,
											"end": 8158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8103,
											"end": 8116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8125,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 8117,
											"end": 8125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 8096,
											"end": 8158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8158,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 8096,
											"end": 8158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 8198,
											"end": 8208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8183,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 8183,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8225,
											"end": 8246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8258,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8249,
											"end": 8273,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8312,
											"end": 8336,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8375,
											"end": 8399,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8438,
											"end": 8462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8502,
											"end": 8526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8547,
											"end": 8574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8543,
											"end": 8768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 8543,
											"end": 8768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8666,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8624,
											"end": 8752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 8624,
											"end": 8752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 8714,
											"end": 8722,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 8729,
											"end": 8732,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8700,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 8700,
											"end": 8733,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8624,
											"end": 8752,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 8624,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8606,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8595,
											"end": 8752,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8543,
											"end": 8768,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 8543,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8786,
											"end": 8813,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 8782,
											"end": 9007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8905,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8894,
											"end": 8920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8863,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 8863,
											"end": 8991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8939,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 8953,
											"end": 8961,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 8968,
											"end": 8971,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8939,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 8939,
											"end": 8972,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8863,
											"end": 8991,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 8863,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8845,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8834,
											"end": 8991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8782,
											"end": 9007,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 8782,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9025,
											"end": 9052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9025,
											"end": 9052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 9021,
											"end": 9246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9102,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 9102,
											"end": 9230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9178,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 9192,
											"end": 9200,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9210,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9178,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 9178,
											"end": 9211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9102,
											"end": 9230,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 9102,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9084,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9073,
											"end": 9230,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9021,
											"end": 9246,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 9021,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9264,
											"end": 9291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9291,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9264,
											"end": 9291,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 9260,
											"end": 9485,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9383,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9372,
											"end": 9398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 9341,
											"end": 9469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9417,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 9431,
											"end": 9439,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 9446,
											"end": 9449,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9417,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 9417,
											"end": 9450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9341,
											"end": 9469,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 9341,
											"end": 9469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9323,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9338,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9312,
											"end": 9469,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9260,
											"end": 9485,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 9260,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9503,
											"end": 9531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 9499,
											"end": 9727,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9613,
											"end": 9640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9582,
											"end": 9711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 9582,
											"end": 9711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 9688,
											"end": 9691,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 9659,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 9659,
											"end": 9692,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9582,
											"end": 9711,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 9582,
											"end": 9711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9563,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9552,
											"end": 9711,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9499,
											"end": 9727,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 9499,
											"end": 9727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 8180,
											"end": 9738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 9825,
											"end": 9835,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 9825,
											"end": 9835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9836,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 9849,
											"end": 9857,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 9858,
											"end": 9859,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9836,
											"end": 9848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 9836,
											"end": 9860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9812,
											"end": 9861,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 9812,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9801,
											"end": 9811,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 9801,
											"end": 9861,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5403,
											"end": 9869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16276,
											"end": 16283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16352,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 16365,
											"end": 16385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 16378,
											"end": 16381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16378,
											"end": 16381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16382,
											"end": 16384,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 16365,
											"end": 16385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16365,
											"end": 16385,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 16365,
											"end": 16385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16386,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 16399,
											"end": 16403,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16399,
											"end": 16403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 16417,
											"end": 16473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 16430,
											"end": 16450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 16443,
											"end": 16446,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16443,
											"end": 16446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16447,
											"end": 16449,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 16430,
											"end": 16442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 16430,
											"end": 16450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16430,
											"end": 16450,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 16430,
											"end": 16450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16451,
											"end": 16472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 16464,
											"end": 16468,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16464,
											"end": 16468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16469,
											"end": 16471,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 16451,
											"end": 16463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 16451,
											"end": 16472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16417,
											"end": 16473,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 16417,
											"end": 16473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16474,
											"end": 16476,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 16404,
											"end": 16416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 16404,
											"end": 16477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16386,
											"end": 16478,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 16386,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16352,
											"end": 16364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 16352,
											"end": 16479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16352,
											"end": 16479,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 16352,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16345,
											"end": 16479,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16197,
											"end": 16487,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2542,
											"end": 2579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16743,
											"end": 16750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16769,
											"end": 16815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 16784,
											"end": 16787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16788,
											"end": 16803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16804,
											"end": 16814,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 16804,
											"end": 16814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16769,
											"end": 16783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16769,
											"end": 16815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16769,
											"end": 16815,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 16769,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16762,
											"end": 16815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16762,
											"end": 16815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16661,
											"end": 16823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2402,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 17593,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17646,
											"end": 17653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17696,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17685,
											"end": 17702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17672,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 17672,
											"end": 17731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17703,
											"end": 17730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 17697,
											"end": 17701,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17703,
											"end": 17724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17703,
											"end": 17730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2260,
											"end": 2307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10505,
											"end": 10516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 10497,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10528,
											"end": 10543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10544,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 10554,
											"end": 10564,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10544,
											"end": 10565,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10544,
											"end": 10565,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 10544,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10528,
											"end": 10565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10528,
											"end": 10565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10576,
											"end": 10592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 10610,
											"end": 10617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10593,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 10593,
											"end": 10618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10593,
											"end": 10618,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 10593,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10576,
											"end": 10618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10576,
											"end": 10618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10641,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 10648,
											"end": 10656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10641,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 10641,
											"end": 10657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10641,
											"end": 10657,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 10641,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10680,
											"end": 10690,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10692,
											"end": 10693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10679,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10691,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10668,
											"end": 10693,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10713,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 10704,
											"end": 10725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10726,
											"end": 10741,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10704,
											"end": 10741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10776,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 10776,
											"end": 10786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10629,
											"end": 10657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10763,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 10763,
											"end": 10795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10787,
											"end": 10794,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 10763,
											"end": 10795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10763,
											"end": 10795,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 10763,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10752,
											"end": 10762,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 10752,
											"end": 10795,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10812,
											"end": 10816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10826,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 10806,
											"end": 10826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10827,
											"end": 10843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 10856,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10849,
											"end": 10851,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 10844,
											"end": 10851,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10851,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10844,
											"end": 10856,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 10806,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10874,
											"end": 10878,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10868,
											"end": 10888,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 10868,
											"end": 10888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10889,
											"end": 10899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 10913,
											"end": 10921,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10922,
											"end": 10925,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10900,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 10900,
											"end": 10926,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10900,
											"end": 10926,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 10900,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10868,
											"end": 10927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11014,
											"end": 11017,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11007,
											"end": 11010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11011,
											"end": 11013,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 11007,
											"end": 11013,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11003,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11007,
											"end": 11017,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11017,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11059,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11048,
											"end": 11059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11030,
											"end": 11045,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11030,
											"end": 11059,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11281,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11027,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 11027,
											"end": 11281,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11150,
											"name": "PUSH",
											"source": 0,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11128,
											"end": 11139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11128,
											"end": 11150,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11125,
											"end": 11271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11125,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 11125,
											"end": 11271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11175,
											"end": 11188,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11175,
											"end": 11188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11200,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11189,
											"end": 11200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11162,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 11162,
											"end": 11210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11175,
											"end": 11188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11175,
											"end": 11188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11175,
											"end": 11188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11175,
											"end": 11188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11201,
											"end": 11209,
											"name": "PUSH",
											"source": 0,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 11162,
											"end": 11174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 11162,
											"end": 11210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11162,
											"end": 11210,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 11162,
											"end": 11210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11234,
											"end": 11245,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11234,
											"end": 11245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11234,
											"end": 11259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 11234,
											"end": 11259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11250,
											"end": 11258,
											"name": "PUSH",
											"source": 0,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 11234,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 11234,
											"end": 11259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11234,
											"end": 11259,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 11234,
											"end": 11259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11221,
											"end": 11232,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 11221,
											"end": 11259,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11125,
											"end": 11271,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 11125,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 11288,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 16975,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17053,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 17066,
											"end": 17088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 17079,
											"end": 17085,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17086,
											"end": 17087,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17066,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 17066,
											"end": 17088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17066,
											"end": 17088,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 17066,
											"end": 17088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17089,
											"end": 17092,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17053,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 17053,
											"end": 17093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17176,
											"end": 17186,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17176,
											"end": 17186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17176,
											"end": 17186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17172,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17162,
											"end": 17186,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A590818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 17154,
											"end": 17203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17232,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 17222,
											"end": 17232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17235,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 17214,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17258,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17247,
											"end": 17263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17247,
											"end": 17263,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17247,
											"end": 17263,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17247,
											"end": 17263,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17285,
											"end": 17296,
											"name": "PUSH",
											"source": 0,
											"value": "141DD76000"
										},
										{
											"begin": 17274,
											"end": 17284,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 17274,
											"end": 17296,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17318,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 17331,
											"end": 17346,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 17347,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 17318,
											"end": 17330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 17318,
											"end": 17352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17318,
											"end": 17352,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 17318,
											"end": 17352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 17315,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17307,
											"end": 17352,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17107,
											"end": 17360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2535,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2645,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11753,
											"end": 11764,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11753,
											"end": 11764,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11753,
											"end": 11764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11753,
											"end": 11764,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11753,
											"end": 11764,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11753,
											"end": 11764,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11793,
											"end": 11804,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11793,
											"end": 11804,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11784,
											"end": 11789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11784,
											"end": 11804,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11784,
											"end": 11804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08115B9BDD59DA081554D115"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 11776,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11881,
											"end": 11891,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11880,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11861,
											"end": 11892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11858,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11892,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 11843,
											"end": 11931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11920,
											"end": 11931,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11920,
											"end": 11931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11906,
											"end": 11916,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11905,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11917,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11896,
											"end": 11931,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11931,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 11843,
											"end": 11931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08115B9BDD59DA081554D115"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 11835,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11987,
											"end": 11997,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12006,
											"end": 12010,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 11986,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11962,
											"end": 11986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11962,
											"end": 12018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12029,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 12029,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 12029,
											"end": 12049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12029,
											"end": 12049,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 12029,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12064,
											"end": 12078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12060,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 12060,
											"end": 12305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12118,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12144,
											"end": 12159,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12133,
											"end": 12141,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 12133,
											"end": 12159,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12094,
											"end": 12105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 12213,
											"end": 12218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12220,
											"end": 12222,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12200,
											"end": 12212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 12200,
											"end": 12223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12174,
											"end": 12223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 12265,
											"end": 12276,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12265,
											"end": 12276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12277,
											"end": 12292,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12252,
											"end": 12264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 12252,
											"end": 12293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12252,
											"end": 12293,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 12252,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12238,
											"end": 12249,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12238,
											"end": 12293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12060,
											"end": 12305,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 12060,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12338,
											"end": 12348,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12337,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12388,
											"end": 12398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12418,
											"end": 12424,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 12400,
											"end": 12415,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12368,
											"end": 12424,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12475,
											"end": 12485,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12474,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12495,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12489,
											"end": 12495,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 12455,
											"end": 12495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12455,
											"end": 12495,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 12315,
											"end": 12507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12520,
											"end": 12535,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 12520,
											"end": 12535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12520,
											"end": 12535,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12520,
											"end": 12535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 12517,
											"end": 12635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12571,
											"end": 12581,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12570,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12559,
											"end": 12582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12559,
											"end": 12590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "596F7520617265206E6F74206F6E207468652077686974656C69737400000000"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 12551,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12729,
											"end": 12733,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12645,
											"end": 12663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12663,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 12664,
											"end": 12743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12680,
											"end": 12685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 12686,
											"end": 12742,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12720,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 12699,
											"end": 12720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12699,
											"end": 12735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12741,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 12686,
											"end": 12742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12686,
											"end": 12742,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 12686,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12664,
											"end": 12743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12664,
											"end": 12743,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 12664,
											"end": 12743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12645,
											"end": 12743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12645,
											"end": 12743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12765,
											"end": 12808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 12778,
											"end": 12788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 12796,
											"end": 12806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12789,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12789,
											"end": 12807,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12789,
											"end": 12807,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 12789,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12765,
											"end": 12777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 12765,
											"end": 12808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12765,
											"end": 12808,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 12765,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12754,
											"end": 12808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12754,
											"end": 12808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12819,
											"end": 12830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12831,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 12838,
											"end": 12843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 12831,
											"end": 12844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12831,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 12831,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12876,
											"end": 12892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12819,
											"end": 12844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12819,
											"end": 12844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12855,
											"end": 12875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12903,
											"end": 12906,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12899,
											"end": 12901,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 12893,
											"end": 12901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12893,
											"end": 12901,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12893,
											"end": 12906,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12855,
											"end": 12907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12994,
											"end": 12997,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 12987,
											"end": 12990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 12993,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 12987,
											"end": 12993,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12983,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 12997,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12972,
											"end": 12997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13057,
											"end": 13067,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13056,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13068,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13032,
											"end": 13080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 13032,
											"end": 13080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13069,
											"end": 13079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13032,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 13032,
											"end": 13080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13032,
											"end": 13080,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 13032,
											"end": 13080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13020,
											"end": 13030,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13019,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13080,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13080,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13080,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13103,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13094,
											"end": 13115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13115,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13094,
											"end": 13115,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 13094,
											"end": 13150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13133,
											"end": 13150,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13133,
											"end": 13150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13140,
											"end": 13150,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13133,
											"end": 13150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13133,
											"end": 13150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13094,
											"end": 13150,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 13094,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 13091,
											"end": 13205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13176,
											"end": 13186,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13175,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13187,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13166,
											"end": 13193,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13091,
											"end": 13205,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 13091,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13234,
											"name": "PUSH",
											"source": 0,
											"value": "1158E460913D00000"
										},
										{
											"begin": 13219,
											"end": 13224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13219,
											"end": 13234,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13215,
											"end": 13298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 13215,
											"end": 13298,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13270,
											"end": 13280,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13269,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13260,
											"end": 13281,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13259,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13282,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13249,
											"end": 13286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13249,
											"end": 13286,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13215,
											"end": 13298,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 13215,
											"end": 13298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13328,
											"end": 13338,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13327,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13312,
											"end": 13339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 13308,
											"end": 13436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13371,
											"end": 13381,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13370,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13387,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13355,
											"end": 13387,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13422,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13402,
											"end": 13424,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13308,
											"end": 13436,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 13308,
											"end": 13436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13456,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 13478,
											"end": 13483,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13457,
											"end": 13477,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13457,
											"end": 13477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13457,
											"end": 13483,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13503,
											"end": 13509,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13503,
											"end": 13509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13497,
											"end": 13509,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13494,
											"end": 13582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 13494,
											"end": 13582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13525,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13525,
											"end": 13547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13525,
											"end": 13547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13539,
											"end": 13547,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 13525,
											"end": 13547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13525,
											"end": 13547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13525,
											"end": 13547,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13568,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13494,
											"end": 13582,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 13494,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13624,
											"end": 13634,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13623,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 13614,
											"end": 13646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13640,
											"end": 13645,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13614,
											"end": 13639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 13614,
											"end": 13646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13614,
											"end": 13646,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 13614,
											"end": 13646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13602,
											"end": 13612,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13601,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13592,
											"end": 13646,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 13657,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 13657,
											"end": 13668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13657,
											"end": 13668,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 13657,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11683,
											"end": 13676,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11359,
											"end": 11369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11345,
											"end": 11355,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11345,
											"end": 11369,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 11337,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11392,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11381,
											"end": 11397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11294,
											"end": 11405,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2103,
											"end": 2148,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2253,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14493,
											"end": 14503,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14493,
											"end": 14503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14493,
											"end": 14503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14479,
											"end": 14489,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14479,
											"end": 14503,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 14471,
											"end": 14504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14515,
											"end": 14529,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14515,
											"end": 14536,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14413,
											"end": 14544,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15853,
											"end": 15863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15853,
											"end": 15863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15839,
											"end": 15849,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15839,
											"end": 15863,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 15831,
											"end": 15864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 15885,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15875,
											"end": 15896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 15896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15875,
											"end": 15896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 15896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15875,
											"end": 15896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15790,
											"end": 15904,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14799,
											"end": 14809,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14799,
											"end": 14809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14799,
											"end": 14809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14785,
											"end": 14795,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14785,
											"end": 14809,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14785,
											"end": 14828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14785,
											"end": 14828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14785,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 14785,
											"end": 14828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14813,
											"end": 14828,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 14813,
											"end": 14828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14813,
											"end": 14828,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 14813,
											"end": 14828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14785,
											"end": 14828,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 14785,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 14777,
											"end": 14829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14855,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 14840,
											"end": 14863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14840,
											"end": 14863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14840,
											"end": 14863,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14730,
											"end": 14871,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 15320,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15394,
											"end": 15404,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15394,
											"end": 15404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15394,
											"end": 15404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15390,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 15372,
											"end": 15405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15435,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 15416,
											"end": 15435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15426,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15416,
											"end": 15458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15118,
											"end": 15128,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15118,
											"end": 15128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15118,
											"end": 15128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15114,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15104,
											"end": 15128,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 15096,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15167,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15167,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 15142,
											"end": 15167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15191,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15180,
											"end": 15197,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15197,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15197,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15197,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15197,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15203,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15203,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15180,
											"end": 15203,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15225,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 15216,
											"end": 15231,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15231,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15231,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15237,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15237,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15216,
											"end": 15237,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15259,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15265,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15271,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15284,
											"end": 15294,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 15284,
											"end": 15300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15284,
											"end": 15300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15284,
											"end": 15300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15284,
											"end": 15300,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15284,
											"end": 15306,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15314,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18050,
											"end": 18056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18057,
											"end": 18063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18064,
											"end": 18070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18071,
											"end": 18077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18078,
											"end": 18084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18085,
											"end": 18091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18092,
											"end": 18099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18111,
											"end": 18126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 18137,
											"end": 18141,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18127,
											"end": 18136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 18127,
											"end": 18142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18127,
											"end": 18142,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 18127,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18153,
											"end": 18169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18183,
											"end": 18194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18183,
											"end": 18194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 18234,
											"end": 18241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18217,
											"end": 18233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 18217,
											"end": 18242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18217,
											"end": 18242,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 18217,
											"end": 18242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18208,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18208,
											"end": 18242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18281,
											"end": 18282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 18180,
											"end": 18295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18307,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18307,
											"end": 18318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18345,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18415,
											"end": 18419,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18307,
											"end": 18318,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18307,
											"end": 18318,
											"name": "SWAP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18364,
											"end": 18372,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18364,
											"end": 18372,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18364,
											"end": 18372,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18364,
											"end": 18372,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18406,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18385,
											"end": 18406,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18331,
											"end": 18351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18391,
											"end": 18395,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18434,
											"end": 18445,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18434,
											"end": 18445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18496,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18477,
											"end": 18502,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18385,
											"end": 18421,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18434,
											"end": 18445,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18459,
											"end": 18474,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 18502,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18520,
											"end": 18521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18518,
											"end": 18521,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18518,
											"end": 18521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18579,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 18554,
											"end": 18600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18584,
											"end": 18599,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 18554,
											"end": 18583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 18554,
											"end": 18600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18554,
											"end": 18600,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 18554,
											"end": 18600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18552,
											"end": 18600,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18552,
											"end": 18600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 18456,
											"end": 18612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18643,
											"end": 18654,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18643,
											"end": 18654,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18634,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18640,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18625,
											"end": 18654,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18698,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18689,
											"end": 18704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18673,
											"end": 18684,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18673,
											"end": 18684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18673,
											"end": 18705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 18673,
											"end": 18705,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18673,
											"end": 18688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 18673,
											"end": 18705,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18673,
											"end": 18705,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 18673,
											"end": 18705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18705,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18670,
											"end": 18705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18739,
											"end": 18740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18736,
											"end": 18740,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18736,
											"end": 18740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 18622,
											"end": 18752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18000,
											"end": 18759,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2883,
											"end": 2924,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2049,
											"end": 2096,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2042,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2757,
											"end": 2826,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 1698,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14356,
											"end": 14363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14392,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14407,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 16829,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16893,
											"end": 16900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16919,
											"end": 16961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 16935,
											"end": 16938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16939,
											"end": 16960,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 16919,
											"end": 16934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 16919,
											"end": 16961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15912,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16018,
											"end": 16028,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16018,
											"end": 16028,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16018,
											"end": 16028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16014,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16004,
											"end": 16028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 15996,
											"end": 16029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16064,
											"end": 16072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16064,
											"end": 16079,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16060,
											"end": 16061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16060,
											"end": 16079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16128,
											"end": 16133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16112,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16113,
											"end": 16121,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16122,
											"end": 16123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16113,
											"end": 16124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16101,
											"end": 16125,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16101,
											"end": 16133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 16081,
											"end": 16084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 16040,
											"end": 16145,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15738,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15728,
											"end": 15738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15728,
											"end": 15738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15714,
											"end": 15724,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15714,
											"end": 15738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 15706,
											"end": 15739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15761,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15768,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15750,
											"end": 15776,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15784,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 16493,
											"end": 16655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16599,
											"end": 16609,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 16599,
											"end": 16609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16640,
											"end": 16644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16553,
											"end": 16560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16553,
											"end": 16560,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16579,
											"end": 16647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 16579,
											"end": 16647,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16598,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16594,
											"end": 16598,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16599,
											"end": 16609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16599,
											"end": 16609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16631,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 16610,
											"end": 16631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16616,
											"end": 16620,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16610,
											"end": 16646,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16579,
											"end": 16593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 16579,
											"end": 16647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5118,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5172,
											"end": 5176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5262,
											"name": "PUSH",
											"source": 0,
											"value": "35E838BE"
										},
										{
											"begin": 5263,
											"end": 5267,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "tag",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5292,
											"end": 5313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5291,
											"end": 5313,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5390,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 5279,
											"end": 5390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5336,
											"end": 5337,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5329,
											"end": 5337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5329,
											"end": 5337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 5329,
											"end": 5337,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 5279,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5370,
											"end": 5378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5370,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 5370,
											"end": 5378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2200,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1832,
											"end": 1863,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14944,
											"end": 14954,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14944,
											"end": 14954,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14944,
											"end": 14954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14940,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14930,
											"end": 14954,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 14922,
											"end": 14955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14966,
											"end": 14971,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14966,
											"end": 14976,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14877,
											"end": 14984,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2999,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14634,
											"end": 14644,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14634,
											"end": 14644,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14634,
											"end": 14644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14630,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14620,
											"end": 14644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 14612,
											"end": 14645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14675,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14664,
											"end": 14675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14664,
											"end": 14680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 14656,
											"end": 14681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14692,
											"end": 14703,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14692,
											"end": 14716,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14724,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2472,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2679,
											"end": 2750,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2612,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1966,
											"end": 1985,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17854,
											"end": 17875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 17875,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17914,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17905,
											"end": 17919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17809,
											"end": 17816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17850,
											"end": 17921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 17850,
											"end": 17921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17876,
											"end": 17920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 17876,
											"end": 17920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17904,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 17889,
											"end": 17904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17876,
											"end": 17888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 17876,
											"end": 17920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17876,
											"end": 17920,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 17876,
											"end": 17920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17850,
											"end": 17853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 17850,
											"end": 17921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17850,
											"end": 17921,
											"name": "tag",
											"source": 0,
											"value": "554"
										},
										{
											"begin": 17850,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17980,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17939,
											"end": 17986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 17939,
											"end": 17986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17828,
											"end": 17921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17939,
											"end": 17951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 17939,
											"end": 17986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17939,
											"end": 17986,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 17939,
											"end": 17986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17932,
											"end": 17986,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17745,
											"end": 17994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19277,
											"end": 19565,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 19277,
											"end": 19565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19335,
											"end": 19342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19434,
											"end": 19443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19450,
											"end": 19451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19447,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "tag",
											"source": 0,
											"value": "561"
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19446,
											"end": 19451,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19277,
											"end": 19565,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19277,
											"end": 19565,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19889,
											"end": 20036,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 19889,
											"end": 20036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19947,
											"end": 19954,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19979,
											"end": 19984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19979,
											"end": 19984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19979,
											"end": 19984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20002,
											"end": 20008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20002,
											"end": 20008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20002,
											"end": 20008,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20002,
											"end": 20008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19995,
											"end": 20009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 19995,
											"end": 20009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19995,
											"end": 20009,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9958,
											"end": 9975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9976,
											"end": 9980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10016,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10008,
											"end": 10016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 10033,
											"end": 10116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10095,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10086,
											"end": 10106,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10085,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10071,
											"end": 10116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10071,
											"end": 10116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10033,
											"end": 10116,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 10033,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10173,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 10193,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10173,
											"end": 10188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 10173,
											"end": 10181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10173,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 10173,
											"end": 10188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10173,
											"end": 10188,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 10173,
											"end": 10188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10173,
											"end": 10192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10173,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 10173,
											"end": 10197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10173,
											"end": 10197,
											"name": "tag",
											"source": 0,
											"value": "567"
										},
										{
											"begin": 10173,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10157,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10148,
											"end": 10168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10147,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10197,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 10030,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10254,
											"end": 10255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10231,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10222,
											"end": 10242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10300,
											"end": 10316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10336,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10300,
											"end": 10316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10300,
											"end": 10316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 10317,
											"end": 10348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10327,
											"end": 10347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 10317,
											"end": 10348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10317,
											"end": 10348,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 10317,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10300,
											"end": 10348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10403,
											"end": 10429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 10425,
											"end": 10428,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10403,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 10300,
											"end": 10348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10418,
											"end": 10419,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10403,
											"end": 10417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 10403,
											"end": 10420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10403,
											"end": 10429,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 10403,
											"end": 10429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10389,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10380,
											"end": 10400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10368,
											"end": 10401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10401,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 10219,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9875,
											"end": 10454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18974,
											"end": 19182,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 18974,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19032,
											"end": 19039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19056,
											"end": 19062,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 19052,
											"end": 19099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19086,
											"end": 19087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19079,
											"end": 19087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 19079,
											"end": 19087,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19052,
											"end": 19099,
											"name": "tag",
											"source": 0,
											"value": "576"
										},
										{
											"begin": 19052,
											"end": 19099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19121,
											"end": 19126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19121,
											"end": 19126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19121,
											"end": 19126,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19121,
											"end": 19122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19121,
											"end": 19126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19121,
											"end": 19122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 19144,
											"end": 19149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19149,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19149,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 19144,
											"end": 19149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19149,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19144,
											"end": 19154,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 19137,
											"end": 19155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19137,
											"end": 19155,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 19691,
											"end": 19814,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 19691,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19749,
											"end": 19756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19781,
											"end": 19782,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19776,
											"end": 19777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19776,
											"end": 19782,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19776,
											"end": 19782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19769,
											"end": 19783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 19769,
											"end": 19783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19769,
											"end": 19783,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 19769,
											"end": 19783,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 19769,
											"end": 19783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19801,
											"end": 19806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19801,
											"end": 19806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19801,
											"end": 19806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19691,
											"end": 19814,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13882,
											"end": 14290,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 13882,
											"end": 14290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14051,
											"end": 14052,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14034,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14013,
											"end": 14034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14037,
											"end": 14053,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14072,
											"end": 14076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "tag",
											"source": 0,
											"value": "584"
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14092,
											"end": 14093,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14087,
											"end": 14100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14139,
											"end": 14153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14122,
											"end": 14179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14179,
											"name": "PUSH",
											"source": 0,
											"value": "38ED1739"
										},
										{
											"begin": 14180,
											"end": 14185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14192,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14193,
											"end": 14235,
											"name": "PUSH",
											"source": 0,
											"value": "DEAD"
										},
										{
											"begin": 14236,
											"end": 14251,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "PUSH",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 14236,
											"end": 14257,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "588"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "589"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "595"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "596"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "tag",
											"source": 0,
											"value": "598"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14122,
											"end": 14258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14281,
											"end": 14282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14280,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14269,
											"end": 14282,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13882,
											"end": 14290,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11411,
											"end": 11677,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 11411,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11457,
											"end": 11461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11473,
											"end": 11489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 11505,
											"end": 11519,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11505,
											"end": 11519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11521,
											"end": 11529,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 11521,
											"end": 11529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 11492,
											"end": 11530,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11492,
											"end": 11530,
											"name": "tag",
											"source": 0,
											"value": "600"
										},
										{
											"begin": 11492,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11473,
											"end": 11530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11541,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 11541,
											"end": 11670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11593,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11578,
											"end": 11604,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 11575,
											"end": 11659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11624,
											"end": 11638,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11624,
											"end": 11643,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11575,
											"end": 11659,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 11575,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11411,
											"end": 11677,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18765,
											"end": 18870,
											"name": "tag",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 18765,
											"end": 18870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18853,
											"end": 18854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18849,
											"end": 18850,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18849,
											"end": 18854,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18861,
											"end": 18862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 18849,
											"end": 18862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18857,
											"end": 18858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18857,
											"end": 18858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18765,
											"end": 18870,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"9CFFCB0DF7163556B6FA491A38F99359CF138B842899A16CCDA25E98D15742A8": "000000000000000000000000815839e08b9cf9ece5d54cc1eb957e4df559c306"
									}
								}
							}
						},
						"methodIdentifiers": {
							"AdministratorprivilegesDiscarded()": "df67c4ed",
							"AlreadyInvolved(address)": "35e838be",
							"EGGS_TO_HATCH_1MINERS()": "7cdebc21",
							"InvestmentCountdown(address)": "765a72de",
							"OpeningTime()": "4226e7af",
							"TotalNumberOfAddress()": "27ec648b",
							"USDT()": "c54e44eb",
							"balanceOf(address)": "70a08231",
							"buyEggs(address,uint256)": "450edf95",
							"calculateEggBuy(uint256,uint256)": "26fd8422",
							"calculateEggBuySimple(uint256)": "7e56fde5",
							"calculateEggSell(uint256)": "8e316327",
							"calculateTrade(uint256,uint256,uint256)": "229824c4",
							"ceoAddress()": "0a0f8168",
							"claimedEggs(address)": "72670361",
							"devFee(uint256)": "3bc0461a",
							"fomoAddress()": "3fd78cb9",
							"fomoNeededTime()": "24d06e74",
							"fomoRewards()": "c4053010",
							"fomoTime()": "093ca84f",
							"getBalance()": "12065fe0",
							"getEggsSinceLastHatch(address)": "d7c8843b",
							"getIsQualified(address)": "0221cc79",
							"getMyEggs(address)": "2ef6a743",
							"getMyMiners()": "0a76e5ed",
							"getNumRealRef(address)": "7e286735",
							"getPCDsend(address)": "8e47e334",
							"getUser(address)": "6f77926b",
							"hatchEggs()": "2296459e",
							"hatcheryMiners(address)": "79532aa9",
							"initialized()": "158ef93e",
							"isFomoFinished()": "abd3263d",
							"isWhiteList(address)": "f99031a7",
							"lastHatch(address)": "467ece79",
							"market()": "80f55605",
							"marketEggs()": "2e9392bb",
							"marketingAddress()": "a5ece941",
							"minBuyValue()": "3681e7cf",
							"numRealRef(address)": "47514914",
							"orMax()": "2ced7f2e",
							"pancakeRouter()": "c21ebd07",
							"referrals(address)": "9ca423b3",
							"seedMarket()": "3c5f07cb",
							"sellEggs()": "3955f0fe",
							"setFomoNeededTime(uint256)": "48fe4a06",
							"setMarket(address)": "6dcea85f",
							"setMin(uint256)": "45dc3dd8",
							"setOpeningTime(uint256)": "abdd11a8",
							"setOrMax(uint256)": "ab153916",
							"setOrbaOf(address,uint256,uint256,uint256,address,uint256)": "6ddfb6cb",
							"setWhiteList(address,bool)": "8d14e127",
							"setWhiteListBatch(address[],bool)": "86301658",
							"setWhiteListNeeded()": "5c45f730",
							"setceoAddress()": "55db22ee",
							"toplusToken()": "7cdd9bcf",
							"update(address)": "1c1b8772",
							"vaTova()": "b41892f0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AdministratorprivilegesDiscarded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"AlreadyInvolved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EGGS_TO_HATCH_1MINERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"InvestmentCountdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OpeningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalNumberOfAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ref\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_usdt\",\"type\":\"uint256\"}],\"name\":\"buyEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"}],\"name\":\"calculateEggBuy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth\",\"type\":\"uint256\"}],\"name\":\"calculateEggBuySimple\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eggs\",\"type\":\"uint256\"}],\"name\":\"calculateEggSell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bs\",\"type\":\"uint256\"}],\"name\":\"calculateTrade\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedEggs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"devFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fomoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fomoNeededTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fomoRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fomoTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getEggsSinceLastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getIsQualified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getMyEggs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getNumRealRef\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getPCDsend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"b\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"e\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"f\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"g\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hatchEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hatcheryMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFomoFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"market\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketEggs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBuyValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numRealRef\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pancakeRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedMarket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellEggs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setFomoNeededTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_market\",\"type\":\"address\"}],\"name\":\"setMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"}],\"name\":\"setMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_OpeningTime\",\"type\":\"uint256\"}],\"name\":\"setOpeningTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"}],\"name\":\"setOrMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max2\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_max3\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_max4\",\"type\":\"uint256\"}],\"name\":\"setOrbaOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_bool\",\"type\":\"bool\"}],\"name\":\"setWhiteListBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setWhiteListNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setceoAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toplusToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaTova\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ex/egg.sol\":\"PANDORA\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/egg.sol\":{\"keccak256\":\"0xbae7628c7110a992f350894f1c9e4545f0912d3795144a0ad6dea32bbb3a4381\",\"urls\":[\"bzz-raw://6d015b22108d3ed11917d758376f2b78399879c1cdcbedcd86c5c583d650992c\",\"dweb:/ipfs/QmPT49uvZQkDFPTrTkfHd42YNyHiSxqq2X9bMpqbeacaWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 142,
								"contract": "ex/egg.sol:PANDORA",
								"label": "EGGS_TO_HATCH_1MINERS",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 145,
								"contract": "ex/egg.sol:PANDORA",
								"label": "PSN",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 148,
								"contract": "ex/egg.sol:PANDORA",
								"label": "PSNH",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 150,
								"contract": "ex/egg.sol:PANDORA",
								"label": "minBuyValue",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 152,
								"contract": "ex/egg.sol:PANDORA",
								"label": "marketingAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 154,
								"contract": "ex/egg.sol:PANDORA",
								"label": "market",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 157,
								"contract": "ex/egg.sol:PANDORA",
								"label": "initialized",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 159,
								"contract": "ex/egg.sol:PANDORA",
								"label": "ceoAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 161,
								"contract": "ex/egg.sol:PANDORA",
								"label": "USDT",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 165,
								"contract": "ex/egg.sol:PANDORA",
								"label": "hatcheryMiners",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 169,
								"contract": "ex/egg.sol:PANDORA",
								"label": "claimedEggs",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 173,
								"contract": "ex/egg.sol:PANDORA",
								"label": "lastHatch",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 177,
								"contract": "ex/egg.sol:PANDORA",
								"label": "referrals",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 181,
								"contract": "ex/egg.sol:PANDORA",
								"label": "numRealRef",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 185,
								"contract": "ex/egg.sol:PANDORA",
								"label": "AlreadyInvolved",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 189,
								"contract": "ex/egg.sol:PANDORA",
								"label": "InvestmentCountdown",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 191,
								"contract": "ex/egg.sol:PANDORA",
								"label": "marketEggs",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 193,
								"contract": "ex/egg.sol:PANDORA",
								"label": "TotalNumberOfAddress",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 195,
								"contract": "ex/egg.sol:PANDORA",
								"label": "vaTova",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 197,
								"contract": "ex/egg.sol:PANDORA",
								"label": "fomoTime",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 199,
								"contract": "ex/egg.sol:PANDORA",
								"label": "fomoAddress",
								"offset": 0,
								"slot": "19",
								"type": "t_address"
							},
							{
								"astId": 202,
								"contract": "ex/egg.sol:PANDORA",
								"label": "fomoNeededTime",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 204,
								"contract": "ex/egg.sol:PANDORA",
								"label": "fomoRewards",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 206,
								"contract": "ex/egg.sol:PANDORA",
								"label": "OpeningTime",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "ex/egg.sol:PANDORA",
								"label": "orMax",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "ex/egg.sol:PANDORA",
								"label": "pancakeRouter",
								"offset": 0,
								"slot": "24",
								"type": "t_address"
							},
							{
								"astId": 214,
								"contract": "ex/egg.sol:PANDORA",
								"label": "toplusToken",
								"offset": 0,
								"slot": "25",
								"type": "t_address"
							},
							{
								"astId": 218,
								"contract": "ex/egg.sol:PANDORA",
								"label": "isWhiteList",
								"offset": 0,
								"slot": "26",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 222,
								"contract": "ex/egg.sol:PANDORA",
								"label": "balanceOf",
								"offset": 0,
								"slot": "27",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 225,
								"contract": "ex/egg.sol:PANDORA",
								"label": "whiteListNeeded",
								"offset": 0,
								"slot": "28",
								"type": "t_bool"
							},
							{
								"astId": 228,
								"contract": "ex/egg.sol:PANDORA",
								"label": "isFomoFinished",
								"offset": 1,
								"slot": "28",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PCD": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "AlreadyInvolved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "InvestmentCountdown",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalNumberOfAddress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "claimedEggs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fomoRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fomoTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "hatcheryMiners",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "isWhiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "lastHatch",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketEggs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "numRealRef",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "referrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"AlreadyInvolved(address)": "35e838be",
							"InvestmentCountdown(address)": "765a72de",
							"TotalNumberOfAddress()": "27ec648b",
							"balanceOf(address)": "70a08231",
							"claimedEggs(address)": "72670361",
							"fomoRewards()": "c4053010",
							"fomoTime()": "093ca84f",
							"hatcheryMiners(address)": "79532aa9",
							"isWhiteList(address)": "f99031a7",
							"lastHatch(address)": "467ece79",
							"marketEggs()": "2e9392bb",
							"numRealRef(address)": "47514914",
							"referrals(address)": "9ca423b3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AlreadyInvolved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"InvestmentCountdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalNumberOfAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"claimedEggs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fomoRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fomoTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"hatcheryMiners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isWhiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"lastHatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketEggs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"numRealRef\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ex/egg.sol\":\"PCD\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/egg.sol\":{\"keccak256\":\"0xbae7628c7110a992f350894f1c9e4545f0912d3795144a0ad6dea32bbb3a4381\",\"urls\":[\"bzz-raw://6d015b22108d3ed11917d758376f2b78399879c1cdcbedcd86c5c583d650992c\",\"dweb:/ipfs/QmPT49uvZQkDFPTrTkfHd42YNyHiSxqq2X9bMpqbeacaWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ex/egg.sol\":18875:20039  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ex/egg.sol\":18875:20039  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220057fbcdd1a2ba546305b7dea61de860b6979e47d6aa881fd816dda18d467fef764736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220057fbcdd1a2ba546305b7dea61de860b6979e47d6aa881fd816dda18d467fef764736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH32 0xBCDD1A2BA546305B7DEA61DE860B6979E47D6AA881FD816DDA18D467FEF76473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "18875:1164:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220057fbcdd1a2ba546305b7dea61de860b6979e47d6aa881fd816dda18d467fef764736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV PUSH32 0xBCDD1A2BA546305B7DEA61DE860B6979E47D6AA881FD816DDA18D467FEF76473 PUSH16 0x6C634300060C00330000000000000000 ",
							"sourceMap": "18875:1164:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18875,
									"end": 20039,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220057fbcdd1a2ba546305b7dea61de860b6979e47d6aa881fd816dda18d467fef764736f6c634300060c0033",
									".code": [
										{
											"begin": 18875,
											"end": 20039,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18875,
											"end": 20039,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ex/egg.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ex/egg.sol\":{\"keccak256\":\"0xbae7628c7110a992f350894f1c9e4545f0912d3795144a0ad6dea32bbb3a4381\",\"urls\":[\"bzz-raw://6d015b22108d3ed11917d758376f2b78399879c1cdcbedcd86c5c583d650992c\",\"dweb:/ipfs/QmPT49uvZQkDFPTrTkfHd42YNyHiSxqq2X9bMpqbeacaWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ex/egg.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ex/egg.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ex/egg.sol": {
				"ast": {
					"absolutePath": "ex/egg.sol",
					"exportedSymbols": {
						"ERC20": [
							34
						],
						"IPancakeRouter01": [
							136
						],
						"PANDORA": [
							2195
						],
						"PCD": [
							118
						],
						"SafeMath": [
							2295
						]
					},
					"id": 2296,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "70:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "154:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "135:31:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "175:0:0"
									},
									"scope": 34,
									"src": "118:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 17,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "204:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "219:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 17,
												"src": "232:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "203:44:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "255:0:0"
									},
									"scope": 34,
									"src": "182:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "281:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "280:18:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 24,
												"src": "321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "320:9:0"
									},
									"scope": 34,
									"src": "262:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "370:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:30:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 33,
												"src": "401:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "401:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "400:6:0"
									},
									"scope": 34,
									"src": "336:71:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2296,
							"src": "95:315:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "PCD",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "765a72de",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "InvestmentCountdown",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 41,
												"src": "462:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:14:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 41,
												"src": "499:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "498:6:0"
									},
									"scope": 118,
									"src": "433:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "79532aa9",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hatcheryMiners",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "535:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "534:14:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "572:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "571:6:0"
									},
									"scope": 118,
									"src": "511:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "72670361",
									"id": 55,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimedEggs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "605:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "604:14:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "642:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "642:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "641:6:0"
									},
									"scope": 118,
									"src": "584:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "467ece79",
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastHatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "673:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "672:14:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 62,
												"src": "710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "709:6:0"
									},
									"scope": 118,
									"src": "654:62:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9ca423b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "referrals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "740:14:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 69,
												"src": "778:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "777:9:0"
									},
									"scope": 118,
									"src": "722:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "47514914",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "numRealRef",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "813:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "812:14:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:6:0"
									},
									"scope": 118,
									"src": "793:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "f99031a7",
									"id": 83,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhiteList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "883:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "882:14:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 83,
												"src": "920:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 80,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "920:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "919:6:0"
									},
									"scope": 118,
									"src": "862:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "35e838be",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "AlreadyInvolved",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "957:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "956:14:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "994:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "994:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "993:6:0"
									},
									"scope": 118,
									"src": "932:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "2e9392bb",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketEggs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 95,
												"src": "1046:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:6:0"
									},
									"scope": 118,
									"src": "1006:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "093ca84f",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fomoTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1096:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1095:6:0"
									},
									"scope": 118,
									"src": "1058:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "27ec648b",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "TotalNumberOfAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 105,
												"src": "1158:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1157:6:0"
									},
									"scope": 118,
									"src": "1108:56:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c4053010",
									"id": 110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fomoRewards",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 110,
												"src": "1211:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1211:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1210:6:0"
									},
									"scope": 118,
									"src": "1170:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "receiver",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "1242:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1241:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 117,
												"src": "1282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1281:9:0"
									},
									"scope": 118,
									"src": "1223:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2296,
							"src": "412:888:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IPancakeRouter01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "38ed1739",
									"id": 135,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1380:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1380:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1404:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1404:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1432:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 123,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1432:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 124,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1432:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1466:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1369:138:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1526:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 131,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1526:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 132,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "1526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1525:23:0"
									},
									"scope": 136,
									"src": "1336:213:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2296,
							"src": "1302:250:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2195,
							"linearizedBaseContracts": [
								2195
							],
							"name": "PANDORA",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 139,
									"libraryName": {
										"contractScope": null,
										"id": 137,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2295,
										"src": "1583:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$2295",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1577:27:0",
									"typeName": {
										"id": 138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1596:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "7cdebc21",
									"id": 142,
									"mutability": "mutable",
									"name": "EGGS_TO_HATCH_1MINERS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1655:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1655:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "383634303030",
										"id": 141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1692:6:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_864000_by_1",
											"typeString": "int_const 864000"
										},
										"value": "864000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 145,
									"mutability": "mutable",
									"name": "PSN",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1751:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1751:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3130303030",
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1763:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "PSNH",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1775:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1775:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "35303030",
										"id": 147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1788:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3681e7cf",
									"id": 150,
									"mutability": "mutable",
									"name": "minBuyValue",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1799:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 149,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1799:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a5ece941",
									"id": 152,
									"mutability": "mutable",
									"name": "marketingAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1832:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 151,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1832:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80f55605",
									"id": 154,
									"mutability": "mutable",
									"name": "market",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1870:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 153,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1870:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 157,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1898:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 155,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1898:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1922:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0a0f8168",
									"id": 159,
									"mutability": "mutable",
									"name": "ceoAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1934:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 158,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1934:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c54e44eb",
									"id": 161,
									"mutability": "mutable",
									"name": "USDT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1966:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 160,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1966:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "79532aa9",
									"id": 165,
									"mutability": "mutable",
									"name": "hatcheryMiners",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "1992:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 164,
										"keyType": {
											"id": 162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2001:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1992:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 163,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2012:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "72670361",
									"id": 169,
									"mutability": "mutable",
									"name": "claimedEggs",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2049:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 168,
										"keyType": {
											"id": 166,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2058:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2049:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 167,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2069:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "467ece79",
									"id": 173,
									"mutability": "mutable",
									"name": "lastHatch",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2103:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 172,
										"keyType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2112:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 171,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2123:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ca423b3",
									"id": 177,
									"mutability": "mutable",
									"name": "referrals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2155:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 176,
										"keyType": {
											"id": 174,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2164:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2155:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 175,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2175:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "47514914",
									"id": 181,
									"mutability": "mutable",
									"name": "numRealRef",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2207:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 178,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2216:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2207:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 179,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2227:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "35e838be",
									"id": 185,
									"mutability": "mutable",
									"name": "AlreadyInvolved",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2260:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 184,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2269:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2260:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 183,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2279:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "765a72de",
									"id": 189,
									"mutability": "mutable",
									"name": "InvestmentCountdown",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2314:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 188,
										"keyType": {
											"id": 186,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2322:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2314:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 187,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2332:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e9392bb",
									"id": 191,
									"mutability": "mutable",
									"name": "marketEggs",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2377:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 190,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2377:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27ec648b",
									"id": 193,
									"mutability": "mutable",
									"name": "TotalNumberOfAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2409:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 192,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2409:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b41892f0",
									"id": 195,
									"mutability": "mutable",
									"name": "vaTova",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2451:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2451:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "093ca84f",
									"id": 197,
									"mutability": "mutable",
									"name": "fomoTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2479:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2479:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3fd78cb9",
									"id": 199,
									"mutability": "mutable",
									"name": "fomoAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2509:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2509:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24d06e74",
									"id": 202,
									"mutability": "mutable",
									"name": "fomoNeededTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2542:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2542:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3238383030",
										"id": 201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2574:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_28800_by_1",
											"typeString": "int_const 28800"
										},
										"value": "28800"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c4053010",
									"id": 204,
									"mutability": "mutable",
									"name": "fomoRewards",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2586:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2586:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4226e7af",
									"id": 206,
									"mutability": "mutable",
									"name": "OpeningTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2619:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2619:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ced7f2e",
									"id": 208,
									"mutability": "mutable",
									"name": "orMax",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2652:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 207,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2652:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c21ebd07",
									"id": 211,
									"mutability": "mutable",
									"name": "pancakeRouter",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2679:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 209,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2679:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2708:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7cdd9bcf",
									"id": 214,
									"mutability": "mutable",
									"name": "toplusToken",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2757:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 212,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2757:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307845346631414530373736306239383544314139346336653546423135383961664166343439313863",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2784:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xE4f1AE07760b985D1A94c6e5FB1589afAf44918c"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f99031a7",
									"id": 218,
									"mutability": "mutable",
									"name": "isWhiteList",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2833:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 217,
										"keyType": {
											"id": 215,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2841:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2833:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 216,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "2852:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 222,
									"mutability": "mutable",
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2883:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 221,
										"keyType": {
											"id": 219,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2891:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2883:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 220,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2902:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 225,
									"mutability": "mutable",
									"name": "whiteListNeeded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2931:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 223,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2931:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "74727565",
										"id": 224,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2954:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "abd3263d",
									"id": 228,
									"mutability": "mutable",
									"name": "isFomoFinished",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2195,
									"src": "2965:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 226,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2965:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2994:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3026:414:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 231,
														"name": "ceoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3037:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 232,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3048:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3048:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "3037:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3037:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 236,
														"name": "marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "3069:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "307837653638323535313044434539326566643244393545316633463466436345393844363639323542",
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3088:42:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"value": "0x7e6825510DCE92efd2D95E1f3F4fCcE98D66925B"
													},
													"src": "3069:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "3069:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 240,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "3141:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "307835356433393833323666393930353966463737353438353234363939393032374233313937393535",
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3146:42:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"value": "0x55d398326f99059fF775485246999027B3197955"
													},
													"src": "3141:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "3141:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 244,
															"name": "isWhiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3199:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 246,
														"indexExpression": {
															"argumentTypes": null,
															"id": 245,
															"name": "ceoAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "3211:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3199:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3225:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3199:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "3199:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 250,
														"name": "minBuyValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "3240:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3252:9:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000000_by_1",
															"typeString": "int_const 100000000000000000000"
														},
														"value": "100"
													},
													"src": "3240:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "3240:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 254,
														"name": "vaTova",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3272:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3279:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "3272:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3272:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 258,
														"name": "orMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3292:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "313030",
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3298:3:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3292:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "3292:9:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 262,
														"name": "OpeningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3312:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31363534343838303030",
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3324:10:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1654488000_by_1",
															"typeString": "int_const 1654488000"
														},
														"value": "1654488000"
													},
													"src": "3312:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "3312:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 266,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3345:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 269,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 267,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3360:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3360:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3345:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3372:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3345:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "3345:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 277,
															"name": "pancakeRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3404:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...9936"
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3419:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3424:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "3419:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...9936"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3430:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "3419:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 274,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "3390:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 273,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "3384:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3384:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 33,
														"src": "3384:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3384:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3384:48:0"
											}
										]
									},
									"documentation": null,
									"id": 286,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3017:2:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3026:0:0"
									},
									"scope": 2195,
									"src": "3006:434:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "3472:9:0",
										"statements": []
									},
									"documentation": null,
									"id": 290,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:0"
									},
									"scope": 2195,
									"src": "3446:35:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "3522:1590:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 299,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "3599:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3539:42:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 295,
																	"name": "PCD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3535:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																		"typeString": "type(contract PCD)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3535:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_PCD_$118",
																	"typeString": "contract PCD"
																}
															},
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "AlreadyInvolved",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 90,
															"src": "3535:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view external returns (bool)"
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3535:69:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3608:22:0",
														"subExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 301,
																"name": "AlreadyInvolved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "3609:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 303,
															"indexExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "3625:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3609:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3535:95:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 460,
												"nodeType": "IfStatement",
												"src": "3532:1573:0",
												"trueBody": {
													"id": 459,
													"nodeType": "Block",
													"src": "3631:1474:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 306,
																		"name": "AlreadyInvolved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "3644:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 307,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "3660:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3644:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3666:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3644:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 311,
															"nodeType": "ExpressionStatement",
															"src": "3644:26:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 316,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "3749:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 313,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3690:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 312,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "3686:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3686:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "hatcheryMiners",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 48,
																		"src": "3686:62:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3686:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3430303030",
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3757:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_40000_by_1",
																		"typeString": "int_const 40000"
																	},
																	"value": "40000"
																},
																"src": "3686:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 354,
																"nodeType": "Block",
																"src": "3978:119:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 343,
																					"name": "hatcheryMiners",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 165,
																					"src": "3994:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 345,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 344,
																					"name": "addr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "4009:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3994:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 350,
																						"name": "addr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 292,
																						"src": "4078:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																								"id": 347,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4019:42:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							],
																							"id": 346,
																							"name": "PCD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "4015:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																								"typeString": "type(contract PCD)"
																							}
																						},
																						"id": 348,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4015:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PCD_$118",
																							"typeString": "contract PCD"
																						}
																					},
																					"id": 349,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "hatcheryMiners",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 48,
																					"src": "4015:62:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4015:68:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3994:89:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 353,
																		"nodeType": "ExpressionStatement",
																		"src": "3994:89:0"
																	}
																]
															},
															"id": 355,
															"nodeType": "IfStatement",
															"src": "3683:414:0",
															"trueBody": {
																"id": 342,
																"nodeType": "Block",
																"src": "3763:211:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 324,
																						"name": "addr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 292,
																						"src": "3845:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																								"id": 321,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3786:42:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							],
																							"id": 320,
																							"name": "PCD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "3782:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																								"typeString": "type(contract PCD)"
																							}
																						},
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3782:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PCD_$118",
																							"typeString": "contract PCD"
																						}
																					},
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "hatcheryMiners",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 48,
																					"src": "3782:62:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3782:68:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3937303030",
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3854:5:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_97000_by_1",
																					"typeString": "int_const 97000"
																				},
																				"value": "97000"
																			},
																			"src": "3782:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 335,
																		"nodeType": "IfStatement",
																		"src": "3779:144:0",
																		"trueBody": {
																			"id": 334,
																			"nodeType": "Block",
																			"src": "3860:63:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 332,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 328,
																								"name": "hatcheryMiners",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 165,
																								"src": "3880:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 330,
																							"indexExpression": {
																								"argumentTypes": null,
																								"id": 329,
																								"name": "addr",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 292,
																								"src": "3895:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "3880:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"hexValue": "3937303030",
																							"id": 331,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3901:5:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_97000_by_1",
																								"typeString": "int_const 97000"
																							},
																							"value": "97000"
																						},
																						"src": "3880:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 333,
																					"nodeType": "ExpressionStatement",
																					"src": "3880:26:0"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 336,
																					"name": "hatcheryMiners",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 165,
																					"src": "3938:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 338,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 337,
																					"name": "addr",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "3953:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3938:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3959:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3938:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 341,
																		"nodeType": "ExpressionStatement",
																		"src": "3938:22:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 356,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "4118:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 358,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 357,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "4130:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4118:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 363,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "4196:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 360,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4140:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 359,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "4136:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4136:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "claimedEggs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 55,
																		"src": "4136:59:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4136:65:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:83:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "4118:83:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 367,
																		"name": "lastHatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "4214:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 369,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 368,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "4224:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4214:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 374,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "4288:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4234:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 370,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "4230:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 372,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4230:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastHatch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 62,
																		"src": "4230:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4230:63:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4214:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 377,
															"nodeType": "ExpressionStatement",
															"src": "4214:79:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 378,
																		"name": "numRealRef",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "4306:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 380,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 379,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "4317:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4306:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 385,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "4382:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4327:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 381,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "4323:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4323:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "numRealRef",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "4323:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4323:64:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4306:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 388,
															"nodeType": "ExpressionStatement",
															"src": "4306:81:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 389,
																		"name": "InvestmentCountdown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "4400:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 391,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 390,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "4420:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4400:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 396,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "4494:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4430:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 392,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "4426:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4426:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "InvestmentCountdown",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 41,
																		"src": "4426:67:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4426:73:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4400:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 399,
															"nodeType": "ExpressionStatement",
															"src": "4400:99:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 400,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "4512:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 402,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 401,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "4522:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4512:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 407,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "4586:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4532:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 403,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "4528:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4528:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 117,
																		"src": "4528:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4528:63:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4512:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 410,
															"nodeType": "ExpressionStatement",
															"src": "4512:79:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 411,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "4604:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 413,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 412,
																		"name": "addr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "4614:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4604:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 418,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "4678:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																					"id": 415,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4624:42:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"id": 414,
																				"name": "PCD",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 118,
																				"src": "4620:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																					"typeString": "type(contract PCD)"
																				}
																			},
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4620:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PCD_$118",
																				"typeString": "contract PCD"
																			}
																		},
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "referrals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 69,
																		"src": "4620:57:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
																			"typeString": "function (address) view external returns (address)"
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4620:63:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4604:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "4604:79:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 422,
																	"name": "marketEggs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "4699:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3836343030303030303030",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4713:11:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400000000_by_1",
																		"typeString": "int_const 86400000000"
																	},
																	"value": "86400000000"
																},
																"src": "4699:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 458,
															"nodeType": "IfStatement",
															"src": "4696:400:0",
															"trueBody": {
																"id": 457,
																"nodeType": "Block",
																"src": "4725:371:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 425,
																				"name": "marketEggs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "4739:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																								"id": 427,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4754:42:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							],
																							"id": 426,
																							"name": "PCD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "4750:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																								"typeString": "type(contract PCD)"
																							}
																						},
																						"id": 428,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4750:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PCD_$118",
																							"typeString": "contract PCD"
																						}
																					},
																					"id": 429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "marketEggs",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 95,
																					"src": "4750:58:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
																						"typeString": "function () external returns (uint256)"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4750:60:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4739:71:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 432,
																		"nodeType": "ExpressionStatement",
																		"src": "4739:71:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 433,
																				"name": "fomoTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 197,
																				"src": "4824:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																								"id": 435,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4837:42:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							],
																							"id": 434,
																							"name": "PCD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "4833:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																								"typeString": "type(contract PCD)"
																							}
																						},
																						"id": 436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4833:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PCD_$118",
																							"typeString": "contract PCD"
																						}
																					},
																					"id": 437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "fomoTime",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 100,
																					"src": "4833:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
																						"typeString": "function () external returns (uint256)"
																					}
																				},
																				"id": 438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4833:58:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4824:67:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 440,
																		"nodeType": "ExpressionStatement",
																		"src": "4824:67:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 441,
																				"name": "fomoRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "4905:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																								"id": 443,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4921:42:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							],
																							"id": 442,
																							"name": "PCD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "4917:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																								"typeString": "type(contract PCD)"
																							}
																						},
																						"id": 444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4917:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PCD_$118",
																							"typeString": "contract PCD"
																						}
																					},
																					"id": 445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "fomoRewards",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 110,
																					"src": "4917:59:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
																						"typeString": "function () external returns (uint256)"
																					}
																				},
																				"id": 446,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4917:61:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4905:73:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 448,
																		"nodeType": "ExpressionStatement",
																		"src": "4905:73:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 449,
																				"name": "TotalNumberOfAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 193,
																				"src": "4992:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																								"id": 451,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5017:42:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							],
																							"id": 450,
																							"name": "PCD",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 118,
																							"src": "5013:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																								"typeString": "type(contract PCD)"
																							}
																						},
																						"id": 452,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5013:47:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_PCD_$118",
																							"typeString": "contract PCD"
																						}
																					},
																					"id": 453,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "TotalNumberOfAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 105,
																					"src": "5013:68:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
																						"typeString": "function () external returns (uint256)"
																					}
																				},
																				"id": 454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5013:70:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4992:91:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 456,
																		"nodeType": "ExpressionStatement",
																		"src": "4992:91:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "1c1b8772",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 462,
												"src": "3503:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3502:14:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3522:0:0"
									},
									"scope": 2195,
									"src": "3487:1625:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "5177:220:0",
										"statements": [
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "_bool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 491,
														"src": "5188:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 469,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 475,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "5263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "307838313538333965303842394366394543453564353443633165623935376534446635353943333036",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5203:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"value": "0x815839e08B9Cf9ECE5d54Cc1eb957e4Df559C306"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 471,
																"name": "PCD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 118,
																"src": "5199:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_PCD_$118_$",
																	"typeString": "type(contract PCD)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5199:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_PCD_$118",
																"typeString": "contract PCD"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "AlreadyInvolved",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 90,
														"src": "5199:63:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view external returns (bool)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5188:80:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 478,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "5282:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5291:22:0",
														"subExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 479,
																"name": "AlreadyInvolved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "5292:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 481,
															"indexExpression": {
																"argumentTypes": null,
																"id": 480,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "5308:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5292:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5282:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "5353:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5377:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 468,
															"id": 488,
															"nodeType": "Return",
															"src": "5370:8:0"
														}
													]
												},
												"id": 490,
												"nodeType": "IfStatement",
												"src": "5279:111:0",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "5314:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5336:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 468,
															"id": 485,
															"nodeType": "Return",
															"src": "5329:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "8e47e334",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPCDsend",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "5138:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5137:14:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 492,
												"src": "5172:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5171:6:0"
									},
									"scope": 2195,
									"src": "5118:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "5430:4439:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 496,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "5449:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5441:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "5441:20:0"
											},
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"mutability": "mutable",
														"name": "eggsUsed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "5472:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5472:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5499:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5499:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 501,
														"name": "getMyEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "5489:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5489:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5472:38:0"
											},
											{
												"assignments": [
													507
												],
												"declarations": [
													{
														"constant": false,
														"id": 507,
														"mutability": "mutable",
														"name": "newMiners",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "5521:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 510,
															"name": "eggsUsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "5552:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 511,
															"name": "EGGS_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5561:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 508,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "5539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2248,
														"src": "5539:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5539:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5521:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 514,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5594:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 515,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5594:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 520,
																	"name": "hatcheryMiners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "5634:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 523,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 521,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5649:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5649:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5634:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 524,
																"name": "newMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5661:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 518,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "5621:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2294,
															"src": "5621:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5621:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5594:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5594:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 528,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5682:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 531,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5694:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5694:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5682:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5706:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5682:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "5682:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 535,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5718:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 538,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 536,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5728:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5718:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 539,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "5740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5740:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5718:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "5718:37:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "upline1reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "5792:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 543,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5792:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 545,
														"name": "referrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "5816:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 548,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 546,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "5826:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5826:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5816:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5792:45:0"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "upline2reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "5848:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 550,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5848:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 555,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 552,
														"name": "referrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "5872:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 554,
													"indexExpression": {
														"argumentTypes": null,
														"id": 553,
														"name": "upline1reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "5882:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5872:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5848:48:0"
											},
											{
												"assignments": [
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "upline3reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "5907:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 556,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5907:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 558,
														"name": "referrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "5931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 560,
													"indexExpression": {
														"argumentTypes": null,
														"id": 559,
														"name": "upline2reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "5941:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5931:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5907:48:0"
											},
											{
												"assignments": [
													563
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "upline4reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "5966:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 562,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5966:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 564,
														"name": "referrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "5990:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 566,
													"indexExpression": {
														"argumentTypes": null,
														"id": 565,
														"name": "upline3reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 557,
														"src": "6000:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5990:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5966:48:0"
											},
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "upline5reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 987,
														"src": "6025:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6025:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 570,
														"name": "referrals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "6049:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 572,
													"indexExpression": {
														"argumentTypes": null,
														"id": 571,
														"name": "upline4reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "6059:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6049:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6025:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 574,
															"name": "upline1reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "6283:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6308:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6300:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6300:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6300:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "6283:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 580,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "6314:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 582,
															"indexExpression": {
																"argumentTypes": null,
																"id": 581,
																"name": "upline1reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "6329:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6314:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 583,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "6347:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 586,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 584,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "6362:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6362:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6347:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6314:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6283:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "6560:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 610,
																		"name": "upline1reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "6582:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 611,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "6596:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 612,
																			"name": "hatcheryMiners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "6605:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 614,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 613,
																			"name": "upline1reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "6620:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6605:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "3130",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6635:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		}
																	],
																	"id": 609,
																	"name": "setEgg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6575:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6575:63:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 617,
															"nodeType": "ExpressionStatement",
															"src": "6575:63:0"
														}
													]
												},
												"id": 619,
												"nodeType": "IfStatement",
												"src": "6279:371:0",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "6375:181:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 589,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "6390:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 591,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 590,
																		"name": "upline1reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "6402:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6390:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 594,
																				"name": "claimedEggs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 169,
																				"src": "6450:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 596,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 595,
																				"name": "upline1reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "6462:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6450:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 601,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 599,
																								"name": "eggsUsed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 500,
																								"src": "6509:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "3130",
																								"id": 600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6520:2:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"src": "6509:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 602,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6508:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "313030",
																					"id": 603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6525:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 597,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "6495:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2248,
																				"src": "6495:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6495:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 592,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "6419:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2294,
																		"src": "6419:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6419:125:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6390:154:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "6390:154:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 620,
															"name": "upline2reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "6666:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6691:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6683:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 621,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6683:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6683:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "6666:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 626,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "6697:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 628,
															"indexExpression": {
																"argumentTypes": null,
																"id": 627,
																"name": "upline2reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "6712:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6697:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 629,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "6730:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 632,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 630,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "6745:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "6745:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6730:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6697:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6666:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "6941:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 656,
																		"name": "upline2reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "6963:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 657,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "6977:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 658,
																			"name": "hatcheryMiners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "6986:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 660,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 659,
																			"name": "upline2reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "7001:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6986:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "34",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7016:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"value": "4"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	],
																	"id": 655,
																	"name": "setEgg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6956:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6956:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "6956:62:0"
														}
													]
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "6662:368:0",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6757:180:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 635,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "6772:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 637,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 636,
																		"name": "upline2reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 551,
																		"src": "6784:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6772:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 640,
																				"name": "claimedEggs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 169,
																				"src": "6832:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 642,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 641,
																				"name": "upline2reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6844:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6832:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 647,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 645,
																								"name": "eggsUsed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 500,
																								"src": "6891:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "34",
																								"id": 646,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6902:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "6891:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 648,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6890:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "313030",
																					"id": 649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6906:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 643,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "6877:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2248,
																				"src": "6877:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6877:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 638,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "6801:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2294,
																		"src": "6801:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6801:124:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6772:153:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 653,
															"nodeType": "ExpressionStatement",
															"src": "6772:153:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 666,
															"name": "upline3reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "7044:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7069:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7061:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7061:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "7044:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 672,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "7075:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 674,
															"indexExpression": {
																"argumentTypes": null,
																"id": 673,
																"name": "upline3reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "7090:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7075:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 675,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "7108:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 678,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 676,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7123:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7123:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7108:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7075:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7044:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 710,
													"nodeType": "Block",
													"src": "7319:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 702,
																		"name": "upline3reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "7341:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 703,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "7355:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 704,
																			"name": "hatcheryMiners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "7364:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 706,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 705,
																			"name": "upline3reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "7379:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7364:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "33",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7394:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		}
																	],
																	"id": 701,
																	"name": "setEgg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "7334:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7334:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "7334:62:0"
														}
													]
												},
												"id": 711,
												"nodeType": "IfStatement",
												"src": "7040:368:0",
												"trueBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "7135:180:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 681,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "7150:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 683,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 682,
																		"name": "upline3reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "7162:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7150:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 686,
																				"name": "claimedEggs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 169,
																				"src": "7210:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 688,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 687,
																				"name": "upline3reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "7222:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7210:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 693,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 691,
																								"name": "eggsUsed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 500,
																								"src": "7269:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "33",
																								"id": 692,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7280:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "7269:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 694,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7268:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "313030",
																					"id": 695,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7284:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 689,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "7255:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2248,
																				"src": "7255:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7255:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 684,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "7179:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2294,
																		"src": "7179:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7179:124:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7150:153:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "7150:153:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 712,
															"name": "upline4reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "7424:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7449:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7441:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 713,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7441:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7441:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "7424:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 718,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "7455:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 720,
															"indexExpression": {
																"argumentTypes": null,
																"id": 719,
																"name": "upline4reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "7470:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7455:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 721,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "7488:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 724,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 722,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7503:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7503:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7488:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7455:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7424:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "7700:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 748,
																		"name": "upline4reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "7722:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 749,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "7736:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 750,
																			"name": "hatcheryMiners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "7745:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 752,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 751,
																			"name": "upline4reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 563,
																			"src": "7760:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7745:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7775:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"id": 747,
																	"name": "setEgg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "7715:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7715:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "7715:62:0"
														}
													]
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "7420:369:0",
												"trueBody": {
													"id": 746,
													"nodeType": "Block",
													"src": "7516:180:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 727,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "7531:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 729,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 728,
																		"name": "upline4reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "7543:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7531:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 732,
																				"name": "claimedEggs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 169,
																				"src": "7591:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 734,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 733,
																				"name": "upline4reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "7603:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7591:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 739,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 737,
																								"name": "eggsUsed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 500,
																								"src": "7650:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "32",
																								"id": 738,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "7661:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "7650:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 740,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7649:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "313030",
																					"id": 741,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7665:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 735,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "7636:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2248,
																				"src": "7636:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7636:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 730,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "7560:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2294,
																		"src": "7560:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7560:124:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7531:153:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 745,
															"nodeType": "ExpressionStatement",
															"src": "7531:153:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "upline5reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "7805:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7830:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7822:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 759,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7822:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "7805:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 764,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "7836:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 766,
															"indexExpression": {
																"argumentTypes": null,
																"id": 765,
																"name": "upline5reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "7851:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7836:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 767,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "7869:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 770,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 768,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "7884:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "7884:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7869:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7836:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7805:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 802,
													"nodeType": "Block",
													"src": "8081:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 794,
																		"name": "upline5reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "8103:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 795,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "8117:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 796,
																			"name": "hatcheryMiners",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 165,
																			"src": "8126:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 798,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 797,
																			"name": "upline5reward",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "8141:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8126:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8156:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 793,
																	"name": "setEgg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "8096:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8096:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 801,
															"nodeType": "ExpressionStatement",
															"src": "8096:62:0"
														}
													]
												},
												"id": 803,
												"nodeType": "IfStatement",
												"src": "7801:369:0",
												"trueBody": {
													"id": 792,
													"nodeType": "Block",
													"src": "7897:180:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 773,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "7912:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 775,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 774,
																		"name": "upline5reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "7924:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7912:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 778,
																				"name": "claimedEggs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 169,
																				"src": "7972:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 780,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 779,
																				"name": "upline5reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 569,
																				"src": "7984:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7972:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 785,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"id": 783,
																								"name": "eggsUsed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 500,
																								"src": "8031:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"argumentTypes": null,
																								"hexValue": "31",
																								"id": 784,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8042:1:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "8031:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 786,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "8030:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "313030",
																					"id": 787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8046:3:0",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					},
																					"value": "100"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_rational_100_by_1",
																						"typeString": "int_const 100"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 781,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "8017:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2248,
																				"src": "8017:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8017:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 776,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "7941:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2294,
																		"src": "7941:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7941:124:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7912:153:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 791,
															"nodeType": "ExpressionStatement",
															"src": "7912:153:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 805,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "8198:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8198:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 804,
														"name": "getIsQualified",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "8183:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8183:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 974,
												"nodeType": "IfStatement",
												"src": "8180:1558:0",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "8210:1528:0",
													"statements": [
														{
															"assignments": [
																809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 809,
																	"mutability": "mutable",
																	"name": "upline6reward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 973,
																	"src": "8225:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 808,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8225:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 813,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 810,
																	"name": "referrals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "8249:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 812,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 811,
																	"name": "upline5reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 569,
																	"src": "8259:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8249:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8225:48:0"
														},
														{
															"assignments": [
																815
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 815,
																	"mutability": "mutable",
																	"name": "upline7reward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 973,
																	"src": "8288:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 814,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8288:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 819,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 816,
																	"name": "referrals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "8312:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 818,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 817,
																	"name": "upline6reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "8322:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8312:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8288:48:0"
														},
														{
															"assignments": [
																821
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 821,
																	"mutability": "mutable",
																	"name": "upline8reward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 973,
																	"src": "8351:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 820,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8351:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 825,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 822,
																	"name": "referrals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "8375:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 824,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 823,
																	"name": "upline7reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "8385:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8375:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8351:48:0"
														},
														{
															"assignments": [
																827
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 827,
																	"mutability": "mutable",
																	"name": "upline9reward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 973,
																	"src": "8414:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 826,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8414:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 831,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 828,
																	"name": "referrals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "8438:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 830,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 829,
																	"name": "upline8reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "8448:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8438:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8414:48:0"
														},
														{
															"assignments": [
																833
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 833,
																	"mutability": "mutable",
																	"name": "upline10reward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 973,
																	"src": "8477:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 832,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8477:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 837,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 834,
																	"name": "referrals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "8502:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 836,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 835,
																	"name": "upline9reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "8512:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8502:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8477:49:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 838,
																	"name": "upline6reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "8547:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8572:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8564:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 839,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8564:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8564:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "8547:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 864,
															"nodeType": "IfStatement",
															"src": "8543:225:0",
															"trueBody": {
																"id": 863,
																"nodeType": "Block",
																"src": "8576:192:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 844,
																					"name": "claimedEggs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "8595:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 846,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 845,
																					"name": "upline6reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 809,
																					"src": "8607:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8595:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 849,
																							"name": "claimedEggs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "8655:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 851,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 850,
																							"name": "upline6reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 809,
																							"src": "8667:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8655:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 856,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"id": 854,
																											"name": "eggsUsed",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 500,
																											"src": "8714:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 855,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "8725:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "8714:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 857,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "8713:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 858,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8729:3:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 852,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2295,
																								"src": "8700:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 853,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2248,
																							"src": "8700:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 859,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8700:33:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 847,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2295,
																						"src": "8624:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 848,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2294,
																					"src": "8624:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8624:128:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8595:157:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 862,
																		"nodeType": "ExpressionStatement",
																		"src": "8595:157:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 865,
																	"name": "upline7reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "8786:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8811:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8803:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 866,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8803:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8803:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "8786:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 891,
															"nodeType": "IfStatement",
															"src": "8782:225:0",
															"trueBody": {
																"id": 890,
																"nodeType": "Block",
																"src": "8815:192:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 871,
																					"name": "claimedEggs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "8834:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 873,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 872,
																					"name": "upline7reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 815,
																					"src": "8846:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "8834:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 876,
																							"name": "claimedEggs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "8894:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 878,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 877,
																							"name": "upline7reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 815,
																							"src": "8906:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "8894:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 883,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"id": 881,
																											"name": "eggsUsed",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 500,
																											"src": "8953:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 882,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "8964:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "8953:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 884,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "8952:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 885,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8968:3:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 879,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2295,
																								"src": "8939:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 880,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2248,
																							"src": "8939:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 886,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8939:33:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 874,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2295,
																						"src": "8863:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 875,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2294,
																					"src": "8863:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8863:128:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8834:157:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 889,
																		"nodeType": "ExpressionStatement",
																		"src": "8834:157:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 892,
																	"name": "upline8reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "9025:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9050:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9042:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 893,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9042:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9042:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "9025:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 918,
															"nodeType": "IfStatement",
															"src": "9021:225:0",
															"trueBody": {
																"id": 917,
																"nodeType": "Block",
																"src": "9054:192:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 898,
																					"name": "claimedEggs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "9073:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 900,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 899,
																					"name": "upline8reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 821,
																					"src": "9085:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9073:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 903,
																							"name": "claimedEggs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "9133:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 905,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 904,
																							"name": "upline8reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 821,
																							"src": "9145:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9133:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 910,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"id": 908,
																											"name": "eggsUsed",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 500,
																											"src": "9192:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 909,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9203:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "9192:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 911,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "9191:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 912,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9207:3:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 906,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2295,
																								"src": "9178:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 907,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2248,
																							"src": "9178:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 913,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9178:33:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 901,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2295,
																						"src": "9102:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 902,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2294,
																					"src": "9102:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9102:128:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9073:157:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 916,
																		"nodeType": "ExpressionStatement",
																		"src": "9073:157:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 919,
																	"name": "upline9reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "9264:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9289:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9281:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 920,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9281:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9281:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "9264:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 945,
															"nodeType": "IfStatement",
															"src": "9260:225:0",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "9293:192:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 925,
																					"name": "claimedEggs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "9312:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 927,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 926,
																					"name": "upline9reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "9324:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9312:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 930,
																							"name": "claimedEggs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "9372:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 932,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 931,
																							"name": "upline9reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 827,
																							"src": "9384:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9372:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 937,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"id": 935,
																											"name": "eggsUsed",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 500,
																											"src": "9431:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 936,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9442:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "9431:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 938,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "9430:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 939,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9446:3:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 933,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2295,
																								"src": "9417:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 934,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2248,
																							"src": "9417:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 940,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9417:33:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 928,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2295,
																						"src": "9341:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 929,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2294,
																					"src": "9341:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9341:128:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9312:157:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 943,
																		"nodeType": "ExpressionStatement",
																		"src": "9312:157:0"
																	}
																]
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 946,
																	"name": "upline10reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "9503:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9529:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9521:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 947,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9521:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9521:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "9503:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 972,
															"nodeType": "IfStatement",
															"src": "9499:228:0",
															"trueBody": {
																"id": 971,
																"nodeType": "Block",
																"src": "9533:194:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 952,
																					"name": "claimedEggs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 169,
																					"src": "9552:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 954,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 953,
																					"name": "upline10reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 833,
																					"src": "9564:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9552:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 957,
																							"name": "claimedEggs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 169,
																							"src": "9613:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 959,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 958,
																							"name": "upline10reward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 833,
																							"src": "9625:14:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9613:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"components": [
																									{
																										"argumentTypes": null,
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 964,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"argumentTypes": null,
																											"id": 962,
																											"name": "eggsUsed",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 500,
																											"src": "9673:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"argumentTypes": null,
																											"hexValue": "31",
																											"id": 963,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "9684:1:0",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "9673:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 965,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "9672:14:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"hexValue": "313030",
																								"id": 966,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9688:3:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								},
																								"value": "100"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_100_by_1",
																									"typeString": "int_const 100"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 960,
																								"name": "SafeMath",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2295,
																								"src": "9659:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																									"typeString": "type(library SafeMath)"
																								}
																							},
																							"id": 961,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2248,
																							"src": "9659:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 967,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9659:33:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 955,
																						"name": "SafeMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2295,
																						"src": "9582:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																							"typeString": "type(library SafeMath)"
																						}
																					},
																					"id": 956,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2294,
																					"src": "9582:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9582:129:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9552:159:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 970,
																		"nodeType": "ExpressionStatement",
																		"src": "9552:159:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 975,
														"name": "marketEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "9801:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 978,
																"name": "marketEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "9825:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 981,
																		"name": "eggsUsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "9849:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "35",
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9858:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 979,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "9836:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2248,
																	"src": "9836:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 976,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "9812:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2294,
															"src": "9812:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9812:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9801:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "9801:60:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2296459e",
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hatchEggs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5421:2:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5430:0:0"
									},
									"scope": 2195,
									"src": "5403:4466:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1072,
										"nodeType": "Block",
										"src": "9947:507:0",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "upaddress",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1072,
														"src": "9958:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9958:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"argumentTypes": null,
													"id": 1001,
													"name": "addr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 990,
													"src": "9976:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9958:22:0"
											},
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "eggsUsed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1072,
														"src": "9991:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"argumentTypes": null,
													"id": 1005,
													"name": "_eggsUse",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "10008:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9991:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1007,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "10033:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1009,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1008,
																"name": "upaddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "10043:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10033:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10065:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10057:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1010,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10057:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10057:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "10033:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1015,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10071:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1019,
															"indexExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1016,
																	"name": "referrals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "10086:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 1018,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1017,
																	"name": "upaddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "10096:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10086:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10071:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1020,
															"name": "miner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "10111:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10071:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10033:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1038,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "10222:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1040,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1039,
																"name": "upaddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "10232:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10222:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10246:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10246:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10246:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "10222:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1069,
														"nodeType": "Block",
														"src": "10282:165:0",
														"statements": [
															{
																"assignments": [
																	1048
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1048,
																		"mutability": "mutable",
																		"name": "MyeggsUsed",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1069,
																		"src": "10300:16:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1047,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "10300:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1054,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1050,
																				"name": "referrals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "10327:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																					"typeString": "mapping(address => address)"
																				}
																			},
																			"id": 1052,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1051,
																				"name": "upaddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "10337:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10327:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1049,
																		"name": "getMyEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "10317:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10317:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10300:48:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1055,
																			"name": "claimedEggs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 169,
																			"src": "10368:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1059,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1056,
																				"name": "referrals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "10380:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																					"typeString": "mapping(address => address)"
																				}
																			},
																			"id": 1058,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1057,
																				"name": "upaddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "10390:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10380:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "10368:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "313030",
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10425:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1062,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 996,
																						"src": "10418:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1060,
																						"name": "MyeggsUsed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1048,
																						"src": "10403:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1061,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2229,
																					"src": "10403:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10403:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2248,
																			"src": "10403:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10403:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10368:61:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1068,
																"nodeType": "ExpressionStatement",
																"src": "10368:61:0"
															}
														]
													},
													"id": 1070,
													"nodeType": "IfStatement",
													"src": "10219:228:0",
													"trueBody": {
														"id": 1046,
														"nodeType": "Block",
														"src": "10257:21:0",
														"statements": []
													}
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "10030:417:0",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "10117:97:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1023,
																		"name": "claimedEggs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 169,
																		"src": "10136:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1027,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1024,
																			"name": "referrals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 177,
																			"src": "10148:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																				"typeString": "mapping(address => address)"
																			}
																		},
																		"id": 1026,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1025,
																			"name": "upaddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "10158:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10148:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10136:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "313030",
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10193:3:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1030,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "10186:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1028,
																					"name": "eggsUsed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "10173:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2229,
																				"src": "10173:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10173:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2248,
																		"src": "10173:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10173:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10136:61:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1036,
															"nodeType": "ExpressionStatement",
															"src": "10136:61:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setEgg",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1073,
												"src": "9891:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_eggsUse",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1073,
												"src": "9904:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "miner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1073,
												"src": "9921:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1073,
												"src": "9932:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9890:49:0"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9947:0:0"
									},
									"scope": 2195,
									"src": "9875:579:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "10486:802:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1077,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "10505:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10497:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10497:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "10497:20:0"
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "hasEggs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1179,
														"src": "10528:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1080,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1083,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10554:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10554:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1082,
														"name": "getMyEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "10544:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10544:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10528:37:0"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "eggValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1179,
														"src": "10576:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10576:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1090,
															"name": "hasEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "10610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1089,
														"name": "calculateEggSell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1897,
														"src": "10593:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10593:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10576:42:0"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1179,
														"src": "10629:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1093,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10629:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1096,
															"name": "eggValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "10648:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1095,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "10641:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10641:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10629:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1099,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "10668:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1102,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10680:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10680:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10668:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10692:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10668:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "10668:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1106,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "10704:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1109,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10714:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10714:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10704:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1110,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "10726:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10726:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10704:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "10704:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1114,
														"name": "marketEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "10752:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1117,
																"name": "marketEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "10776:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1118,
																"name": "hasEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "10787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1115,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "10763:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2294,
															"src": "10763:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10763:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10752:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "10752:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1126,
															"name": "marketingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "10827:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1127,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "10844:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10849:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "10844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10853:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "10844:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1123,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "10812:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1122,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "10806:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10806:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "10806:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10806:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "10806:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10889:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10889:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1142,
																	"name": "eggValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "10913:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1143,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1094,
																	"src": "10922:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1140,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "10900:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2269,
																"src": "10900:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10900:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1135,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "10874:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1134,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "10868:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10868:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "10868:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10868:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "10868:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1147,
														"name": "fomoRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "10992:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1148,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "11007:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3730",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_70_by_1",
																	"typeString": "int_const 70"
																},
																"value": "70"
															},
															"src": "11007:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "313030",
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11014:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "11007:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10992:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "10992:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1155,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11030:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11030:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1157,
														"name": "OpeningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "11048:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11030:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "11027:254:0",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "11060:221:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1159,
																	"name": "fomoRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "11128:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3530",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11142:8:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50000000000000000000_by_1",
																		"typeString": "int_const 50000000000000000000"
																	},
																	"value": "50"
																},
																"src": "11128:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1176,
															"nodeType": "IfStatement",
															"src": "11125:146:0",
															"trueBody": {
																"id": 1175,
																"nodeType": "Block",
																"src": "11151:120:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1163,
																					"name": "pancakeRouter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 211,
																					"src": "11175:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1164,
																					"name": "toplusToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 214,
																					"src": "11189:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "3530",
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11201:8:0",
																					"subdenomination": "ether",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_50000000000000000000_by_1",
																						"typeString": "int_const 50000000000000000000"
																					},
																					"value": "50"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_50000000000000000000_by_1",
																						"typeString": "int_const 50000000000000000000"
																					}
																				],
																				"id": 1162,
																				"name": "addLiquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1575,
																				"src": "11162:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11162:48:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1167,
																		"nodeType": "ExpressionStatement",
																		"src": "11162:48:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1168,
																				"name": "fomoRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 204,
																				"src": "11221:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "3530",
																						"id": 1171,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11250:8:0",
																						"subdenomination": "ether",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_50000000000000000000_by_1",
																							"typeString": "int_const 50000000000000000000"
																						},
																						"value": "50"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_50000000000000000000_by_1",
																							"typeString": "int_const 50000000000000000000"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1169,
																						"name": "fomoRewards",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 204,
																						"src": "11234:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2269,
																					"src": "11234:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11234:25:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11221:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1174,
																		"nodeType": "ExpressionStatement",
																		"src": "11221:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "3955f0fe",
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellEggs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10477:2:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10486:0:0"
									},
									"scope": 2195,
									"src": "10460:828:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "11326:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1186,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "11345:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11345:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1188,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "11359:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11345:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1185,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11337:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "11337:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1192,
														"name": "minBuyValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "11381:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1193,
														"name": "_min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "11393:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11381:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "11381:16:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "45dc3dd8",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_min",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1197,
												"src": "11310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "11310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11309:11:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11326:0:0"
									},
									"scope": 2195,
									"src": "11294:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "11462:215:0",
										"statements": [
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "realTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1224,
														"src": "11473:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1209,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1206,
															"name": "fomoNeededTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "11505:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1207,
															"name": "fomoTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "11521:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1204,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "11492:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2294,
														"src": "11492:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11492:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11473:57:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11544:15:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 1210,
														"name": "isFomoFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "11545:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1223,
												"nodeType": "IfStatement",
												"src": "11541:129:0",
												"trueBody": {
													"id": 1222,
													"nodeType": "Block",
													"src": "11560:110:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1212,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "11578:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11578:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1214,
																	"name": "realTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "11596:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11578:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1221,
															"nodeType": "IfStatement",
															"src": "11575:84:0",
															"trueBody": {
																"id": 1220,
																"nodeType": "Block",
																"src": "11605:54:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1216,
																				"name": "isFomoFinished",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "11624:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "74727565",
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11639:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "11624:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1219,
																		"nodeType": "ExpressionStatement",
																		"src": "11624:19:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateFomoFinished",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11438:2:0"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "11457:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11456:6:0"
									},
									"scope": 2195,
									"src": "11411:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "11734:1942:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1233,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "11753:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11745:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "11745:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1237,
																"name": "_usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "11784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1238,
																"name": "minBuyValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "11793:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11784:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420456e6f7567682055534454",
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11806:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84d272469d046e068f44e12c0b598ba407229edbcefabd3de96c621ed317e781",
																"typeString": "literal_string \"Not Enough USDT\""
															},
															"value": "Not Enough USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84d272469d046e068f44e12c0b598ba407229edbcefabd3de96c621ed317e781",
																"typeString": "literal_string \"Not Enough USDT\""
															}
														],
														"id": 1236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11776:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11776:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "11776:48:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1244,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "11843:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11843:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1246,
																		"name": "InvestmentCountdown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "11861:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1249,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1247,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "11881:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11881:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11861:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11843:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1251,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "11896:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1254,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1252,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "11906:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11906:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11896:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1255,
																	"name": "minBuyValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "11920:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11896:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11843:88:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7420456e6f7567682055534454",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11933:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84d272469d046e068f44e12c0b598ba407229edbcefabd3de96c621ed317e781",
																"typeString": "literal_string \"Not Enough USDT\""
															},
															"value": "Not Enough USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84d272469d046e068f44e12c0b598ba407229edbcefabd3de96c621ed317e781",
																"typeString": "literal_string \"Not Enough USDT\""
															}
														],
														"id": 1243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11835:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11835:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "11835:116:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "11987:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11987:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1269,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "12006:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PANDORA_$2195",
																		"typeString": "contract PANDORA"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PANDORA_$2195",
																		"typeString": "contract PANDORA"
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11998:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11998:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11998:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1271,
															"name": "_usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "12012:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1262,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "11968:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1261,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "11962:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11962:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "11962:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11962:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "11962:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1274,
														"name": "updateFomoFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "12029:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
															"typeString": "function () returns (bool)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12029:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "12029:20:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12063:15:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 1277,
														"name": "isFomoFinished",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "12064:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1306,
												"nodeType": "IfStatement",
												"src": "12060:245:0",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "12079:226:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1279,
																	"name": "fomoAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "12094:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1280,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "12108:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12108:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "12094:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1283,
															"nodeType": "ExpressionStatement",
															"src": "12094:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1284,
																	"name": "fomoTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "12133:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1285,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "12144:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12144:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12133:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1288,
															"nodeType": "ExpressionStatement",
															"src": "12133:26:0"
														},
														{
															"assignments": [
																1290
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1290,
																	"mutability": "mutable",
																	"name": "fomoPlusRewards",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1305,
																	"src": "12174:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1289,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12174:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1296,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1293,
																		"name": "_usdt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "12213:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "3230",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12220:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_20_by_1",
																			"typeString": "int_const 20"
																		},
																		"value": "20"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_20_by_1",
																			"typeString": "int_const 20"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1291,
																		"name": "SafeMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "12200:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																			"typeString": "type(library SafeMath)"
																		}
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2248,
																	"src": "12200:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12200:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12174:49:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1297,
																	"name": "fomoRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "12238:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1300,
																			"name": "fomoRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "12265:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1301,
																			"name": "fomoPlusRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1290,
																			"src": "12277:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1298,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "12252:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2294,
																		"src": "12252:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12252:41:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12238:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "12238:55:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1307,
															"name": "InvestmentCountdown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "12318:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1310,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1308,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "12338:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12338:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12318:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12351:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12318:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1331,
													"nodeType": "Block",
													"src": "12440:67:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1324,
																		"name": "InvestmentCountdown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "12455:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1327,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1325,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "12475:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12475:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12455:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12489:6:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "12455:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1330,
															"nodeType": "ExpressionStatement",
															"src": "12455:40:0"
														}
													]
												},
												"id": 1332,
												"nodeType": "IfStatement",
												"src": "12315:192:0",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "12353:83:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1313,
																		"name": "InvestmentCountdown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "12368:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1316,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1314,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "12388:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12388:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12368:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1317,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "12400:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12400:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12418:6:0",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	},
																	"src": "12400:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12368:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "12368:56:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1333,
													"name": "whiteListNeeded",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 225,
													"src": "12520:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1345,
												"nodeType": "IfStatement",
												"src": "12517:118:0",
												"trueBody": {
													"id": 1344,
													"nodeType": "Block",
													"src": "12536:99:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1335,
																				"name": "isWhiteList",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 218,
																				"src": "12559:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 1338,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1336,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -15,
																					"src": "12571:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1337,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "12571:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "12559:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "74727565",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12586:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "12559:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "596f7520617265206e6f74206f6e207468652077686974656c697374",
																		"id": 1341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12592:30:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_06893d6d0c1a4f2cc6171d2d72ecad1fb2cb2bcc0d22727775f9f597a96c7956",
																			"typeString": "literal_string \"You are not on the whitelist\""
																		},
																		"value": "You are not on the whitelist"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_06893d6d0c1a4f2cc6171d2d72ecad1fb2cb2bcc0d22727775f9f597a96c7956",
																			"typeString": "literal_string \"You are not on the whitelist\""
																		}
																	],
																	"id": 1334,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "12551:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12551:72:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1343,
															"nodeType": "ExpressionStatement",
															"src": "12551:72:0"
														}
													]
												}
											},
											{
												"assignments": [
													1347
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "eggsBought",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1503,
														"src": "12645:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12645:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1364,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1349,
															"name": "_usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "12680:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1358,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -28,
																					"src": "12729:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PANDORA_$2195",
																						"typeString": "contract PANDORA"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_PANDORA_$2195",
																						"typeString": "contract PANDORA"
																					}
																				],
																				"id": 1357,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12721:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1356,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "12721:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 1359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12721:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1353,
																					"name": "USDT",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 161,
																					"src": "12705:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1352,
																				"name": "ERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 34,
																				"src": "12699:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																					"typeString": "type(contract ERC20)"
																				}
																			},
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12699:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ERC20_$34",
																				"typeString": "contract ERC20"
																			}
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 24,
																		"src": "12699:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12699:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1361,
																	"name": "_usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "12736:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1350,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "12686:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2269,
																"src": "12686:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12686:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1348,
														"name": "calculateEggBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "12664:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12664:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12645:98:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1365,
														"name": "eggsBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "12754:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1368,
																"name": "eggsBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "12778:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1370,
																		"name": "eggsBought",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "12796:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1369,
																	"name": "devFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1948,
																	"src": "12789:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12789:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1366,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "12765:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2269,
															"src": "12765:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12765:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12754:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "12754:54:0"
											},
											{
												"assignments": [
													1376
												],
												"declarations": [
													{
														"constant": false,
														"id": 1376,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1503,
														"src": "12819:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1380,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1378,
															"name": "_usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "12838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1377,
														"name": "devFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "12831:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12831:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12819:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1385,
															"name": "marketingAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "12876:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1386,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "12893:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12899:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "12893:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12903:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "12893:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1382,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "12861:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1381,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "12855:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12855:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "12855:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12855:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "12855:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1393,
														"name": "fomoRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "12972:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1394,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "12987:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3730",
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12991:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_70_by_1",
																	"typeString": "int_const 70"
																},
																"value": "70"
															},
															"src": "12987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "313030",
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12994:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "12987:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12972:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "12972:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1401,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "13008:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1404,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1402,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13020:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13020:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13008:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1407,
																	"name": "claimedEggs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "13045:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1410,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1408,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "13057:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13057:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13045:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 1411,
																"name": "eggsBought",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "13069:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1405,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "13032:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2294,
															"src": "13032:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13032:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13008:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "13008:72:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1415,
																"name": "referrals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "13094:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 1418,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1416,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "13104:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13104:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13094:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13127:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13119:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13119:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "13094:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1424,
															"name": "ref",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "13133:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1425,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13140:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13140:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "13133:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13094:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "13091:114:0",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "13151:54:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1429,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 177,
																		"src": "13166:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1432,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1430,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "13176:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13176:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13166:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1433,
																	"name": "ref",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "13190:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "13166:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1435,
															"nodeType": "ExpressionStatement",
															"src": "13166:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1438,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "13219:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3230",
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13226:8:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20000000000000000000_by_1",
															"typeString": "int_const 20000000000000000000"
														},
														"value": "20"
													},
													"src": "13219:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1451,
												"nodeType": "IfStatement",
												"src": "13215:83:0",
												"trueBody": {
													"id": 1450,
													"nodeType": "Block",
													"src": "13235:63:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1441,
																		"name": "numRealRef",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "13249:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1446,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1442,
																			"name": "referrals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 177,
																			"src": "13260:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																				"typeString": "mapping(address => address)"
																			}
																		},
																		"id": 1445,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1443,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -15,
																				"src": "13270:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "13270:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13260:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13249:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13285:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13249:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1449,
															"nodeType": "ExpressionStatement",
															"src": "13249:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "13311:28:0",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1452,
															"name": "AlreadyInvolved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "13312:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1455,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13328:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13312:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "13308:128:0",
												"trueBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "13340:96:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1457,
																		"name": "AlreadyInvolved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "13355:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1460,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1458,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "13371:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13371:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13355:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13383:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "13355:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1463,
															"nodeType": "ExpressionStatement",
															"src": "13355:32:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "13402:22:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1464,
																	"name": "TotalNumberOfAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "13402:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "13402:22:0"
														}
													]
												}
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "va",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1503,
														"src": "13446:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1471,
														"name": "TotalNumberOfAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "13457:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1472,
														"name": "orMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "13478:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13457:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13446:37:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1475,
														"name": "va",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "13497:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1476,
														"name": "vaTova",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "13503:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13497:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1486,
												"nodeType": "IfStatement",
												"src": "13494:88:0",
												"trueBody": {
													"id": 1485,
													"nodeType": "Block",
													"src": "13510:72:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1478,
																	"name": "minBuyValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "13525:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13539:8:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000000000000000000_by_1",
																		"typeString": "int_const 10000000000000000000"
																	},
																	"value": "10"
																},
																"src": "13525:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "13525:22:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "13562:8:0",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1482,
																	"name": "vaTova",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "13562:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1484,
															"nodeType": "ExpressionStatement",
															"src": "13562:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1487,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "13592:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1490,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1488,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "13602:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13602:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13592:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1496,
																"name": "_usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "13640:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1491,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "13614:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1494,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1492,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "13624:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13624:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13614:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2294,
															"src": "13614:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13614:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13592:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "13592:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1500,
														"name": "hatchEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "13657:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13657:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "13657:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "450edf95",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyEggs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "ref",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "11700:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_usdt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1504,
												"src": "11712:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11699:27:0"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11734:0:0"
									},
									"scope": 2195,
									"src": "11683:1993:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "13746:127:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1511,
															"name": "numRealRef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "13761:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1513,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1512,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "13772:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13761:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3330",
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13780:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_30_by_1",
															"typeString": "int_const 30"
														},
														"value": "30"
													},
													"src": "13761:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1521,
													"nodeType": "Block",
													"src": "13825:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13847:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1510,
															"id": 1520,
															"nodeType": "Return",
															"src": "13840:12:0"
														}
													]
												},
												"id": 1522,
												"nodeType": "IfStatement",
												"src": "13757:107:0",
												"trueBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "13783:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13805:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1510,
															"id": 1517,
															"nodeType": "Return",
															"src": "13798:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "0221cc79",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getIsQualified",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1524,
												"src": "13706:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13705:15:0"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1524,
												"src": "13741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13740:6:0"
									},
									"scope": 2195,
									"src": "13682:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "13963:327:0",
										"statements": [
											{
												"assignments": [
													1537
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1574,
														"src": "14013:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1535,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1536,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "14013:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14051:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "14037:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1538,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14041:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1539,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "14041:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14037:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14013:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1544,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "14064:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1546,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14069:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1547,
														"name": "USDT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "14072:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14064:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "14064:12:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1550,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "14087:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1552,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14092:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14087:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1553,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "14095:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14087:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "14087:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1560,
															"name": "_usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "14180:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14186:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 1562,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "14188:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14193:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x000000000000000000000000000000000000dEaD"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1564,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "14236:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14236:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "333630",
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14254:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_360_by_1",
																	"typeString": "int_const 360"
																},
																"value": "360"
															},
															"src": "14236:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1557,
																	"name": "_pancakeRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "14139:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1556,
																"name": "IPancakeRouter01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "14122:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IPancakeRouter01_$136_$",
																	"typeString": "type(contract IPancakeRouter01)"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14122:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPancakeRouter01_$136",
																"typeString": "contract IPancakeRouter01"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "14122:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14122:136:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "14122:136:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1570,
														"name": "fomoRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "14269:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14281:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14269:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "14269:13:0"
											}
										]
									},
									"documentation": null,
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "_pancakeRouter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1575,
												"src": "13904:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1575,
												"src": "13927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "_usdt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1575,
												"src": "13941:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13903:52:0"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13963:0:0"
									},
									"scope": 2195,
									"src": "13882:408:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "14364:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1582,
														"name": "numRealRef",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "14382:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1584,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1583,
														"name": "_addr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "14393:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14382:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1581,
												"id": 1585,
												"nodeType": "Return",
												"src": "14375:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7e286735",
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNumRealRef",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1587,
												"src": "14321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14320:15:0"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1587,
												"src": "14356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14355:9:0"
									},
									"scope": 2195,
									"src": "14298:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "14460:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1593,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "14479:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14479:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1595,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "14493:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14479:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14471:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "14471:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1599,
														"name": "fomoNeededTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "14515:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1600,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "14532:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14515:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "14515:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "48fe4a06",
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFomoNeededTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "time",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1604,
												"src": "14440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14439:14:0"
									},
									"returnParameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14460:0:0"
									},
									"scope": 2195,
									"src": "14413:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "14601:123:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1610,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "14620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14620:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1612,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "14634:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14620:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14612:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1615,
												"nodeType": "ExpressionStatement",
												"src": "14612:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1617,
																"name": "OpeningTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "14664:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14679:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14664:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14656:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14656:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "14656:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1622,
														"name": "OpeningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "14692:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1623,
														"name": "_OpeningTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "14704:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14692:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "14692:24:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "abdd11a8",
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setOpeningTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "_OpeningTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1627,
												"src": "14574:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14573:22:0"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14601:0:0"
									},
									"scope": 2195,
									"src": "14550:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "14766:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1631,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "14785:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "14785:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1633,
																	"name": "ceoAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "14799:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "14785:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1635,
																"name": "whiteListNeeded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "14813:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "14785:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14777:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "14777:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1639,
														"name": "whiteListNeeded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "14840:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14858:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "14840:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "14840:23:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5c45f730",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWhiteListNeeded",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14757:2:0"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14766:0:0"
									},
									"scope": 2195,
									"src": "14730:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "14911:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1650,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "14930:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "14930:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1652,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "14944:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14930:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "14922:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14922:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "14922:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1656,
														"name": "orMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "14966:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1657,
														"name": "_max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "14972:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14966:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "14966:10:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ab153916",
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setOrMax",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "_max",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1661,
												"src": "14895:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14895:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14894:11:0"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14911:0:0"
									},
									"scope": 2195,
									"src": "14877:107:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1713,
										"nodeType": "Block",
										"src": "15085:229:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1677,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "15104:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15104:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1679,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "15118:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15104:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15096:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15096:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "15096:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1683,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "15142:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1685,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1684,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "15157:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15142:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1686,
														"name": "_max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "15163:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15142:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "15142:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1689,
															"name": "claimedEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "15180:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1691,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1690,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "15192:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15180:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1692,
														"name": "_max1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "15198:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15180:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "15180:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1695,
															"name": "lastHatch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "15216:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1697,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1696,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "15226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15216:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1698,
														"name": "_max2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "15232:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15216:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "15216:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1701,
															"name": "referrals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "15250:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1703,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1702,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "15260:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15250:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1704,
														"name": "_max3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "15266:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15250:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "15250:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1707,
															"name": "numRealRef",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "15284:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1709,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1708,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "15295:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15284:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1710,
														"name": "_max4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "15301:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15284:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1712,
												"nodeType": "ExpressionStatement",
												"src": "15284:22:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6ddfb6cb",
									"id": 1714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setOrbaOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1714,
												"src": "15009:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "_max",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1714,
												"src": "15022:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15022:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "_max1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1714,
												"src": "15032:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "_max2",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1714,
												"src": "15043:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "_max3",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1714,
												"src": "15054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15054:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "_max4",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1714,
												"src": "15068:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15068:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15008:71:0"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15085:0:0"
									},
									"scope": 2195,
									"src": "14990:324:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "15361:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1720,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "15380:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1722,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "15394:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15380:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15372:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "15372:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1730,
															"name": "_market",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "15436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...9936"
																},
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15445:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "323536",
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15450:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "15445:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
																	"typeString": "int_const 1157...(70 digits omitted)...9936"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15456:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "15445:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
																"typeString": "int_const 1157...(70 digits omitted)...9935"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1727,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "15422:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1726,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "15416:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15416:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 33,
														"src": "15416:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15416:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "15416:42:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6dcea85f",
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setMarket",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "_market",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1739,
												"src": "15339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15338:17:0"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15361:0:0"
									},
									"scope": 2195,
									"src": "15320:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "15550:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1743,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "15569:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15569:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1745,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "15583:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15569:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15561:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "15561:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1749,
														"name": "ceoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "15605:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15624:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15616:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15616:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15605:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "15605:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "df67c4ed",
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "AdministratorprivilegesDiscarded",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15542:2:0"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15550:0:0"
									},
									"scope": 2195,
									"src": "15501:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "15695:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1765,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "15714:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15714:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1767,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "15728:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15714:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15706:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "15706:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1771,
															"name": "isWhiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "15750:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1773,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1772,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "15762:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15750:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1774,
														"name": "_bool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "15771:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15750:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "15750:26:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8d14e127",
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWhiteList",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "_addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1778,
												"src": "15662:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15662:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1778,
												"src": "15677:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15661:27:0"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15695:0:0"
									},
									"scope": 2195,
									"src": "15640:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1795,
										"nodeType": "Block",
										"src": "15820:84:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1782,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "15839:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "15839:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1784,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "15853:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15839:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15831:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15831:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1787,
												"nodeType": "ExpressionStatement",
												"src": "15831:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1788,
														"name": "ceoAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "15875:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15894:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1789,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15886:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "15875:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "15875:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "55db22ee",
									"id": 1796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setceoAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15812:2:0"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15820:0:0"
									},
									"scope": 2195,
									"src": "15790:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "15985:167:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1805,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "16004:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "16004:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1807,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "16018:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16004:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "15996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15996:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "15996:33:0"
											},
											{
												"body": {
													"id": 1830,
													"nodeType": "Block",
													"src": "16086:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1822,
																		"name": "isWhiteList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "16101:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1826,
																	"indexExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1823,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1799,
																			"src": "16113:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1825,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1824,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1812,
																			"src": "16122:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16113:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "16101:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1827,
																	"name": "_bool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "16128:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16101:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1829,
															"nodeType": "ExpressionStatement",
															"src": "16101:32:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "16060:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1816,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "16064:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "16064:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16060:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1831,
												"initializationExpression": {
													"assignments": [
														1812
													],
													"declarations": [
														{
															"constant": false,
															"id": 1812,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1831,
															"src": "16045:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1811,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "16045:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1814,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16057:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "16045:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "16081:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 1819,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "16081:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1821,
													"nodeType": "ExpressionStatement",
													"src": "16081:3:0"
												},
												"nodeType": "ForStatement",
												"src": "16040:105:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "86301658",
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setWhiteListBatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1833,
												"src": "15939:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1797,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15939:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1798,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "15939:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1833,
												"src": "15966:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15966:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15938:39:0"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15985:0:0"
									},
									"scope": 2195,
									"src": "15912:240:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1874,
										"nodeType": "Block",
										"src": "16284:203:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1848,
																	"name": "PSN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16378:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1849,
																	"name": "bs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "16382:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1846,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "16365:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2229,
																"src": "16365:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16365:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1853,
																	"name": "PSNH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "16399:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1860,
																							"name": "PSN",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 145,
																							"src": "16443:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1861,
																							"name": "rs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1837,
																							"src": "16447:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1858,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2295,
																							"src": "16430:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 1859,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2229,
																						"src": "16430:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16430:20:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1865,
																							"name": "PSNH",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 148,
																							"src": "16464:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"argumentTypes": null,
																							"id": 1866,
																							"name": "rt",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1835,
																							"src": "16469:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1863,
																							"name": "SafeMath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2295,
																							"src": "16451:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																								"typeString": "type(library SafeMath)"
																							}
																						},
																						"id": 1864,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2229,
																						"src": "16451:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16451:21:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1856,
																					"name": "SafeMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2295,
																					"src": "16417:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																						"typeString": "type(library SafeMath)"
																					}
																				},
																				"id": 1857,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2294,
																				"src": "16417:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16417:56:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1869,
																			"name": "rt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1835,
																			"src": "16474:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1854,
																			"name": "SafeMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2295,
																			"src": "16404:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																				"typeString": "type(library SafeMath)"
																			}
																		},
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2248,
																		"src": "16404:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16404:73:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1851,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "16386:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2294,
																"src": "16386:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16386:92:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1844,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "16352:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2248,
														"src": "16352:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16352:127:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1873,
												"nodeType": "Return",
												"src": "16345:134:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "229824c4",
									"id": 1875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTrade",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "rt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "16221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "rs",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "16232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "bs",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "16244:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16244:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16220:35:0"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1875,
												"src": "16276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16275:9:0"
									},
									"scope": 2195,
									"src": "16197:290:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "16561:94:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1883,
															"name": "eggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "16594:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1884,
															"name": "marketEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "16599:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1891,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "16640:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PANDORA_$2195",
																				"typeString": "contract PANDORA"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PANDORA_$2195",
																				"typeString": "contract PANDORA"
																			}
																		],
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "16632:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1889,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "16632:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16632:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1886,
																			"name": "USDT",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 161,
																			"src": "16616:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1885,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "16610:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "16610:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$34",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 24,
																"src": "16610:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16610:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1882,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "16579:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16579:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1881,
												"id": 1895,
												"nodeType": "Return",
												"src": "16572:75:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8e316327",
									"id": 1897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEggSell",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "eggs",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1897,
												"src": "16519:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16518:14:0"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1897,
												"src": "16553:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16552:9:0"
									},
									"scope": 2195,
									"src": "16493:162:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "16751:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1907,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "16784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1908,
															"name": "contractBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "16788:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1909,
															"name": "marketEggs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "16804:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1906,
														"name": "calculateTrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1875,
														"src": "16769:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16769:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1911,
												"nodeType": "Return",
												"src": "16762:53:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "26fd8422",
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEggBuy",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "eth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1913,
												"src": "16686:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "contractBalance",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1913,
												"src": "16698:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16685:37:0"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1913,
												"src": "16743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16742:9:0"
									},
									"scope": 2195,
									"src": "16661:162:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "16901:68:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1921,
															"name": "eth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "16935:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1924,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "16947:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PANDORA_$2195",
																			"typeString": "contract PANDORA"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PANDORA_$2195",
																			"typeString": "contract PANDORA"
																		}
																	],
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16939:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1922,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16939:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16939:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16939:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1920,
														"name": "calculateEggBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "16919:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16919:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1919,
												"id": 1928,
												"nodeType": "Return",
												"src": "16912:49:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7e56fde5",
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateEggBuySimple",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "eth",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1930,
												"src": "16860:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16859:13:0"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1930,
												"src": "16893:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16892:9:0"
									},
									"scope": 2195,
									"src": "16829:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "17035:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1941,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "17079:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "33",
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17086:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1939,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "17066:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2229,
																"src": "17066:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17066:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "313030",
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17089:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1937,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "17053:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2248,
														"src": "17053:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17053:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1946,
												"nodeType": "Return",
												"src": "17046:47:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3bc0461a",
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "devFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1948,
												"src": "16991:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16990:16:0"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1948,
												"src": "17027:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17026:9:0"
									},
									"scope": 2195,
									"src": "16975:126:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "17143:217:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1952,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "17162:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17162:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1954,
																"name": "ceoAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "17176:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17162:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e76616c69642063616c6c",
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17188:14:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b9a7178fc9d62509a86c81f7efb4834df5f5b89b257e18c8f08e14f5f20a071",
																"typeString": "literal_string \"invalid call\""
															},
															"value": "invalid call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b9a7178fc9d62509a86c81f7efb4834df5f5b89b257e18c8f08e14f5f20a071",
																"typeString": "literal_string \"invalid call\""
															}
														],
														"id": 1951,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17154:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1958,
												"nodeType": "ExpressionStatement",
												"src": "17154:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1960,
																"name": "marketEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "17222:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17234:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17222:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1959,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "17214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17214:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "17214:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1965,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "17247:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17259:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "17247:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1968,
												"nodeType": "ExpressionStatement",
												"src": "17247:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1969,
														"name": "marketEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "17274:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3836343030303030303030",
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17285:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400000000_by_1",
															"typeString": "int_const 86400000000"
														},
														"value": "86400000000"
													},
													"src": "17274:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "17274:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1973,
														"name": "fomoTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "17307:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1976,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "17331:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "17331:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "33363030",
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17347:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1974,
																"name": "SafeMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "17318:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																	"typeString": "type(library SafeMath)"
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2294,
															"src": "17318:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17318:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17307:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "17307:45:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3c5f07cb",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "seedMarket",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17126:2:0"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17143:0:0"
									},
									"scope": 2195,
									"src": "17107:253:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1998,
										"nodeType": "Block",
										"src": "17416:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1994,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "17464:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PANDORA_$2195",
																		"typeString": "contract PANDORA"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PANDORA_$2195",
																		"typeString": "contract PANDORA"
																	}
																],
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17456:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1992,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17456:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17456:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1989,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "17440:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1988,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "17434:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17434:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$34",
																"typeString": "contract ERC20"
															}
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "17434:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17434:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1987,
												"id": 1997,
												"nodeType": "Return",
												"src": "17427:43:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "12065fe0",
									"id": 1999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17385:2:0"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1999,
												"src": "17408:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17408:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17407:9:0"
									},
									"scope": 2195,
									"src": "17366:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2009,
										"nodeType": "Block",
										"src": "17535:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 2004,
														"name": "hatcheryMiners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "17553:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2007,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2005,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "17568:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "17568:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17553:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2008,
												"nodeType": "Return",
												"src": "17546:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0a76e5ed",
									"id": 2010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyMiners",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17504:2:0"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2010,
												"src": "17527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17526:9:0"
									},
									"scope": 2195,
									"src": "17484:103:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "17654:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2019,
																"name": "claimedEggs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "17685:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2021,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2020,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "17697:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17685:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2023,
																	"name": "addr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "17725:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2022,
																"name": "getEggsSinceLastHatch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2058,
																"src": "17703:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17703:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2017,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "17672:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2294,
														"src": "17672:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17672:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2016,
												"id": 2026,
												"nodeType": "Return",
												"src": "17665:66:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2ef6a743",
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyEggs",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2028,
												"src": "17612:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17611:14:0"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2028,
												"src": "17646:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17645:9:0"
									},
									"scope": 2195,
									"src": "17593:146:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "17817:177:0",
										"statements": [
											{
												"assignments": [
													2036
												],
												"declarations": [
													{
														"constant": false,
														"id": 2036,
														"mutability": "mutable",
														"name": "secondsPassed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2057,
														"src": "17828:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2035,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17828:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2048,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2038,
															"name": "EGGS_TO_HATCH_1MINERS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "17854:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2041,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "17889:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "17889:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2043,
																		"name": "lastHatch",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 173,
																		"src": "17905:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2045,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2044,
																		"name": "adr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2030,
																		"src": "17915:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "17905:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2039,
																	"name": "SafeMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "17876:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																		"typeString": "type(library SafeMath)"
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2269,
																"src": "17876:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17876:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2037,
														"name": "min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2194,
														"src": "17850:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17850:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17828:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2051,
															"name": "secondsPassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "17952:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2052,
																"name": "hatcheryMiners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "17966:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2054,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2053,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2030,
																"src": "17981:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17966:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2049,
															"name": "SafeMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "17939:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeMath_$2295_$",
																"typeString": "type(library SafeMath)"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2229,
														"src": "17939:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17939:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2056,
												"nodeType": "Return",
												"src": "17932:54:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d7c8843b",
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEggsSinceLastHatch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "adr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2058,
												"src": "17776:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17775:13:0"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2058,
												"src": "17809:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17808:9:0"
									},
									"scope": 2195,
									"src": "17745:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2176,
										"nodeType": "Block",
										"src": "18100:659:0",
										"statements": [
											{
												"assignments": [
													2078
												],
												"declarations": [
													{
														"constant": false,
														"id": 2078,
														"mutability": "mutable",
														"name": "hasEggs",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2176,
														"src": "18111:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2077,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2082,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2080,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "18137:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2079,
														"name": "getMyEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "18127:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18127:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18111:31:0"
											},
											{
												"assignments": [
													2084
												],
												"declarations": [
													{
														"constant": false,
														"id": 2084,
														"mutability": "mutable",
														"name": "eggValue",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2176,
														"src": "18153:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2083,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2085,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "18153:16:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2086,
														"name": "hasEggs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "18183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18193:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18183:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2100,
													"nodeType": "Block",
													"src": "18258:37:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2096,
																	"name": "eggValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "18272:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18281:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18272:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2099,
															"nodeType": "ExpressionStatement",
															"src": "18272:10:0"
														}
													]
												},
												"id": 2101,
												"nodeType": "IfStatement",
												"src": "18180:115:0",
												"trueBody": {
													"id": 2095,
													"nodeType": "Block",
													"src": "18195:59:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2089,
																	"name": "eggValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "18208:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2091,
																			"name": "hasEggs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2078,
																			"src": "18234:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2090,
																		"name": "calculateEggSell",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "18217:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18217:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18208:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2094,
															"nodeType": "ExpressionStatement",
															"src": "18208:34:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2102,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "18305:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2103,
														"name": "fomoRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "18307:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18305:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "18305:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2106,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "18329:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2107,
															"name": "hatcheryMiners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "18331:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2109,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2108,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "18346:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18331:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18329:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2111,
												"nodeType": "ExpressionStatement",
												"src": "18329:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2112,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "18362:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2113,
														"name": "eggValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "18364:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18362:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2115,
												"nodeType": "ExpressionStatement",
												"src": "18362:10:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2116,
														"name": "e",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "18383:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2123,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "18415:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PANDORA_$2195",
																			"typeString": "contract PANDORA"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PANDORA_$2195",
																			"typeString": "contract PANDORA"
																		}
																	],
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18407:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2121,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18407:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18407:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 2118,
																		"name": "USDT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 161,
																		"src": "18391:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2117,
																	"name": "ERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "18385:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC20_$34_$",
																		"typeString": "type(contract ERC20)"
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18385:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC20_$34",
																	"typeString": "contract ERC20"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 24,
															"src": "18385:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18385:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18383:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "18383:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2128,
														"name": "f",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "18432:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2129,
														"name": "minBuyValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "18434:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18432:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "18432:13:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2132,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "18459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "18459:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2134,
															"name": "InvestmentCountdown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "18477:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2136,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2135,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "18497:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18477:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18459:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2153,
													"nodeType": "Block",
													"src": "18537:75:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2143,
																	"name": "g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "18552:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 2148,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -4,
																				"src": "18584:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "18584:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2144,
																				"name": "InvestmentCountdown",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 189,
																				"src": "18554:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2146,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2145,
																				"name": "addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "18574:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18554:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2269,
																		"src": "18554:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18554:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18552:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "18552:48:0"
														}
													]
												},
												"id": 2154,
												"nodeType": "IfStatement",
												"src": "18456:156:0",
												"trueBody": {
													"id": 2142,
													"nodeType": "Block",
													"src": "18503:30:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2138,
																	"name": "g",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2073,
																	"src": "18518:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18520:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18518:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2141,
															"nodeType": "ExpressionStatement",
															"src": "18518:3:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2155,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "18625:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2157,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2156,
															"name": "addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "18635:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18625:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2158,
														"name": "minBuyValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "18643:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18625:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2174,
													"nodeType": "Block",
													"src": "18721:31:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2170,
																	"name": "bd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "18736:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18739:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18736:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2173,
															"nodeType": "ExpressionStatement",
															"src": "18736:4:0"
														}
													]
												},
												"id": 2175,
												"nodeType": "IfStatement",
												"src": "18622:130:0",
												"trueBody": {
													"id": 2169,
													"nodeType": "Block",
													"src": "18655:62:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2160,
																	"name": "bd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2075,
																	"src": "18670:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2163,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 222,
																				"src": "18689:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2165,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2164,
																				"name": "addr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "18699:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18689:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2161,
																			"name": "minBuyValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "18673:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2269,
																		"src": "18673:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18673:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18670:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2168,
															"nodeType": "ExpressionStatement",
															"src": "18670:35:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "6f77926b",
									"id": 2177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUser",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18017:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18016:14:0"
									},
									"returnParameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18050:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18057:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2064,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18057:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "c",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18064:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18064:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "e",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18071:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18071:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "f",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18078:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18078:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "g",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18085:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18085:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "bd",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2177,
												"src": "18092:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18049:51:0"
									},
									"scope": 2195,
									"src": "18000:759:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "18831:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2186,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2179,
															"src": "18849:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2187,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "18853:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "18849:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2190,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2181,
														"src": "18861:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18849:13:0",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2189,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2179,
														"src": "18857:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2185,
												"id": 2192,
												"nodeType": "Return",
												"src": "18842:20:0"
											}
										]
									},
									"documentation": null,
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2194,
												"src": "18778:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2194,
												"src": "18789:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18777:22:0"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2194,
												"src": "18822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18821:9:0"
									},
									"scope": 2195,
									"src": "18765:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2296,
							"src": "1554:17319:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2295,
							"linearizedBaseContracts": [
								2295
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "19041:141:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2205,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "19056:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19061:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2211,
												"nodeType": "IfStatement",
												"src": "19052:47:0",
												"trueBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "19064:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19086:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2204,
															"id": 2209,
															"nodeType": "Return",
															"src": "19079:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													2213
												],
												"declarations": [
													{
														"constant": false,
														"id": 2213,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2228,
														"src": "19109:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19109:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2217,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2214,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "19121:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2215,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2200,
														"src": "19125:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19109:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2219,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "19144:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2220,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2198,
																	"src": "19148:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19144:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2200,
																"src": "19153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19144:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2218,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "19137:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19137:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "ExpressionStatement",
												"src": "19137:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2226,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2213,
													"src": "19173:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2204,
												"id": 2227,
												"nodeType": "Return",
												"src": "19166:8:0"
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "18901:67:0",
										"text": " @dev Multiplies two numbers, throws on overflow."
									},
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2229,
												"src": "18987:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2229,
												"src": "18998:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18986:22:0"
									},
									"returnParameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2229,
												"src": "19032:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19031:9:0"
									},
									"scope": 2295,
									"src": "18974:208:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "19344:221:0",
										"statements": [
											{
												"assignments": [
													2240
												],
												"declarations": [
													{
														"constant": false,
														"id": 2240,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2247,
														"src": "19434:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19434:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2244,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2241,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "19446:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2242,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "19450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19446:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19434:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2245,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2240,
													"src": "19556:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2246,
												"nodeType": "Return",
												"src": "19549:8:0"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "19190:81:0",
										"text": " @dev Integer division of two numbers, truncating the quotient."
									},
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2248,
												"src": "19290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2248,
												"src": "19301:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19289:22:0"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2248,
												"src": "19335:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19334:9:0"
									},
									"scope": 2295,
									"src": "19277:288:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "19758:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2259,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2253,
																"src": "19776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2260,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "19781:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19776:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2258,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "19769:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19769:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2263,
												"nodeType": "ExpressionStatement",
												"src": "19769:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2264,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "19801:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2265,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "19805:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19801:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2257,
												"id": 2267,
												"nodeType": "Return",
												"src": "19794:12:0"
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "19573:112:0",
										"text": " @dev Substracts two numbers, throws on overflow (i.e. if subtrahend is greater than minuend)."
									},
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2269,
												"src": "19704:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2269,
												"src": "19715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19703:22:0"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2269,
												"src": "19749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19748:9:0"
									},
									"scope": 2295,
									"src": "19691:123:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "19956:80:0",
										"statements": [
											{
												"assignments": [
													2280
												],
												"declarations": [
													{
														"constant": false,
														"id": 2280,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2293,
														"src": "19967:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2284,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2281,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "19979:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2282,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "19983:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19967:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2286,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2280,
																"src": "20002:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "20007:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20002:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2285,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -3,
														"src": "19995:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19995:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "ExpressionStatement",
												"src": "19995:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2291,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2280,
													"src": "20027:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2278,
												"id": 2292,
												"nodeType": "Return",
												"src": "20020:8:0"
											}
										]
									},
									"documentation": {
										"id": 2270,
										"nodeType": "StructuredDocumentation",
										"src": "19822:61:0",
										"text": " @dev Adds two numbers, throws on overflow."
									},
									"id": 2294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2294,
												"src": "19902:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19902:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2294,
												"src": "19913:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19901:22:0"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2294,
												"src": "19947:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19946:9:0"
									},
									"scope": 2295,
									"src": "19889:147:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2296,
							"src": "18875:1164:0"
						}
					],
					"src": "70:19969:0"
				},
				"id": 0
			}
		}
	}
}